warning: profiles for the non root package will be ignored, specify profiles at the workspace root:
package:   /Users/tomasparadelo/ethrex/crates/vm/Cargo.toml
workspace: /Users/tomasparadelo/ethrex/Cargo.toml
warning: unused variable: `path`
  --> crates/storage/store/./storage.rs:78:16
   |
78 |     pub fn new(path: &str, engine_type: EngineType) -> Result<Self, StoreError> {
   |                ^^^^ help: if this is intentional, prefix it with an underscore: `_path`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: type alias `AccountCodeHashRLP` is never used
  --> crates/storage/store/rlp.rs:19:10
   |
19 | pub type AccountCodeHashRLP = Rlp<H256>;
   |          ^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: type alias `AccountCodeRLP` is never used
  --> crates/storage/store/rlp.rs:20:10
   |
20 | pub type AccountCodeRLP = Rlp<Bytes>;
   |          ^^^^^^^^^^^^^^

warning: type alias `BlockHashRLP` is never used
  --> crates/storage/store/rlp.rs:23:10
   |
23 | pub type BlockHashRLP = Rlp<BlockHash>;
   |          ^^^^^^^^^^^^

warning: type alias `BlockHeaderRLP` is never used
  --> crates/storage/store/rlp.rs:24:10
   |
24 | pub type BlockHeaderRLP = Rlp<BlockHeader>;
   |          ^^^^^^^^^^^^^^

warning: type alias `BlockBodyRLP` is never used
  --> crates/storage/store/rlp.rs:25:10
   |
25 | pub type BlockBodyRLP = Rlp<BlockBody>;
   |          ^^^^^^^^^^^^

warning: type alias `BlockRLP` is never used
  --> crates/storage/store/rlp.rs:26:10
   |
26 | pub type BlockRLP = Rlp<Block>;
   |          ^^^^^^^^

warning: type alias `BlockTotalDifficultyRLP` is never used
  --> crates/storage/store/rlp.rs:28:10
   |
28 | pub type BlockTotalDifficultyRLP = Rlp<U256>;
   |          ^^^^^^^^^^^^^^^^^^^^^^^

warning: type alias `ReceiptRLP` is never used
  --> crates/storage/store/rlp.rs:31:10
   |
31 | pub type ReceiptRLP = Rlp<Receipt>;
   |          ^^^^^^^^^^

warning: type alias `TransactionHashRLP` is never used
  --> crates/storage/store/rlp.rs:34:10
   |
34 | pub type TransactionHashRLP = Rlp<H256>;
   |          ^^^^^^^^^^^^^^^^^^

warning: type alias `TupleRLP` is never used
  --> crates/storage/store/rlp.rs:37:10
   |
37 | pub type TupleRLP<A, B> = Rlp<(A, B)>;
   |          ^^^^^^^^

warning: field `0` is never read
  --> crates/storage/store/rlp.rs:40:19
   |
40 | pub struct Rlp<T>(Vec<u8>, PhantomData<T>);
   |            ---    ^^^^^^^
   |            |
   |            field in this struct
   |
   = note: `Rlp` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis
help: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field
   |
40 | pub struct Rlp<T>((), PhantomData<T>);
   |                   ~~

warning: method `to` is never used
  --> crates/storage/store/rlp.rs:51:12
   |
50 | impl<T: RLPDecode> Rlp<T> {
   | ------------------------- method in this implementation
51 |     pub fn to(&self) -> T {
   |            ^^

warning: `ethrex-storage` (lib) generated 13 warnings
   Compiling ethrex-levm v0.1.0 (/Users/tomasparadelo/ethrex/crates/vm/levm)
warning: unused import: `MODEXP_STATIC_COST`
  --> crates/vm/levm/./src/precompiles.rs:38:75
   |
38 |         self, BLAKE2F_ROUND_COST, ECADD_COST, ECMUL_COST, ECRECOVER_COST, MODEXP_STATIC_COST,
   |                                                                           ^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused `Result` that must be used
   --> crates/vm/levm/./src/vm.rs:414:13
    |
414 |             dbg!(op_result.clone());
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled
    = note: `#[warn(unused_must_use)]` on by default
    = note: this warning originates in the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)

   Compiling ethrex-vm v0.1.0 (/Users/tomasparadelo/ethrex/crates/vm)
   Compiling ethrex-blockchain v0.1.0 (/Users/tomasparadelo/ethrex/crates/blockchain)
   Compiling ef_tests-levm v0.1.0 (/Users/tomasparadelo/ethrex/cmd/ef_tests/levm)
warning: `ethrex-levm` (lib) generated 2 warnings (run `cargo fix --lib -p ethrex-levm` to apply 1 suggestion)
    Finished `release` profile [optimized] target(s) in 19.92s
     Running tests/ef_tests_levm.rs (/Users/tomasparadelo/ethrex/target/release/deps/ef_tests_levm-c91040215c09d9dc)
[crates/vm/levm/./src/vm.rs:256:9] current_call_frame.msg_sender = 0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b
[crates/vm/levm/./src/vm.rs:257:9] current_call_frame.to = 0x0000000000000000000000000000000000000100
[crates/vm/levm/./src/vm.rs:413:13] opcode = CALLDATASIZE
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        96,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 21386
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        96,
        0,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 21389
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        96,
        0,
        0,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 21392
[crates/vm/levm/./src/vm.rs:413:13] opcode = CALLDATACOPY
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 21413
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        0,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 21416
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        0,
        0,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 21419
[crates/vm/levm/./src/vm.rs:413:13] opcode = CALLDATASIZE
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        0,
        0,
        96,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 21421
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        0,
        0,
        96,
        0,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 21424
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        0,
        0,
        96,
        0,
        0,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 21427
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        0,
        0,
        96,
        0,
        0,
        5,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 21430
[crates/vm/levm/./src/vm.rs:413:13] opcode = GAS
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        0,
        0,
        96,
        0,
        0,
        5,
        478568,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 21432
[crates/vm/levm/./src/gas_cost.rs:703:5] "CALL COSTS" = "CALL COSTS"
[crates/vm/levm/./src/gas_cost.rs:703:5] positive_value_cost = 0
[crates/vm/levm/./src/gas_cost.rs:703:5] memory_expansion_cost = 0
[crates/vm/levm/./src/gas_cost.rs:703:5] value_to_empty_account = 0
[crates/vm/levm/./src/gas_cost.rs:703:5] address_access_cost = 0
[crates/vm/levm/./src/gas_cost.rs:703:5] static_cost = 700
[crates/vm/levm/./src/gas_cost.rs:711:5] calculate_cost_and_gas_limit_call(value_to_transfer.is_zero(), gas_from_stack,
gas_left, call_gas_costs, CALL_POSITIVE_VALUE_STIPEND,) = Ok(
    (
        471102,
        470402,
    ),
)
[crates/vm/levm/./src/vm.rs:256:9] current_call_frame.msg_sender = 0x0000000000000000000000000000000000000100
[crates/vm/levm/./src/vm.rs:257:9] current_call_frame.to = 0x0000000000000000000000000000000000000005
[crates/vm/levm/./src/gas_cost.rs:982:5] cost = 0
[crates/vm/levm/./src/precompiles.rs:354:5] "PRECOMPILE" = "PRECOMPILE"
[crates/vm/levm/./src/precompiles.rs:354:5] base_size = 0
[crates/vm/levm/./src/precompiles.rs:354:5] exponent_size = 0
[crates/vm/levm/./src/precompiles.rs:354:5] modulus_size = 0
[crates/vm/levm/./src/precompiles.rs:354:5] gas_cost = 0
[crates/vm/levm/./src/precompiles.rs:354:5] &exp_first_32 = 0
[crates/vm/levm/./src/vm.rs:413:13] opcode = CALL
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        1,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 22132
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        1,
        0,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 22135
[crates/vm/levm/./src/vm.rs:413:13] opcode = SSTORE
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 42135
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH32
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        43450689605822003992006328453523339574859193504028541211554696310692213948416,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 42138
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        43450689605822003992006328453523339574859193504028541211554696310692213948416,
        0,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 42141
[crates/vm/levm/./src/vm.rs:413:13] opcode = MSTORE
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 42144
[crates/vm/levm/./src/vm.rs:413:13] opcode = RETURNDATASIZE
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        0,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 42146
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        0,
        0,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 42149
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        0,
        0,
        16,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 42152
[crates/vm/levm/./src/vm.rs:413:13] opcode = RETURNDATACOPY
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 42155
[crates/vm/levm/./src/vm.rs:413:13] opcode = RETURNDATASIZE
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        0,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 42157
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        0,
        16,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 42160
[crates/vm/levm/./src/vm.rs:413:13] opcode = ADD
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        16,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 42163
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        16,
        0,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 42166
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        16,
        0,
        0,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 42169
[crates/vm/levm/./src/vm.rs:256:9] current_call_frame.msg_sender = 0x0000000000000000000000000000000000000100
[crates/vm/levm/./src/vm.rs:257:9] current_call_frame.to = 0xa7f2bd73a7138a2dec709484ad9c3542d7bc7534
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        16,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 3
[crates/vm/levm/./src/vm.rs:413:13] opcode = CODESIZE
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        16,
        16,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 5
[crates/vm/levm/./src/vm.rs:413:13] opcode = SUB
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        0,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 8
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        0,
        16,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 11
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        0,
        16,
        0,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 14
[crates/vm/levm/./src/vm.rs:413:13] opcode = CODECOPY
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 17
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        16,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 20
[crates/vm/levm/./src/vm.rs:413:13] opcode = CODESIZE
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        16,
        16,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 22
[crates/vm/levm/./src/vm.rs:413:13] opcode = SUB
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        0,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 25
[crates/vm/levm/./src/vm.rs:413:13] opcode = PUSH1
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        0,
        0,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 28
[crates/vm/levm/./src/vm.rs:413:13] opcode = RETURN
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Result(
        Return,
    ),
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 28
[crates/vm/levm/./src/vm.rs:413:13] opcode = CREATE
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Continue,
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        958814742642221441489086474558974932391737193780,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 74197
[crates/vm/levm/./src/vm.rs:413:13] opcode = STOP
[crates/vm/levm/./src/vm.rs:414:13] op_result.clone() = Ok(
    Result(
        Stop,
    ),
)
[crates/vm/levm/./src/vm.rs:415:13] &current_call_frame.stack = Stack {
    stack: [
        958814742642221441489086474558974932391737193780,
    ],
}
[crates/vm/levm/./src/vm.rs:416:13] current_call_frame.gas_used = 74197
