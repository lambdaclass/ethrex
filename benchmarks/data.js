window.BENCHMARK_DATA = {
  "lastUpdate": 1758897793539,
  "repoUrl": "https://github.com/lambdaclass/ethrex",
  "entries": {
    "Benchmark": [
      {
        "commit": {
          "author": {
            "email": "18153834+klaus993@users.noreply.github.com",
            "name": "Klaus @ LambdaClass",
            "username": "klaus993"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e973e9688f3e0ec9c425eb3c5eb89b3ab5e369fe",
          "message": "ci(l1,l2): publish Ethrex docs on https://docs.ethrex.xyz/ (#3217)\n\n**Motivation**\n\nPublish the mdbook of this repo (book.toml) to https://docs.ethrex.xyz/\n\n**Description**\n\nThese changes are to leave the setup like this:\n\n* https://docs.ethrex.xyz/ will have the mdbook\n* https://docs.ethrex.xyz/benchmarks will have the benchmarks graphs\n* https://docs.ethrex.xyz/flamegraphs will have the flamegraphs",
          "timestamp": "2025-06-18T19:55:44Z",
          "tree_id": "f19b7a45c9e78782d48bfd6e3c88a95e2f7fd5b1",
          "url": "https://github.com/lambdaclass/ethrex/commit/e973e9688f3e0ec9c425eb3c5eb89b3ab5e369fe"
        },
        "date": 1750280257990,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 222697754655,
            "range": "± 836006884",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0ed60d3f23dd798a8cfdd2c7989a4364550bcc5d",
          "message": "docs(l2): reorganize docs (#3196)\n\n**Motivation**\n\nOur L2 documentation lacks a clear structure.\n\n**Description**\n\nThis PR reorganizes our L2 docs, also moving documentation on L2\nload-tests under `Developers`->`L2 load-tests`. The rest of the\ndocumentation was restructured to a structure like that of other L1 and\nL2 projects:\n\n<img width=\"297\" alt=\"new structure of L2 docs\"\nsrc=\"https://github.com/user-attachments/assets/b9c89a10-c175-4610-b141-3fa4b0097cfb\"\n/>\n\nDocumentation on smart contracts still needs to be filled and is only\nacting as a placeholder for now.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3174",
          "timestamp": "2025-06-18T20:04:19Z",
          "tree_id": "c8f2674a2a89594515ae4e6882381f043bcf22f7",
          "url": "https://github.com/lambdaclass/ethrex/commit/0ed60d3f23dd798a8cfdd2c7989a4364550bcc5d"
        },
        "date": 1750280874141,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 241927282758,
            "range": "± 701383374",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49622509+jrchatruc@users.noreply.github.com",
            "name": "Javier Rodríguez Chatruc",
            "username": "jrchatruc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a727cd76b9a33364ab8506e2482f97d428209e29",
          "message": "fix(l1): compute logs_bloom when building payloads (#3219)\n\n**Motivation**\n\nOur build payload process was not computing and setting the `logs_bloom`\nfield on the block's header, which resulted in other clients rejecting\nblocks built by us. This came up when testing setting up a localnet with\nethrex along with other clients.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-06-18T21:20:26Z",
          "tree_id": "485552181532d3c75cbcded8d4fabb4a20df0e0e",
          "url": "https://github.com/lambdaclass/ethrex/commit/a727cd76b9a33364ab8506e2482f97d428209e29"
        },
        "date": 1750285229817,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 224179628110,
            "range": "± 271461380",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "18153834+klaus993@users.noreply.github.com",
            "name": "Klaus @ LambdaClass",
            "username": "klaus993"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "02fda58b1e8ee0a7014ba43956c9cd846953c4fb",
          "message": "ci(l1,l2): fix GitHub Pages deployments (#3222)\n\n**Motivation**\n\nFix for #3217\n\n**Description**\n\nFixes lack of permissions for mdbook workflow, and new path to publish\nL1 block proving benchmark",
          "timestamp": "2025-06-19T13:57:23Z",
          "tree_id": "3d602ecb1c7539d9c52e1f10728d21da6ed5a778",
          "url": "https://github.com/lambdaclass/ethrex/commit/02fda58b1e8ee0a7014ba43956c9cd846953c4fb"
        },
        "date": 1750345042436,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 222026345384,
            "range": "± 424203482",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "161002ab3f24085e0d6bc335335b3c49f7588b64",
          "message": "refactor(levm): tidy code of benchmarks against revm (#3199)\n\n**Motivation**\n\n- Benchmarks are a key piece for measuring performance, the code wasn't\nvery concise so this simplifies it to make further changes that will\nhelp us work on performance in LEVM.\n\n**Description**\n\nBehavior is pretty much the same, the code is just more clear now.\n\nCloses #issue_number",
          "timestamp": "2025-06-19T14:29:14Z",
          "tree_id": "4f5ad3682010a2e0326bd395a769cba192e7450a",
          "url": "https://github.com/lambdaclass/ethrex/commit/161002ab3f24085e0d6bc335335b3c49f7588b64"
        },
        "date": 1750346960074,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 224019929514,
            "range": "± 497931099",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b8c6d1fb5880ae7a3f02d65b9efe50035f3b60ce",
          "message": "fix(levm): account was already empty don't count as update if it remains empty (#3228)\n\n**Motivation**\n\nThe l2 committer was stuck because it failed when trying to encode state\ndiffs of an account that was initially empty, remained empty after the\ntransaction so the AccountUpdate was completely empty and state diff\ncreation failed with `StateDiffError::EmptyAccountDiff`\n\n**Description**\n\n- `LEVM::get_state_transitions` now checks if the account was initially\nempty, in case it was and it remains empty after the transaction do not\ncount it as an AccountUpdate",
          "timestamp": "2025-06-19T15:02:18Z",
          "tree_id": "f1969960ea7e1bbb57f510838e542a2fa33c00d5",
          "url": "https://github.com/lambdaclass/ethrex/commit/b8c6d1fb5880ae7a3f02d65b9efe50035f3b60ce"
        },
        "date": 1750348907774,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 223587207590,
            "range": "± 214745076",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "144a5ac6f342a602ed33594b64e0e7c3151a087e",
          "message": "chore(l2): rename estimate_gas error (#3225)\n\n**Motivation**\n\n`EstimateGasPriceError` is actually an error triggered in\n`estimate_gas`.\n\n**Description**\n\nRenames `EstimateGasPriceError` to `EstimateGasError`\n\nCloses None",
          "timestamp": "2025-06-19T19:03:22Z",
          "tree_id": "a79f49ae59594656bd34d6c894e3123d7f39d540",
          "url": "https://github.com/lambdaclass/ethrex/commit/144a5ac6f342a602ed33594b64e0e7c3151a087e"
        },
        "date": 1750363437826,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 224549723732,
            "range": "± 930543060",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d4ce1f75e56e87936fcc4317a84165c891e67297",
          "message": "refactor(levm): make substate more accurate and replace ExecutionReport for ContextResult in some places (#3134)\n\n**Motivation**\n\n- `ExecutionResult` isn't accurate for interaction between callframes so\nthe goal is to replace it for `ContextResult` that has the necessary\ndata. Also, `Substate` should be as specified in Yellow Paper.\n\n**Description**\n\n- Add logs to substate and remove them from the callframe. They belong\nto the substate according to section 6.1 of the [yellow\npaper](https://ethereum.github.io/yellowpaper/paper.pdf).\n- Replace usage of ExecutionReport in callframes execution for\nContextResult. The former contained data that wasn't necessary and\ncaused a little bit of confusion. In ContextResult we have only the data\nwe need: `gas_used`, `output` and `result`.\n- Move `is_create` logic to `CallFrame`. So now it is not\n`create_op_called`, it is `is_create` and it takes into account external\ntransactions, not only internal `create`.\n- Make functions `handle_opcode_result()` and `handle_opcode_error()`\nprettier.\n- `finalize_execution()` now returns an `ExecutionReport` given a\n`ContextResult`\n- Refactor `increase_consumed_gas()`, behavior is still the same but\nlogic before was kinda repetitive.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3045\n\n---------\n\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>\nCo-authored-by: juanbono <juanbono94@gmail.com>\nCo-authored-by: fedacking <francisco.gauna@lambdaclass.com>",
          "timestamp": "2025-06-19T19:11:27Z",
          "tree_id": "465e89628fb4a71504c9921dca14d229d1425ea3",
          "url": "https://github.com/lambdaclass/ethrex/commit/d4ce1f75e56e87936fcc4317a84165c891e67297"
        },
        "date": 1750363891196,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 222796180281,
            "range": "± 947121191",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e04ce47ba6613b66e552cc6e24e31fc4318d6af8",
          "message": "chore(l2): change default dev-mode to false (#3214)\n\n**Motivation**\n\nThe default value of `proof-coordinator.dev-mode` is set to true. This\nmeans the only way to set it to false is through the environment\nvariable `ETHREX_PROOF_COORDINATOR_DEV_MODE`. This is also inconsistent\nwith the rest of the parameters, where we set dev values only in the\nMakefile.\n\n**Description**\n\nChanges the default value of `dev-mode` to false.\n\nCloses None",
          "timestamp": "2025-06-19T19:52:06Z",
          "tree_id": "bee76e43220516b6cf5ed0cdacd4708a4fa0ee05",
          "url": "https://github.com/lambdaclass/ethrex/commit/e04ce47ba6613b66e552cc6e24e31fc4318d6af8"
        },
        "date": 1750366331076,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 225455828118,
            "range": "± 524471056",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fd61888759e225200e36a72f7f162d1b9c0fd54b",
          "message": "feat(l2): batch reversion (#3136)\n\n**Motivation**\n\nAs outlined in #3124, sometimes a committed batch can't be verified or\nthe operator wants to prevent it from going though.\n\n**Description**\n\nThis PR implements a `revertBatch` function that allows reverting back\nto any batch, as long as no verified batches are being discarded.\n\nThere's also a l2 CLI subcommand, revert-batch that lets you revert a\nbatch and remove it from the local database.\n\nUsage on local network:\n```\nPRIVATE_KEY=key cargo run --features l2,rollup_storage_libmdbx -- l2 revert-batch \\\n  <batch to revert to> <OnChainProposer address> \\\n  --datadir dev_ethrex_l2 --network test_data/genesis-l2.json\n```\n\nCloses #3124",
          "timestamp": "2025-06-19T20:14:02Z",
          "tree_id": "8ecbba041a42fa46badba02def789ac144e18ba5",
          "url": "https://github.com/lambdaclass/ethrex/commit/fd61888759e225200e36a72f7f162d1b9c0fd54b"
        },
        "date": 1750367696249,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 223298663557,
            "range": "± 765436772",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ea1e2089f0468e43906adbb59b164c1646caafca",
          "message": "feat(l1, l2): overwrite txs in mempool if fees are higher (#3238)\n\n**Motivation**\n\nMost Ethereum clients let you speed up or overwrite transactions by\naccepting new transactions with the same nonce but higher fees.\nThis PR adds validations similar to what [Geth\ndoes](https://github.com/ethereum/go-ethereum/blob/09289fd154a45420ec916eb842bfb172df7e0d83/core/txpool/legacypool/list.go#L298-L345)\nbut without the `PriceBump` minimum bump percentage\n\n**Description**\n\n- for eip-1559 check that both `max_fee_per_gas` and\n`max_priority_fee_per_gas` are greater in the new tx\n- for legacy tx check that new `gas_price` is greater in the new tx\n- for eip-4844 txs check that `max_fee_per_gas`,\n`max_priority_fee_per_gas` and `max_fee_per_blob_gas` are grater in the\nnew tx\n\n**How to test**\n\n- Send a tx with very low gas price\n\n```shell\nrex send --gas-price 1 --priority-gas-price 1 --rpc-url http://localhost:1729 0x2B29Bea668B044b2b355C370f85b729bcb43EC40 100000000000000 0x8f87d3aca3eff8132256f69e17df5ba3c605e1b5f4e2071d56f7e6cd66047cc2\n```\n\n- Check tx pool the you should see something like\n`\"maxPriorityFeePerGas\":\"0x1\",\"maxFeePerGas\":\"0x1\",\"gasPrice\":\"0x1\"` the\ntx will probably get stuck\n\n```\ncurl 'http://localhost:1729' --data '{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"txpool_content\",\n  \"params\": []\n}' -H 'accept: application/json' -H 'Content-Type: application/json'\n```\n\n- Send tx with higher gas\n\n```shell\nrex send --gas-price 100000000 --priority-gas-price 100000000 --rpc-url http://localhost:1729 0x2B29Bea668B044b2b355C370f85b729bcb43EC40 100000000000000 0x8f87d3aca3eff8132256f69e17df5ba3c605e1b5f4e2071d56f7e6cd66047cc2\n```\n\n- Check that the tx pool you should see something like\n`\"maxPriorityFeePerGas\":\"0x5f5e100\",\"maxFeePerGas\":\"0x5f5e100\",\"gasPrice\":\"0x5f5e100\"`\n\n```shell\ncurl 'http://localhost:1729' --data '{\n  \"id\": 1,\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"txpool_content\",\n  \"params\": []\n}' -H 'accept: application/json' -H 'Content-Type: application/json'\n```",
          "timestamp": "2025-06-19T21:32:23Z",
          "tree_id": "c44a0cb62bc76999b24168da80db8047ef2f6383",
          "url": "https://github.com/lambdaclass/ethrex/commit/ea1e2089f0468e43906adbb59b164c1646caafca"
        },
        "date": 1750372383264,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 227001233154,
            "range": "± 888735919",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "leanrafa@gmail.com",
            "name": "Leandro Ferrigno",
            "username": "lferrigno"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0a7f3fd0a48151e6c4f21df437213bc1d7f4ff5f",
          "message": "docs(core): add roadmap to README.md (#3249)\n\nAdd roadmap",
          "timestamp": "2025-06-19T22:27:21Z",
          "tree_id": "dee9e82473e3181e285124d85550ea7f8a6e6179",
          "url": "https://github.com/lambdaclass/ethrex/commit/0a7f3fd0a48151e6c4f21df437213bc1d7f4ff5f"
        },
        "date": 1750375736724,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 224324640504,
            "range": "± 910253094",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9c031109d687b14ebdcf9f10e6d32ce4447b0ec7",
          "message": "ci(l1): have failed tests output on the console (#3150)\n\n**Motivation**\n\nThe LEVM CI workflow in pr-main_levm.yaml that runs EF state tests\nshould fail with an exit code if a test fails.\n\n**Description**\nThis pr introduces a new `EFTestRunnerError::TestsFailed` error to use\nwhen there's a report of a test failing. This error is thrown under the\n`summary` flag, which is the one used in the target the CI job executes:\n`make run-evm-ef-tests-ci`. So whenever there is any failing tests, the\nintroduced code should print the EFTestReport and then finish with the\n`EFTestRunnerError::TestsFailed` error.\n\nNote: The `summary` flag is used in other targets as well, so the\npreviously described behavior is being implemented for other targets\ntoo.\n\nThe ef-test-main job in pr-main_levm has also been refactored, I dropped\nsteps \"Check EF-TESTS from Paris to Prague is 100%\" and \"Check EF-TESTS\nstatus is 100%\" since now in the case any test fails, the CI job exits\nwith an error code and outputs the failing tests in the console.\n\nIn this pr there are some commits with a hardcoded error with the\nintentions of having the LEVM CI workflow fail on purpose and check the\nconsole output is the one expected.\n[Here](https://github.com/lambdaclass/ethrex/actions/runs/15738130731/job/44356244936)\nis a failing workflow execution under this circumstances to see. (The\nunderscore line above \"Failed tests\" was removed on a later commit.)\n\nCloses #2887",
          "timestamp": "2025-06-20T08:50:27Z",
          "tree_id": "689e3bdc856a2bb95a8a8a47850f8436dd15a7ca",
          "url": "https://github.com/lambdaclass/ethrex/commit/9c031109d687b14ebdcf9f10e6d32ce4447b0ec7"
        },
        "date": 1750413106548,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 224850805252,
            "range": "± 568814025",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8354c87f8953669c9353e8cdd9349c5c6d707113",
          "message": "docs(core): add `mdbook-mermaid` dependency (#3250)\n\n**Motivation**\n\nWe want to include diagrams in the mdbook. The easiest way to manage\ndiagrams with `git` is to declare them with `mermaid`.\n\n**Description**\n\nThis PR adds [the `mdbook-mermaid`\npreprocessor](https://github.com/badboy/mdbook-mermaid), which\nautomatically renders the mermaid diagrams in our docs.\n\nAs part of this, it also adds make targets to automatically install\npreprocessors/backends, and to generate the files required by\n`mdbook-mermaid`.\n\n<img width=\"836\" alt=\"example mermaid diagram in the L2 docs\"\nsrc=\"https://github.com/user-attachments/assets/d14d57f4-4c73-4c99-82e3-281f1693ee84\"\n/>",
          "timestamp": "2025-06-20T11:02:04Z",
          "tree_id": "81ec6d7511fe34fd1b69bb6a3a24de29a14d7573",
          "url": "https://github.com/lambdaclass/ethrex/commit/8354c87f8953669c9353e8cdd9349c5c6d707113"
        },
        "date": 1750420924372,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 223104416433,
            "range": "± 436107233",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "128638963+santiago-MV@users.noreply.github.com",
            "name": "santiago-MV",
            "username": "santiago-MV"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "42d3f03305a615885ecd2253f1bd0acd09b7e9f3",
          "message": "chore(l1): add metrics port to ethrex client (#3237)\n\n**Motivation**\n\nWhen running a localnet with kurtosis the ethrex client wasn't exposing\na metrics port.\n\n**Description**\n\nTo expose the metrics port, the ETHEREUM_PACKAGE_REVISION in the\nMakefile was updated to the latest commit in our fork of\nethereum-package. Additionally, the metrics feature flag was enabled\nwhen building the Docker image (without it, metrics won't work).\nThe ethereum_metrics_exporter_enabled setting was also enabled for all\nparticipants in the ethrex-only localnet.\nWith these changes, we are now able to use metrics with ethrex clients.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3213",
          "timestamp": "2025-06-20T14:56:01Z",
          "tree_id": "2bcef87ad0a191fe4c912c8ba2757c2cbee887ba",
          "url": "https://github.com/lambdaclass/ethrex/commit/42d3f03305a615885ecd2253f1bd0acd09b7e9f3"
        },
        "date": 1750435004752,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 226016975051,
            "range": "± 1167365906",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "128638963+santiago-MV@users.noreply.github.com",
            "name": "santiago-MV",
            "username": "santiago-MV"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e42990bee8bf6f99cd70049f09ba2ebad750a559",
          "message": "chore(l1): change error message shown when loading a pre-merge genesis file (#3111)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nWhen using a pre-merge genesis.json for importing blocks, which is not\nsupported by ethrex, the error received was `ParentNotFound`, which\ndoesn't explain the real problem.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nBefore merging blocks the genesis.json fork is checked, in case that its\npre Paris return a custom error message.\nFor doing this new checks were added to the `fork()` function.\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3102\n\n---------\n\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-06-20T17:02:42Z",
          "tree_id": "1792c8f6ba83245d32a6ec768b3b1ed9ff6cd9c0",
          "url": "https://github.com/lambdaclass/ethrex/commit/e42990bee8bf6f99cd70049f09ba2ebad750a559"
        },
        "date": 1750442636166,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 224881683343,
            "range": "± 350122633",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d9d68ebb22183f63061f4f7f6c4b5a7f3346bdcb",
          "message": "fix(l2): fix l2 integration test job (#3258)\n\n**Motivation**\n\nThis was failing on multiple PRs because the ethrex_dev image was not\nbeing built.\n\nThe difference between the failing job and the others (which were\nsucceeding) is the runner (larger_runners). Maybe that has something to\ndo with it.\n\n**Description**\n\n- adds a step to build ethrex_dev explicitly",
          "timestamp": "2025-06-23T11:36:48Z",
          "tree_id": "d54e246f6e559560bfb9a249ab85b4058eefd0de",
          "url": "https://github.com/lambdaclass/ethrex/commit/d9d68ebb22183f63061f4f7f6c4b5a7f3346bdcb"
        },
        "date": 1750682374766,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 225424239608,
            "range": "± 609027739",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bca73af8f97978ae202cc25a2e9f08753b82beb6",
          "message": "perf(levm): use specialized PUSH1 and PUSH2 implementations (#3262)\n\n**Motivation**\nAccording to stats from @azteca1998 PUSH2 and PUSH1 are widely used:\n\n```\nLoaded 903636264 rows (3447.10MiB)\nStats (of 903636264 records):\n  0xf1: count=   730979  t_min=  2278  t_max=1512728  t_avg=110877.43  t_acc=81049072024  CALL\n  0x61: count=131856777  t_min=   136  t_max= 549032  t_avg=   189.29  t_acc=24959614846  PUSH2\n  0x56: count= 78745029  t_min=   170  t_max=1488792  t_avg=   243.75  t_acc=19194034756  JUMP\n  0x60: count= 86327863  t_min=   136  t_max= 837080  t_avg=   199.78  t_acc=17246262544  PUSH1\n  0x5b: count=107216057  t_min=   102  t_max= 267308  t_avg=   159.43  t_acc=17093508806  JUMPDEST\n  0x50: count= 86546732  t_min=   102  t_max= 353260  t_avg=   174.49  t_acc=15101132640  POP\n  0x57: count= 53096953  t_min=   102  t_max=1382576  t_avg=   233.40  t_acc=12393069292  JUMPI\n  0x81: count= 55585321  t_min=   102  t_max= 267410  t_avg=   192.79  t_acc=10716509980  DUP2\n  0x01: count= 56493418  t_min=   102  t_max=1431060  t_avg=   189.52  t_acc=10706399944  ADD\n  0x91: count= 31380921  t_min=   102  t_max= 146030  t_avg=   205.38  t_acc= 6444862520  SWAP2\n```\n\nFurthermore i keep seeing `U256::from_big_endian` taking quite some time\non samply so I made specialized PUSH1 and PUSH2 implementations that\navoid that, also using fixed size arrays.\n\nBenchmarks:\n\nHoodi 11k:\n\nmain 9m10.471s\npr 8m25.933s\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n# Benchmark Results Comparison\n\n#### Benchmark Results: Factorial\n| Command | Mean [ms] | Min [ms] | Max [ms] | Relative |\n|:---|---:|---:|---:|---:|\n| `levm_Factorial_pr` | 634.2 ± 7.3 | 629.6 | 654.2 | 2.71 ± 0.04 |\n| `levm_Factorial` | 726.1 ± 5.2 | 722.5 | 740.1 | 3.11 ± 0.03 |\n| `levm_FactorialRecursive_pr` | 3.567 ± 0.021 | 3.541 | 3.604 | 2.22 ±\n0.05 |\n| `levm_FactorialRecursive` | 3.828 ± 0.035 | 3.775 | 3.889 | 2.39 ±\n0.03 |\n| `levm_Fibonacci_pr` | 629.2 ± 6.4 | 625.7 | 646.9 | 2.99 ± 0.03 |\n| `levm_Fibonacci` | 727.7 ± 6.5 | 722.3 | 743.9 | 3.47 ± 0.03 |\n| `levm_ManyHashes_pr` | 14.9 ± 0.2 | 14.7 | 15.3 | 1.70 ± 0.03 |\n| `levm_ManyHashes` | 16.3 ± 0.1 | 16.2 | 16.4 | 1.87 ± 0.02 |\n| `levm_BubbleSort_pr` | 5.065 ± 0.023 | 5.034 | 5.107 | 1.58 ± 0.01 |\n| `levm_BubbleSort` | 5.508 ± 0.035 | 5.489 | 5.603 | 1.71 ± 0.02 |\n| `levm_ERC20Transfer_pr` | 461.5 ± 1.3 | 459.7 | 463.4 | 1.87 ± 0.03 |\n| `levm_ERC20Transfer` | 487.9 ± 2.4 | 484.1 | 491.0 | 1.99 ± 0.01 |\n| `levm_ERC20Mint_pr` | 306.8 ± 8.9 | 300.1 | 328.5 | 2.22 ± 0.07 |\n| `levm_ERC20Mint` | 320.1 ± 1.5 | 317.9 | 322.6 | 2.31 ± 0.05 |\n| `levm_ERC20Approval_pr` | 1.779 ± 0.023 | 1.763 | 1.838 | 1.69 ± 0.02\n|\n| `levm_ERC20Approval` | 1.850 ± 0.011 | 1.837 | 1.873 | 1.76 ± 0.02 |\n\n\n\n![image](https://github.com/user-attachments/assets/8f08cb93-ac5d-4909-a15d-cf799f1ce023)\n\nAccording to the samply this makes op_push nearly negligible (from 30%\nto 0%)\n\n---------\n\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>",
          "timestamp": "2025-06-23T13:37:30Z",
          "tree_id": "4b5b5507508c2b381a4e2bd1e96764a389cbe6e3",
          "url": "https://github.com/lambdaclass/ethrex/commit/bca73af8f97978ae202cc25a2e9f08753b82beb6"
        },
        "date": 1750689474181,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 223704530468,
            "range": "± 513180546",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "6f1bb69882588a4b55ed0e7aa4c20b5c5268f6fd",
          "message": "perf(core): use a lookup table for opcode parsing (#3253)\n\n**Motivation**\n\nOn x86_64, rust has a harder time when the match is used, 2 things\nhappen:\n\nWith match;\n- Apparently it also uses a lookup table internally but it doesn't have\nas much \"info\" about what we doing than when doing it manually, for\nexample the function has an extra xor instruction, it also looks like it\nhas more trouble inlining the From\n\nWithout match:\n- No unneeded xor instruction\n- Easier to inline for the compiler (as seen on the godbolt url), this\navoids a full function call.\n\nGodbolt: https://godbolt.org/z/eG8M1jz3M\n\nCloses https://github.com/lambdaclass/ethrex/issues/2896\n\nShould close https://github.com/lambdaclass/ethrex/issues/2896",
          "timestamp": "2025-06-23T14:46:05Z",
          "tree_id": "eb3e02512e563857775cd77cf9f991a3026fdd38",
          "url": "https://github.com/lambdaclass/ethrex/commit/6f1bb69882588a4b55ed0e7aa4c20b5c5268f6fd"
        },
        "date": 1750693596836,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 221549469767,
            "range": "± 375001362",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "48ca855ec68c597b477cb2f81c2b775e9235e865",
          "message": "docs(levm): add type 4 transaction validations (#3085)\n\nAdd type 4 transaction validations to validations.md docs\n\nCloses #2545",
          "timestamp": "2025-06-23T17:09:03Z",
          "tree_id": "60f3912aa663eaf0f0f4a704dc0aa397382e415a",
          "url": "https://github.com/lambdaclass/ethrex/commit/48ca855ec68c597b477cb2f81c2b775e9235e865"
        },
        "date": 1750702102879,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 220033548282,
            "range": "± 429821547",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c7652a1b02e4ebfd149a82c0832a47ebf8837bbd",
          "message": "docs(l1): improve roadmap. (#3271)\n\n**Motivation**\nImprove write up of the L1 roadmap",
          "timestamp": "2025-06-23T19:33:58Z",
          "tree_id": "51a2da2f8a78c54a23d617850ed983b8a3c8900f",
          "url": "https://github.com/lambdaclass/ethrex/commit/c7652a1b02e4ebfd149a82c0832a47ebf8837bbd"
        },
        "date": 1750710866381,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 220177160866,
            "range": "± 455972797",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pdeymon@fi.uba.ar",
            "name": "Pablo Deymonnaz",
            "username": "pablodeymo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0c7564a9b26feafe78212f3e036caa1eed13a0d3",
          "message": "chore(levm): remove unused remove_account function from CacheDB (#3278)\n\n**Motivation**\n\nRemove unused method.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-06-23T20:39:44Z",
          "tree_id": "8b7a1d4fc275d8a99a4a607de58d1881f1c0d010",
          "url": "https://github.com/lambdaclass/ethrex/commit/0c7564a9b26feafe78212f3e036caa1eed13a0d3"
        },
        "date": 1750714716475,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 218602871368,
            "range": "± 342520327",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "18153834+klaus993@users.noreply.github.com",
            "name": "Klaus @ LambdaClass",
            "username": "klaus993"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e0bfe4d38c57287710fe6298cd82be9f46ab67d6",
          "message": "fix(l1,l2): move integration test back to normal GitHub Runners (#3272)\n\n**Motivation**\n\nGo back to the normal GitHub runners, instead of larger runners, because\nthe disk size constraint has been removed from this CI job\n\n**Description**\n\n* Changes `runs-on:` from `integration-test` job in `pr-main_l2.yaml`\nworkflow.\n* Removes actionlint label\n* Removes step and comment related to using the larger runners\n\n---------\n\nCo-authored-by: Javier Chatruc <jrchatruc@gmail.com>\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>",
          "timestamp": "2025-06-23T21:19:03Z",
          "tree_id": "363393f5f08d4e226cc9ddb779cb541cc0411147",
          "url": "https://github.com/lambdaclass/ethrex/commit/e0bfe4d38c57287710fe6298cd82be9f46ab67d6"
        },
        "date": 1750717081028,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 221460825038,
            "range": "± 664909599",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f3698b684da6bdadadda2e66a819486895dbdc31",
          "message": "ci(core): install `mdbook-mermaid` preprocessor (#3281)\n\n**Description**\n\nThis PR changes the mdbook build action to use the `docs-deps` and\n`docs` targets from the makefile to install dependencies and build\ndocumentation, instead of manually doing so like until now.",
          "timestamp": "2025-06-23T21:29:04Z",
          "tree_id": "e94f7d01142df84f63689b78c6c48cdb4a999678",
          "url": "https://github.com/lambdaclass/ethrex/commit/f3698b684da6bdadadda2e66a819486895dbdc31"
        },
        "date": 1750717770487,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 222922089882,
            "range": "± 1209322975",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d89fc93fad30c2a58176a1db8375adbc9f731a1e",
          "message": "feat(l2): implement calldata decode (#3204)\n\n**Motivation**\n\nWe want to be able to decode ABI-packed data.\n\n**Description**\n\nThis PR copies the implementation [made for\nrex](https://github.com/lambdaclass/rex/pull/134), with two slicing\noperations fixed to avoid panicking.\n\n---------\n\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>",
          "timestamp": "2025-06-23T22:17:37Z",
          "tree_id": "030b7e3a717064fcc1c308ba72eb76f34a5b1918",
          "url": "https://github.com/lambdaclass/ethrex/commit/d89fc93fad30c2a58176a1db8375adbc9f731a1e"
        },
        "date": 1750720632289,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 218503452289,
            "range": "± 482804344",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8880fb4c7fc2fcbb5b802a22f430e2ccaeba418c",
          "message": "fix(l2): fix rpc job (#3244)\n\n#3180 happened again\n\nCo-authored-by: LeanSerra <46695152+LeanSerra@users.noreply.github.com>\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>",
          "timestamp": "2025-06-24T01:21:41Z",
          "tree_id": "f1f12afdac43f08caae758cff6ac25325e41c4d0",
          "url": "https://github.com/lambdaclass/ethrex/commit/8880fb4c7fc2fcbb5b802a22f430e2ccaeba418c"
        },
        "date": 1750731670874,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 221032735781,
            "range": "± 438425879",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46385380+tomasdema@users.noreply.github.com",
            "name": "Tomás Agustín De Mattey",
            "username": "tomasdema"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c141419d06626fc84a3bbe7d0ce80a0ae4e074ac",
          "message": "docs(core): update roadmap (#3279)\n\n**Motivation**\n\nRoadmap was hard to follow through in a fast read. \n\n**Description**\n\nRearranged the roadmap items to group \"In Progress\" and \"Planned\" tasks\nproperly.",
          "timestamp": "2025-06-24T10:41:47Z",
          "tree_id": "0030a34385742ebeec6505973f379334631f470c",
          "url": "https://github.com/lambdaclass/ethrex/commit/c141419d06626fc84a3bbe7d0ce80a0ae4e074ac"
        },
        "date": 1750765331280,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 221004987563,
            "range": "± 776610129",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "37ab4d38fd6d942baa1bc7a0cc88b8746f2c15f5",
          "message": "refactor(l2): use L1Messages for withdrawals (#3187)\n\n**Motivation**\n\nIn preparation to support more complex bridging (such as of ERC20\nassets), we want to use generic L2->L1 messaging primitives that can be\neasily extended and reused.\n\n**Description**\n\nThis replaces withdrawals with a new type L1Message, and has the bridge\nmake use of them.\n\n- Allows for multiple messages per transaction\n- Allows for arbitrary data to be sent. Hashed for easier handling.\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>",
          "timestamp": "2025-06-24T13:40:13Z",
          "tree_id": "b5b47bf0beed5ae19cabb4b1ee8cec5c277c50d9",
          "url": "https://github.com/lambdaclass/ethrex/commit/37ab4d38fd6d942baa1bc7a0cc88b8746f2c15f5"
        },
        "date": 1750776095419,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 220401265290,
            "range": "± 225467854",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "fe1e166d133f48ea01fca2a0a5c2764f269e7383",
          "message": "fix(l1,l2): improve metrics (#3160)\n\n**Motivation**\n\nOur `transaction_tracker` metric is reset every time the node is\nrestarted.\n\n**Description**\n\n- Uses the `increase()` function in Grafana to avoid resetting the\ncounter on node restarts.\n- Initializes each possible value to 0 when starting the metrics to\nproperly calculate increments.\n- Splits the Transaction panel into two: `Transactions` and `Transaction\nErrors`.\n- Inverts the colors in `Gas Limit Usage` and `Blob Gas Usage`.\n- Pushes transaction metrics only after closing the block in L2, since\ntransactions may be added or removed depending on the state diff size.\n\n**Last Blob Usage**:  Before | After\n\n\n\n<img width=\"312\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/cd8e5471-3fa9-491b-93c0-10cf24da663c\"\n/>\n\n\n<img width=\"324\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/1fe9b992-1d05-4269-86dd-78ec1f885be0\"\n/>\n\n\n**Transactions**\n\n<img width=\"700\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/ff785f62-fc07-406f-8e8e-4d0f2b4d9aa1\"\n/>\n\n**Transaction Errors**\n\n<img width=\"694\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/146d46b0-c22b-4ff4-969d-a57acdc7916b\"\n/>\n\n\n### How to test\n\n1. Start an L2 node with metrics enabled:\n\n```bash\ncd ethrex/crates/l2\nmake init\n```\n2. Go to `http://localhost:3802/` to watch the Grafana dashboard.\n\n3. Restart the node and check that the `Transactions` panel is not\nreset.\n\n```bash\ncrtl + c\nmake init-l2-no-metrics\n```\n\n4. Modify `apply_plain_transactions` in\n`ethrex/crates/blockchain/payload.rs:543` to generate some errors:\n\n```Rust\npub fn apply_plain_transaction(\nhead: &HeadTransaction,\ncontext: &mut PayloadBuildContext,\n) -> Result<Receipt, ChainError> {\n \n      use std::time::{SystemTime, UNIX_EPOCH};\n      \n      let now = SystemTime::now().duration_since(UNIX_EPOCH).unwrap();\n      let seed = (now.as_secs() ^ now.subsec_nanos() as u64) as usize;\n\n      match seed % 5 {\n            1 => Err(ChainError::ParentNotFound),\n            2 => Err(ChainError::ParentStateNotFound),\n            3 => Err(ChainError::InvalidTransaction(\"tx error\".into())),\n            4 => Err(ChainError::WitnessGeneration(\"witness failure\".into())),\n            _ => Err(ChainError::Custom(\"custom error\".into())),\n      }\n\n}\n```\n\n5. Restart the node and send some transactions:\n\n```bash\ncd ethrex\ncargo run --release --manifest-path ./tooling/load_test/Cargo.toml -- -k ./test_data/private_keys.txt -t eth-transfers -n http://localhost:1729\n```\n\nif necessary run `ulimit -n 65536` before the command.\n\nCloses None",
          "timestamp": "2025-06-24T13:45:49Z",
          "tree_id": "02f89869e2c9ab3e0094dd4337ca7d0decbde7e6",
          "url": "https://github.com/lambdaclass/ethrex/commit/fe1e166d133f48ea01fca2a0a5c2764f269e7383"
        },
        "date": 1750776416130,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 221578918460,
            "range": "± 385628545",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "18153834+klaus993@users.noreply.github.com",
            "name": "Klaus @ LambdaClass",
            "username": "klaus993"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "34c588c5a3cbf71c2ba00796c2d1eef5395ce61e",
          "message": "fix(l1,l2): swap back to standard GitHub runners (#3285)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-06-24T13:55:22Z",
          "tree_id": "82a861ba44af75941fc4adde3a0f107c1c0d8e24",
          "url": "https://github.com/lambdaclass/ethrex/commit/34c588c5a3cbf71c2ba00796c2d1eef5395ce61e"
        },
        "date": 1750776989926,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 220687860813,
            "range": "± 781158718",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "56402156+fkrause98@users.noreply.github.com",
            "name": "Francisco Krause Arnim",
            "username": "fkrause98"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b135bebfc1e6d74c3324376def79cffc315a121d",
          "message": "ci(l1,l2): add 'build block' benchmark to PR checks (#2827)\n\n**Motivation**\n\nMake the \"build block\" benchmark run in the CI.\n\n---------\n\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-06-24T14:11:42Z",
          "tree_id": "bf2ab404844a1d0bff5492a42a82bc2839f98c8d",
          "url": "https://github.com/lambdaclass/ethrex/commit/b135bebfc1e6d74c3324376def79cffc315a121d"
        },
        "date": 1750777877832,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 220785440981,
            "range": "± 450845566",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "47d56b55960a27de0f9587a0d38c850b64e1611c",
          "message": "fix(l2): use aligned sdk latest release (#3200)\n\n**Motivation**\n\nWe are using a specific `aligned-sdk` commit. Now that we've bumped the\nSP1 version to `v5.0.0`, we can use the latest release.\n\n**Description**\n\n- Uses the latest release of the `aligned-sdk`.\n- Refactors `estimate_gas` since some clients don't allow empty\n`blobVersionedHashes`, and our deployer doesn't work with\n`ethereum-package`.\n- Adds a guide on how to run an Aligned dev environment.\n\n## How to test\n\nRead the new section `How to Run Using an Aligned Dev Environment` in\n`docs/l2/aligned_mode.md`.\n\nCloses #3169",
          "timestamp": "2025-06-24T14:57:38Z",
          "tree_id": "9f2f1ebe1326e01c794f2f4c11d86b9eeb8b11d0",
          "url": "https://github.com/lambdaclass/ethrex/commit/47d56b55960a27de0f9587a0d38c850b64e1611c"
        },
        "date": 1750780805275,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 222641182572,
            "range": "± 254618972",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bda9db7998463a96786587f71e73a5a0415e7d02",
          "message": "refactor(l2): implement Metrics Gatherer using spawned library  (#3037)\n\n**Motivation**\n\n[spawned](https://github.com/lambdaclass/spawned) goal is to simplify\nconcurrency implementations and decouple any runtime implementation from\nthe code.\nOn this PR we aim to replace the Metrics Gatherer with a spawned\nimplementation to learn if this approach is beneficial.\n\n**Description**\n\nReplaces Metrics Gatherer task spawn with a series of spawned gen_server\nimplementation.\n\n---------\n\nCo-authored-by: Esteban Dimitroff Hodi <esteban.dimitroff@lambdaclass.com>\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-06-24T16:30:04Z",
          "tree_id": "e250d6362a643f862666a67ea40b2118218cb1af",
          "url": "https://github.com/lambdaclass/ethrex/commit/bda9db7998463a96786587f71e73a5a0415e7d02"
        },
        "date": 1750786181141,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 222276700322,
            "range": "± 276327006",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "196a17b1e734d7510cb48192b944361641ea29c3",
          "message": "chore(l2): remove execution cache (#3091)\n\n**Motivation**\n\nWe can use the rollup store for this purpose (by adding a table to store\naccount updates)\n\n**Description**\n\n- deletes `ExecutionCache`, replaces it with the `StoreRollup`\n- adds new tables in all store backends for storing account updates\n- now the block producer has a reference to the rollup store, to push\naccount updates\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>",
          "timestamp": "2025-06-24T16:46:08Z",
          "tree_id": "2da6943241aaa38aba591c90dbd14323dd54d0ab",
          "url": "https://github.com/lambdaclass/ethrex/commit/196a17b1e734d7510cb48192b944361641ea29c3"
        },
        "date": 1750787186615,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 220310290530,
            "range": "± 857262126",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d671a809973d3c60d14fe06f85161ceb93e87875",
          "message": "refactor(l2): use hardcoded vk in Aligned mode (#3175)\n\n**Motivation**\n\nWe are passing the verification key every time we call\n`verifyBatchAligned()`.\n\n**Description**\n\n- Initializes `SP1_VERIFICATION_KEY` in the `OnChainProposer` contract\nwith the Aligned vk and reuses it in `verifyBatchAligned()`.\n- Since `l1_proof_verifier` needs the vk for\n`aligned_sdk:check_proof_verification()`, it retrieves it from the\ncontract as well.\n\n\nCloses #3030\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-06-24T19:04:02Z",
          "tree_id": "b4ce937a9867ae5012962ef2ec8d4fcebc0f5c5a",
          "url": "https://github.com/lambdaclass/ethrex/commit/d671a809973d3c60d14fe06f85161ceb93e87875"
        },
        "date": 1750795407696,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 220661716482,
            "range": "± 296977084",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5b246bd60fbb0aec2b3bbe4680fd22f5f1a1167e",
          "message": "feat(l2): implement SQL backend for L2 store (#3093)\n\n**Motivation**\n\nWe want a SQL-based backend for easier inspection.\n\n**Description**\n\nImplements a SQLite-like backend using libSQL.\n\nRemoves the RefUnwindSafe requirement from the rollup store, where it\nwasn't needed.\n\nRefactors usages of StoreError in the rollup store into\nRollupStoreError, to avoid cluttering the Store with features it doesn't\nimplement.",
          "timestamp": "2025-06-24T19:42:10Z",
          "tree_id": "452b4b3246e2829b09b3e8cb3aea5073a8426aeb",
          "url": "https://github.com/lambdaclass/ethrex/commit/5b246bd60fbb0aec2b3bbe4680fd22f5f1a1167e"
        },
        "date": 1750797738929,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 220463701192,
            "range": "± 816678874",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "18153834+klaus993@users.noreply.github.com",
            "name": "Klaus @ LambdaClass",
            "username": "klaus993"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2d24185147fc5be9f2b98afb3ab8351cdd44d851",
          "message": "fix(l1,l2): update Rust version to 1.87.0 in every CI workflow, parametrize it by putting it in a GitHub Variable (#3284)\n\n**Motivation**\n\n* There are [17 CI\nfiles](https://github.com/search?q=repo%3Alambdaclass%2Fethrex+dtolnay%2Frust-toolchain&type=code)\nthat use the [`dtolnay/rust-toolchain` GitHub\nAction](https://github.com/dtolnay/rust-toolchain).\n* Each one of these sets up Rust in the GitHub runner, and a version\nspecification is needed\n* By storing the unified Rust version in a [GitHub\nVariable](https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/store-information-in-variables)\nwe don't need to update 17 files each time we need to update the Rust\nversion\n\n**Description**\n\nPreviously, we were using the action this way: `uses:\ndtolnay/rust-toolchain@<rust_version>`.\nFor example: `dtolnay/rust-toolchain@1.87.0`.\nThis is the easy way of pinning a Rust version using this GitHub Action.\n\nAs we want to parametrize this and put it in a variable, we need to\nremove the version specification from the GitHub Workflow YAML `uses:`,\nas GitHub Actions syntax doesn't accept putting expressions in there.\nThe `@<version>` actually means \"get this GitHub Action from the target\nrepository **_branch_**\", so we can just use the action version [from\ntheir `master`\nbranch](https://github.com/dtolnay/rust-toolchain/tree/master) and\nspecify the version with a setting below like this:\n\n```yaml\nuses: dtolnay/rust-toolchain@master\n  with:\n    toolchain: ${{ vars.RUST_VERSION }}\n```\n\nSo we can use the GitHub Variable RUST_VERSION to store it. If there is\nany special case which needs a different version, we can just put the\nversion directly inside the `toolchain:` spec.",
          "timestamp": "2025-06-24T20:14:19Z",
          "tree_id": "212d98bd740accf3ec735b591d3862c66a407026",
          "url": "https://github.com/lambdaclass/ethrex/commit/2d24185147fc5be9f2b98afb3ab8351cdd44d851"
        },
        "date": 1750799616060,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 222492241004,
            "range": "± 279592992",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e846b11033de83d369ba5a9ab1621cbef7d3307a",
          "message": "chore(l2): remove redundant checks in contracts (#3282)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nWe have a bunch of redundant and too cautious `require`s in the\ncontracts that increase the cost of deployment and don't provide too\nmuch value.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n- Remove checks for storage slots different from 0, since the\n`initializer` modifier already handle those cases.\n- Remove checks for addresses different from the contract itself, since\nthey don't add too much value.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>",
          "timestamp": "2025-06-24T20:16:33Z",
          "tree_id": "09abaafea256af08890263ce17c8eb48f5fead5a",
          "url": "https://github.com/lambdaclass/ethrex/commit/e846b11033de83d369ba5a9ab1621cbef7d3307a"
        },
        "date": 1750799748733,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 222279872168,
            "range": "± 353295224",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5a11dda349151747fe86e0d627823a4353964a77",
          "message": "chore(l2): remove nested workspace (#3277)\n\n**Motivation**\n\nWhen installing with `cargo install --git\nhttps://github.com/lambdaclass/ethrex.git ethrex`, I was getting weird\nerrors from the `zkvm_interface` crate. Looking into that, I found that\nwe have a nested workspace in our repo. This is not supported, and hence\nshould be avoided.\n\n**Description**\n\nThis PR removes the second workspace. I also tried keeping some of the\noptimization options for the package in\n4635cfec948a12e52d6a61ec317781845714838c, but the `lto` option was\ngiving me problems. In case we want to re-add them, the other options\ncan be added directly to the main `Cargo.toml` instead of a\n`config.toml`.",
          "timestamp": "2025-06-24T20:36:01Z",
          "tree_id": "740b19aaa6ca5fd2b08951082d8a0b58ef8c5f15",
          "url": "https://github.com/lambdaclass/ethrex/commit/5a11dda349151747fe86e0d627823a4353964a77"
        },
        "date": 1750800995655,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 222105366835,
            "range": "± 599026439",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fab1cb7c2369d6b762d1e0aa775af55498fafac",
          "message": "fix(l2): remove withdrawals processing in build_payload (#3297)\n\n**Motivation**\n\nWhen producing a block in L2 mode, we unnecessarily call\n`blockchain::apply_withdrawals`, even though we don't have a consensus\nnode passing withdrawals via the `ForkChoiceUpdated` engine message. In\nfact, we create a default value\n[here](https://github.com/lambdaclass/ethrex/blob/d671a809973d3c60d14fe06f85161ceb93e87875/crates/l2/sequencer/block_producer.rs#L171).\n\n**Description**\n\n- Removes the call to `blockchain::apply_withdrawals()` in\n`payload_builder`.\n\nCloses None",
          "timestamp": "2025-06-24T20:50:06Z",
          "tree_id": "4ee96703bdb1a355573ab1ccdb22a8f0ee2c08a5",
          "url": "https://github.com/lambdaclass/ethrex/commit/9fab1cb7c2369d6b762d1e0aa775af55498fafac"
        },
        "date": 1750801855950,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 220352185029,
            "range": "± 300589884",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5a39b693d285690b479657d69b0939f03bd5075f",
          "message": "feat(l1): running localnet with client comparisions (#3221)\n\n**Motivation**\n\nWe want to be able to spin up a local network with 3 nodes,\nethrex[levm], ethrex[revm] and reth an be able to compare throughput\nbetween them on different spamoor configurations.\n\n**Description**\n\nThis PR add a new make target that spin-up a localnet with ethrex[levm],\nethrex[revm] and reth, enable the metrics exporter, and prepare the\ndashboard to be able to be used in arbitrary datasources, both imported\nor provisioned, automatically setting a datasource variable to the\ndefault prometheus.",
          "timestamp": "2025-06-24T22:29:24Z",
          "tree_id": "55758539e0bfbaa198ef96bf470eeeae9546ec45",
          "url": "https://github.com/lambdaclass/ethrex/commit/5a39b693d285690b479657d69b0939f03bd5075f"
        },
        "date": 1750807764503,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 220274983454,
            "range": "± 790969873",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "79ed215def989e62e92653c9d0226cc93d941878",
          "message": "ci(l2): check if the sp1 `Cargo.lock` is modified but not committed (#3302)\n\n**Motivation**\n\nRPC prover ci is constantly breaking because Cargo.lock is modified but\nnot committed in PRs\n\n**Description**\n\n- Add a check in the Lint job that executes `git diff --exit-code --\ncrates/l2/prover/zkvm/interface/sp1/Cargo.lock` and fails if there is a\ndiff\n- Update `Cargo.lock` to fix currently broken ci\n- Example of a failed run:\n-\nhttps://github.com/lambdaclass/ethrex/actions/runs/15863233694/job/44724951989",
          "timestamp": "2025-06-25T13:45:24Z",
          "tree_id": "9bf943d70d37d3e05cdab7bce5d099e5632017a0",
          "url": "https://github.com/lambdaclass/ethrex/commit/79ed215def989e62e92653c9d0226cc93d941878"
        },
        "date": 1750862710367,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 222182231512,
            "range": "± 614814378",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e84f61faddbd32288af58db8ca3c56aa4f3541d7",
          "message": "test(l1): check if vm state reverts correctly on error (#3198)\n\n**Motivation**\n\nPer the instructions of the [ethereum state test\ndocs](https://eest.ethereum.org/v3.0.0/consuming_tests/state_test/), we\nshould be reverting to the pre-state when the execution throws an\nexception. Levm does this, but it's not asserted in the test runner in\nthe case an exception is expected.\n\n**Description**\n\nThis pr introduces a new error to check if the state was reverted\ncorrectly in the case an exception must occur, or throw error otherwise.\nTo check if the state was correctly reverted I'm using the post state\nhash from the tests and comparing it with the hash of the account's\nlatest state recorded in the db.\n\nCloses #2604",
          "timestamp": "2025-06-25T14:02:28Z",
          "tree_id": "45788c1aac7394b905b3c9f02a81cefdd1b332e6",
          "url": "https://github.com/lambdaclass/ethrex/commit/e84f61faddbd32288af58db8ca3c56aa4f3541d7"
        },
        "date": 1750863715235,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 220230552362,
            "range": "± 351014067",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3a18678adbe6be41af3e05ba0f089d40d9618aed",
          "message": "perf(levm): refactor `gas_used` to `gas_remaining` (#3256)\n\n**Motivation**\n\nBy using `gas_used` there have to be multiple operations for each gas\ncheck. Replacing it with `gas_remaining`, the same overflow check can be\nused to determine whether there was enough gas or not.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-06-25T16:36:49Z",
          "tree_id": "a2ca8debd174ceddfe5037692d47e3855436a185",
          "url": "https://github.com/lambdaclass/ethrex/commit/3a18678adbe6be41af3e05ba0f089d40d9618aed"
        },
        "date": 1750872990523,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 220022053969,
            "range": "± 586341724",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "leanrafa@gmail.com",
            "name": "Leandro Ferrigno",
            "username": "lferrigno"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f673b693b3fcdc1fe4b87fa2abcce8b660cce0a6",
          "message": "docs(l1,l2): move readme components to documentation in mdbook (#3295)\n\n**Motivation**\n\nThe main idea is to only have a quick introduction to ethrex in the\nreadme, with a quick way to set up a local L1+L2 stack from scratch\n(without even having the repo). The rest should be links to the book.\nThe current readme documentation should be moved to the book.\n\n\nCloses #3289\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-06-25T20:41:54Z",
          "tree_id": "75b09dedeeaaf00b66d40241c96d6e79b6920788",
          "url": "https://github.com/lambdaclass/ethrex/commit/f673b693b3fcdc1fe4b87fa2abcce8b660cce0a6"
        },
        "date": 1750887740716,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 219117931766,
            "range": "± 938841928",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "89949621+ricomateo@users.noreply.github.com",
            "name": "Mateo Rico",
            "username": "ricomateo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f9b9008d8319607d894bd2410d7e4b0964e62314",
          "message": "refactor(l1): `SIGTERM` handling (#3288)\n\n**Motivation**\nStopping an L1 Docker container sends a `SIGTERM` to the node process,\nbut since the node doesn't handle this signal, it takes 10 seconds for\nthe `SIGKILL` to force the shutdown.\nSome temporary fixes were introduced to address this issue, but the\ncorrect solution is to handle the `SIGTERM` signal.\n\n\n**Description**\nThis PR adds a `SIGTERM` handler to allow graceful shutdown without the\n10-second delay.\n\nIt also reverts the temporary fixes that were introduced in previous PRs\n(https://github.com/lambdaclass/ethrex/commit/47a1d4c5b23a9ae03839556b92bce3c6dd029f17\nand\nhttps://github.com/lambdaclass/ethrex/commit/67edcaff73624446f2b75c40b385df69aabe4882)\nin favor of this solution.\n\nNote that when the node is syncing, shutdown isn’t immediate, as the\nnode waits for the current batch to complete.\nTo handle this, the `CancellationToken` is propagated and checked before\nprocessing each block, which allows the node to terminate immediately,\nwithout waiting for the whole batch to complete.\n\nCloses #2944\nCloses #3236",
          "timestamp": "2025-06-25T21:29:38Z",
          "tree_id": "78e8790824f063020edda3f7bc0be6531f18bd8b",
          "url": "https://github.com/lambdaclass/ethrex/commit/f9b9008d8319607d894bd2410d7e4b0964e62314"
        },
        "date": 1750890571535,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 219171300772,
            "range": "± 583199276",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e03f3b0011184f47542db125afa33039176dd1c0",
          "message": "docs(l2): update based roadmap (#3319)\n\n> [!NOTE]\n> This is not the final version of the latest update.\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>\nCo-authored-by: Manuel Iñaki Bilbao <manuel.bilbao@lambdaclass.com>",
          "timestamp": "2025-06-25T21:46:19Z",
          "tree_id": "78387864124b8f1e738172616e71c4dd1699b546",
          "url": "https://github.com/lambdaclass/ethrex/commit/e03f3b0011184f47542db125afa33039176dd1c0"
        },
        "date": 1750891514052,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 219892999296,
            "range": "± 444798092",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3eee599280855b30cfd023ecce4a706ebe69d3a5",
          "message": "docs(l2): update image and add suggestions (#3328)\n\nCo-authored-by: Javier Chatruc <jrchatruc@gmail.com>",
          "timestamp": "2025-06-25T23:11:27Z",
          "tree_id": "e83b3b37045190a2d8c8a3425969a1e070a94eb0",
          "url": "https://github.com/lambdaclass/ethrex/commit/3eee599280855b30cfd023ecce4a706ebe69d3a5"
        },
        "date": 1750896711967,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 220985078809,
            "range": "± 605677520",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "217ad13acdaa6d7219ec4a5ad16fce5164749ae8",
          "message": "perf(levm): refactor `Stack` to have a fixed size and grow downwards (#3266)\n\n**Motivation**\n\nThe stack is currently implemented using a `Vec<U256>` that grows\nupwards. Since the stack is limited to a reasonable amount by design\n(1024 entries, or 32KiB) it can be converted to a static array along\nwith an offset and made to grow downwards.\n\n**Description**\n\nThis PR:\n- Removes stack allocation (and its associated runtime checks) from the\nruntime costs.\n- Makes the stack grow downwards: better integration with stack\noperations.\n- Changes the API so that multiple items can be inserted and removed\nfrom the stack at the same time, which is especially useful for opcodes\nthat handle multiple arguments or return values.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>",
          "timestamp": "2025-06-26T12:02:50Z",
          "tree_id": "5ac3d6fb4b5de3b973e523181a199aa9ab11338c",
          "url": "https://github.com/lambdaclass/ethrex/commit/217ad13acdaa6d7219ec4a5ad16fce5164749ae8"
        },
        "date": 1750943014631,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 221781615350,
            "range": "± 432103051",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f630e1c0f4fce2264b2991b3d743172e1514b196",
          "message": "test(l1): run all blockchain tests and refactor logic (#3280)\n\n**Motivation**\n\n- We weren't running all tests that we needed to. We ran tests from\nfolders prague, cancun and shanghai but folders that have names of older\nforks have \"old\" tests but they perform checks for current forks too. So\nwe should run them too!\n\n**Description**\n\n- Deletes `cancun.rs`, `shanghai.rs` and `prague.rs`. Doesn't make sense\nto run tests based on that. For example, when running cancun.rs you\ncould find tests which post state was Prague or Shanghai, so that\ndistinction we were making was kinda useless. Now we just have `all.rs`\nand I simplified it so that it is more clean.\n- Adds all networks to Network enum\n- Refactor `test_runner` so that parsing is better (now it's recursive)\nand also now when a test fails it doesn't stop executing the rest of the\ntests, which was pretty annoying.\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-06-26T14:36:53Z",
          "tree_id": "70a14b6e94d5840a1ac56f6960b54ff93de31be3",
          "url": "https://github.com/lambdaclass/ethrex/commit/f630e1c0f4fce2264b2991b3d743172e1514b196"
        },
        "date": 1750952228526,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 222012327070,
            "range": "± 434402955",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3741a2ad5647ad1945907dfe6f1ac02d65054bc4",
          "message": "fix(l1, levm): fix remaining blockchain test (#3293)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n- Fix last blockchain test, it was failing for both LEVM and REVM\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- The test destroyed an account that had non-empty storage and then\nre-created it with CREATE2. When getting the AccountUpdates we just said\nthat the account had no added storage (which is true) but we don't have\na way to directly communicate that the account was destroyed and then\ncreated again, so even though it exists its old storage should be\ncleared.\n- For this I implemented an ugly solution. For both LEVM and REVM in\nget_account_updates if I see that an account was Destroyed but now\nexists what I'll do is I'll push 2 Account Updates, one that removes the\naccount and another one with the new state of the account, so that the\nwhole account is removed (and therefore, its storage) and then we write\nto the database the new state of the account with it's new storage. I\nthink a cleaner solution would be to have an attribute `removed_storage`\n(or similar) in `AccountUpdate` that will tell the client to remove the\nstorage of the existing account without removing all the account and\nthen we don't have to do messy things like the one I implemented. The\ndownside that I see on this new approach is that we'll have an attribute\nthat we'll hardly ever use, because it's an edge case.\n- Then, for LEVM I had to implement a `destroyed_accounts` in\n`GeneralizedDatabase` so that in `get_state_transitions()` we can check\nwhich accounts were destroyed and now exist so that we do the procedure\nthat I described above. This and many other things would be way nicer if\nwe used in LEVM our own Account struct instead of reusing the one in\nEthrex. I'm seriously considering making that change because it seems\nworth doing so, there are other reasons to pull the trigger on that.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nQuestions:\n1. Should we add a `removed_storage` to `AccountUpdate` instead? Or this\nway of implementing it (removing account and then writing it) is good\nenough? Created #3321\n2. Should we use our own Account type in LEVM so that we don't rely on\nexternal HashSets and HashMaps for some things? For this I opened #3298\n\nCloses #3283\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-06-26T15:18:38Z",
          "tree_id": "73dcb8916d9e6a46cc1f6b47ab5c31c7b2ba2616",
          "url": "https://github.com/lambdaclass/ethrex/commit/3741a2ad5647ad1945907dfe6f1ac02d65054bc4"
        },
        "date": 1750954764949,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 221326895624,
            "range": "± 285129188",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "89949621+ricomateo@users.noreply.github.com",
            "name": "Mateo Rico",
            "username": "ricomateo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "09cac25ff1b390c5a03ab1846a46ef82283e8e2e",
          "message": "fix(l1): flaky test `test_peer_scoring_system ` (#3301)\n\n**Motivation**\nThe test executes a function that selects peers randomly but\nprioritizing those with high score, and checks that the number of\nselections for each peer is proportional to its score. However given\nthat the selection is somehow random, this is not always the case.\n\n**Description**\nIntroduces the following changes in the test\n* Increments the number of selections, which should reduce the\nprobability of failure.\n* Initializes a different `KademliaTable` for working with multiple\npeers.\nNote that the table used for multiple-peer scoring checks was the same\nas the one used for single-peer scoring tests. The problem is that a\nhigh-scoring peer from the initial phase remains in the table but is\nincorrectly omitted from subsequent multi-peer selection calculations,\nthus impacting the final outcome.\n\nThe following bash script can be used to get a sense of the failure rate\nof the test. It loops running the test and printing the total and failed\nruns.\n\nWith these changes, the failure rate dropped from (approximately) 4% to\n0.025%.\n\n```bash\n#!/bin/bash\n\nCOMMAND=(cargo test --package=ethrex-p2p --lib -- --exact kademlia::tests::test_peer_scoring_system --nocapture)\n\ntotal=0\nfailed=0\n\nwhile true; do\n    \"${COMMAND[@]}\" >/dev/null 2>&1\n    exit_code=$?\n\n    if [ $exit_code -ne 0 ]; then\n        failed=$((failed + 1))\n        echo \"❌ failed\"\n    else\n        echo \"✅ ok\"\n    fi\n\n    total=$((total + 1))\n    echo \"Total = $total, Failed = $failed\"\n    echo \"---\"\ndone\n\n```\n\n\n\nCloses #3191",
          "timestamp": "2025-06-26T16:03:58Z",
          "tree_id": "0b5e1ee9b62d541aa34180f07b73361f632a71be",
          "url": "https://github.com/lambdaclass/ethrex/commit/09cac25ff1b390c5a03ab1846a46ef82283e8e2e"
        },
        "date": 1750957375842,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 220126650798,
            "range": "± 260140480",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "319656f7891424735deeb7a18d9b0976680dd04b",
          "message": "ci(l2): build docker images for integration test (#3338)\n\n**Motivation**\n\nCi failing because ethrex_dev:latest not found \n\n**Description**\n\n- add step to build the image",
          "timestamp": "2025-06-26T16:52:58Z",
          "tree_id": "db70eefd6d0032e7f761cfd28e4186e80e9775d5",
          "url": "https://github.com/lambdaclass/ethrex/commit/319656f7891424735deeb7a18d9b0976680dd04b"
        },
        "date": 1750960393763,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 222816708012,
            "range": "± 419298346",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e12f615f1a6e67c1fb719f6693d6627d8e2a2e70",
          "message": "docs(l1): fix readme links and improve L1 documentation (#3340)\n\n**Motivation**\n\nThe current readme links to the unrendered documentation instead of our\nhosted book. Also, the general landing page doesn't have any links or\npointers on where to go next, while the L1 landing page is empty.\n\n**Description**\n\nThis PR addresses the previous issues, adding some content to the L1\nlanding page and generally cleaning up the docs. It also merges the two\ndocumentation sections in the readme and updates links to point to\ndocs.ethrex.xyz",
          "timestamp": "2025-06-26T18:13:10Z",
          "tree_id": "9da9d65d7fc47ea4423505e1996ffbbca8421bcc",
          "url": "https://github.com/lambdaclass/ethrex/commit/e12f615f1a6e67c1fb719f6693d6627d8e2a2e70"
        },
        "date": 1750965138428,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 218838381174,
            "range": "± 846219042",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a0eebfa256edaaf3ffc35676fc3b3ad021dccde8",
          "message": "ci(l2): build docker images for all l2 tests (#3342)\n\n**Motivation**\n\nAfter #3338 state reconstruct test and based tests started failing\n**Description**\n\n- build the docker image for those steps too",
          "timestamp": "2025-06-26T18:13:36Z",
          "tree_id": "3f597839d3d2dc64484734cb7189722eede96728",
          "url": "https://github.com/lambdaclass/ethrex/commit/a0eebfa256edaaf3ffc35676fc3b3ad021dccde8"
        },
        "date": 1750965201069,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 220949612216,
            "range": "± 278785962",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8675fe8bc44977275db954cc4730a79c382cc15a",
          "message": "perf(levm): refactor levm jump opcodes (#3275)\n\n**Motivation**\n\nThe `JUMP` and `JUMPI` opcodes need to check the target address's\nvalidity. This is currently done with a `HashSet` of valid target\naddresses, which caused the hashing to become a significant part of the\nprofiling time when checking for address validity.\n\n**Description**\n\nThis PR rewrites the `JUMPDEST` checks so that instead of having a\nwhitelist, we do the following:\n- Check the program bytecode directly. The jump target's value should be\na `JUMPDEST`.\n- Check a blacklist of values 0x5B (`JUMPDEST`) that are NOT opcodes\n(they are part of push literals).\n\nThe blacklist is not a `HashMap`, but rather a sorted slice that can be\nchecked efficiently using the binary search algorithm, which should\nterminate on average after the first or second step.\n\nRational: After extracting stats of the first 10k hoodi blocks, I found\nout that...\n- There are almost 60 times more `JUMPDEST` than values 0x5B in push\nliterals.\n- On average, there are less than 2 values in the blacklist. If we were\nto use a whitelist as before, there would be about 70 entries on\naverage.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nRelated to #3305",
          "timestamp": "2025-06-26T20:36:36Z",
          "tree_id": "d839a849cc638da9fe2743a8f65a578f6579a8bd",
          "url": "https://github.com/lambdaclass/ethrex/commit/8675fe8bc44977275db954cc4730a79c382cc15a"
        },
        "date": 1750973738845,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210448650992,
            "range": "± 434898055",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f6b0ba4a352725e762dc0420b84ef9198a20d640",
          "message": "chore(l2): change default chain ID (#3337)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nCurrent chain ID (1729) is causing some problems with wallets like\nMetamask as the chain ID is registered for another network.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nChanged default chain ID to 65536999 following our new naming method:\n- `65536XYY`\n- Being `X` the stage (0 for mainnet, 1 for testnet, 2 for staging,\netc.).\n- Being `YY` each specific rollup.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3312",
          "timestamp": "2025-06-26T21:35:10Z",
          "tree_id": "5c0e989bf8fcfec78d3f3aca85cd30d7ff18d6c0",
          "url": "https://github.com/lambdaclass/ethrex/commit/f6b0ba4a352725e762dc0420b84ef9198a20d640"
        },
        "date": 1750977127124,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210972090092,
            "range": "± 454975535",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "19cfb4e1874c35f32ff78602093f1305c17b6f4d",
          "message": "chore(core): add install script (#3273)\n\n**Description**\n\nThis PR adds an installation script with readme instructions on how to\nquickly set up a local L1 with `ethrex`, without having to clone the\nrepo.\n\nThe idea is to extend this script once the L2 can be more easily\ndeployed. Right now, it requires installing two more binaries and\ndownloading multiple contracts (either the source or compiled\nartifacts), which makes this more complex than it needs to be.\n\n---------\n\nCo-authored-by: Javier Chatruc <jrchatruc@gmail.com>",
          "timestamp": "2025-06-26T21:40:31Z",
          "tree_id": "cfb5520d0c3f5cac05f111e8f19749137c261c90",
          "url": "https://github.com/lambdaclass/ethrex/commit/19cfb4e1874c35f32ff78602093f1305c17b6f4d"
        },
        "date": 1750977436376,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 208858247765,
            "range": "± 755486195",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b584bcc7e51507e5c943305e8d63dfc9f6f7ec68",
          "message": "refactor(l1, l2): remove `l2` feature flag from `rpc` crate (first proposal) [RFC] (#3330)\n\n**Motivation**\n\nThe main goal is to decouple L2 logic from the crate `rpc`. \n\nThis PR proposes an initial solution to this.\n\n**Description**\n\nThis solution extends `ethrex-rpc` by wrapping it where needed, and\nadding new data structures. I think a better solution can be achieved\nfrom this one.\n\n- Adds `ethrex-l2-rpc` crate in `crates/l2/networking/rpc`.\n- Moves L2 logic from `ethrex-rpc` to `ethrex-l2-rpc`.\n- Refactors some functions in `ethrex-rpx` to be reusable in\n`ethrex-l2-rpc`.\n- Exposes some functions and types from `ethrex-rpc`.\n- Updates `cmd/ethrex` with this changes and moves L2 initializers from\n`cmd/ethrex/initializers.rs` to `cmd/ethrex/l2/initializers.rs`.\n\n**Pros and Cons**\n\n| Pros | Cons|\n| --- | --- |\n| L2 logic is decoupled from `ethrex-rpc` | L2 logic is decoupled from\n`ethrex-rpc` by wrapping `ethrex-rpc` functions and duplicating some\ntypes to extend them |\n| `ethrex-rpc` logic is reused by `ethrex-l2-rpc` | Some types and\nfunctions were exposed in `ethrex-rpc` public API |\n\nDespite the cons, this could be an acceptable first iteration to a\nproper solution as this implementation highlights somehow which parts of\nthe rpc crate need to be abstracted.\n\n**Next Steps**\n\n- Remove `l2` feature flag from `cmd/ethrex`.\n- Move `crates/networking/rpc/clients` module.\n- Cleanup `ethrex-rpc` public API.\n- The next iteration should include an more general abstraction of the\nRPC API implementation so it can be extended organically instead of by\nwrapping it.",
          "timestamp": "2025-06-27T15:44:41Z",
          "tree_id": "b6aa69359a73072b97acca21d9c2daa7abe8b880",
          "url": "https://github.com/lambdaclass/ethrex/commit/b584bcc7e51507e5c943305e8d63dfc9f6f7ec68"
        },
        "date": 1751042636898,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210953905193,
            "range": "± 534112181",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2e4bc87ddb14b2e5215d40bada54dad384741747",
          "message": "perf(core): improve u256 handling, improving PUSH and other opcodes (#3332)\n\n**Motivation**\n\nThe function `u265::from_big_endian(slice)` which is widely used in the\ncodebase can be made faster through more compile time information.\n\nWith this change, i could add a constant generic op_push\n\nBenchmarks:\n\nSeems like our current benchmarks don't measure this part of the code,\nthere is no difference in the levm bench, however external opcode\nbenchmarks show a 2-2.5x improvement on PUSH and MSTORE based benches\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3358",
          "timestamp": "2025-06-27T15:46:44Z",
          "tree_id": "ceac0361630c7d3402664dc9569e183fdae03ccb",
          "url": "https://github.com/lambdaclass/ethrex/commit/2e4bc87ddb14b2e5215d40bada54dad384741747"
        },
        "date": 1751042806554,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210457693357,
            "range": "± 708614294",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f57dd24e3a4b142f6de1f80bc2d9ee98692bb08f",
          "message": "chore(levm): improve levm vs revm bench (#3255)\n\n**Motivation**\n\nCurrently the benchmark comparisson shown for levm is not very useful\nsince there is a lot of information distributed along different tables\nand it's not easy to see the change.\n\n**Description**\n\nThis pr introduces the following changes:\n\n- Instead of having the tables compare levm and revm, now they compare\nbetween pr's obtained mean time and main' obtained mean time for both\nvms. To do this we modify the `run_benchmark_ci` function that the\ntarget runned by the ci calls to have the benchmark comparison run for\nall cases.\n\n- If nothing changed between pr and main, no message is printed, using\nas a margin of error a porcentual difference higher than 10%.\n\n- If something changed, only output the tests where there was a change,\nnothing is printed if the test that stayed the same.\n\nThe tables always show the obtained metrics in the same order despite\nthe fact one of them is not shown:\n\n| Command | \n|--------|\n|`main_revm_`|\n|`main_levm_`|\n|`pr_revm_`|\n|`pr_levm_`|\n\nFor example, in the case you do an optimization in levm that improves\nfactorial but does nothing for revm, the table would look like this:\n| Command | Mean [ms] | Min [ms] | Max [ms] | Relative |\n|--------|--------|--------|--------|--------|\n| `main_revm_Factorial` | 138.1 ± 0.5 | 137.4 | 139.2 | 1.00 |\n| `main_levm_Factorial` | 326.4 ± 6.3 | 321.4 | 340.2 | 2.36 ± 0.05 |\n| `pr_levm_Factorial` | 223.8 ± 6.3 | 216.4 | 234.1 | 2.04 ± 0.05 |\n\nCloses #3254\n\n---------\n\nCo-authored-by: cdiielsi <49721261+cdiielsi@users.noreply.github.com>\nCo-authored-by: Camila Di Ielsi <camila.diielsi@lambdaclass.com>",
          "timestamp": "2025-06-27T16:03:04Z",
          "tree_id": "e340415a97b05069af05234e55becf17585d535c",
          "url": "https://github.com/lambdaclass/ethrex/commit/f57dd24e3a4b142f6de1f80bc2d9ee98692bb08f"
        },
        "date": 1751043607092,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 206190289334,
            "range": "± 770356972",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "30327624+mechanix97@users.noreply.github.com",
            "name": "Mechardo",
            "username": "mechanix97"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "6d64350d80b39e755a771917f8fbd79e16db627b",
          "message": "docs(l2): based docs outdated contract addresses (#3348)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nThe contract addresses in the docs were outdated. \n\n**Description**\n\nTo avoid having to update the addresses of the contracts every time a\ncontract changes, placeholder were introduced.\n\nAlso removed the pico verifier from the contract deployment as it is no\nlonger needed.\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-06-27T19:49:45Z",
          "tree_id": "b0720e7467d3a80f93b7e9fea335bca7e7bf7c31",
          "url": "https://github.com/lambdaclass/ethrex/commit/6d64350d80b39e755a771917f8fbd79e16db627b"
        },
        "date": 1751057335444,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211082612032,
            "range": "± 592729609",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "510856b92b5aa4b9da070824ea10e28a7e5ec44c",
          "message": "fix(l2): serde skip attributes incompatible with bincode (#3370)\n\n**Motivation**\n\nsame old problem which we brute fix by serializing into JSON first, was\nreintroduced with the addition of `ExecutionWitnessResult` (which has\ntwo fields that use `#[serde(skip)]`)",
          "timestamp": "2025-06-27T20:38:17Z",
          "tree_id": "80b73f14440435541056a670f63a1e8f6e4f8173",
          "url": "https://github.com/lambdaclass/ethrex/commit/510856b92b5aa4b9da070824ea10e28a7e5ec44c"
        },
        "date": 1751060430563,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 213513081609,
            "range": "± 2669531763",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c9c750d8b1c2b0ab8cba89a3657f123dabe6f3fc",
          "message": "perf(levm): reduce handle_debug runtime cost (#3356)\n\n**Motivation**\n\nWith this handle_debug disappears from samplies on push/memory heavy\nbenches.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3355",
          "timestamp": "2025-06-27T20:44:26Z",
          "tree_id": "6ddd2bd3f702e9b92bede8dab5e830166d6e8827",
          "url": "https://github.com/lambdaclass/ethrex/commit/c9c750d8b1c2b0ab8cba89a3657f123dabe6f3fc"
        },
        "date": 1751060650667,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210879737422,
            "range": "± 404546331",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2dd0e7b4e73f1578fbd2c43e2845bcfb2fd46e8c",
          "message": "chore(levm): add push/mstore based bench (#3354)\n\n**Motivation**\n\nAdds a benchmark that mainly tests PUSH and MSTORE\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3364\n\n---------\n\nCo-authored-by: Javier Chatruc <jrchatruc@gmail.com>\nCo-authored-by: ilitteri <ilitteri@fi.uba.ar>",
          "timestamp": "2025-06-27T20:49:14Z",
          "tree_id": "92222d56d1d8b08b0d73e056fee5f4f6efcab91f",
          "url": "https://github.com/lambdaclass/ethrex/commit/2dd0e7b4e73f1578fbd2c43e2845bcfb2fd46e8c"
        },
        "date": 1751060972531,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209882948866,
            "range": "± 848066479",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7b626fddc2a1556db2c61af9b76ce0e26dd352eb",
          "message": "refactor(l2): remove blobs logic from payload_builder (#3326)\n\n**Motivation**\n\nRemoves unnecessary logic for handling blob transactions in\n`L2::payload_builder`, since these transactions are discarded just a few\nlines below.\n\n\nCloses None",
          "timestamp": "2025-06-27T21:03:02Z",
          "tree_id": "5d209dd66d6568c111588f3f7624f8553a67c85f",
          "url": "https://github.com/lambdaclass/ethrex/commit/7b626fddc2a1556db2c61af9b76ce0e26dd352eb"
        },
        "date": 1751061615490,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209374061533,
            "range": "± 899896290",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4d6cbf6db95cff5b0fe11af74dd4c629a3e1be71",
          "message": "feat(l1): embed genesis of public networks in binary (#3372)\n\n**Motivation**\n\nCurrently, users need to download the genesis to be able to run a\nnetwork without being in the repo's root.\n\n**Description**\n\nThis PR embeds the genesis file of known public networks inside the\ncompiled binary. It has the downside of increasing binary size from 23.6\nMb to 24.7 Mb.\n\nFurther code simplifications are left for other PRs.\n\nIn the future, a possible improvement could be to parse each genesis\nfile before embedding it in the binary. Now we just embed the plain\nJSON.\n\nRelated #3292",
          "timestamp": "2025-06-27T21:16:21Z",
          "tree_id": "22bbe2194dc8cf877b504540879f04fd9ffd8b9e",
          "url": "https://github.com/lambdaclass/ethrex/commit/4d6cbf6db95cff5b0fe11af74dd4c629a3e1be71"
        },
        "date": 1751062516603,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210057228422,
            "range": "± 561318655",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "25432a8606f153031410173b56c7a283fd08cc9e",
          "message": "chore(l2): remove save state module (#3119)\n\n**Motivation**\n\nThe save state module was unnecessarily complex for what it achieved\n(storing incoming batch proofs). This PR replaces it with the rollup\nstore.\n\n**Description**\n\n- adds tables for storing batch proofs indexed by batch number and proof\ntype to the rollup store\n- removes the save state module\n- all places that used the save state module now use the rollup storage\n- had to move the prover interface into `ethex-l2-common` because\n`ethrex-storage-rollup` can't depend on the prover because of cyclic\ndependencies\n- because of the previous point had to move the `Value` type into\n`ethrex-l2-common` because `ethrex-l2-common` can't depend on\n`ethrex-sdk`\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>",
          "timestamp": "2025-06-27T21:32:19Z",
          "tree_id": "c551144c82bed4a41367a84ded8abb3732a39e43",
          "url": "https://github.com/lambdaclass/ethrex/commit/25432a8606f153031410173b56c7a283fd08cc9e"
        },
        "date": 1751063470321,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209510267943,
            "range": "± 509174897",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3f65132f7fb6d206f189754ace88340184811e7d",
          "message": "fix(l2): update rpc job cache file (#3377)\n\n**Motivation**\n\nin #3370 i didn't update it after changing how the program input is\nserialized",
          "timestamp": "2025-06-27T22:22:17Z",
          "tree_id": "cdf056c0a40fbe670409308b79b3f0b9f5f937ba",
          "url": "https://github.com/lambdaclass/ethrex/commit/3f65132f7fb6d206f189754ace88340184811e7d"
        },
        "date": 1751066407966,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209395567112,
            "range": "± 463770214",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a51ad76d5dc1ca9ad6bb371037c9894a01af356a",
          "message": "chore(core): update Rust version to 1.88 (#3382)",
          "timestamp": "2025-06-30T13:04:49Z",
          "tree_id": "7b9134c67f0cd8bbceeb6285c954f84e85063274",
          "url": "https://github.com/lambdaclass/ethrex/commit/a51ad76d5dc1ca9ad6bb371037c9894a01af356a"
        },
        "date": 1751292189402,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 207103992446,
            "range": "± 297046142",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "98512676ba767d6c635633da9b70932af1a2c483",
          "message": "docs(l1): fix broken links in sync doc (#3369)\n\n**Motivation**\nSome links in the sync documentation do not point to the correct files\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Fix broken links to diagrams in sync documentation\n* Remove link and mention of no longer existing diagram\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-06-30T13:15:09Z",
          "tree_id": "c1ab3a358155856f42742f8819e4ba0c51fb07cf",
          "url": "https://github.com/lambdaclass/ethrex/commit/98512676ba767d6c635633da9b70932af1a2c483"
        },
        "date": 1751292887512,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211597378504,
            "range": "± 758816429",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4b6318fb291bc731b4123fd88e9398c5aacb4b30",
          "message": "feat(l2): value sending in privileged transactions (#3320)\n\n**Motivation**\n\nWe want to be able to send (\"deposit\") value-carrying privileged\ntransactions, for example to do forced withdrawals.\n\n**Description**\n\nThis PR allows users to specify the transaction value while sending\nprivileged transactions.\n\nFor regular deposits, the bridge calls it's L2 version and relies on the\nL2 hook allowing the bridge address to send without having funds. It\ncalls it's own L2 version, which handles failed transfers by making a\nwithdrawal.\n\nFor transactions, since they can't fail they are instead made to revert\nwhen there aren't enough funds to cover the operation.\n\nCloses #3290, closes #3291\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>",
          "timestamp": "2025-06-30T13:28:49Z",
          "tree_id": "0e7d86f866aa0e1081ab669a2f064c76a1c0eb95",
          "url": "https://github.com/lambdaclass/ethrex/commit/4b6318fb291bc731b4123fd88e9398c5aacb4b30"
        },
        "date": 1751293617090,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210671124628,
            "range": "± 770806776",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "11384d62135ed354397c0a02b57adbe8d8392a8b",
          "message": "ci(l2): use build-push-action to build L1 dev docker image (#3357)\n\n**Motivation**\n\nuse official\n[build-push-action](https://github.com/docker/build-push-action)",
          "timestamp": "2025-06-30T14:03:04Z",
          "tree_id": "34ce27d88d8e5c5e41e2acbbd24f840ad8e44840",
          "url": "https://github.com/lambdaclass/ethrex/commit/11384d62135ed354397c0a02b57adbe8d8392a8b"
        },
        "date": 1751295720838,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211390794540,
            "range": "± 832058859",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "57b2a2b26933eebf3e878a05d1c46aa7a898fd0c",
          "message": "fix(l2): remove requests processing in build_payload (#3300)\n\n**Motivation**\n\nWhen producing a block in L2 mode, we unnecessarily call\n`blockchain::extract_requests`, even though no requests are being\ngenerated.\n\n**Description**\n\n- Refactors `PayloadBuildContext` to store `requests:\nOption<Vec<EncodedRequests>>` and calculates the `request_hash` directly\nin `finalize_payload`.\n- Removes the `blockchain::extract_requests` call from\n`payload_builder`.\n\n\nCloses None",
          "timestamp": "2025-06-30T14:18:21Z",
          "tree_id": "bac5bdc1fbd5ae7e0f729563d2de21a7df9e4ff5",
          "url": "https://github.com/lambdaclass/ethrex/commit/57b2a2b26933eebf3e878a05d1c46aa7a898fd0c"
        },
        "date": 1751296654173,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210921941993,
            "range": "± 595466263",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "128638963+santiago-MV@users.noreply.github.com",
            "name": "santiago-MV",
            "username": "santiago-MV"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2ebb67cf51f137c75f26bdfa66540f5ea8835d6e",
          "message": "chore(l1,l2): reorder fixtures (#3155)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nThe `tests_data` folder was unorganized \n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nCreated a `fixtures` folder inside of test data with a folder for each\ntype of file.\nThe current structure looks like this:\n```\nfixtures/\n├── genesis/                    # All genesis files\n│   └── *.json\n│   \n├── network/                    # Network configuration\n│   ├── params.yaml\n│   └── hive_clients\n|       └── *.yml\n|\n├── contracts/                  # Smart contracts for testing\n│   ├── ERC20/\n│   │   ├── ERC20.sol\n│   │   ├── ERC20.bin\n│   │   |   └── TestToken.bin\n│   │   └── deps.sol\n│   ├── load-test/\n│   |   └── IOHeavyContract.sol\n|   └──levm_print\n|        └── Print.sol\n|\n├── blockchain/                 # Blockchain data files\n│   └── *.rlp\n|\n├── blobs/                      # BLOB files\n│   └── *.blob\n|\n├── keys/                       # Private keys for testing\n│   ├── private_keys.txt\n│   └── private_keys_l1.txt\n|\n├── cache/                      # Cached data\n│   └── rpc_prover/\n│       └── cache_3990967.json\n|\n└── rsp/                       \n    └── input/\n        └── 1/\n             └── 21272632.bin\n ```\nAll references were updated to avoid breaking the code\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3006\n\n---------\n\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-06-30T15:33:31Z",
          "tree_id": "d4cc7189a817b84df69f40c674589bbf9ad8a4d8",
          "url": "https://github.com/lambdaclass/ethrex/commit/2ebb67cf51f137c75f26bdfa66540f5ea8835d6e"
        },
        "date": 1751301102039,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 207736713004,
            "range": "± 411989142",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bc56f4764a782fd952a56308dd8e28c41a190a83",
          "message": "feat(l2): verify batches in chunks with aligned (#3242)\n\n**Motivation**\n\nAligned verifies proofs in batches, so it's possible to have an array of\nproofs ready to be verified at once.\n\n**Description**\n\n- Modifies `l1_proof_verifier` to check all already aggregated proofs\nand build a single verify transaction for them.\n- Updates `verifyBatchAligned()` in the `OnChainProposer` contract to\naccept an array of proofs.\n\n> [!WARNING]\n> #3276 was accidentally merged into this PR, so the diff includes\nchanges from both.\n\nCloses #3168\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-06-30T15:34:32Z",
          "tree_id": "8a028358cc3b77a2e6c4a4e70df7faef6669dded",
          "url": "https://github.com/lambdaclass/ethrex/commit/bc56f4764a782fd952a56308dd8e28c41a190a83"
        },
        "date": 1751301147543,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210495960759,
            "range": "± 808046138",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b8dffc6936af6669927bb1657f19fb6756dabf13",
          "message": "fix(l2): parse default value correctly (#3317)\n\n**Description**\n\nThis PR fixes a panic we had when the user didn't specify any of the\n`proof-coordinator.*` flags. It seems clap called the `Default::default`\nimplementation, which panicked because of the parsing not having support\nfor leading `0x`.\n\nCloses #3309",
          "timestamp": "2025-06-30T17:01:49Z",
          "tree_id": "a1dd4d6768884e79ec22aa6bf5dc3a80898432a5",
          "url": "https://github.com/lambdaclass/ethrex/commit/b8dffc6936af6669927bb1657f19fb6756dabf13"
        },
        "date": 1751306441073,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209701210784,
            "range": "± 390615335",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6e15e05062457168e668c3bd58f9c7cc4017f3f4",
          "message": "docs(l2): document ETH and ERC20 deposits/withdrawals (#3223)\n\n**Description**\n\nThis PR updates the withdrawals documentation with native ERC20\nwithdrawals and adds documentation for L2 deposits.\n\n---------\n\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-06-30T17:06:43Z",
          "tree_id": "55ba012f1c1de7304da9e0753767a034e0176a79",
          "url": "https://github.com/lambdaclass/ethrex/commit/6e15e05062457168e668c3bd58f9c7cc4017f3f4"
        },
        "date": 1751306798098,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209338782689,
            "range": "± 392301260",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "damian.ramirez@lambdaclass.com",
            "name": "Damian Ramirez",
            "username": "damiramirez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f32b20294993af9eb01f152ff1861ce17bad180e",
          "message": "docs(core): add LaTex support (#3398)\n\n**Motivation**\n\nhttps://docs.ethrex.xyz/, isn't rendering LaTex expression \n\n**Description**\n\nThis PR adds the [mdbook-katex](https://github.com/lzanini/mdbook-katex)\npreprocessor to `book.toml` to enable LaTeX rendering.\n\nRun the following command to check how the documentation looks\n\n```bash\nmake docs-deps && make docs-serve\n```\n\n**Before**\n\n![image](https://github.com/user-attachments/assets/393cf3f8-bd4a-455a-bba0-4e46cc4e42f0)\n\n**After**\n\n![image](https://github.com/user-attachments/assets/8e6954ad-9050-4161-ada2-2f3d0e13a804)",
          "timestamp": "2025-06-30T18:04:46Z",
          "tree_id": "f67ea03499eb83538e48885b04d35ce1c113c2a4",
          "url": "https://github.com/lambdaclass/ethrex/commit/f32b20294993af9eb01f152ff1861ce17bad180e"
        },
        "date": 1751310159777,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209322451102,
            "range": "± 729403895",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8795e325f112d967cee60b965d64a6945dec068f",
          "message": "fix(l2): based CI (#3404)\n\n**Motivation**\n\nIn #3242, `verifyBatchesAligned()` was updated in the based\n`OnChainProposer` to be consistent with the non-based one, but the\n`onlySequencer` identifier was added by mistake.\n\n**Description**\n\nRemoves the `onlySequencer` identifier.\n\nCloses None",
          "timestamp": "2025-06-30T18:11:54Z",
          "tree_id": "7c28ebcd53dded82020376b2a62d37f3caba2597",
          "url": "https://github.com/lambdaclass/ethrex/commit/8795e325f112d967cee60b965d64a6945dec068f"
        },
        "date": 1751310787973,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209706714945,
            "range": "± 441054948",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3d375136a47d1e74bfe5db3ad5e21fd3481c3e55",
          "message": "feat(l2): implement ERC20 bridge (#3241)\n\n**Motivation**\n\nWe want to be able to bridge ERC20 tokens.\n\n**Description**\n\nThe inner workings are explained on #3223\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Manuel Iñaki Bilbao <manuel.bilbao@lambdaclass.com>",
          "timestamp": "2025-06-30T19:19:40Z",
          "tree_id": "7b4fb4915fb461d10b28a55ed7755a3c5f692e1d",
          "url": "https://github.com/lambdaclass/ethrex/commit/3d375136a47d1e74bfe5db3ad5e21fd3481c3e55"
        },
        "date": 1751314853812,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211730397039,
            "range": "± 580301151",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cae5580655068ccad5aa3e5d1fdf357a459c384",
          "message": "feat(l2): add instance info to Grafana alerts (#3333)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nWe need to easily differentiate between environments when alerts come up\n(staging-1, staging-2, etc.).\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nAdd an \"$INSTANCE\" variable in the Slack contact point so it's\nover-ridden with an env var.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-06-30T19:52:03Z",
          "tree_id": "b2e3209043911fd5929de4a4ebf5af80232542d8",
          "url": "https://github.com/lambdaclass/ethrex/commit/0cae5580655068ccad5aa3e5d1fdf357a459c384"
        },
        "date": 1751316615591,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 208263508263,
            "range": "± 1490572123",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "68f360fc345e8064a67f266c68c00e7439db961b",
          "message": "feat(l2): exchange commit hash in node-prover communication (#3339)\n\n**Motivation**\n\nWe want to prevent a divergence between the code that is running in the\nL2 node and the prover.\n\n**Description**\n\n- Updates the client version to use `GIT_BRANCH` and `GIT_SHA` instead\nof `RUSTC_COMMIT_HASH`.\n- Adds a `build.rs` script for both the node and prover, using\n`vergen_git2` to export the git env vars.\n- Adds a `code_version` field to the `BatchRequest` message.\n- Introduces a new `ProofData` message: `InvalidCodeVersion`.\n\n## How to test\n\nYou can create an empty commit with:\n\n```bash\ngit commit --allow-empty -m \"empty commit\"\n```\n\nThen run the node and the prover using different commits.\n\n> [!WARNING]\n> Remember to run `make build-prover` whenever you change the commit\n\nCloses #3311",
          "timestamp": "2025-06-30T20:59:41Z",
          "tree_id": "d5078c5b0bbbe506fab9ce26a087572ff05c0971",
          "url": "https://github.com/lambdaclass/ethrex/commit/68f360fc345e8064a67f266c68c00e7439db961b"
        },
        "date": 1751320681708,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 207836514670,
            "range": "± 617500350",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "48cfb26ddd8e60f63b9c5bcc5dee86243c2ae9d4",
          "message": "ci(core): fix block benchmark ci",
          "timestamp": "2025-07-04T13:47:37Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3484/commits/48cfb26ddd8e60f63b9c5bcc5dee86243c2ae9d4"
        },
        "date": 1751639842256,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 208719291147,
            "range": "± 361376477",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ccfc231b5756c045b2d55febbb796ea63877d56a",
          "message": "ci(core): fix block benchmark ci (#3484)\n\n**Motivation**\n\nIts broken :(\n\n**Description**\n\n- The file `genesis-perf-ci.json` was moved and the reference was not\nupdated. This PR updates the reference\n- Here is a failing run in main\nhttps://github.com/lambdaclass/ethrex/actions/runs/16075239686/job/45368784296\n- Here is a test run in this pr that didn't panic when reading the file\nhttps://github.com/lambdaclass/ethrex/actions/runs/16075285386/job/45368928205.\n   - The run was cut short because it takes 40+ minutes to run",
          "timestamp": "2025-07-04T14:33:11Z",
          "tree_id": "98ae5f4311797a75c27363ff9b6ddb9d43b49a04",
          "url": "https://github.com/lambdaclass/ethrex/commit/ccfc231b5756c045b2d55febbb796ea63877d56a"
        },
        "date": 1751643223543,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 208748164326,
            "range": "± 306672263",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5abf85df328b22d2674a321d30a89dae033b01f6",
          "message": "fix(l2): gas used in replay block range (#3483)\n\n**Motivation**\n\nThe `gas_used` value in block range execution/proving was incorrect. We\nwere returning the gas used by only the first block.\n\n**Description**\n\n- Returns the total gas used across all blocks.\n- Also moves the `or_latest` function, as it doesn’t belong in `fetcher`\nanymore.\n\nCloses: None",
          "timestamp": "2025-07-04T14:57:07Z",
          "tree_id": "4fa8efbdb3ce22caed01d05826918a163151f9b5",
          "url": "https://github.com/lambdaclass/ethrex/commit/5abf85df328b22d2674a321d30a89dae033b01f6"
        },
        "date": 1751644676522,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 208587874888,
            "range": "± 583828328",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f6a839d10689bbf0c016dc7c486d73d485850b21",
          "message": "fix(l1): `RpcBlock` `uncles` field should have the hashes and not the block headers (#3245)\n\n**Motivation**\nFix inconsistencies between our RPC outputs and the spec.\nAccording to the spec endpoints such as `eth_getBlockByNumber` return a\nblock where the `uncles` field contains the hashes of the uncle blocks,\nwhile we return the full headers.\nThis has not been a problem for us as we have been mainly using\npost-merge blocks without uncles, but it will become a problem if we\nneed to export/import older blocks via rpc\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Change `uncles` field of `RpcBlock` from `Vec<BlockHeader>` to\n`Vec<H256`\n* (Bonus) Allow deserializing blocks without `base_fee_per_gas`\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None",
          "timestamp": "2025-07-04T15:10:19Z",
          "tree_id": "4ece4b3ae184c29396de8151f4b8a22ab0a95a0b",
          "url": "https://github.com/lambdaclass/ethrex/commit/f6a839d10689bbf0c016dc7c486d73d485850b21"
        },
        "date": 1751645487409,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209056357578,
            "range": "± 417087772",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0f0e27084645dc8fa4675a61ecfc2fe602cdcaf0",
          "message": "feat(l1): embed dev-mode genesis in binary (#3413)\n\n**Motivation**\n\nGiving the user a default dev-mode genesis block makes starting out with\n`ethrex` easy.\n\n**Description**\n\nThis PR:\n\n- Adds a new network option (`Network::LocalDevnet`).\n- Default to the new network when `--dev` is specified but no custom\nnetwork was specified.\n- Remove the genesis downloading step from install script.\n- Update the readme to reflect that no genesis file needs to be\nspecified; ethrex comes with batteries included 🦖\n\nCloses #3378",
          "timestamp": "2025-07-04T16:00:11Z",
          "tree_id": "2185d63d0fde7445a38117dbcc9e0c2398c6e0d1",
          "url": "https://github.com/lambdaclass/ethrex/commit/0f0e27084645dc8fa4675a61ecfc2fe602cdcaf0"
        },
        "date": 1751648437404,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209286317190,
            "range": "± 1508328942",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0c4beceb320f47a1223674cf95ba19b9e204006f",
          "message": "chore(l2): remove leftover l2 feature flag references (#3488)\n\n**Motivation**\n\nThe `make rm-db-l2` command was broken due to a leftover reference to\nthe removed `l2` feature flag. This PR also removes a few other outdated\nreferences.\n\nCloses: None",
          "timestamp": "2025-07-04T18:19:40Z",
          "tree_id": "73a90b78b8de44e830d79f9a0b4d6f7c9f2202e0",
          "url": "https://github.com/lambdaclass/ethrex/commit/0c4beceb320f47a1223674cf95ba19b9e204006f"
        },
        "date": 1751656799028,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 208752795777,
            "range": "± 512499926",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9d4d6b4766c238e7f11ac98dc450eb49691e4069",
          "message": "ci(core): create release when pushing a semver tag  (#3431)\n\n**Motivation**\n\nCreate an ethrex release when a semver tag is pushed to the repo\n\n**Description**\n\n- Modifies already existing L2 releases workflow to build \n- For `ethrex client` (right now only for L2 but can be used for both L1\nand L2 after #3381 is merged )\n     - Build for `linux-x86_64` , `linux-arm64`, `macos-arm64`\n  - For `ethrex prover client`\n    - For `exec` mode\n       - Build for `linux-x86_64` `linux-arm64` and `macos-arm64`\n     - For `sp1 gpu` mode \n         - Build for `linux-x86_64` `linux-arm64`\n     - For `risc0 gpu` mode\n        - Build for `linux-x86_64`\n - For `ethrex replay`\n    - For `exec` mode\n       - Build for `linux-x86_64` `linux-arm64` and `macos-arm64`\n     - For `sp1 gpu` mode \n         - Build for `linux-x86_64` `linux-arm64`\n     - For `risc0 gpu` mode\n        - Build for `linux-x86_64`\n  - Creates a release with\n- Changelog from all the changes between the previous tag and the newly\ncreated one.\n- All the built binaries and the rollup L1 and L2 contracts in a tar\narchive\n- Example from testing repo\nhttps://github.com/LeanSerra/ethrex/releases/tag/v0.0.7-rc.1 before\nadding the contracts to the release output\n- Another example with the contracts\nhttps://github.com/LeanSerra/ethrex/releases/tag/v0.0.7-rc.2\n- Example of all outputs\nhttps://github.com/lambdaclass/ethrex/actions/runs/16077779945\n- Non related change: pin the version for the docker image in sp1 \n- With #3381 merged we now build ethrex with --all-features so the\ndefault database was changed to libmdbx when initializing the store.\n**Other considerations**\n\n> Q: No sp1 cpu?\n> A: Right now it's too slow to be viable in production environments\n\n> Q: No sp1 macos?\n> A: sp1 does not support the metal api for gpu acceleration. Also\nbecause zkvms are built using docker we'll run into a problem where the\nmacos github runner does not have docker installed.\n> After a quick investigation into this issue we have to use\n[colima](https://github.com/actions/runner/issues/1456#issuecomment-1676495453)\nfor docker.\n> This leads into another issue where sp1 uses a docker image built only\nfor amd64 this requires nested virtualization support that is enabled in\napple M3 chips or later but [the runner is currently using M1\nchips](https://docs.github.com/en/actions/concepts/runners/about-larger-runners#limitations-for-macos-larger-runners).\n\n> Q: Why does building the sp1 prover for\n[arm-64](https://github.com/LeanSerra/ethrex/actions/runs/16010958409/job/45168455867)\ntake twice as long as building for\n[x86-64](https://github.com/LeanSerra/ethrex/actions/runs/16010958409/job/45168455854)\n> A: We have to use QEMU inside the `arm-64` runner because the sp1\ndocker image is only built for `amd64`\n\n> Q: wen risc0\n> A: ~After #3172 is merged~\n[Now](https://github.com/lambdaclass/ethrex/actions/runs/16036016678/job/45247866997)",
          "timestamp": "2025-07-04T19:07:17Z",
          "tree_id": "7866af3a86be0f74b5fd91ce7bfb3795eb4edc2d",
          "url": "https://github.com/lambdaclass/ethrex/commit/9d4d6b4766c238e7f11ac98dc450eb49691e4069"
        },
        "date": 1751659682724,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 208049843480,
            "range": "± 211691326",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pdeymon@fi.uba.ar",
            "name": "Pablo Deymonnaz",
            "username": "pablodeymo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "17f3b4be3480414759727a6a485e409dcf645a1a",
          "message": "chore(levm): improve beacon_root_contract_call readibility (#3490)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-04T19:15:47Z",
          "tree_id": "f2e3c9c9f5b13e9b9b00aba525f45c58d252f288",
          "url": "https://github.com/lambdaclass/ethrex/commit/17f3b4be3480414759727a6a485e409dcf645a1a"
        },
        "date": 1751660227885,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211999012884,
            "range": "± 1788137684",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "89949621+ricomateo@users.noreply.github.com",
            "name": "Mateo Rico",
            "username": "ricomateo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "516cc4dcd68616f2e61c988e23e91aa59ffc2f93",
          "message": "refactor(levm): give more details in `TxValidationError` (#3408)\n\n**Motivation**\nFrom #3062 \n> When validating a transaction it would be useful for the LEVM user to\nknow more details about why a transaction didn't pass the initial\nvalidations.\nThis involves changing errors inside of `TxValidationError` enum.\n\n**Description**\nThis PR adds more detail to some of the `TxValidationError` error types.\nIt also introduces the following changes:\n* Updates the error messages in the `ef_tests` deserializer.\n* Adds a regex to match the new error format in the `ef_tests` runner.\nThis is required since the deserialized messages do not include the\nnewly added details, so we need to ignore those details and ensure the\nmatch still succeeds.\n\n> [!CAUTION]\n> Do not merge until [the PR to\nexecution-spec-tests](https://github.com/ethereum/execution-spec-tests/pull/1832)\nhas been merged.\n\nCloses #3062\n\n---------\n\nCo-authored-by: JereSalo <jeresalo17@gmail.com>\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>",
          "timestamp": "2025-07-05T18:32:29Z",
          "tree_id": "1e946722ffcf6cf6e1d1641533fffada47d8a2cb",
          "url": "https://github.com/lambdaclass/ethrex/commit/516cc4dcd68616f2e61c988e23e91aa59ffc2f93"
        },
        "date": 1751743947164,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209748175258,
            "range": "± 659747660",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49622509+jrchatruc@users.noreply.github.com",
            "name": "Javier Rodríguez Chatruc",
            "username": "jrchatruc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3e35ab5aede958a262917a7dff1b8396e3806748",
          "message": "ci(l2): comment out slack notification on risc0 replay job because of timeouts (#3501)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-05T18:38:43Z",
          "tree_id": "203c1a0437ad879a6a411e6e2e75027f22d5ce4a",
          "url": "https://github.com/lambdaclass/ethrex/commit/3e35ab5aede958a262917a7dff1b8396e3806748"
        },
        "date": 1751744442928,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210146635681,
            "range": "± 482304169",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7269b9392bd5d2b091bc3c389e1a69bcb6f9363d",
          "message": "fix(l2): rename field  `from` of `PrivilegeL2Transaction` for serialization (#3487)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\nThe field `from` of the struct `PrivilegeL2Transaction` overlaps with\nthe field `from` of\n[`RpcTransaction`](https://github.com/lambdaclass/ethrex/blob/main/crates/networking/rpc/types/transaction.rs#L15)\nduring serialization (because the field `tx` is flattened by `serde`),\nmaking `RpcTransaction` deserializations invalid for\n`PrivilegeL2Transaction`s.\n\n**Description**\n\nRenames the field `from` of `PrivilegeL2Transaction` (only for\nserialization and deserializations) to fix the deserializations of\n`RpcTransaction`s of `PrivilegeL2Transaction`.",
          "timestamp": "2025-07-07T15:36:46Z",
          "tree_id": "e34179340ff84d4864b691398227ec1f130791e7",
          "url": "https://github.com/lambdaclass/ethrex/commit/7269b9392bd5d2b091bc3c389e1a69bcb6f9363d"
        },
        "date": 1751906465930,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209081240138,
            "range": "± 841121534",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b08fa01cfcefc97428d5d9872aca7a7637dab6c3",
          "message": "fix(l2): revert to rust 1.87 (#3506)\n\n**Motivation**\n\nThe SP1 and RISC0 workflows are broken because they don't yet support\nRust 1.88.\n\n**Description**\n\nReverts the Rust version to 1.87.\n\n\nCloses None",
          "timestamp": "2025-07-07T16:02:04Z",
          "tree_id": "8ec748de442339ffc840eb543717650bdc405e65",
          "url": "https://github.com/lambdaclass/ethrex/commit/b08fa01cfcefc97428d5d9872aca7a7637dab6c3"
        },
        "date": 1751907856527,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210537404199,
            "range": "± 519479005",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c63bbd7db56b60c495b03a675261db440d1ad7a2",
          "message": "feat(l1): archive sync (#3161)\n\n**Motivation**\nDownload the full state of a given block from an archive node. This will\nenable us to do full sync on mainnet starting from a post-merge block\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3115",
          "timestamp": "2025-07-07T16:37:29Z",
          "tree_id": "6e5c1ac8be1f20fd8a6f87389ab2d52287ed7e2f",
          "url": "https://github.com/lambdaclass/ethrex/commit/c63bbd7db56b60c495b03a675261db440d1ad7a2"
        },
        "date": 1751909976761,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209357020765,
            "range": "± 270475993",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49622509+jrchatruc@users.noreply.github.com",
            "name": "Javier Rodríguez Chatruc",
            "username": "jrchatruc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0637f3734e69a5c0fcdf1d972f7cebc0e55c04d5",
          "message": "ci(l2): make pr-main_l2_prover a required workflow (#3517)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-07T19:38:19Z",
          "tree_id": "2c235cd71be64af005ff264c24fdb0e2066757ff",
          "url": "https://github.com/lambdaclass/ethrex/commit/0637f3734e69a5c0fcdf1d972f7cebc0e55c04d5"
        },
        "date": 1751920825614,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211005059942,
            "range": "± 1189327693",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ed8e61f04e5bed2f3b496da710b6c4524f1b661d",
          "message": "fix(l1): metrics exporter dashboard total peer count panel (#3470)\n\n**Motivation**\n\nEthereum Metrics Exporter dashboard is showing no peers when running a\nsync, as described in the issue #3104.\n\n**Description**\n\nThis pr fixes the rpc call handler for net_peerCount as described\n[here](https://ethereum.org/en/developers/docs/apis/json-rpc/#net_peercount).\n\nIt also introduces a new function for `PeerHandler` to access the\nconnected peers so the rpc call handler can get the amount.\n\nHere you can see how the panel looks like now:\n<img width=\"1425\" alt=\"Screenshot 2025-07-03 at 13 29 57\"\nsrc=\"https://github.com/user-attachments/assets/89c699a8-72bb-4a42-918a-c9e3ea6d3036\"\n/>\n\nTo run this you can go to tooling/sync and run make\nstart_hoodi_metrics_docker, then go to http://localhost:3001/ to see the\npanels.\n\nCloses #3468\n\n---------\n\nCo-authored-by: fmoletta <99273364+fmoletta@users.noreply.github.com>",
          "timestamp": "2025-07-07T19:39:22Z",
          "tree_id": "2664be10e47fd8ab522ad28be25f8e3c412498a1",
          "url": "https://github.com/lambdaclass/ethrex/commit/ed8e61f04e5bed2f3b496da710b6c4524f1b661d"
        },
        "date": 1751920880367,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 213072174755,
            "range": "± 995884438",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e141e1004a011bffd5d2f754c8d64c9efd770c8d",
          "message": "chore(l2): add ERC20 failed deposit integration test (#3547)\n\n**Motivation**\n\nWe want to ensure if a deposit fails, the funds won't be lost.\n\n**Description**\n\nAdds an integration test for ERC20 failed deposit turning into a\nwithdrawal.\n\nCloses #3990",
          "timestamp": "2025-07-08T15:28:54Z",
          "tree_id": "268aed2a136e9b2adf6d415b9a552fbcc01491bd",
          "url": "https://github.com/lambdaclass/ethrex/commit/e141e1004a011bffd5d2f754c8d64c9efd770c8d"
        },
        "date": 1751992172463,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209863930802,
            "range": "± 570359218",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "752c20b5552cceab1ed2959488929639a96a8661",
          "message": "fix(l1,l2): eth client send blobs when calling eth_estimateGas  (#3540)\n\n**Motivation**\n\nWhen calling eth_estimateGas to estimate the gas for the L2 commitment\nthe call was reverting because the blob was not included in the call\n\n**Description**\n\n- Add a function to add the blobs to a GenericTransaction\n- Add the field \"blobs\" to the request if the blobs field is not empty\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>",
          "timestamp": "2025-07-08T16:32:38Z",
          "tree_id": "ca06e38d7ee9df3793f6335ef93231ecdfdd30c3",
          "url": "https://github.com/lambdaclass/ethrex/commit/752c20b5552cceab1ed2959488929639a96a8661"
        },
        "date": 1751995996512,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209527821851,
            "range": "± 527992986",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d1ceb86cb32f8949ecd3fc279084f6921c3e757f",
          "message": "fix(l1): ignore unknown protocols in capability exchange (#3543)\n\n**Motivation**\n\nFailing due to a peer having extra capabilities can make us lose\nexceptional peers. Hence, we want to ignore any extra capabilities they\nhave.\n\n**Description**\n\nThis PR changes `Capability.protocol` to be an 8-byte array instead of a\nstring, allowing us to store any string we receive.",
          "timestamp": "2025-07-08T17:12:21Z",
          "tree_id": "b73d081e492be3f36630c76381bba95066e5b585",
          "url": "https://github.com/lambdaclass/ethrex/commit/d1ceb86cb32f8949ecd3fc279084f6921c3e757f"
        },
        "date": 1751998569223,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209724867206,
            "range": "± 374609234",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "89949621+ricomateo@users.noreply.github.com",
            "name": "Mateo Rico",
            "username": "ricomateo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "715c2bbe2c6d139bb938ea87c6aa1a07ade060d6",
          "message": "refactor(levm): change returned error types to `InternalError` (#3322)\n\n**Motivation**\nFrom [#3063](https://github.com/lambdaclass/ethrex/issues/3063)\n\n> There are various cases in which we return an error with the\nExceptionalHalt type but they actually are InternalErrors, things that\nshouldn't ever happen and if they happen they should break.\nThis is not a critical issue since if the VM is working fine then it\nwon't ever enter to those cases, but it would be more precise if we\ncatalogued those errors as internals instead of saying that they revert\nexecution when they don't.\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\nIntroduces the following changes:\n* Replaces `PrecompileError` with `InternalError` in those cases in\nwhich an error is returned even though is not possible for the\ninstruction to fail, typically when slicing bytes whose size have been\nalready checked.\n* Removes the error types `EvaluationError` and `DefaultError` (which\nwere quite generic) from `PrecompileError` and adds specific and more\ndescriptive error types instead (`InvalidPoint`, `PointNotInTheCurve`,\netc).\n* Removes the `PrecompileError::GasConsumedOverflow` error type.\n\n\n\nCloses #3063\n\n---------\n\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-07-08T17:26:31Z",
          "tree_id": "6b8f7bd82899863be607fc39c39df00c6ebac941",
          "url": "https://github.com/lambdaclass/ethrex/commit/715c2bbe2c6d139bb938ea87c6aa1a07ade060d6"
        },
        "date": 1751999374747,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209830786007,
            "range": "± 763501282",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "53546f4e280e333ad80df31355bd1fc887991d10",
          "message": "fix(l1): abort `show_state_sync_progress` task  (#3406)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nThe `show_state_sync_progress` task used to run until all\n`state_sync_segment` tasks had signaled their conclusion via\n`end_segment` method. This could cause the task to hand indeterminately\nif one of the tasks failed. This PR aims to fix this by removing the\nresponsibility of signaling their end from `state_sync_segment` and\ninstead have `state_sync` method (the one that launched both\n`show_state_sync_progress` & the `state_sync_segment` tasks) be the one\nto end the `show_state_sync_progress` task via an abort\n**Description**\n* Remove method `StateSyncProgress::end_segment` & associated field\n* `show_state_sync_progress` is now an endless task\n* `state_sync` now aborts `show_state_sync_progress` when no longer\nneeded instead of waiting for it to finish\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-07-08T18:11:03Z",
          "tree_id": "db56a77d681fdf0503b3de056d2867e86bc95061",
          "url": "https://github.com/lambdaclass/ethrex/commit/53546f4e280e333ad80df31355bd1fc887991d10"
        },
        "date": 1752001949707,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211284593952,
            "range": "± 1287981424",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c15c01ae92a2f736614192f65d1884539d9e6ed5",
          "message": "ci(l1,l2): remove `core` scope and improve PR labeling workflow (#3561)\n\n**Motivation**\n\n- Declutter `ethrex_l1` project and remove ambiguous `core` scope in\ntitle.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- Remove core scope because it is ambiguous. Replace it with `l1,l2`\n- Merge `pr_author.yaml` and `pr_label.yaml` into one file\n`pr_github_metadata.yaml`\n- Change rules of labeling because of preferences in our projects:\n- `ethrex_performance`: Will have PRs that have `perf` at the beginning\nof the title.\n  - `ethrex_l2`: Will have any PR that has in the title scope `l2`\n- `ethrex_l1`: Will have PRs that haven't been assigned to\n`ethrex_performance` or `ethrex_l2` that have `l1` or `levm` in their\ntitle.\n\nThe decisions were made according to the preferences of each team.\n`ethrex_l2` project will have anything that has to do with the L2\n`ethrex_l1` project will have things that touch only l1 stuff and\nnothing else so that we assure they truly belong to this project. Some\nPRs will be filtered out and will have to be added manually, but we\nprefer that rather over the clutter of having more PRs than necessary.\n\nCloses #3565",
          "timestamp": "2025-07-08T18:18:32Z",
          "tree_id": "40bae128432e6ab09b6688b548bf5e4f8870f8aa",
          "url": "https://github.com/lambdaclass/ethrex/commit/c15c01ae92a2f736614192f65d1884539d9e6ed5"
        },
        "date": 1752002363167,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 207854312627,
            "range": "± 297757431",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5a14d806d0c84aef0266de503cbd451cab599d8b",
          "message": "feat(l2): add L1From field to privileged transaction events (#3477)\n\n**Motivation**\n\nAs described on #3452, it is convenient for client applications to be\nable to search their sent privileged transactions.\n\n**Description**\n\nThis PR drops indexing from all PrivilegedTxSent fields and adds an\nindexed L1From member.\n \nCloses #3452\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-07-08T19:04:41Z",
          "tree_id": "54d832d221764ef90884589a6bd5db81bd0fed13",
          "url": "https://github.com/lambdaclass/ethrex/commit/5a14d806d0c84aef0266de503cbd451cab599d8b"
        },
        "date": 1752005173013,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209060859420,
            "range": "± 509584808",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f07af68346980f2762f0a71cf0de7ba87c49642b",
          "message": "fix(l2): use github token to avoid rate limit (#3570)\n\n**Motivation**\n\nOur CI is failing at the `Install solc` step in almost all jobs due to a\n`rate limit` error.\n\n**Description**\n\nAuthenticates using a GitHub token to bypass the rate limit.\n\nCloses None",
          "timestamp": "2025-07-08T21:31:57Z",
          "tree_id": "9d743d53d18ef3e1cedc95540f53d0513e1d1176",
          "url": "https://github.com/lambdaclass/ethrex/commit/f07af68346980f2762f0a71cf0de7ba87c49642b"
        },
        "date": 1752013948690,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209254002792,
            "range": "± 621219268",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8aa44c11650df469a2a89d215c9791da67403a4b",
          "message": "ci(l1): comment flaky devp2p test BasicFindnode (#3542)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nThis test fails very occasionally, here are a few runs in which it\nhappened:\n-\nhttps://github.com/lambdaclass/ethrex/actions/runs/16125250426/job/45501078767\n-\nhttps://github.com/lambdaclass/ethrex/actions/runs/16126040468/job/45503603345\n-\nhttps://github.com/lambdaclass/ethrex/actions/runs/16120603086/job/45485976155\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3549",
          "timestamp": "2025-07-08T23:18:40Z",
          "tree_id": "61b413b67618e34b836f1dc72f2729db6fd4c0da",
          "url": "https://github.com/lambdaclass/ethrex/commit/8aa44c11650df469a2a89d215c9791da67403a4b"
        },
        "date": 1752020473541,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209372926820,
            "range": "± 593704898",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "09dd2a27634849d96d500da4042781d1d4596a12",
          "message": "fix(l1): metrics exporter sync status, percent, distance and rate panels (#3456)\n\n**Motivation**\n\nEthereum Metrics Exporter is showing incorrect data for the sync status,\nsync percent, sync distance and sync rate panels when running a sync, as\ndescribed in the issue #3104.\n\n**Description**\n\nThis pr fixes the rpc call handler for eth_syncing as described\n[here](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_syncing).\n\nHere you can see how the panels look like up to now:\n<img width=\"1429\" alt=\"Screenshot 2025-07-03 at 11 25 57\"\nsrc=\"https://github.com/user-attachments/assets/22646c5d-1ab8-4687-be66-56d2d8eb3fc3\"\n/>\n\nTo run this you can go to tooling/sync and run `make\nstart_hoodi_metrics_docker`, then go to http://localhost:3001/ to see\nthe panels.\n\nCloses #3325 and closes #3455",
          "timestamp": "2025-07-09T11:19:46Z",
          "tree_id": "4ca1ad3f11fa2a52a207afc9fa3c31e230ff2891",
          "url": "https://github.com/lambdaclass/ethrex/commit/09dd2a27634849d96d500da4042781d1d4596a12"
        },
        "date": 1752063722636,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 212124020997,
            "range": "± 579592183",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d454a1b2940492bb4d43e1643f2ec8c97f276e46",
          "message": "perf(levm): improve sstore (#3555)\n\n**Motivation**\n\nLocally the sstore bench from\nhttps://github.com/lambdaclass/ethrex/pull/3552 goes from 2x worse to a\nbit better than revm\n\nGas benchmarks improve 2x\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-09T16:25:59Z",
          "tree_id": "36ea0d7b6740d61c8fd225e9f8c4abb054ad1e83",
          "url": "https://github.com/lambdaclass/ethrex/commit/d454a1b2940492bb4d43e1643f2ec8c97f276e46"
        },
        "date": 1752081971943,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 208948964115,
            "range": "± 409252867",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "398a10878145cbb6e1657e2360dc24a0518fbee6",
          "message": "ci(l2): use correct toolchain in nix build (#3507)\n\n**Motivation**\n\nCurrently the rust version is the one in nixpkgs, which might not follow\nour upgrades.\n\n**Description**\n\nChange the build to rely on the toolchain file on the project root.\n\n---------\n\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>\nCo-authored-by: avilagaston9 <gaston.avila@lambdaclass.com>",
          "timestamp": "2025-07-10T13:50:44Z",
          "tree_id": "f5011011b112a406ce0326b0800a05603db9ca48",
          "url": "https://github.com/lambdaclass/ethrex/commit/398a10878145cbb6e1657e2360dc24a0518fbee6"
        },
        "date": 1752159241680,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211874830502,
            "range": "± 722590930",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d396ca4b52b5ea3c69fd62a1887ada672c6930ef",
          "message": "fix(l2): avoid proving already proved batch (#3588)\n\n**Motivation**\nAvoid this situation:\n- Prover finishes proving batch n\n- Prover asks for batch to prove gets batch n again because:\n`let batch_to_verify = 1 + get_latest_sent_batch()` is still n because\nthe proof_sender dind't send the verification tx yet.\n- Verifier verifies batch n + 1\n- Prover is still proving batch n when it could start proving batch n +\n1\n\n\n**Description**\n\n- Before sending a new batch to prove check if we already have all\nneeded proofs for that batch stored in the DB in case we do send and\nempty response\n\nCloses #3545",
          "timestamp": "2025-07-10T15:51:44Z",
          "tree_id": "f17356b28dc850006c1b9694ba271d6e1128893c",
          "url": "https://github.com/lambdaclass/ethrex/commit/d396ca4b52b5ea3c69fd62a1887ada672c6930ef"
        },
        "date": 1752166385018,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210975651773,
            "range": "± 391100967",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8dac7cb1d7d71ccff299f6c9888444bc56846fdd",
          "message": "fix(l2): seal a batch in a single DB transaction  (#3554)\n\n**Motivation**\n\nWhen deploying ethrex L2 some errors came up that are related to the\nseal_batch process not being done in a single DB transaction.\n\n**Description**\n\n- Move seal_batch to the `StoreEngineRollup` trait\n- For sql rollup store engine\n- Wrap all the DB write functions from the trait with a <name>_in_tx\nthat gets as an input an Option<Transaction> in case the transaction is\nSome then it uses the existing transaction, and does not commit. If its\nNone it creates a new transaction and commits at the end of the\nfunction.\n- Modify the `SQLStore` struct to hold two instances of `Connection` one\nfor reads and one for writes, the write connection is protected by a\nMutex to enforce a maximum of 1 to prevent this error:\n      ```\nfailed because of a rollup store error: Limbo Query error: SQLite\nfailure: `cannot start a transaction within a transaction`\n      ``` \n- Use `PRAGMA journal_mode=WAL` for [better\nconcurrency](https://sqlite.org/wal.html#concurrency)\n- For `libmdbx` , `redb` and `in-memory`\n   - Implement the `seal_batch` function \n- Refactor: remove all the functions that were exposed by `store.rs` and\nwere only part of seal_batch to prevent its usage outside of batch\nsealing.\n\n\nCloses #3546",
          "timestamp": "2025-07-10T16:09:07Z",
          "tree_id": "b7b1d653a7447a46b3c6a30eae3762bc6c4962d7",
          "url": "https://github.com/lambdaclass/ethrex/commit/8dac7cb1d7d71ccff299f6c9888444bc56846fdd"
        },
        "date": 1752167413510,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 207995563180,
            "range": "± 397252186",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "dcb3c9cf5cc3072eddc35f1f2640d1a66baad894",
          "message": "perf(levm): improve blake2f  (#3503)\n\n**Motivation**\n\nCleaner code and better perfomance\n\n<!-- Why does this pull request exist? What are its goals? -->\n\nMain\n\n![image](https://github.com/user-attachments/assets/1112c9dc-7257-4c7f-a8ae-b26cc1190894)\n\npr\n\n![image](https://github.com/user-attachments/assets/7cbdbe56-98d6-41ce-bc6a-11ad18a31208)\n\n\nImproves blake2f 1 round mgas\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-10T16:31:46Z",
          "tree_id": "e34318e84d26a13bd37d346390e93cc12cae7640",
          "url": "https://github.com/lambdaclass/ethrex/commit/dcb3c9cf5cc3072eddc35f1f2640d1a66baad894"
        },
        "date": 1752168942196,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 219547089813,
            "range": "± 1040528118",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "187e8c27f9b9a22948cd82b0b3f79866c16ac489",
          "message": "chore(l2): add forced withdrawal integration test (#3541)\n\n**Motivation**\n\nWe want an integration test for forced withdrawals\n\n**Description**\n\nWithdraws through a privileged transaction.\n\nCloses #3394",
          "timestamp": "2025-07-10T18:10:57Z",
          "tree_id": "486f18735fda83de70f48ba4f654780e8515f3d9",
          "url": "https://github.com/lambdaclass/ethrex/commit/187e8c27f9b9a22948cd82b0b3f79866c16ac489"
        },
        "date": 1752174672542,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 207462387985,
            "range": "± 483507681",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9dab7c08cb8dbc86a5ae90d38faf2fc2d2c98064",
          "message": "feat(l2): monitor for ethrex L2 (#3410)\n\n**Description**\n\nThis PR introduces de ethrex monitor. A currently optional tool for node\noperators to monitor the L2 state.\n\nThe node can be monitored in two different tabs, the Overview tab and\nthe Logs tab. Both tabs have a help text line at the bottom to let know\nthe user how to interact with the current tab.\n\nThe Overview tab is composed of:\n- An ASCII ethrex logo.\n- A node status widget\n- A general chain status widget, which lists:\n    - Current batch (the batch being built by the Sequencer).\n    - Current block (the block being built by the Sequencer).\n    - Last committed batch.\n    - Last committed block.\n    - Last verified batch.\n    - Last verified block.\n- An L2 batches widget, which lists the last 50 L2 batches and their\ncurrent status, highlighting:\n    - L2 batch number.\n    - Number of blocks in the batch.\n    - Number of L2 to L1 messages in the batch.\n    - Commit tx hash (if committed).\n    - Verify tx hash (if verified).\n- An L2 blocks widget, which lists the last 50 L2 blocks, highlighting:\n    - L2 block number.\n    - Number of txs in the block.\n    - L2 block hash.\n    - L2 block coinbase (probably more relevant in based rollups).\n    - Gas consumed.\n    - Blob gas consumed.\n    - Size of the block. \n- A mempool widget, which lists the current 50 txs in the memool,\nhighlighting:\n    - Tx type (e.g. EIP1559, Privilege, etc).\n    - Tx hash.\n    - Tx sender.\n    - Tx nonce.\n- An L1 to L2 messages widget, which lists the last 50 L1 to L2 msgs and\ntheir status, highlighting:\n    - Message kind (e.g. deposit, message, etc).\n    - Message status (e.g. Processed on L2, etc).\n    - Message L1 tx hash.\n    - Message L2 tx hash\n    - Value\n- An L2 to L1 messages widget, which lists the last 50 L2 to L1 msgs and\ntheir status, highlighting:\n    - Message kind (e.g. withdrawal, message, etc).\n    - Message status (e.g. initiated, claimed, sent, delivered).\n    - Receiver on L1.\n    - Token L1 (if ERC20 withdrawal).\n    - Token L2 (if ERC20 withdrawal).\n    - L2 tx hash\n    - Value\n\nThe Logs tab shows the logs altogether or by crate. The log level could\nalso be adjusted in runtime.\n\n> [!NOTE]\n> 1. This feature is introduced as optional for now given its initial\nstate. Once mature enough, it will be default for operators.\n> 2. This initial version has some minor known flaws, but they were\nskipped in this PR on purpose:\n>     - #3512 .\n>     - #3513.\n>     - #3514.\n>     - #3515.\n>     - #3516.\n>     - No optimizations were done.\n\n**How to test**\n\n1. Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n2. Run a Sequencer (I suggest `make restart` in `crates/l2`).\n3. Run the prover with `make init-prover` in `crates/l2`.\n4. Run `make test` in `crates/l2`.\n\n**Showcase**\n\n*Overview*\n\n<img width=\"1512\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/0431b1f3-1a8f-49cf-9519-413ea3d3ed1a\"\n/>\n\n*Logs*\n\n<img width=\"1512\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/e0e6cdd7-1f8d-4278-8619-475cfaa14d4b\"\n/>",
          "timestamp": "2025-07-10T18:51:42Z",
          "tree_id": "e9c5ec2c406ad35b66a6b0943014497ccfe76e3b",
          "url": "https://github.com/lambdaclass/ethrex/commit/9dab7c08cb8dbc86a5ae90d38faf2fc2d2c98064"
        },
        "date": 1752177208715,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 208169108689,
            "range": "± 933679142",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f466fb8216f85442d763a8ed6a10a36f05e8c93f",
          "message": "feat(l2): proxied l2 system contracts (#3421)\n\n**Motivation**\n\nWe want to be able to upgrade L2 system contracts.\n\n**Description**\n\nThis makes it so that the L2 contracts themselves are proxies. Their\ninitial implementations are kept in the genesis for ease of deployment\nand to avoid keeping them empty in the first blocks.\n\nSince the proxies need to be embedded in the genesis, they can't be\ndeployed with a constructor, so their\n[ERC-1967](https://eips.ethereum.org/EIPS/eip-1967) slots are set\ndirectly.\n\nA function is added to the L1 CommonBridge to allow upgrading the L2\ncontracts. A special address (0xf000) is used to authenticate the\nupgrade.\n\nCloses #3345",
          "timestamp": "2025-07-11T12:27:27Z",
          "tree_id": "5da2a6cdd7e6ca4748dd0f07fac5768e8cfe3540",
          "url": "https://github.com/lambdaclass/ethrex/commit/f466fb8216f85442d763a8ed6a10a36f05e8c93f"
        },
        "date": 1752240560916,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 207065743006,
            "range": "± 451079847",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "fa4246853cf52292fce47ca6cb405e538adee68c",
          "message": "ci(l1, l2): create reusable step to install rust (#3591)\n\nContinuation of https://github.com/lambdaclass/ethrex/pull/3318\n\n**Motivation**\n\nGitHub Variables are excluded from workflow runs triggered by PRs from\nforks, so we need to remove this variable dependency in order for\nexternal collaborators to send PRs and run the CI properly\n\n**Description**\n\n* The `Extract Rust version from rust-toolchain.toml` step (`id:\nrustver`) uses `grep` and `sed` to extract the rust version from the\n`rust-toolchain.toml` file that is in the root of the repository.\n* The `Install Rust` step utilizes the output of the previous step to\nsend the version to the `toolchain` parameter\n* Note that in some cases, I had to move the `Checkout` step further up\n(it's also good practice to put it as high up as possible) so the\n`rust-toolchain.toml` file is available to be read.\n\n---------\n\nCo-authored-by: Klaus Lungwitz <klaus.lungwitz@lambdaclass.com>\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>",
          "timestamp": "2025-07-11T13:02:23Z",
          "tree_id": "cc5d86727f7ab3a3c8d9b086fd654abe55abcbad",
          "url": "https://github.com/lambdaclass/ethrex/commit/fa4246853cf52292fce47ca6cb405e538adee68c"
        },
        "date": 1752242720516,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211607389389,
            "range": "± 491996718",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3ce704c7b243aadc1a332c50d92bb5699d5c80e0",
          "message": "chore(levm): upgrade levm vs revm bench  (#3557)\n\n**Motivation**\n\n- Ci generated comment is not updating.\n- Using a porcentual difference higher than 10% for showing results is\nto high.\n\n**Description**\n\nThis pr tackles two minor issues. \n\n- It modifies the bash script that puts the comment together, so the\ncomment can be found and updated by the ci.\n- It also changes the margin of error for which the benchmarks should be\nshown. Now the benchmarks are shown for a porcentual difference higher\nthan 5%, otherwise you can check all the benchmarks on the Detailed\nResults drop-down tab. This change is introduced with the intention of\nsolving issue #3462\n\n---------\n\nCo-authored-by: Edgar Luque <git@edgl.dev>",
          "timestamp": "2025-07-11T13:54:46Z",
          "tree_id": "980ba59cfc5db764c33abdc4e5cd13bc2c7a9ccc",
          "url": "https://github.com/lambdaclass/ethrex/commit/3ce704c7b243aadc1a332c50d92bb5699d5c80e0"
        },
        "date": 1752245397857,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 208177377382,
            "range": "± 575729139",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "05d3c1290649b1f3949d7376178be78fbb1cecbf",
          "message": "fix(levm): fix benchmark block execution ci (#3619)\n\n**Motivation**\n\nsee\nhttps://github.com/lambdaclass/ethrex/actions/runs/16266441472/job/45923106459?pr=3564\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-14T17:53:13Z",
          "tree_id": "7b8fbc2f30df44acf9fc51a9312de9411c4b9c87",
          "url": "https://github.com/lambdaclass/ethrex/commit/05d3c1290649b1f3949d7376178be78fbb1cecbf"
        },
        "date": 1752519287815,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 208847344258,
            "range": "± 444468116",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sfroment42@gmail.com",
            "name": "Sacha Froment",
            "username": "sfroment"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "053237663e3be3dd9eb02dbacba88d6e0ce54610",
          "message": "feat(l1): add From for Transaction -> GenericTransaction (#3227)\n\n**Motivation**\n\nAdding an easy way to get a GenericTransaction from any Transaction\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nAdding the 2 missing From and one for the enum\nThis will allow people who use the ethClient to make estimate_gas and\neth_call request, more easily and maybe other request in the future\nmight benefit from it\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n\nBTW I don't know which scope I shall use\n\nSigned-off-by: Sacha Froment <sfroment42@gmail.com>\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-07-14T18:08:45Z",
          "tree_id": "b0c6b8443312ff2002a0844abe8e0d7579e19ce8",
          "url": "https://github.com/lambdaclass/ethrex/commit/053237663e3be3dd9eb02dbacba88d6e0ce54610"
        },
        "date": 1752520320572,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 208952753552,
            "range": "± 489334814",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44068466+SDartayet@users.noreply.github.com",
            "name": "SDartayet",
            "username": "SDartayet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "318d68b1ad651c4df08ba03a8b65b27fe50adbff",
          "message": "fix(l1, l2): logs not appearing on subcommands (#3631)\n\n**Motivation**\n\nQuick bug fix that makes logs not appear\n\n**Description**\n\nThe function ```init_tracing(&opts)``` was being called after any\nsubcommands (import, export, etc) were read, causing these (specially\nthe import) not to output logs. This PR fixes that.",
          "timestamp": "2025-07-14T19:43:28Z",
          "tree_id": "21db8e93a6ae21ed8dea0b94c61966566a2010d4",
          "url": "https://github.com/lambdaclass/ethrex/commit/318d68b1ad651c4df08ba03a8b65b27fe50adbff"
        },
        "date": 1752525535836,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209780533571,
            "range": "± 422501665",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7e97d4a42213231038801327a5485b720f3dcbde",
          "message": "docs(l1): add documentation on ethereum metrics exporter use (#3538)\n\n**Motivation**\n\nWe don't have proper documentation on running the metrics introduced for\nL1 in #3061\n\n**Description**\n\nThis pr includes a quick start on how to use the new targets to display\nmetrics for running a sync on holesky or hoodi, and a more detailed\ndescription in case you want to display metrics when syncing on another\nnetwork.\n\nCloses #3207",
          "timestamp": "2025-07-14T19:58:28Z",
          "tree_id": "302f57a1d2cecd1d75639aa68bc81c9f627bc936",
          "url": "https://github.com/lambdaclass/ethrex/commit/7e97d4a42213231038801327a5485b720f3dcbde"
        },
        "date": 1752526464608,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 213163132488,
            "range": "± 612003432",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d874b90c05456847c4b0d50657916434b4600840",
          "message": "fix(levm): ignore DB storage values for destroyed accounts (#3617)\n\n**Motivation**\nWhen executing blocks in batches an account may be destroyed and created\nagain within the same batch. This can lead to errors as we might try to\nload a storage value from the DB (such as in an `SLOAD`) that doesn't\nexist in the newly created account but that used to be part of the now\ndestroyed account, leading to the incorrect value being loaded.\nThis was detected on sepolia testnet block range 3302786-3302799 where a\nan account was destructed via `SELFDESTRUCT` and then created 6 blocks\nlater via `CREATE`. The same transaction that created it then performed\nan `SSTORE` which was charged the default fee (100 gas) as the stored\nkey and value matched the ones in the previously destroyed storage\ninstead of charging the storage creation fee (2000 gas). The value was\npreviously fetched from the DB by an `SLOAD` operation.\nThis PR solves this issue by first checking if the account was destroyed\nbefore looking up a storage value in the DB (The `Store`). If an account\nwas destroyed then whatever was stored in the DB is no longer valid, so\nwe return the default value (as we would do if the key doesn't exist)\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* (`levm` crate)`GeneralizedDatabase::get_value_from_database`: check if\nthe account was destroyed before querying the DB. If the account was\ndestroyed return default value\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-14T21:39:10Z",
          "tree_id": "23f2aaec44dced688b3ec27ba5b502a6f41983e4",
          "url": "https://github.com/lambdaclass/ethrex/commit/d874b90c05456847c4b0d50657916434b4600840"
        },
        "date": 1752532453721,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210167237419,
            "range": "± 1043679222",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6de7196718fcf89781c20a190872011cabc85c99",
          "message": "fix(l2): panic because of double init tracing (#3637)\n\n**Motivation**\n\nInit L2 was panicking because of a double call to init_tracing\n\n**Description**\n\n- Move back the init tracing call to after the subcommand execution\n- Inside the subcommands call init_tracing only if the subcommand is not\n`Subcommand::L2`",
          "timestamp": "2025-07-15T13:09:19Z",
          "tree_id": "367eb56892cd70c2b727e9330f073a618c389e94",
          "url": "https://github.com/lambdaclass/ethrex/commit/6de7196718fcf89781c20a190872011cabc85c99"
        },
        "date": 1752588277813,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209776915502,
            "range": "± 1259799176",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "906de695154909601de4c10a883cc822509dc270",
          "message": "feat(l2): monitor add delay to scroll (#3616)\n\n**Motivation**\nMonitor scroll goes too fast\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nAdded a delay for the log scroll\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n**How to Test**\n\n- Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n- Run a Sequencer (I suggest `make restart` in `crates/l2`).\n- Run the prover with `make init-prover` in `crates/l2`.\n- Run `make test` in `crates/l2`.\n- Press Tab to change the Tab\n- Scroll Up and Down to test the scroll\n\nCloses\nhttps://github.com/orgs/lambdaclass/projects/37/views/10?pane=issue&itemId=118809801&issue=lambdaclass%7Cethrex%7C3514",
          "timestamp": "2025-07-15T14:01:38Z",
          "tree_id": "ad406a83542279b38ac48a3d0e98b93574f00c0d",
          "url": "https://github.com/lambdaclass/ethrex/commit/906de695154909601de4c10a883cc822509dc270"
        },
        "date": 1752591481304,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210018829230,
            "range": "± 425972831",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b0a5da487e8a2ffc4f174a3d5629bdb1e581e7a0",
          "message": "ci(l1): try running hive tests in CI with levm (#3566)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- Run most recent hive tests in CI with LEVM.\n- I had to comment out 2 of them because they don't pass, it was\nexpected since we were running tests that were 6 months old so things\nhave changed.\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-07-15T14:25:58Z",
          "tree_id": "aa7582b6c137ea6e00b405c391832b9f826d9898",
          "url": "https://github.com/lambdaclass/ethrex/commit/b0a5da487e8a2ffc4f174a3d5629bdb1e581e7a0"
        },
        "date": 1752592900415,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209321850418,
            "range": "± 1199286237",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f8a6168341db73d3a593b94e0e0f0a50c1044168",
          "message": "feat(l1): peer scoring for snap requests (#3334)\n\n**Motivation**\nIntegrate and adapt the peer scoring introduced by #2115 for snap\nrequests.\nFor eth requests, we consider failure to return requested data as a peer\nfailure, but with snap the data we request is not guaranteed to be\navailable (as it might have become stale during the sync cycle) so we\ncannot asume that an empty response is a bad response that should be\npenalized. For snap requests this PR collects the ids of the peers we\nattempted to request data from, and once we get a successful peer\nresponse we confirm that the data was indeed available and reward the\nresponsive peer while penalizing the previous unresponsive peers\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Collect ids of peers on each snap request retry and penalize and\nreward peers accordingly upon a successful peer response\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3118",
          "timestamp": "2025-07-15T14:29:34Z",
          "tree_id": "98d4bd1b3523d36f75886638eca8394cb47f9400",
          "url": "https://github.com/lambdaclass/ethrex/commit/f8a6168341db73d3a593b94e0e0f0a50c1044168"
        },
        "date": 1752593057527,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 208924546190,
            "range": "± 467483655",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fd98ef02d3634246651f8879e9d70feb1dd0653a",
          "message": "fix(l2): install solc in missing workflows (#3649)\n\n**Motivation**\n\nIn #3443, we missed installing solc in some workflows.\n\nCloses None",
          "timestamp": "2025-07-15T21:20:05Z",
          "tree_id": "66735758ea212d38ae32deee8ccf38901cad506a",
          "url": "https://github.com/lambdaclass/ethrex/commit/fd98ef02d3634246651f8879e9d70feb1dd0653a"
        },
        "date": 1752618146539,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210593029392,
            "range": "± 416815067",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5c7a30485164c7db8ed43304a4577a0d0451cc54",
          "message": "feat(l2): add support for web3signer (#2714)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nMany operators will want to use a remote signer instead of having the\nprivate keys on the same server as the sequencer.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nReplace all uses of a private key with a new `Signer` enum. This signer\ncan be either `Local` or `Remote` and can be lately extended. This aims\nto standardise the way all kind of messages are signed across the L2 and\nfacilitate the setup via flags or environment\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>\nCo-authored-by: fedacking <francisco.gauna@lambdaclass.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>",
          "timestamp": "2025-07-15T23:34:22Z",
          "tree_id": "166bed55b2d252034634dd4fb89fe704a900bb8e",
          "url": "https://github.com/lambdaclass/ethrex/commit/5c7a30485164c7db8ed43304a4577a0d0451cc54"
        },
        "date": 1752625953942,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210342433098,
            "range": "± 948167720",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ea331e09542d0ffd819d81af32d7a192a3b80f6a",
          "message": "perf(levm): add sstore bench, allow unoptimized bench contracts and improve bench makefile (#3552)\n\n**Motivation**\n\n- Adds a sstore benchmark, however we need to disable solc optimizations\nfor this contract otherwise it removes most code.\n- Improved the makefile adding a command to samply an individual\nbenchmark\n\nhttps://share.firefox.dev/44MVD2V",
          "timestamp": "2025-07-16T06:07:39Z",
          "tree_id": "05d165ee245374bc2320e881bc6c28a6c30b1895",
          "url": "https://github.com/lambdaclass/ethrex/commit/ea331e09542d0ffd819d81af32d7a192a3b80f6a"
        },
        "date": 1752649451048,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 214578696934,
            "range": "± 514225987",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8a568cabc9875a7667dd4bf5ce881ec6f26f1e82",
          "message": "refactor(l2): remove expects in L2 monitor (#3615)\n\n**Motivation**\n\nWe want to handle errors gracefully.\n\n**Description**\n\nRemoves usage of .expect\n\n**How to test**\n\n- Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n- Run a Sequencer (I suggest `make restart` in `crates/l2`).\n- Run the prover with `make init-prover` in `crates/l2`.\n- Run `make test` in `crates/l2`.\n\nCloses #3535\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>",
          "timestamp": "2025-07-16T15:02:36Z",
          "tree_id": "5803a4e78ee60df8c6ab4713467b393e4d4cfac4",
          "url": "https://github.com/lambdaclass/ethrex/commit/8a568cabc9875a7667dd4bf5ce881ec6f26f1e82"
        },
        "date": 1752681535326,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211114097547,
            "range": "± 403796172",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "faa3dec1f9358872ac18b09e9bd994a80cb1231b",
          "message": "feat(l1): decouple size of execution batch from header request size during full-sync (#3074)\n\n**Motivation**\nAllow us to configure the amount of blocks to execute in a single batch\nduring full sync. Currently, the only way to do this is by changing the\namount of block headers we ask for in each request.\nIn order to achieve this, this PR proposes adding the enum\n`BlockSyncState` with variants for Full and Snap sync so we can separate\nbehaviors between each mode and also allow each mode to keep its\nseparate state. This is key as we will need to persist headers and\nbodies through various fetch requests so we can build custom-sized\nexecution batches.\nIt also replaces the previous configurable env var `BlOCK_HEADER_LIMIT`\nwith `EXECUTE_BLOCK_BATCH`\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Add `BlockSyncState` enum as a way to differentiate between each sync\nmode's state during block syncing phase.\n* Refactor `request_and_validate_block_bodies`: it now receives a slice\nof headers and returns the requested block bodies instead of the full\nblocks. This allowed us to completely get rid of header cloning.\n* `validate_block_body` now receives a reference to the head & body\ninstead of the full block (as a result of refactoring its only user)\n* `Store::add_block_headers` now only receives the headers (This lets us\nsimplify caller code)\n* Removed `search_head` variable as having both current & search head\nserves no purpose.\n* Abtract current_head selection into `BlockSyncState::get_current_head`\n* Fix bug in condition used to decide wether to switch from snap to full\nsync\n* `start_sync` no longer receives `current_head`\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #2894\n\n---------\n\nCo-authored-by: SDartayet <44068466+SDartayet@users.noreply.github.com>\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-07-16T15:55:06Z",
          "tree_id": "32e65b17e7d3493c84eea672f20281cf2df62aaa",
          "url": "https://github.com/lambdaclass/ethrex/commit/faa3dec1f9358872ac18b09e9bd994a80cb1231b"
        },
        "date": 1752684688631,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 208732062852,
            "range": "± 605900980",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "77b2819356aa7b7c8c380cc6e1f9a430c4d7f2bb",
          "message": "fix(l2): flamegraph and benchmark workflows (#3652)\n\n**Motivation**\n\nInstall solc to `flamegraph-reth` job. Successful run\n[here](https://github.com/lambdaclass/ethrex/actions/runs/16305540602/job/46050676065?pr=3652).\nCloses None",
          "timestamp": "2025-07-16T17:28:06Z",
          "tree_id": "7ba35bdbcc440aaceedaf28e067ee5f8b95399b0",
          "url": "https://github.com/lambdaclass/ethrex/commit/77b2819356aa7b7c8c380cc6e1f9a430c4d7f2bb"
        },
        "date": 1752690287100,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 214261390548,
            "range": "± 281392533",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5839db8a7bec92df065433fed6ba6918142876fd",
          "message": "fix(l1): set base fee per gas only if we're past London hardfork (#3659)\n\n**Motivation**\n\nWe found that we are computing the mainnet genesis block hash wrong.\n\n**Description**\n\nThis PR changes our `Genesis::get_block_header` function to only set the\n`base_fee_per_gas` if we're past the London hardfork, which introduced\nthis field. I also included some tests to verify the hash of each public\nnetwork matches some hardcoded values, checked against `geth`.",
          "timestamp": "2025-07-16T17:29:18Z",
          "tree_id": "01606b85d8cd095fec44bab8c407c1161820b624",
          "url": "https://github.com/lambdaclass/ethrex/commit/5839db8a7bec92df065433fed6ba6918142876fd"
        },
        "date": 1752690328383,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211550201925,
            "range": "± 636088920",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "da2a576606ba61563712c4bdd5cf9ac2041292ff",
          "message": "fix(l2): use GITHUB_TOKEN for sp1up and rzup actions (#3655)\n\n**Motivation**\n\nThe SP1 toolchain fails sometimes to install with a generic \"Failed to\nfetch releases list\" error, but the cause may be an [API rate\nlimit](https://github.com/succinctlabs/sp1/issues/2320#issuecomment-2955903435)\n\nThe Risc0 toolchain has the same problem, explicitly returning an API\nrate limit error.\n\nWe bypass this by authenticating using the `GITHUB_TOKEN`",
          "timestamp": "2025-07-16T17:40:57Z",
          "tree_id": "8de80b667d3234524c46387e1ff9abfe9787da58",
          "url": "https://github.com/lambdaclass/ethrex/commit/da2a576606ba61563712c4bdd5cf9ac2041292ff"
        },
        "date": 1752691009511,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211276035301,
            "range": "± 590085126",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "tomas.arjovsky@lambdaclass.com",
            "name": "Tomás Arjovsky",
            "username": "Arkenan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d6548ff9a907773e67edff83ea7b687ffefdaa3d",
          "message": "feat(l1): add gas used diff in error (#3644)\n\n**Motivation**\n\nWhen there's a gas mismatch, there's no way to tell what is the mismatch\nunless we print it manually. If it's present in the error, at least it\nappears in the test logs when it happens.\n\n**Description**\n\n- Adds used and expected fields for the GasUsedMismatchError.\n- Adds the fields in the block gas post-exec validation.",
          "timestamp": "2025-07-16T17:44:51Z",
          "tree_id": "bb7f853ecbc13f3c7b7d56fe3dce4a5025f9c716",
          "url": "https://github.com/lambdaclass/ethrex/commit/d6548ff9a907773e67edff83ea7b687ffefdaa3d"
        },
        "date": 1752691245313,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 206741197974,
            "range": "± 302712237",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "91a41410d3020aadaba8379656bcbdfc1114d3cc",
          "message": "feat(l2): implement address aliasing (#3451)\n\n**Motivation**\n\nWe want to prevent l1 contracts from forging transactions for existing\nl2 contracts.\n\n**Description**\n\nKeeps faked source addresses. Implements checks described on #3424.\n\nCloses #3424\n\n---------\n\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>",
          "timestamp": "2025-07-16T18:04:08Z",
          "tree_id": "e3c4a08556fe2d5e20afb42ca55a16c81b098104",
          "url": "https://github.com/lambdaclass/ethrex/commit/91a41410d3020aadaba8379656bcbdfc1114d3cc"
        },
        "date": 1752692477723,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 212352555477,
            "range": "± 220069186",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f61eecdc5b15f3b35a14edc1ddab871c8ed64468",
          "message": "feat(l2): monitor handle index slicing (#3611)\n\n**Motivation**\nMonitor had unhandled index slicing in its code.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nAdded new variants for `MonitorError` and used them to remove the index\nslicing in the monitor\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n**How to test**\n\n- Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n- Run a Sequencer (I suggest `make restart` in `crates/l2`).\n- Run the prover with `make init-prover` in `crates/l2`.\n- Run `make test` in `crates/l2`.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses\nhttps://github.com/orgs/lambdaclass/projects/37/views/10?pane=issue&itemId=118823704&issue=lambdaclass%7Cethrex%7C3537",
          "timestamp": "2025-07-16T18:41:49Z",
          "tree_id": "e64b43c58d56f1187206e6b98a9a253805277cfb",
          "url": "https://github.com/lambdaclass/ethrex/commit/f61eecdc5b15f3b35a14edc1ddab871c8ed64468"
        },
        "date": 1752694683339,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211248039446,
            "range": "± 255429460",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3cf9507c3b63fe81929bb8ae2fd32de3fa049078",
          "message": "feat(l2): make monitor quit (#3622)\n\n**Motivation**\nWhen the monitor is quitted with `Shift + Q` it closes the monitor but\ndoes not end the process\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nChanged the L2 task initialization to use `JoinSet` instead of a\n`TaskTracker`, so it can be joined and end the process if it ended.\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n**How to test**\n\n- Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n- Run a Sequencer (I suggest `make restart` in `crates/l2`).\n- Run the prover with `make init-prover` in `crates/l2`.\n- Run `make test` in `crates/l2`.\n- Press `Shift + Q` to close the monitor\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses\nhttps://github.com/orgs/lambdaclass/projects/37/views/10?pane=issue&itemId=118808771&issue=lambdaclass%7Cethrex%7C3512",
          "timestamp": "2025-07-16T20:07:24Z",
          "tree_id": "b08bdd2932e3c056a571269355a21b4a1bbfb496",
          "url": "https://github.com/lambdaclass/ethrex/commit/3cf9507c3b63fe81929bb8ae2fd32de3fa049078"
        },
        "date": 1752699861277,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 208531755326,
            "range": "± 598358898",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c7c89a4fb4109c85f04babfd1fad805c7c40fb09",
          "message": "feat(l2): make contract compilation in the SDK optional (#3665)\n\n**Motivation**\n\n#3443, caused `solc` to be a compile-time dependency of the client.\nSince the proxy bytecode is only needed in `deploy_with_proxy`, which is\nonly used by the `deployer`, this PR makes contract compilation\noptional, via an env var.\n\n**Description**\n\n- Modifies `sdk/build.rs` to check whether `COMPILE_CONTRACTS` env var\nis set before trying to compile the proxy.\n- Creates a new error `ProxyBytecodeNotFound`, which is returned if\n`deploy_with_proxy` is called without compiling the contract.\n- Removes the installation of `solc` from workflows and Dockerfiles\nwhere it is no longer needed\n\nCloses #3654",
          "timestamp": "2025-07-16T22:08:17Z",
          "tree_id": "b795bcc727701a80c595d0e5f08cab0c95f414fc",
          "url": "https://github.com/lambdaclass/ethrex/commit/c7c89a4fb4109c85f04babfd1fad805c7c40fb09"
        },
        "date": 1752706998528,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 208193047892,
            "range": "± 1208961541",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d8aaed209910719f7f482fd6e3b2f33aefb1aba3",
          "message": "chore(l1, l2): add claude/gemini files to .gitignore (#3653)",
          "timestamp": "2025-07-17T11:04:04Z",
          "tree_id": "c29a6ea2921f69d1cc96417821b0fc03dd1163cb",
          "url": "https://github.com/lambdaclass/ethrex/commit/d8aaed209910719f7f482fd6e3b2f33aefb1aba3"
        },
        "date": 1752753993425,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209493098609,
            "range": "± 354976637",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "tomas.arjovsky@lambdaclass.com",
            "name": "Tomás Arjovsky",
            "username": "Arkenan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bc82ed12aee8e7d627a0ac52cbbd8287084b51b2",
          "message": "ci(l1): disable block builcing bench until it's fixed (#3670)\n\n**Motivation**\n\nThe benchmark doesn't work and it's blocking all prs",
          "timestamp": "2025-07-17T11:06:00Z",
          "tree_id": "f6f3fbc8ccbaec48aef841363a5d8a271f0b2e0f",
          "url": "https://github.com/lambdaclass/ethrex/commit/bc82ed12aee8e7d627a0ac52cbbd8287084b51b2"
        },
        "date": 1752754147405,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210925825367,
            "range": "± 817282704",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f21fe24bf2e2c2fc62aa9be3db6e0da0f491bcc9",
          "message": "fix(l1): fix double tracer initialization in block execution benchmark (#3671)\n\n**Motivation**\n\nCurrently the block execution benchmark is\n[broken](https://github.com/lambdaclass/ethrex/actions/runs/16344656297/job/46175367153?pr=3590)\nas a result of calling `init_tracing` twice.\n\n**Description**\n\nThis happens because, when the `--removedb` flag is used, RemoveDB is\ncalled as a command, which initializes the logger again.\n\nThis PR calls removedb directly instead.",
          "timestamp": "2025-07-17T13:11:53Z",
          "tree_id": "ebdc1d6f14e1bfb5b07a3a65e9449bb2dc729dd3",
          "url": "https://github.com/lambdaclass/ethrex/commit/f21fe24bf2e2c2fc62aa9be3db6e0da0f491bcc9"
        },
        "date": 1752761331719,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211147036442,
            "range": "± 953700413",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c0e0ce2933c1c72d943771abd58563355081c09f",
          "message": "ci(l1): support multiple hive versions depending on simulation. (#3661)\n\n**Motivation**\nWe want to get rid of our hive fork and use the upstream. Unfortunately,\nwe can't completely rely on it yet because it would break.\n\n**Description**\n- While we fix the upstream, lets rely on two versions of Hive, our fork\none and the upstream",
          "timestamp": "2025-07-17T13:31:45Z",
          "tree_id": "3365e4d99a9a881624b7f54dfd3e3d7e9295904a",
          "url": "https://github.com/lambdaclass/ethrex/commit/c0e0ce2933c1c72d943771abd58563355081c09f"
        },
        "date": 1752762464241,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211570268110,
            "range": "± 505787130",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "22b64308b7b0badb3e78279b12f8b36f69bd0642",
          "message": "perf(levm): new memory model (#3564)\n\n**Motivation**\n\nGas benchmarks show an 23% improvement on opcode based timings and 12%\non end to end.\n30% improvement in mgas for mstore (before unsafe)\n\nAfter adding unsafe we see a 30% improvement on top of the mstore\nimprovements and overall general improvements on other opcodes.",
          "timestamp": "2025-07-17T14:04:33Z",
          "tree_id": "eeb024c2f8db6140858e55a60a1250ff8fa4cd1b",
          "url": "https://github.com/lambdaclass/ethrex/commit/22b64308b7b0badb3e78279b12f8b36f69bd0642"
        },
        "date": 1752764509341,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209933147441,
            "range": "± 321652934",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "165b94c9a2069d2a4bb9c320f26554b0190c4e30",
          "message": "perf(levm): add AVX256 implementation of BLAKE2 (#3590)\n\n**Motivation**\n\nTo improve BLAKE2 performance.\n\n**Description**\n\nWhy AVX256 instead of AVX512? Mainly that\n[AVX512](https://github.com/rust-lang/rust/issues/111137) intrinsics are\nstill experimental.\n\nCreates a common/crypto module to house blake2. We should consider\nmoving here other cryptographic operations currently inside\nprecompiles.rs.\n\nIf avx2 is available, a permute-with-gather implementation is used.\n\nUsage of unsafe is required for SIMD loads and stores. It should be\nreviewed that alignment requirements are satisfied and that no\nout-of-bounds operations are possible.\n\nNote that aside from the obvious ones with \"load\" or \"store\" in the\nname, gather also represents a series of memory loads.\n\nUnsafe is also required to call the first avx2-enabled function, since\nwe must first ensure avx2 is actually available on the target CPU.\n\n** Benchmarks **\n\n### PR\n\n|Title|Max (MGas/s)|p50 (MGas/s)|p95 (MGas/s)|p99 (MGas/s)|Min (MGas/s)|\n\n|----|--------------|--------------|-------------|--------------|--------------|\nBlake1MRounds|120.19|93.97|93.38|99.85|91.54\nBlake1Round|226.42|175.09|170.08|166.83|166.82\nBlake1KRounds|122.36|97.28|96.09|100.90|95.87\nBlake10MRounds|174.36|110.78|104.15|124.33|103.89\n\n### Main\n\n|Title|Max (MGas/s)|p50 (MGas/s)|p95 (MGas/s)|p99 (MGas/s)|Min (MGas/s)|\n\n|----|--------------|--------------|-------------|--------------|--------------|\nBlake1MRounds|80.79|63.04|62.57|67.80|62.50\nBlake1Round|223.59|174.93|168.21|159.38|159.33\nBlake1KRounds|83.75|66.59|65.88|68.37|64.76\nBlake10MRounds|117.79|77.21|69.63|83.19|69.05",
          "timestamp": "2025-07-17T14:34:10Z",
          "tree_id": "065dfa16f0769f1776aae5132e7f7e58e22fde93",
          "url": "https://github.com/lambdaclass/ethrex/commit/165b94c9a2069d2a4bb9c320f26554b0190c4e30"
        },
        "date": 1752766209105,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 208306400295,
            "range": "± 349221026",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "14ef9bfde463af72598fe43a515c334fea6aedfb",
          "message": "fix(l2): `get_batch` failing if in validium mode (#3680)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nRollup store's`get_batch` fails when in validium mode as it's not\nfinding any blob (currently in validium mode we don't generate blobs).\nThis makes features like `ethrex_getBatchByNumber` unusable in validium\nmode.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nAccept empty blobs bundle when retrieving batches from rollup store.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-07-17T15:25:15Z",
          "tree_id": "585d1a479356a69e449df5a5763ea36b8a040686",
          "url": "https://github.com/lambdaclass/ethrex/commit/14ef9bfde463af72598fe43a515c334fea6aedfb"
        },
        "date": 1752769218907,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 207747748494,
            "range": "± 475475744",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "df3710b203a0214e243a157f46147d48b2d9d38a",
          "message": "ci(l1,l2): remove ethrex replay from releases  (#3663)\n\n**Motivation**\n\nWe don't want to make releases for ethrex replay\n\n**Description**\n\n- Remove matrix.binary from ci and only build ethrex and prover binaries\n- Update docs on how to run ethrex-replay\n- Successful run\n[here](https://github.com/lambdaclass/ethrex/actions/runs/16346228196/job/46180528866)",
          "timestamp": "2025-07-17T15:36:58Z",
          "tree_id": "e74c7e272ffd46bdc24eae77eb489c4cc5e1e7a2",
          "url": "https://github.com/lambdaclass/ethrex/commit/df3710b203a0214e243a157f46147d48b2d9d38a"
        },
        "date": 1752770005252,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210077193054,
            "range": "± 780667061",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "128638963+santiago-MV@users.noreply.github.com",
            "name": "santiago-MV",
            "username": "santiago-MV"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "229b791477f203dde019f36d5d62be182139d63a",
          "message": "refactor(l1): make ethrex-only github actions faster (#3648)\n\n**Motivation**\n\nRunning the ethrex_only github actions job seems to be slower than those\nthat use other execution clients as well\n\n**Description**\n\nThere were 2 main reasons why this job was slower compared to the others\n- The ethrex_only job includes the EOA and BLOB transactions assertoor\nplaybooks, which are the ones being run in the other two github jobs\n- The slot time of 12 sec was making the test take to long\n\nThe slot time was modified and now the tests take 10 minutes instead of\nthe original 18\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3628",
          "timestamp": "2025-07-17T16:21:11Z",
          "tree_id": "41a3b691e05e3ff267354c99a2f50f9b45e9edc7",
          "url": "https://github.com/lambdaclass/ethrex/commit/229b791477f203dde019f36d5d62be182139d63a"
        },
        "date": 1752772658466,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 206822221894,
            "range": "± 359622622",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "23191af7468828cb68d161143b460a6f25c96181",
          "message": "perf(levm): improve sstore perfomance  further (#3657)\n\n**Motivation**\nImproves sstore perfomance\n\nRequires #3564\n\nFrom 1100 to over 2200\n\n<img width=\"1896\" height=\"281\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/7f5697a3-048c-4554-91bb-22839bb91d95\"\n/>\n\nThe main change is going from Hashmaps to BTreeMaps.\n\nThey are more efficient for the type of storages we use, for small\ndatasets (1k~100k i would say) they overperform hashmaps due to avoiding\nentirely the hashing cost, which seemed to be the biggest factor.\n\nThis changes comes with 2 other minor changes, like a more efficient\nu256 to big endian and a change to backup_storage_slot.",
          "timestamp": "2025-07-17T17:29:21Z",
          "tree_id": "ad97fe646e7b6d407f1bfc5a7afa50ca64c47427",
          "url": "https://github.com/lambdaclass/ethrex/commit/23191af7468828cb68d161143b460a6f25c96181"
        },
        "date": 1752776709277,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211269286552,
            "range": "± 478563653",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me+git@droak.sh",
            "name": "Oak",
            "username": "d-roak"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8272969a64958abfed0f7085cb7c4d684f2202df",
          "message": "docs(l2, levm): move crates docs to root docs (#3303)\n\n**Motivation**\nDocs are sparsed across the repo. This PR puts everything in the same\nplace\n\n**Description**\n- Added the docs that lived under `/crates/*` in the root `/docs`. Used\nthe same file structure\n- Deleted all instances of docs under `/crates/*`\n\n\nCloses: none\n\nSigned-off-by: droak <me+git@droak.sh>",
          "timestamp": "2025-07-17T18:10:12Z",
          "tree_id": "17e6af6a4ed0b436216ded6e99f2ed41de21d5c1",
          "url": "https://github.com/lambdaclass/ethrex/commit/8272969a64958abfed0f7085cb7c4d684f2202df"
        },
        "date": 1752779128761,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209901785745,
            "range": "± 499411249",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me+git@droak.sh",
            "name": "Oak",
            "username": "d-roak"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "96c7eeeabfc03ea6b8a20b92f5310cb59d7a63c8",
          "message": "docs(l2): add quotes on init-prover command (#3304)\n\n**Motivation**\nCopy paste on the command provided in the docs doesn't work\n\n**Description**\n- Added quotes to the command mentioned\n\nCloses: none",
          "timestamp": "2025-07-17T18:18:56Z",
          "tree_id": "f41598ce40f7d42ba9c46c352b21d5f3ea010eed",
          "url": "https://github.com/lambdaclass/ethrex/commit/96c7eeeabfc03ea6b8a20b92f5310cb59d7a63c8"
        },
        "date": 1752779778471,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 218209245887,
            "range": "± 1568813520",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce87d548d3a30d75bfe4e5a1ae2cf242a316f3f3",
          "message": "feat(l2): add chainid to public inputs (#3605)\n\n**Motivation**\n\nCurrently we don't verify blocks are executed with the correct chain id.\nThis allows malicious sequencers to replay transactions from other\nnetworks.\n\n**Description**\n\nAdds chainid to the public inputs.\n\nCloses #3586\n\n---------\n\nCo-authored-by: fedacking <francisco.gauna@lambdaclass.com>",
          "timestamp": "2025-07-17T18:44:59Z",
          "tree_id": "4823927b668a80a7016f28f6d1d9813bcc57df30",
          "url": "https://github.com/lambdaclass/ethrex/commit/ce87d548d3a30d75bfe4e5a1ae2cf242a316f3f3"
        },
        "date": 1752781229193,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209704740925,
            "range": "± 443477274",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6876c91b7f93ebbf65124410582e6f89513f9768",
          "message": "perf(levm): codecopy perf improvement (#3675)\n\n**Motivation**\n\nImproves from 200 mgas to 790, this bench was made with this pr along\nmemory, sstore and opcodes ones.\n\nA 295% increase in perf.\n\nRequires the pr #3564 \n\n**Description**",
          "timestamp": "2025-07-18T05:06:43Z",
          "tree_id": "295ee8748a84fa9fc38dc54a27f6f57ac03c6626",
          "url": "https://github.com/lambdaclass/ethrex/commit/6876c91b7f93ebbf65124410582e6f89513f9768"
        },
        "date": 1752818574266,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209991999050,
            "range": "± 536409015",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44068466+SDartayet@users.noreply.github.com",
            "name": "SDartayet",
            "username": "SDartayet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b38493e92ea2602d73e0a840bfae103011105285",
          "message": "refactor(l1, l2): metrics folder (#3346)\n\n**Motivation**\n\nHaving all our metrics dashboards in one folder, so it's all better\norganized.\n\n**Description**\n\nThis PR moves all the dashboards and yaml files needed to set up the\nPrometheus and Grafana containers into one folder at the root.\n\nCloses #3181\n\n---------\n\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-07-18T08:56:10Z",
          "tree_id": "52f41fa0b6b4c2b4b76f577d91652b6854afd484",
          "url": "https://github.com/lambdaclass/ethrex/commit/b38493e92ea2602d73e0a840bfae103011105285"
        },
        "date": 1752832319059,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211134435450,
            "range": "± 649571186",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d0cb238de7d942202283a47fb8f937144cf595eb",
          "message": "perf(levm): use a lookup table for opcode execution (#3669)\n\n**Motivation**\n\nThe current match is not the fastest option, a function lookup table is\nbetter.\n\nOn gas benchmarks:\n\n- 24% further improvement on MSTORE on top of the new memory model pr\n- Improvement on all gas benches\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3353",
          "timestamp": "2025-07-18T10:37:32Z",
          "tree_id": "0245ea0a64492e20d5dac49e92e1aae31311c387",
          "url": "https://github.com/lambdaclass/ethrex/commit/d0cb238de7d942202283a47fb8f937144cf595eb"
        },
        "date": 1752838432272,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210050718364,
            "range": "± 648313586",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "dcb9deef55336159f21694ab4ac824c0ee801a83",
          "message": "perf(levm): improve block related opcodes and add stack push1 and pop1 (#3704)\n\n**Motivation**\n\nUsing ##3669 as base\n\nBlobhash:\nMgas goes from base p95 500 to 637\nAdding a dedicated push1 method to stack increases it to 711 mgas.\n\nAdding push1 and pop1 to other block opcodes improves mgas by about\n60-100 on their benchmarks.\n\nWill add another pr adding push1 to more opcodes",
          "timestamp": "2025-07-18T11:23:08Z",
          "tree_id": "8b31b05f699432ed712f201b0f023fab9bb4a783",
          "url": "https://github.com/lambdaclass/ethrex/commit/dcb9deef55336159f21694ab4ac824c0ee801a83"
        },
        "date": 1752841132193,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211027792111,
            "range": "± 351470998",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "584ff5c346a9baa29f075c818a12a2297bafeeb0",
          "message": "fix(l1): remove \"p2p\" capability from supported capabilities list (#3571)\n\n**Motivation**\n\nEven if the spec calls it the \"p2p\" capability, it isn't included in the\n`capabilities` array by our peers, but implicitly in the message, with\nthe version specified in the `protocolVersion` field.\n\n**Description**\n\nThis PR removes the \"p2p\" capability from the capability list exchanged\nthrough Hello RLPx messages. It also removes the unused code related to\nit.",
          "timestamp": "2025-07-18T14:43:19Z",
          "tree_id": "3b9e011b3537031595480502820c5dc1e309d999",
          "url": "https://github.com/lambdaclass/ethrex/commit/584ff5c346a9baa29f075c818a12a2297bafeeb0"
        },
        "date": 1752853169286,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 212176728173,
            "range": "± 1164775792",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5f138d0fc9bc695a8e3865ab911ee75f5707ca0d",
          "message": "ci(l2): cargo.lock check was done before compiling (#3713)\n\n**Motivation**\n\nThe check for if the Cargo.lock was not committed was being done before\ncompiling the zkvm\n\n**Description**\n\n- Move the check to after running cargo clippy",
          "timestamp": "2025-07-18T15:13:22Z",
          "tree_id": "efd06ead27ae2c21187f9a35de926827ff18b339",
          "url": "https://github.com/lambdaclass/ethrex/commit/5f138d0fc9bc695a8e3865ab911ee75f5707ca0d"
        },
        "date": 1752855004378,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209024604121,
            "range": "± 280192752",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c833309c67f23d1833adc7d0592322a51f89ad5f",
          "message": "fix(l2): tdx to L2 prover client communication (#3599)\n\n**Motivation**\n\nThe communication between the tdx prover client and the l2 prover server\nis currently broken because the nix build does not set the\n`VERGEN_GIT_SHA` variable.\n\n**Description**\n- Modify the ci to use run the image built with nix with QEMU, instead\nof building the quote-gen as a binary and running it as a regular\nbinary.\n- Add `gitRev` as a parameter to nix build\n   - Use this parameter to set the env var `VERGEN_GIT_SHA`\n- Add a check to make sure the length of the commit hash is the same one\nthat Vergen emits.\n- Modify build.rs to get the value from the env var and if the value is\nnot set then it uses Vergen\n- Remove build.rs files for zk provers and tdx quote-gen because the\nvalues are added when building l2 crate.\n- Successful run:\n[here](https://github.com/lambdaclass/ethrex/actions/runs/16275888354/job/45954574993?pr=3599)\n\nCloses #3587",
          "timestamp": "2025-07-18T15:18:09Z",
          "tree_id": "49606faca75b48602d58b35a2b5cc83c15bf805c",
          "url": "https://github.com/lambdaclass/ethrex/commit/c833309c67f23d1833adc7d0592322a51f89ad5f"
        },
        "date": 1752855623894,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 207145155988,
            "range": "± 354516416",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "43ed0ffe6efa430b1517d61ab940604eb09f16dd",
          "message": "perf(levm): improve precompiles by avoiding 0 value transfers (#3715)\n\nImprove precompiles by avoiding 0 value transfers\n\nThis idea was suggested by @JereSalo \n\n<img width=\"1690\" height=\"321\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/a2e70d40-9588-4ab6-9005-4e6c3a2a726d\"\n/>",
          "timestamp": "2025-07-18T16:13:05Z",
          "tree_id": "a59e9d10e2850c4714c8b080c9412a2281589687",
          "url": "https://github.com/lambdaclass/ethrex/commit/43ed0ffe6efa430b1517d61ab940604eb09f16dd"
        },
        "date": 1752858613947,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 207570929690,
            "range": "± 392327228",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b9be27f28cc83c491787634fe4f6c25d608b8a92",
          "message": "refactor(l2): use spawned for monitor (#3635)\n\n**Motivation**\nRefactor monitor so that it uses spawned crate\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nCurrently the monitor is a tokio task, refactor it to use spawned\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n**How to test**\n\n- Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n- Run a Sequencer (I suggest `make restart` in `crates/l2`).\n- Run the prover with `make init-prover` in `crates/l2`.\n- Run `make test` in `crates/l2`.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nDepends on https://github.com/lambdaclass/ethrex/pull/3622\n\nCloses\nhttps://github.com/orgs/lambdaclass/projects/37/views/10?pane=issue&itemId=118809943&issue=lambdaclass%7Cethrex%7C3515\n\n---------\n\nCo-authored-by: Esteban Dimitroff Hodi <esteban.dimitroff@lambdaclass.com>\nCo-authored-by: ElFantasma <estebandh@gmail.com>",
          "timestamp": "2025-07-18T16:43:25Z",
          "tree_id": "0c29b3a639142d5794559cc8118f6ffe745d88af",
          "url": "https://github.com/lambdaclass/ethrex/commit/b9be27f28cc83c491787634fe4f6c25d608b8a92"
        },
        "date": 1752860377062,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210887572622,
            "range": "± 452025328",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "afb42a55a189abd969b62e46b066a819185fafef",
          "message": "chore(l1): include Merkle step in metrics logs (#3630)\n\nIn preparation for performance analysis tooling, we need to include\nMerkle-tree specific measures.\nRigorously speaking, this includes most of the data preparation before\ncommitting to the DB. The code assumes Merkle-tree operations to be the\nbottleneck there.\n\nThe notebook part will be handled in a separate PR based on this branch,\nso we can keep the logic in it simpler by only handling one version of\nthe logs at a time. It also should make it easier to review.\n\nBased on #3274\nCoauthored-by: @Arkenan\n\nPart of: #3331",
          "timestamp": "2025-07-18T16:46:13Z",
          "tree_id": "f48445b5455b560bd98288480929a48e01fd7a9e",
          "url": "https://github.com/lambdaclass/ethrex/commit/afb42a55a189abd969b62e46b066a819185fafef"
        },
        "date": 1752860586939,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209821384176,
            "range": "± 503832231",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4fc03c98fd813c7cb18753f83a8d4702713c6b29",
          "message": "perf(levm): improve most opcodes by using stack pop1 push1 (#3705)\n\n**Motivation**\n\nThe methods pop1 and push1 added in\nhttps://github.com/lambdaclass/ethrex/pull/3704 show that they increase\nperfomance in benchmarks, this pr addes them to all other opcodes",
          "timestamp": "2025-07-18T16:48:43Z",
          "tree_id": "e2b2b0431e9deb469134e6f933a7bec20028c3a4",
          "url": "https://github.com/lambdaclass/ethrex/commit/4fc03c98fd813c7cb18753f83a8d4702713c6b29"
        },
        "date": 1752860799422,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 211254886551,
            "range": "± 597374231",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "baf5803c56eba68abef46706bd64c97ce64aba47",
          "message": "refactor(levm): make runner more usefull for debugging (#3601)\n\n**Motivation**\n\nMake runner more usefull for debugging. \n- When running specific tests, stop showing all the directories parsed\nto get the tests, and only show the ones where the selected tests are\nin.\n- Give more detail about the failing tests.\n- Don't saturate console output with endless log messages.\n\n**Description**\n\nThis pr makes changes in the runners code, now when parsing the tests\nonly the relative paths of the directories parsed are printed, not just\nthe names of the directories. (Closes #3578)\n\nTo see this change you can run:\n\n```bash\ncd cmd/ef_tests/state\nmake test-levm\n```\n\nThis command downloads and runs all tests only for levm. If you want to\nrun specific tests you can run:\n\n```bash\ncd cmd/ef_tests/state\ncargo test --package ef_tests-state --test all --release -- --forks Prague,Cancun --tests blob_tx_attribute_calldata_opcodes.json\n```\n\nIt also incorporates a new `paths` flag for running tests given their\npaths. The flag is to parse directly a test file instead of going over\nall directories trying to find the file only by its name. (This also\nCloses #3578)\n\nYou can try it by running:\n\n```bash\ncd cmd/ef_tests/state\ncargo test --package ef_tests-state --test all --release -- --forks Prague,Cancun --summary  --paths --tests LegacyTests/Cancun/GeneralStateTests/Shanghai/stEIP3855-push0/push0.json,GeneralStateTests/Shanghai/stEIP3855-push0/push0.json,GeneralStateTests/stBadOpcode/invalidAddr.json,LegacyTests/Cancun/GeneralStateTests/stBadOpcode/invalidAddr.json\n```\n\nThis should be the same as running the example we have in the read me:\n\n```bash\ncd cmd/ef_tests/state\ncargo test --package ef_tests-state --test all --release -- --forks Prague,Cancun --summary --tests push0.json,invalidAddr.json\n```\n\nFor failing tests, now the code shows the name and the path of the\nfailing tests, and it mentions the runner and the line where the error\nwas thrown. (Closes #3579)\nAlso, to provide more information about the tests, this pr also includes\nparsing more information from the test's .json in the `EFTestReport`\nstruct. This information is saved in the fields `description`, `url` and\n`reference_spec`. `url` and `reference_spec` refer to the url to the\npython test, and to the repo of the EIP the tests refer to,\nrespectively. It also lists\n[https://ethereum-tests.readthedocs.io/en/latest/test_types/gstate_tests.html#](https://ethereum-tests.readthedocs.io/en/latest/test_types/gstate_tests.html#)\nas a resource for understanding the tests. (Closes #3581)\n\nNow when a test fails it looks like this:\n```\nstate_tests/frontier/precompiles/precompile_absence: 6/6 (100.00%)\nstate_tests/cancun/eip6780_selfdestruct/dynamic_create2_selfdestruct_collision: 12/12 (100.00%)\nGeneralStateTests/stTransitionTest: 12/12 (100.00%)\nstate_tests/cancun/eip4844_blobs/blob_txs: 1173/1174 (99.91%)\n\n\nRunning failed tests with REVM...\nRe-running failed tests with REVM 1/1 - 00:00\nFailing Test: \nTest name: tests/cancun/eip4844_blobs/test_blob_txs.py::test_blob_tx_attribute_calldata_opcodes[fork_Cancun-state_test-tx_gas_500000-empty-opcode_CALLDATACOPY]\nTest path: /Users/camiladiielsi/Documents/ethrex/cmd/ef_tests/state/vectors/state_tests/cancun/eip4844_blobs/blob_txs_blob_tx_attribute_calldata_opcodes.json\n\nTest description: Test calldata related opcodes to verify their behavior is not affected by blobs.\n\n    - CALLDATALOAD\n    - CALLDATASIZE\n    - CALLDATACOPY\n\nNote: The following links may help when debugging `ef-tests`:\n- https://ethereum-tests.readthedocs.io/en/latest/test_types/gstate_tests.html#\n- Test reference spec: https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md\n- Test url: https://github.com/ethereum/execution-spec-tests/tree/v4.5.0/tests/cancun/eip4844_blobs/test_blob_txs.py#L1218\n\nError: Internal(MainRunnerInternal(\"Non-internal error raised when executing revm. This should not happen: Err(Internal(Custom(\\\"Error at LEVM::get_state_transitions() thrown in REVM runner line: 391 when executing ensure_post_state()\\\")))\"))\nerror: test failed, to rerun pass `-p ef_tests-state --test all`\n```\n(Note: the error shown was fabricated by changing the post hash value of\nthe test.)\n\nAnother change introduced is that now there are no more endless log\nmessages, the messages are overwritten with actualized information of\nthe tests that are being executed. (Closes #3580) You can see that by\nrunning any of the commands mentioned.\n\nThis solution is meant to be a temporary fix since there's a new runner\nbeing programmed from scratch to improve the user experience.",
          "timestamp": "2025-07-18T18:20:27Z",
          "tree_id": "b6823ee0a0d7af9bc64ced7939b1b34fe6222a76",
          "url": "https://github.com/lambdaclass/ethrex/commit/baf5803c56eba68abef46706bd64c97ce64aba47"
        },
        "date": 1752866193448,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 210347514164,
            "range": "± 1722701120",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fa7a8b5083607a60e462305797be8ea06e306a20",
          "message": "ci(l1): comment out flaky findnode test (#3699)\n\nI thought this test had already been commented out before but maybe it\nwas reintroduced, I don't know. It's flaky though.\n[Example\nrun](https://github.com/lambdaclass/ethrex/actions/runs/16356024570/job/46215135795?pr=3626)",
          "timestamp": "2025-07-18T19:19:41Z",
          "tree_id": "7bdf26b8bea2a56a896280c98800be6313628a0f",
          "url": "https://github.com/lambdaclass/ethrex/commit/fa7a8b5083607a60e462305797be8ea06e306a20"
        },
        "date": 1752869769963,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209643134431,
            "range": "± 638634859",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a7c1554b0e7d90a58dd8d17c1f4e0709727bcf0d",
          "message": "refactor(l1,l2): remove k256 crate  (#3689)\n\n**Motivation**\n\nHaving both k256 and secp256k1 crates makes it so that sp1 patches don't\ncompile\n\n**Description**\n\n- Remove k256 from the workspace\n- Migrate all functions from k256 to use secp256k1 crate",
          "timestamp": "2025-07-18T19:43:52Z",
          "tree_id": "a0448274d014503f744bd56b85166c9ac49383fc",
          "url": "https://github.com/lambdaclass/ethrex/commit/a7c1554b0e7d90a58dd8d17c1f4e0709727bcf0d"
        },
        "date": 1752871234653,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 207733524355,
            "range": "± 421094072",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "128638963+santiago-MV@users.noreply.github.com",
            "name": "santiago-MV",
            "username": "santiago-MV"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "552bc18da6f30075a0b833cf755441497ad8805e",
          "message": "ci(l1): fix assertoor tests  (#3718)\n\n**Motivation**\n\nWe were using an old kurtosis version and when the\n`ethrex-only-different-cl` job was failing because of this\n\n**Description**\n\nIn this PR the kurtosis version used in Github actions was updated to\nlatest from 1.6 (up to now the current version is 1.10.2)\nAlso the el and cl images used in those jobs were removed, by doing this\nthe default one is used\nThis PR changes the `lambda/ethereum-package` branch into main.\n\n⚠️ **Depends on this\n[PR](https://github.com/lambdaclass/ethereum-package/pull/16)** ⚠️\n\n\nCloses #3712",
          "timestamp": "2025-07-18T20:16:35Z",
          "tree_id": "6c9056b04628842c517fc3e06d29558793b00943",
          "url": "https://github.com/lambdaclass/ethrex/commit/552bc18da6f30075a0b833cf755441497ad8805e"
        },
        "date": 1752873182824,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 207259697929,
            "range": "± 648030357",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "894ac4965366c7e956dcc105fb118fd54257d173",
          "message": "feat(l2): privileged transaction inclusion deadline (#3427)\n\n**Motivation**\n\nTo prevent the sequencer from censoring transactions, we want to force\nit to include at least some of them.\n\n**Description**\n\nThis PR introduces a deadline after which either `INCLUSION_BATCH_SIZE`\n(or all pending transactions, if there are less) privileged transactions\nare included, or the batch is rejected.\n\nCloses #3230",
          "timestamp": "2025-07-18T20:33:42Z",
          "tree_id": "28cbcf100c80d1d325cfb9dc2464fe929feb32c9",
          "url": "https://github.com/lambdaclass/ethrex/commit/894ac4965366c7e956dcc105fb118fd54257d173"
        },
        "date": 1752874178496,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 208030310237,
            "range": "± 452013088",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "62400508+juan518munoz@users.noreply.github.com",
            "name": "juan518munoz",
            "username": "juan518munoz"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a94a05cbefa95d78e1636ab6222182eeca237c0b",
          "message": "refactor(l1): replace rlpx listener functions with `spawned` implementation (#3504)\n\nRemove `spawn_listener` and `spawn_broadcast_listener` functions in\nfavour of `spawned`'s helper functions for its GenServers.\n\nNote: this PR should not be merged until [related spawned\nchanges](https://github.com/lambdaclass/spawned/pull/20) are available\non a release.\n\nCloses #3387",
          "timestamp": "2025-07-18T20:39:01Z",
          "tree_id": "e9232714cba7726018f3130c7087cd13876b3e63",
          "url": "https://github.com/lambdaclass/ethrex/commit/a94a05cbefa95d78e1636ab6222182eeca237c0b"
        },
        "date": 1752874558139,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 212693819346,
            "range": "± 359091162",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "128638963+santiago-MV@users.noreply.github.com",
            "name": "santiago-MV",
            "username": "santiago-MV"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d93521e7397fbab87d4f8a431f06e8132fd35b40",
          "message": "chore(l1): move network_params_ethrex_only.yaml to the fixtures folder  (#3729)\n\n**Motivation**\n\nThe localnet ethrex_only was used for CI, now it isn't but the\nnetwork_params_ethrex_only.yaml was kept for testing but it still was in\nthe `.github/config/assertoor` folder\n\n**Description**\n\nIn PR #3324 the file was moved into `fixtures/network`\nChanged path to file in the `Makefile` so that `make\nlocalnet-ethrex-only` works again\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3625",
          "timestamp": "2025-07-18T21:07:02Z",
          "tree_id": "3c98c36d78e26ba06ccccd3dd5c51fa89503c507",
          "url": "https://github.com/lambdaclass/ethrex/commit/d93521e7397fbab87d4f8a431f06e8132fd35b40"
        },
        "date": 1752876226132,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 209142808308,
            "range": "± 1592141185",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "db2b5a52032ac4e7c6934e92c2f259db8e545910",
          "message": "feat(l1): improve rebuild progress tracking (#2428)\n\n**Motivation**\nPreviously, state and storage rebuilding took approximately the same\ntime, so showing state trie rebuild progress was enough to keep the user\nupdated. After some recent changes storage rebuilding is taking a bit\nlonger, making its progress more relevant.\nAlso, the estimated finish time calculation takes into account all time\nsince start, which means estimations at the start will be abnormally\nhigh as time is spent waiting for data to be downloaded instead of pure\nrebuilding time.\nThis PR tracks the average speed and remaining storages to rebuild and\nperiodically shows them. It will only show the estimated finish time if\nthe state sync is complete, and it will show the average rebuild speed\nas debug tracing.\nIt also counts the time spend rebuilding storages instead of the time\nthat has passed since the rebuild started when performing time\nestimation\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Periodically show storage tries rebuild stats (speed/remaining for\ndebug, estimated finish time if state sync is finished)\n* Count time taken during rebuild instead of total time taken when\nestimating rebuild finish times\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-18T21:26:37Z",
          "tree_id": "16144ff626bcf651a6fab3598ece2b7389c8f45f",
          "url": "https://github.com/lambdaclass/ethrex/commit/db2b5a52032ac4e7c6934e92c2f259db8e545910"
        },
        "date": 1752877308973,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 205533662870,
            "range": "± 782561225",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ce5c47df70fa92c91814f36df65c01a090b19de1",
          "message": "fix(l2): estimate gas in call_to_contract_with_deposit (#3734)\n\n**Motivation**\n\nThe CI is failing on\n[main](https://github.com/lambdaclass/ethrex/actions/runs/16376083320/job/46276248732)\nwith the following error:\n\n```\nthread 'l2_integration_test' panicked at crates/l2/tests/tests.rs:1604:65:\ncalled `Option::unwrap()` on a `None` value\n```\n\nThis is because we were using a hardcoded `gas_limit` for the\n`l1_to_l2_tx` in the `call_to_contract_with_deposit` test, and sometimes\nthe tx fails due to the gas limit being exceeded. Then, the expected\nlogs of are never created.\n\n**Description**\n\n- Replaces the hardcoded `gas limit` with `None` to allow the SDK to\nestimate the value.\n\nCloses None",
          "timestamp": "2025-07-18T22:01:22Z",
          "tree_id": "77ef3295f487c841398d311894bdbbe16ec60cc8",
          "url": "https://github.com/lambdaclass/ethrex/commit/ce5c47df70fa92c91814f36df65c01a090b19de1"
        },
        "date": 1752879358612,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 207461544676,
            "range": "± 348294554",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "damian.ramirez@lambdaclass.com",
            "name": "Damian Ramirez",
            "username": "damiramirez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f83a4f9f22c138921781be5a3dda82bcb09bae09",
          "message": "perf(l1): use rayon for recover address (#3709)\n\n**Motivation**\nThis logic was originally introduced in #2268 but was mistakenly removed\nin a refactor\n[PR](https://github.com/lambdaclass/ethrex/pull/3082/files#diff-6ca74a0741dab646bb82b83636f9513d38a1c66b9db52dae8e20a0ec2fe6c1a3L239-L241).\nWe're adding it back because it improves the performance of our\nbenchmarks.\n\n**Description**\n\nAdd `par_iter` to `recover_address` function \n\nBiggest changes\n- ETH transfers (+117.96%)\n- Gas-Pop (+36.35%)\n- Push0 (+33.08%): Push de ceros al stack mucho más eficiente\n- Timestamp (+20.26%)\n- CoinBase (+17.18%)\n- Caller (+15.19%)\n- GasLimit (-14.33%)\n- BlobHash (-12.97%)\n\nThis change affects most of the benchmark tests, but it restores logic\nthat had previously been part of the codebase.\n\ncloses #3725",
          "timestamp": "2025-07-21T14:53:07Z",
          "tree_id": "cf5b10ad7fe07b1e6f4e95114c7230ad623fa3ed",
          "url": "https://github.com/lambdaclass/ethrex/commit/f83a4f9f22c138921781be5a3dda82bcb09bae09"
        },
        "date": 1753112989017,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168562004534,
            "range": "± 376659506",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b9f189573533b771f82ba45ef7bd65daefd02a55",
          "message": "refactor(l2): remove blockByNumber (#3752)\n\n**Motivation**\n\nWhile reviewing areas for simplification, I found that `BlockByNumber`\nis not being used.\n\n**Description**\n\nRemoves `BlockByNumber`\n\nCloses #3748",
          "timestamp": "2025-07-21T19:08:00Z",
          "tree_id": "030f712bb4c97a9bb320513b3614f976638c92cd",
          "url": "https://github.com/lambdaclass/ethrex/commit/b9f189573533b771f82ba45ef7bd65daefd02a55"
        },
        "date": 1753127758216,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168274212566,
            "range": "± 567365076",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93a885595f00e092fd597e03270b214da85114a2",
          "message": "fix(levm): preemptively resize memory before executing call (#3592)\n\n**Motivation**\nWhen executing a `CALL` opcode, a transfer might take place. In this\ncase the instruction does contain a return data offset and a return data\nsize but as we don't have return data to write into memory we don't\nexpand the memory.\nThis can cause problems with other opcodes later on (such as MSTORE,\nMLOAD, etc) which calculate their gas cost based on the difference\nbetween the current size of the memory and the new size, making them\nmore expensive as the memory will be smaller due to return data from\ntransfers not being accounted for.\nThis PR aims to solve this by preemptively resizing the memory before\nexecuting the call, so that the memory gets expanded even if no return\ndata is written to it.\nThis bug was found on Sepolia transaction:\nhttps://sepolia.etherscan.io/tx/0xa1765d420522a40d59d15f8dee1bf095499be687d6e1a7c978fc87eb85bce948\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Preemptively resize memory before executing a call in opcode `CALL`\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n**Questions**\nShould this behaviour also apply to other call types?\nCloses #issue_number",
          "timestamp": "2025-07-21T21:12:15Z",
          "tree_id": "4e31ff7d7cf6aea3a6a0e6f216926845008e439f",
          "url": "https://github.com/lambdaclass/ethrex/commit/93a885595f00e092fd597e03270b214da85114a2"
        },
        "date": 1753135255784,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 165019947162,
            "range": "± 413787128",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ec0a3eb6b536dda5668dff993369e9067f8709dd",
          "message": "chore(levm): parallelize parsing ef state tests (#3722)\n\n**Motivation**\n\nEf test parsing is slow, this parallelizes it making it faster\n\n\nRan in 2m0.225s",
          "timestamp": "2025-07-22T09:08:06Z",
          "tree_id": "791d9a8fffafcc8a4268db6202ce229dac132476",
          "url": "https://github.com/lambdaclass/ethrex/commit/ec0a3eb6b536dda5668dff993369e9067f8709dd"
        },
        "date": 1753177922911,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167823259546,
            "range": "± 260249867",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e283db20a41622318fda4869992e08591911625e",
          "message": "feat(levm): execute arbitrary bytecode (#3626)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\nHave a runner for LEVM that expects some **inputs** like Transaction,\nFork, etc. in an `json` file and **bytecode in mnemonics** in another\nfile. Stack and memory can be preloaded within the `json`.\nMore info in the `README.md`\n\nSidenote: I had to do a refactor in LEVM setup because for me to be able\nto alter the stack and memory before executing these have to be\ninitialized in the `new()`, thing that we weren't doing. So we now\ninitialize the first callframe there and not in `execute()`.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3583\n\n---------\n\nCo-authored-by: fmoletta <99273364+fmoletta@users.noreply.github.com>\nCo-authored-by: Edgar <git@edgl.dev>",
          "timestamp": "2025-07-22T13:16:10Z",
          "tree_id": "f5786f587ea0b2b549d9262913b775de1a103a34",
          "url": "https://github.com/lambdaclass/ethrex/commit/e283db20a41622318fda4869992e08591911625e"
        },
        "date": 1753192881343,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169400848999,
            "range": "± 284934748",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "94380962+sofiazcoaga@users.noreply.github.com",
            "name": "sofiazcoaga",
            "username": "sofiazcoaga"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2ce46bf32443be74f0d2ee8b0d5759f9c04219cb",
          "message": "refactor(levm): rewrite of state EF tests runner first iteration (#3642)\n\n**Motivation**\n\nRelated issue: #3496. \n\nThe idea is to incrementally develop a new EF Test runner (for state\ntests) that can eventually replace the current one. The main goal of the\nnew runner is to be easy to understand and as straightforward as\npossible, also making it possible to easily add any new requirement.\n\n**How to run** \nA target in the makefile was included. You can, then, from\n`ethrex/cmd/ef_tests/state/` run `make run-new-runner`. If no specific\npath is passed, it will parse anything in the `./vectors` folder.\nOtherwise you can do, for example:\n`make run-new-runner TESTS_PATH=./vectors/GeneralStateTests/Cancun` to\nspecify a path.\n\nThis command assumes you have the `vectors` directory downloaded, if not\nrun `make download-evm-ef-tests` previously.\n\n**Considerations**\n\nThe main changes are: \n- The new `Test` and `TestCase` structures in types. \n- The runner and parser simplified flows. \n\nFiles that should not be reviewed as they are full or partial copies of\nthe original files:\n- `runner_v2/deserialize.rs`\n- `runner_v2/utils.rs`\n\nThis iteration excludes report-related code, option flags and other\npossible test case errors to be considered that will be included later.\nChecks are performed only on exceptions and root hash.",
          "timestamp": "2025-07-22T18:32:15Z",
          "tree_id": "1364dd940e94383958d73b23545152bd053470bf",
          "url": "https://github.com/lambdaclass/ethrex/commit/2ce46bf32443be74f0d2ee8b0d5759f9c04219cb"
        },
        "date": 1753211785245,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170461481232,
            "range": "± 582474291",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b41d878a318aeaf8dcbd7c2292569fa697282a76",
          "message": "fix(l2): fix L1 proof sender's wallet/signer (#3747)\n\n**Motivation**\n\nThe L1 proof sender was broken in #2714 by creating an invalid ethers'\n`Wallet`\n[here](github.com/lambdaclass/ethrex/pull/2714/files#r2216602944). This\nPR fixes it but only allows running the proof sender with a local\nsigner.\n\nTo support a remote signer we must investigate if there's a way to\ncreate an ethers' signer that uses web3signer.\n\nThanks @avilagaston9 for noticing the bug!",
          "timestamp": "2025-07-22T19:31:59Z",
          "tree_id": "20136d8c01aeca6066b9529a2e69154d4cacc679",
          "url": "https://github.com/lambdaclass/ethrex/commit/b41d878a318aeaf8dcbd7c2292569fa697282a76"
        },
        "date": 1753215445373,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169428522229,
            "range": "± 322104276",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cfe00d33bd3464bd5cd625978d92a0f1f8068f63",
          "message": "fix(l2): enable bls12_381,k256 & ecdsa sp1 precompiles (#3691)\n\n**Motivation**\n\nThe patch for bls12_381 precompile is not being applied because we are\nimporting the crate from our fork.\nAlso two other patches that were previously not compiling after #3689 is\nmerged can now be reenabled\n\n**Description**\n\n-\n[Forked](https://github.com/lambdaclass/bls12_381-patch/tree/expose-fp-struct)\nthe patch from sp1 and updated it with the same changes we have on the\nmain crate fork\n- Uncommented the previously commented patches\n\n**How to check**\n\n```\ncd crates/l2/prover/zkvm/interface/sp1\n```\nbls12_381\n```\ncargo tree -p bls12_381\n```\nreturns `bls12_381 v0.8.0\n(https://github.com/lambdaclass/bls12_381-patch/?branch=expose-fp-struct#f2242f78)`\n\necdsa\n```\ncargo tree -p ecdsa\n```\nreturns `ecdsa v0.16.9\n(https://github.com/sp1-patches/signatures?tag=patch-16.9-sp1-4.1.0#1880299a)`\n\nk256\n```\ncargo tree -p k256\n```\nreturns `k256 v0.13.4\n(https://github.com/sp1-patches/elliptic-curves?tag=patch-k256-13.4-sp1-5.0.0#f7d8998e)`\n\nComparing this to main that it either returns no patch or errors out",
          "timestamp": "2025-07-22T19:50:33Z",
          "tree_id": "556520e376bd9a93a8bfb4cc139da53a6e4531d0",
          "url": "https://github.com/lambdaclass/ethrex/commit/cfe00d33bd3464bd5cd625978d92a0f1f8068f63"
        },
        "date": 1753216479511,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170390827733,
            "range": "± 1386689472",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c36b343d8508b62b7de0a7d87bc58a026278704a",
          "message": "fix(levm): memory bug when storing data (#3774)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nWe didn't realize that #3564 introduced a bug when storing data of\nlength zero. This aims to fix it.\nI also delete a resize check that's completely unnecessary\n\nTested the fix and it works. I now am able to execute the blocks\nmentioned in the issue of this PR without any problems at all.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3775",
          "timestamp": "2025-07-22T20:11:38Z",
          "tree_id": "db0e155e11ab6e5d6808c62ec2e43bfed8834f9a",
          "url": "https://github.com/lambdaclass/ethrex/commit/c36b343d8508b62b7de0a7d87bc58a026278704a"
        },
        "date": 1753217740041,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169231622767,
            "range": "± 661858953",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4a3a5aec56e6b6a96942ad161b32fd2f50ccd5c7",
          "message": "refactor(l2): apply fcu only on the last block of the batch for the block fetcher (#3782)\n\n**Motivation**\n\nWith the actual implementation of the block fetcher, we apply a fork\nchoice update for every block. This is not the optimal way since we can\napply only on the last block.\n\n**Description**\n\n- Move the `apply_fork_choice` call after the loop and only call it with\nthe last block\n- Add new type of error `EmptyBatchError`",
          "timestamp": "2025-07-22T21:03:49Z",
          "tree_id": "710ac64388c952a5a69f10f5b9a1eda132ef6c9a",
          "url": "https://github.com/lambdaclass/ethrex/commit/4a3a5aec56e6b6a96942ad161b32fd2f50ccd5c7"
        },
        "date": 1753220909490,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170091441577,
            "range": "± 656600594",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3f60642861576555f50dd330410eb75c49188447",
          "message": "feat(l2): based P2P (#2999)\n\n**Motivation**\n\nThis PR follows #2931 . We implement some basic functionality to\ncommunicate L2 based nodes via P2P.\n\n**Description**\n\n- Add new capability to the RLPx called `Based`.\n- Add new Message `NewBlock`.\n  - Behaves similar to the message `Transactions`.\n- Every interval we look to the new blocks produced and send them to the\npeer.\n- Add this message to the allowed ones to be broadcasted via the P2P\nnetwork.\n- When receiving this message we implemented a queue to be able to\nreceive them in disorder. Once a continuos interval of blocks is in the\nqueue we store them in order.\n- Add new message `BatchSealed`\n- Every interval we look in the `store_rollup` if a new batch has been\nsealed and then we send it to the peer.\n- Add this message to the allowed ones to be broadcasted via the P2P\nnetwork.\n- This two new messages are signed by the lead sequencer who proposed\nthe blocks and the batches. Every node must verify this signature\ncorrespond to the lead sequencer\n- Change `BlockFetcher` to not add a block received via the L1 if it\nalready has been received via P2P, and vice versa.\n- Add a new `SequencingStatus`: `Syncing`. It is for nodes that are not\nup to date to the last committed batch.\n\n**How to test**\n\nRead the `Run Locally` section from `crates/l2/based/README.md` to run 3\nnodes and register 2 of them as Sequencers. It is important that you\nassign different values in the nodes:\n- `--http.port <PORT>`\n- `--committer.l1-private-key <PRIVATE_KEY>`\n- `--proof-coordinator.port <PORT>`\n- `--p2p.port <P2P_PORT>`\n- `--discovery.port <PORT>`\n\n> [!TIP]\n> To enrich the review, I strongly suggest you read the documentation in\n`crates/l2/based/docs`.\n\n---------\n\nCo-authored-by: Leandro Serra <leandro.serra@lambdaclass.com>\nCo-authored-by: ilitteri <ilitteri@fi.uba.ar>\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: fkrause98 <fkrausear@gmail.com>\nCo-authored-by: Francisco Krause Arnim <56402156+fkrause98@users.noreply.github.com>",
          "timestamp": "2025-07-22T22:04:21Z",
          "tree_id": "2fbb970513ea40b72556f60e771be7c88d6540a4",
          "url": "https://github.com/lambdaclass/ethrex/commit/3f60642861576555f50dd330410eb75c49188447"
        },
        "date": 1753224520479,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168942697642,
            "range": "± 457770537",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c1778eadda9854a3824aac5f304204150c14a97b",
          "message": "chore(l1): change logs in hive to info by default (#3767)\n\n**Motivation**\n\nIn the PR #2975 the default value for the `make run-hive` was changed to\nerror. I propose changing this to info (3), as we usually run make hive\nto try to see a problem with the test. For the CI I propose we change it\nto log level error (1), as we can't actually look at those logs.\n\n**Description**\n\n- Changed makefile `SIM_LOG_LEVEL` default value to 3 (info)\n- Added to the ci workflows `--sim.loglevel 1` which corresponds to\nerror.",
          "timestamp": "2025-07-23T13:51:18Z",
          "tree_id": "c226e0a9f7ec2b05e2e4c8136af012522784660a",
          "url": "https://github.com/lambdaclass/ethrex/commit/c1778eadda9854a3824aac5f304204150c14a97b"
        },
        "date": 1753281295838,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 165884922401,
            "range": "± 207154120",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4edd454bf4df8dad51b2c32a810a89cd2a9479a6",
          "message": "chore(l1): avoid running EF blockchain tests on `make test` (#3772)\n\n**Motivation**\nThey take a some time and `make test` should be more of a healthcheck\nimo. They run in the CI anyway.",
          "timestamp": "2025-07-23T15:25:54Z",
          "tree_id": "bc9f06de3dbdad519a7d50581577dea43afb1fa8",
          "url": "https://github.com/lambdaclass/ethrex/commit/4edd454bf4df8dad51b2c32a810a89cd2a9479a6"
        },
        "date": 1753287063429,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167899094786,
            "range": "± 390332596",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e2cb314efc88038727816005e66b3ee99def5c8c",
          "message": "feat(levm): subcommand for converting mnemonics into bytecode and accepting both kinds as arguments (#3786)\n\n**Motivation**\n\n- Add code related features to levm runner\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- Accept both raw bytecode and mnemonics as arguments for the `--code`\nflag in the `.txt` file\n- Add `--emit-bytes` for converting mnemonics into a new bytecode file\nthat can then be used for running the transaction without parsing the\nvalues.\n\nCloses #3788",
          "timestamp": "2025-07-23T15:42:14Z",
          "tree_id": "fcad77c30da72b4e4322322f55b3bc04ba4e1bd9",
          "url": "https://github.com/lambdaclass/ethrex/commit/e2cb314efc88038727816005e66b3ee99def5c8c"
        },
        "date": 1753288038087,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168008058749,
            "range": "± 506737880",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "56092489+ColoCarletti@users.noreply.github.com",
            "name": "Joaquin Carletti",
            "username": "ColoCarletti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8408fe0854a66e0a510b0a6bf474dda20edd38de",
          "message": "perf(levm): migrate EcAdd and EcMul to Arkworks (#3719)\n\nThis PR improves the performance of the precompiles by switching to\nArkworks.\nIn particular, scalar multiplication on the BN254 curve is significantly\nfaster in Arkworks compared to Lambdaworks.\n\ncloses #3726\n\n---------\n\nCo-authored-by: Leandro Serra <leandro.serra@lambdaclass.com>",
          "timestamp": "2025-07-23T16:04:55Z",
          "tree_id": "780cbcf4c7f07b65b63ff07011ea6247e03377cc",
          "url": "https://github.com/lambdaclass/ethrex/commit/8408fe0854a66e0a510b0a6bf474dda20edd38de"
        },
        "date": 1753289352430,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166954074952,
            "range": "± 387087755",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1802f66ed21aff9ca45056ad9a0a6a81b6a4a2b0",
          "message": "feat(l1): notebook for high-level profiling (#3633)\n\nIntroduce a new notebook to analyze contribution of eaxh part of the\nblock production process to its overall time, producing graphs for\nvisual clarity.\nInstructions included in the README.\n\nBased on #3274\nCoauthored-by: @Arkenan\n\nPart of: #3331",
          "timestamp": "2025-07-23T17:15:17Z",
          "tree_id": "90f55d482f41009e1f0aab974c2f11afaaef03e1",
          "url": "https://github.com/lambdaclass/ethrex/commit/1802f66ed21aff9ca45056ad9a0a6a81b6a4a2b0"
        },
        "date": 1753293592187,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169250483198,
            "range": "± 911093676",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "62400508+juan518munoz@users.noreply.github.com",
            "name": "juan518munoz",
            "username": "juan518munoz"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "31808c9e890a3af68e659735c63dcbb47df85a56",
          "message": "chore(l1,l2): bump spawned version to `0.2.1` (#3780)\n\n**Motivation**\n\nUpdate Spawned to accomodate new Actor interface.\n\n**Description**\n\nSince [spawned `0.2.0`](https://github.com/lambdaclass/spawned/pull/35)\nthe state and GenServer is \"the same\".",
          "timestamp": "2025-07-23T18:10:26Z",
          "tree_id": "1e3122f81bfb5a1e4cfcd914eae36c824d663bfc",
          "url": "https://github.com/lambdaclass/ethrex/commit/31808c9e890a3af68e659735c63dcbb47df85a56"
        },
        "date": 1753296913974,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166022088539,
            "range": "± 512383533",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "212d72a92a0c1ca9a718e3c46bafd1e7fe5ab163",
          "message": "fix(l2): join verifier task (#3781)\n\n**Motivation**\n\nThe `join()` of the verifier task was accidentally removed in #3635.\n\n**Description**\n\nThis PR is a quick fix that restores the removed `join()`. The verifier\ntask is being replaced by spawned in #3761.\n\nCloses None",
          "timestamp": "2025-07-23T21:44:07Z",
          "tree_id": "49a9893bb669d69fe5e9328bdb23cec1380dfa41",
          "url": "https://github.com/lambdaclass/ethrex/commit/212d72a92a0c1ca9a718e3c46bafd1e7fe5ab163"
        },
        "date": 1753309652217,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166317527640,
            "range": "± 354129657",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "614cc6d0300718b727304672d93a2ddf6adaf21d",
          "message": "docs(l1): move install instructions to new section and embed script one-liner (#3505)\n\n**Motivation**\n\nSince the install script just builds from source using a `cargo install`\none-liner, it's preferable to show that instead of having to download\nand run an install script.\n\n**Description**\n\nThis PR removes the install script, embedding the one-liner inside the\ndocs. It also moves the installation instructions to the book, linking\nto it in the readme, and expands them with instructions on how to build\nfrom source or download the pre-built binaries.\n\n---------\n\nCo-authored-by: Manuel Iñaki Bilbao <manuel.bilbao@lambdaclass.com>",
          "timestamp": "2025-07-23T21:47:54Z",
          "tree_id": "0b46ef2d7f648cf19cf1c02cfa8af0c4501391a5",
          "url": "https://github.com/lambdaclass/ethrex/commit/614cc6d0300718b727304672d93a2ddf6adaf21d"
        },
        "date": 1753309894719,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169012552199,
            "range": "± 557548655",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "67cd8bea1ce06c8a875599f420a1ca05f528aa07",
          "message": "feat(l2): embed contracts in deployer and system_contracts_updater (#3604)\n\n**Motivation**\n\nThis PR embeds the bytecode of the contracts used in the `deployer` and\n`system_contracts_updater` as constants within the resulting binaries.\n\n**Description**\n\n- Adds a `build.rs` script under `crates/l2/contracts/bin/build.rs` that\ndownloads all necessary dependencies and compiles all required\ncontracts.\n- Modifies `deployer` and `system_contracts_updater` to import the\nresulting bytecodes as constants using `include_bytes!`, instead of\ncompiling them at runtime.\n- Removes the `download_contract_deps` function from the SDK, as it was\nonly cloning the same two repositories and was used even when only one\nwas needed.\n- Updates the `compile_contract` function in the SDK to accept a list of\n`remappings`.\n- Adds `deploy_contract_from_bytecode` and\n`deploy_with_proxy_from_bytecode` functions to the SDK.\n- Updates tests to work with the new SDK API.\n\n> [!NOTE]\n> The new `build.rs` script checks if `COMPILE_CONTRACTS` is set to\ndecide whether to compile the contracts.\n> This prevents `cargo check --workspace` from requiring `solc` as a\ndependency.\n\nCloses #3380",
          "timestamp": "2025-07-24T12:52:01Z",
          "tree_id": "181b3933b4e4d0214fffc3f5448d06d614709de8",
          "url": "https://github.com/lambdaclass/ethrex/commit/67cd8bea1ce06c8a875599f420a1ca05f528aa07"
        },
        "date": 1753364241494,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167882348176,
            "range": "± 329419272",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "df3a9bd81724520f527cc837775419629eebcfec",
          "message": "feat(l2): enhance monitor performance (#3757)\n\n**Motivation**\nIf a sequencer runs for a long time, it stops, and we run it again\nactivating the monitor, it takes a long time to start and is slow.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nMakes the monitor load and work faster by simplifying the batches\nprocessing.\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n**How to Test**\n\n- Run a Sequencer (I suggest `make restart` in `crates/l2`).\n- Run the prover with `make init-prover` in `crates/l2`.\n- Let the sequencer ran for some time (at least 60 batches)\n- Kill the sequencer\n- Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n- Run `make init-l2-no-metrics`\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-07-24T14:16:59Z",
          "tree_id": "aea4bef1fd38b28adda61ffe55e827444f640da9",
          "url": "https://github.com/lambdaclass/ethrex/commit/df3a9bd81724520f527cc837775419629eebcfec"
        },
        "date": 1753369289952,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 165309285062,
            "range": "± 251370086",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8d7a9096401de0e6ff01c6e66e19513e0c522264",
          "message": "refactor(l2): improve naming and standardize arguments in l2 tests (#3790)\n\n**Motivation**\n\nCurrently the L2 tests:\n* use unintuitive names (eth_client vs proposer_client, meaning l1 and\nl2)\n* do not have a consistent ordering of parameters\n* are inconsistent on when things (bridge address and rich private key)\nare given as parameter vs obtained from a function\n\n**Description**\n\nThis PR improves that, and gets the \"noisy\" changes out of the way for\nfurther improvements.\n\nThe rich private key was kept as a parameter to allow giving different\nones (in the future, this would allow parallelizing the tests). The\nbridge address now always uses the function, since it won't change in\nthe middle of the test.",
          "timestamp": "2025-07-24T14:31:19Z",
          "tree_id": "1923a7ff48eef83a37502db6250daa76a844c694",
          "url": "https://github.com/lambdaclass/ethrex/commit/8d7a9096401de0e6ff01c6e66e19513e0c522264"
        },
        "date": 1753370175014,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166468929973,
            "range": "± 462604060",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7c3fffcd507ef0deb49e61a45535d6e6db0366be",
          "message": "chore(l2): bump sp1 version to 5.0.8 (#3737)\n\n**Motivation**\n\nSome PRs that updated the Cargo.lock and bumped sp1 to 5.0.8 were\nfailing because sp1up was installing version 5.0.0.\n\n**Description**\n\n- Bump and lock all versions of sp1 to 5.0.8",
          "timestamp": "2025-07-24T14:58:11Z",
          "tree_id": "61796f6914bb141eccf48801f6433f68534c9961",
          "url": "https://github.com/lambdaclass/ethrex/commit/7c3fffcd507ef0deb49e61a45535d6e6db0366be"
        },
        "date": 1753371815258,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168108905026,
            "range": "± 470740999",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7e6185d658f7b4f4871f56f044e39aa26528ab11",
          "message": "perf(levm): add shortcut for precompile calls (#3802)\n\n**Motivation**\n\nCurrently, calls to precompiles generate a callframe (including a stack\nand a new memory).\n\n**Description**\n\nAvoid creating call frames for precompiles.",
          "timestamp": "2025-07-24T15:36:42Z",
          "tree_id": "c1f806a73e4a7f1e7ef1c030fd1caee99ffb8a2c",
          "url": "https://github.com/lambdaclass/ethrex/commit/7e6185d658f7b4f4871f56f044e39aa26528ab11"
        },
        "date": 1753374128994,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168179598139,
            "range": "± 1851720420",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3a786b384cbbc2ffd66c613d2ae613cfc16c277c",
          "message": "perf(l2): avoid cloning all fields from ExecutionWitnessResult  (#3765)\n\n**Motivation**\n\nWhen proving a large batch performance was being affected because we\nwere cloning the entire ExecutionWitnessResult struct, this meant\ncloning all the BlockHeaders, Code and ChainConfig for every block.\n\n**Description**\n\n- Wrap ExecutionWitnessResult in a struct that has an inner field\nArc<Mutex<ExecutionWitnessResult>> that implements VmDatabase trait,\nwhich can be cheaply cloned\n- Remove all the Arc<Mutex<>> from ExecutionWitnessResult, remove the\nVmDatabase trait implementation, remove the derive Clone.\n\n**Perf Metrics**\n\ncommand:\n\n```\nTRACE_FILE=output.json TRACE_SAMPLE_RATE=100 RUST_BACKTRACE=full cargo run --release --features \"sp1,l2\" -- execute batch --rpc-url RPC_URL --network 65536300 13\n```\n\nspecs:\n```\nModel Identifier: MacBookAir10,1\nChip: Apple M1\nTotal Number of Cores: 8 (4 performance and 4 efficiency)\nMemory: 16 GB\nSystem Firmware Version: 11881.121.1\nOS Loader Version: 11881.121.1\n```\n\ncommits:\nThis branch (commit 16420ed)\nMain (commit ce5c47df7)\n\n- Time:\n    Main:    `Elapsed: 147.28s`\n    This branch:    `Elapsed: 67.07s`\n- Samply\n    Main: https://share.firefox.dev/3H2Hd5A\n    This branch: https://share.firefox.dev/40yeDzP",
          "timestamp": "2025-07-24T15:46:20Z",
          "tree_id": "0b98b16f157af9b0d0328bff1eea0720401c6c6e",
          "url": "https://github.com/lambdaclass/ethrex/commit/3a786b384cbbc2ffd66c613d2ae613cfc16c277c"
        },
        "date": 1753374640903,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167380057089,
            "range": "± 256642640",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aa04d3fcef2f047b1f3eaebc0ad6324ae17d6626",
          "message": "chore(l2): remove save_state file (#3817)\n\n**Motivation**\n\nThe `save_state.rs` file was accidentally re-added during merge conflict\nresolution.\n\n**Description**\n\nRemoves the `save_state.rs` file.\n\n\nCloses None",
          "timestamp": "2025-07-24T18:52:52Z",
          "tree_id": "95f96905edb0c54c466b4f83590765fee62e92a7",
          "url": "https://github.com/lambdaclass/ethrex/commit/aa04d3fcef2f047b1f3eaebc0ad6324ae17d6626"
        },
        "date": 1753385869874,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168101671231,
            "range": "± 638762535",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0c7d7e5cb72f8dab903a27d77db25c2b7479687f",
          "message": "fix(l1): fix metrics path (#3814)\n\n**Motivation**\n\nWe moved the metrics folder, but it wasn't updated here.\n\n**Description**\n\nFixes the path.",
          "timestamp": "2025-07-24T19:04:00Z",
          "tree_id": "c475e55d6f74b27e59053ae15e93bac2677af9c7",
          "url": "https://github.com/lambdaclass/ethrex/commit/0c7d7e5cb72f8dab903a27d77db25c2b7479687f"
        },
        "date": 1753386564041,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170954672111,
            "range": "± 478799035",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a21b5dfe15ad4a75919550ecdd1cb97f395511a1",
          "message": "ci(l2): integration test flaky not required for now (#3827)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n- l2 integration test is flaky and it is a required check, so we change\nits name so that it's not required anymore until it is fixed.",
          "timestamp": "2025-07-25T11:43:21Z",
          "tree_id": "bfba08d78c9d9bd7d38e3d9c83491e4e29aa501a",
          "url": "https://github.com/lambdaclass/ethrex/commit/a21b5dfe15ad4a75919550ecdd1cb97f395511a1"
        },
        "date": 1753446484428,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170562643894,
            "range": "± 606607426",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "13a9fa3324df9df34aeaf00958f9a58c5f84da83",
          "message": "perf(levm): refactor current callframe (#3816)\n\n**Motivation**\n\nKeeps current call frame as a field, avoiding calling a function call\nthat requires error handling.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3777 \n\nCloses #3778\n\nCloses #3779\n\n<img width=\"2560\" height=\"2235\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/5f1914b5-ce0e-44ee-8f24-d4ab0aeee48e\"\n/>",
          "timestamp": "2025-07-25T11:50:25Z",
          "tree_id": "3c8ea16a83438e4ceab73856bd1236eb727447fa",
          "url": "https://github.com/lambdaclass/ethrex/commit/13a9fa3324df9df34aeaf00958f9a58c5f84da83"
        },
        "date": 1753446901918,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168448069220,
            "range": "± 1253322747",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7925e990be7673a9fe442e8edd3f96638250cfe1",
          "message": "refactor(l2): remove clippy expects from monitor (#3664)\n\n**Motivation**\n\nWe want to clean up the monitor code.\n\n**Description**\n\nRemoves clippy expects.\n\nCloses #3534",
          "timestamp": "2025-07-25T12:24:54Z",
          "tree_id": "671984fc5f3fb740e45318e2eb54dfbc06e0ffec",
          "url": "https://github.com/lambdaclass/ethrex/commit/7925e990be7673a9fe442e8edd3f96638250cfe1"
        },
        "date": 1753449005798,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168347804787,
            "range": "± 479213548",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b64af9e7d0abc97d21a9dbe57e76408627641c2a",
          "message": "fix(levm): fix custom bytecode runner (#3834)\n\n**Motivation**\n\nDue to the callframe change the runner stopped working, because it tries\nto pop the callframe when it should just use current_callframe\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-25T13:40:43Z",
          "tree_id": "25a7a77f039529ea162f06c505a8fc16fca0cf63",
          "url": "https://github.com/lambdaclass/ethrex/commit/b64af9e7d0abc97d21a9dbe57e76408627641c2a"
        },
        "date": 1753453564997,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166411400100,
            "range": "± 452376794",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3d8787362d6190cc16d8f8e0a2c6c27061ed84c3",
          "message": "chore(l1,l2): rename `grafana_provisioning` folder to just `grafana`. (#3835)\n\n**Motivation**\nIt's already under the `provisioning` folder",
          "timestamp": "2025-07-25T15:02:45Z",
          "tree_id": "804eee7f438550f03fadcfdf08b98a20b96f65ec",
          "url": "https://github.com/lambdaclass/ethrex/commit/3d8787362d6190cc16d8f8e0a2c6c27061ed84c3"
        },
        "date": 1753458473763,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167177088013,
            "range": "± 392055372",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9c8b3390756c491abb6a655e8fb5111129806e28",
          "message": "ci(l1): add the posibility to pin execution-spec-test ref (#3833)\n\n**Motivation**\nRecently the daily Hive job broke because we're using the `main` branch\nof https://github.com/lambdaclass/execution-spec-tests and a commit\nmight have broken. This has been fixed but I want to make it explicit\nthat we're using `main`. Don't think there's a need to pin right now.\n\nCloses https://github.com/lambdaclass/ethrex/issues/3674\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-07-25T15:14:18Z",
          "tree_id": "9233f55f131dfbae44fccebf4ae9c3e21f1c25a5",
          "url": "https://github.com/lambdaclass/ethrex/commit/9c8b3390756c491abb6a655e8fb5111129806e28"
        },
        "date": 1753459154664,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166327641191,
            "range": "± 218311218",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "62400508+juan518munoz@users.noreply.github.com",
            "name": "juan518munoz",
            "username": "juan518munoz"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1cf713fbe242f4fc54398423d450a93eafc54e07",
          "message": "refactor(l1, l2): handle spawned errors (#3803)\n\n**Motivation**\n\nCurrent implementation does not handle errors, this PR aims to add\nlogging on failure and peer disconnection in the case of a broken pipe.\n\n**Description**\n\nNote: testing of broken pipe handling was done by running [three nodes\nat\nonce](https://github.com/lambdaclass/ethrex/blob/main/crates/networking/docs/Network.md#an-example-of-how-you-might-build-a-network),\nand regression by running hive devp2p tests.\n\nCloses #3375\n\nReplaces #3600\n\n---------\n\nCo-authored-by: ElFantasma <estebandh@gmail.com>",
          "timestamp": "2025-07-25T15:44:46Z",
          "tree_id": "372edc338b9e3d4fafd40ec39c74a41eeaf13c54",
          "url": "https://github.com/lambdaclass/ethrex/commit/1cf713fbe242f4fc54398423d450a93eafc54e07"
        },
        "date": 1753461651517,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167237478686,
            "range": "± 291293505",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b99a5c82fe7f9b76e41bae58d6fee763594c2fe9",
          "message": "build(l1, l2): add files to .dockerignore (#3645)\n\n**Motivation**\nRunning `COPY` locally was taking a long time\n\n**Description**\n- Added more stuff to .dockerignore\n- Removed some legacy MLIR stuff\n- Improved comments in `Dockerfile`",
          "timestamp": "2025-07-25T17:22:39Z",
          "tree_id": "39e73d707b93d1dd6b7bee5c96d52d27e1e8e654",
          "url": "https://github.com/lambdaclass/ethrex/commit/b99a5c82fe7f9b76e41bae58d6fee763594c2fe9"
        },
        "date": 1753467186024,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169246832041,
            "range": "± 489162941",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "633e5346bf7ec7e39f4dd42620572cc52b4e5ced",
          "message": "perf(levm): enable lto codegen (#3830)\n\n**Motivation**\n\nLto seems to improve perfomance in some benches without regressions.\n\nA question would be, do we add it as another profile that we use\nexplicitly for releases or keep it as default for --release. I ask this\nquestion because the --release flag is used in lot of testing code and\nit would slow compile times of those\n\n<img width=\"2560\" height=\"2235\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/e79fbb09-237f-4e91-a843-5f91e9d4ecbb\"\n/>",
          "timestamp": "2025-07-25T18:22:41Z",
          "tree_id": "0666b30b7eaad4e54f37a5c82bbbda4dd1c7fc12",
          "url": "https://github.com/lambdaclass/ethrex/commit/633e5346bf7ec7e39f4dd42620572cc52b4e5ced"
        },
        "date": 1753471055082,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163053752344,
            "range": "± 648058314",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "330571a4f818dc6a997b6cf034ac2ee3690b6492",
          "message": "fix(l2): use new rex send and call interface for ci (#3832)\n\n**Motivation**\n\nWith the changes made\n[here](https://github.com/lambdaclass/rex/pull/179) the CI failed\n\n**Description**\n\n- Use new rex cli interface\n- Pin `rex` version",
          "timestamp": "2025-07-25T19:38:25Z",
          "tree_id": "f54a3c4cc1f150ede2cf3e3bcfb4b1514a27fa5d",
          "url": "https://github.com/lambdaclass/ethrex/commit/330571a4f818dc6a997b6cf034ac2ee3690b6492"
        },
        "date": 1753475444786,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163445892442,
            "range": "± 683244780",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a3d334732590b8aa886f4dfe10aa1654e3db7ee6",
          "message": "fix(l1): change `ethrex/tooling/sync/readme.MD` to `README.md` (#3841)\n\n**Motivation**\nThe readme file at ethrex/tooling/sync is called `readme.MD` instead of\nthe usual `README.md`\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Change `readme.MD` filename to `README.md`\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-28T09:50:13Z",
          "tree_id": "8c6dfd8ebc41611bf92e907fd3ed52662717b1d9",
          "url": "https://github.com/lambdaclass/ethrex/commit/a3d334732590b8aa886f4dfe10aa1654e3db7ee6"
        },
        "date": 1753699539904,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162424611028,
            "range": "± 652401859",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2bfdc178d25b7f78078e4b99ec279c308a180ae4",
          "message": "feat(l2): prioritize privileged transactions (#3784)\n\n**Motivation**\n\nWe want to prioritize privileged transactions, to prevent the sequencer\nfrom exceeding it's inclusion deadline.\n\n**Description**\n\nAlso ensures privileged transactions are sorted by their nonce, to\nensure (the other case that may cause out-of-order insertion is handled\nin #3776) they're inserted in-order.\n\nCloses #3730",
          "timestamp": "2025-07-28T14:44:26Z",
          "tree_id": "c1630d705f79497e51a7c0b645e918cbb6c88f67",
          "url": "https://github.com/lambdaclass/ethrex/commit/2bfdc178d25b7f78078e4b99ec279c308a180ae4"
        },
        "date": 1753716825986,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161715858588,
            "range": "± 141407989",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "94380962+sofiazcoaga@users.noreply.github.com",
            "name": "sofiazcoaga",
            "username": "sofiazcoaga"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "42c2f5780b805674700e4304e42ce9e9f7cac874",
          "message": "refactor(levm): rewrite of EF state tests runner second iteration (#3666)\n\n**Description**\n\nFor the EF State Tests runner (started in #3642), this second iteration\nincludes:\n- post state checks (post state root hash, hashed logs, post state\naccounts, expected exceptions).\n- creation of two reports, one that enumerates the successful tests and\nthe other that details information about failing test cases.\n- the exclusion of the tests that are from pre-Merge forks. \n\n**Consideration** \nTo run the new runner from `ethrex/cmd/ef_tests/state` you can execute \n`make run-new-runner` and it will by default run everything in the\n`./vectors` directory. To specify a path include `TESTS_PATH=<path>`.",
          "timestamp": "2025-07-28T16:02:03Z",
          "tree_id": "c22e6ff9b68e105e8323e599821a2b8327f9d78e",
          "url": "https://github.com/lambdaclass/ethrex/commit/42c2f5780b805674700e4304e42ce9e9f7cac874"
        },
        "date": 1753721442574,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163231204591,
            "range": "± 199705877",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bd052c4cde32e98b27bf69c6d4890fc4f558a5a4",
          "message": "feat(l2): implement scrolling in monitor tables (#3717)\n\n**Motivation**\n\nSince not many rows fit on the screen, we want to be able to scroll each\ntable.\n\n**Description**\n\nSince stateful tables support scrolling, we just have to wire that. Also\nwe change the color of the box depending on the selected element to show\nthe user which table is selected for scrolling.\n\nCloses #3520, closes #3521, closes #3522, closes #3523, closes #3524,\ncloses #3525",
          "timestamp": "2025-07-28T16:06:11Z",
          "tree_id": "5d635e0898d771d1628fda173d43fc025c83e2c1",
          "url": "https://github.com/lambdaclass/ethrex/commit/bd052c4cde32e98b27bf69c6d4890fc4f558a5a4"
        },
        "date": 1753721750179,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163403889856,
            "range": "± 318135528",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "67700abf73d48ea46a1f37e1e989cb7aad813d19",
          "message": "feat(l2): allow setting height of the batch widget (#3690)\n\n**Motivation**\n\nUser might want to customize the UI\n\n**Description**\n\nAdds a CLI flag to set the height of the batch widget.\n\nCloses #3528\n\n---------\n\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>",
          "timestamp": "2025-07-28T16:32:20Z",
          "tree_id": "5233f78f5d9ec352bb06cd4e33bf96c9088426e0",
          "url": "https://github.com/lambdaclass/ethrex/commit/67700abf73d48ea46a1f37e1e989cb7aad813d19"
        },
        "date": 1753723354803,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 164357815444,
            "range": "± 556260898",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ce81363367e07da317033189cb6079eb66d2cfed",
          "message": "fix(l1,l2): add git commit version to docker image build (#3848)\n\n**Motivation**\n\nThe .git directory was being ignored in the .dockerignore\n\n**Description**\n\n- Remove .git from .dockerignore\n\n\n[Here](https://github.com/lambdaclass/ethrex/actions/runs/16574039300/job/46873667439?pr=3848)\nis a successful run of L2 integration test",
          "timestamp": "2025-07-28T17:32:04Z",
          "tree_id": "87abf2d3404eb707e40c3a7af6f14f467fa512bf",
          "url": "https://github.com/lambdaclass/ethrex/commit/ce81363367e07da317033189cb6079eb66d2cfed"
        },
        "date": 1753726881366,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163830072960,
            "range": "± 635707155",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "94380962+sofiazcoaga@users.noreply.github.com",
            "name": "sofiazcoaga",
            "username": "sofiazcoaga"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ebbb7e3de1fecac5a8d3c5e8a8ab061a80cf4668",
          "message": "refactor(levm): use common functions to deserialize in EF tests runner (#3806)\n\n**Description**\n\nThe current EF state tests runner has its own implementation for\ndeserializing every value that comes from the tests JSONs. The idea is\nto use already implemented common functions in `common/serde_utils.rs`\nor to update the existing functions to satisfy the runner's requirements\nas well.\n\nCloses #3793",
          "timestamp": "2025-07-28T18:23:54Z",
          "tree_id": "e9052f818cf73bf60786a14d73fbee3f7bde7218",
          "url": "https://github.com/lambdaclass/ethrex/commit/ebbb7e3de1fecac5a8d3c5e8a8ab061a80cf4668"
        },
        "date": 1753729943590,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160531357429,
            "range": "± 204106459",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c12cd30278592ba93f6a2df33bee57e5486d6c7b",
          "message": "feat(l2): show peer count in monitor when in based mode (#3668)\n\n**Motivation**\n\nCurrently peer count is a placeholder ('NaN') so we want an actual\nimplementations.\n\nThe peer count of the L2 should only be shown in based bode, because in\nother (non-based) modes peers aren't _needed_ and having more isn't\nnecessarily better.\n\n**Description**\n\nAdds a EthClient method to query net_peerCount, and uses it to get the\npeer count from the local node. Only displays the value if based mode is\nenabled.\n\nCloses #3516\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-07-29T14:51:01Z",
          "tree_id": "64c0045938e3bd46fda7dbaa08589a9c72205512",
          "url": "https://github.com/lambdaclass/ethrex/commit/c12cd30278592ba93f6a2df33bee57e5486d6c7b"
        },
        "date": 1753804033935,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161854094860,
            "range": "± 344032908",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "94380962+sofiazcoaga@users.noreply.github.com",
            "name": "sofiazcoaga",
            "username": "sofiazcoaga"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8e0d04d6d1a78e04deadb99664f237592cd25336",
          "message": "refactor(levm): add execution flags to EF tests runner (#3843)\n\n**Description**\n\nThis PR adds three types of execution flags to the runner of the EF\ntests:\n- a flag to run the tests in a specific path (could be either a `.json`\nfile or a directory).\n- a flag to skip certain `.json` files from execution. \n- a flag to indicate specific `.json` files to be executed. \n\nThese flags could be improved in a later iteration. \n\nCloses #3792",
          "timestamp": "2025-07-30T12:59:09Z",
          "tree_id": "a7d98230efa9a5cc7525e6306ab90a4c9b76d634",
          "url": "https://github.com/lambdaclass/ethrex/commit/8e0d04d6d1a78e04deadb99664f237592cd25336"
        },
        "date": 1753883333623,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163531116043,
            "range": "± 214828192",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "94380962+sofiazcoaga@users.noreply.github.com",
            "name": "sofiazcoaga",
            "username": "sofiazcoaga"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "104798dbc3c3e5f33940ceb736066fa7604cc9f4",
          "message": "docs(levm): add README and other docs for new EF tests runner (#3863)\n\n**Description**\n\nThis PR includes missing explanatory comments in the code of the new EF\nstate tests runner and a `README.md` that explains the purpose of the\nmodule and how to run the tests.",
          "timestamp": "2025-07-30T14:27:44Z",
          "tree_id": "0aa339dc369766ec8511ceac0b44721f93308358",
          "url": "https://github.com/lambdaclass/ethrex/commit/104798dbc3c3e5f33940ceb736066fa7604cc9f4"
        },
        "date": 1753888665682,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162302214564,
            "range": "± 147581304",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ed7fc008565f5f986b36a4dc84bd5c8956db4d3d",
          "message": "fix(l2): integration tests (#3851)\n\n**Motivation**\n\nTransactions revert sometimes because of exceeding the estimated gas\nlimit.\n\nThe estimation is done by executing the transaction with different gas\nlimits, binary searching the smallest value to which the tx does not\nrevert. We think this algorithm doesn't work properly when there's a big\nvariance in the execution gas, resulting in a too low estimation.\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n- adds logs to tests\n- doubles the gas limit estimation of test calls\n- changes the \"not an Integration Test\" name to make them required again\n- asserts transactions succeeded (receipt.status == true)\n\n\ncloses #3828\n\n---------\n\nCo-authored-by: avilagaston9 <gaston.avila@lambdaclass.com>",
          "timestamp": "2025-07-30T15:56:34Z",
          "tree_id": "26372ffb2743b22be247dc054a691ff9642888b5",
          "url": "https://github.com/lambdaclass/ethrex/commit/ed7fc008565f5f986b36a4dc84bd5c8956db4d3d"
        },
        "date": 1753894386741,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162298345747,
            "range": "± 218188120",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6967cf487bf8b4c261f7cdc2a33097e74c64f4ac",
          "message": "feat(l2): add privileged transaction cap (#3776)\n\n**Motivation**\n\nIf the l2 batches include too many privileged transactions, it may\nhappen that the gas cost of `getPendingTransactionsVersionedHash(uint16\nn)` becomes so high it's impossible to commit batches.\n\n**Description**\n\nTo prevent this, we record the privileged transaction count of the batch\nbeing built and ensure no more than a fixed amount (300 for now) is\nadded.\n\nWe add a spammer (that makes 1800 privileged transactions) as a\nregression test.\n\nAdditionally, this allows enforcing intra-batch ordering of privileged\ntransactions. This prevents the following scenario from happening:\n* A sends two deposits with gas values 1 (deposit 1) and 10M (deposit 2)\n* B then sends a deposit with gas value 1 (deposit 3)\n* The sequencer includes A's first deposit, but not the second because\nit's too big for the block. Deposit 3 is included because it's small.\n* The resulting inclusion order is 1, 3. This out-of-order and therefore\nthe batch is invalid.",
          "timestamp": "2025-07-30T16:17:44Z",
          "tree_id": "383642db8f5f7fa6e5c3bd21f0025ea3e141148f",
          "url": "https://github.com/lambdaclass/ethrex/commit/6967cf487bf8b4c261f7cdc2a33097e74c64f4ac"
        },
        "date": 1753895470732,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160653587709,
            "range": "± 249881133",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e7014ac919c88c6da9664070d8b1ec9d3c7ec3de",
          "message": "test(l2): monitor withdrawal widget integration tests (#3681)\n\n**Motivation**\n\nWe want to test the logic of the withdrawal widget, which is the only\none with significant logic behind it.\n\nAs for the other widgets:\n\n* NodeStatus/Batch are hard to test because they depend on\nout-of-control events, and don't to much beyond calling RPCs.\n* Mempool is hard to test, because we don't have much control (aside\nfrom \"tricks\" such as setting high nonces) over when tranactions are\npulled from the mempool. Also it doesn't have much logic inside. It also\nrelies on being part of the sequencer.\n* Deposits do have a little bit more logic, and can be somewhat\ncontrolled (deposits shouldn't magically disappear if nothing else is\nsending transactions). However, it relies on having access to the\nsequencer store so it's deferred.\n\n**Description**\n\nBoth ETH and ERC20 withdrawals are tested, as part of other integration\ntests.\n\nSome changes are made to make testing easier, and a bug (incorrect topic\nindex) is fixed.\n\nCloses #3526\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-07-30T16:54:54Z",
          "tree_id": "e99ab800a0060c8fc90f819c5e13f2dddde1eaa8",
          "url": "https://github.com/lambdaclass/ethrex/commit/e7014ac919c88c6da9664070d8b1ec9d3c7ec3de"
        },
        "date": 1753897737743,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162452167295,
            "range": "± 369883032",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "30327624+Mechanix97@users.noreply.github.com",
            "name": "Mechardo",
            "username": "Mechanix97"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2f9a876e6e2fe51c53bc646680b838b8e124a847",
          "message": "feat(l2): store sp1 & risc0 vk encoded (#3807)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nThe vk stored in the interface wasn't encoded, so it couldn't be read by\na human\n\n**Description**\n\nAdded encoding when saving vk in file. You can test this by running from\n`crates/l2`\n```bash\n make build-prover PROVER=risc0\n make build-prover PROVER=sp1\n PROVER_CLIENT_ALIGNED=true make build-prover PROVER=sp1\n```\n\nchanged the way the file is read in the contract deployment process.\n\nYou can test it using\n```bash\n COMPILE_CONTRACTS=true cargo run --release --bin ethrex_l2_l1_deployer --manifest-path contracts/Cargo.toml -- \\\n  --eth-rpc-url http://localhost:8545 \\\n  --private-key 0x385c546456b6a603a1cfcaa9ec9494ba4832da08dd6bcf4de9a71e4a01b74924 \\\n  --genesis-l1-path ../../fixtures/genesis/l1-dev.json \\\n  --genesis-l2-path ../../fixtures/genesis/l2.json \\\n  --contracts-path contracts \\\n  --sp1.verifier-address 0x00000000000000000000000000000000000000aa \\\n  --risc0.verifier-address 0x00000000000000000000000000000000000000aa \\\n  --tdx.verifier-address 0x00000000000000000000000000000000000000aa \\\n  --aligned.aggregator-address 0x00000000000000000000000000000000000000aa \\\n  --bridge-owner 0xacb3bb54d7c5295c158184044bdeedd9aa426607 \\\n  --on-chain-proposer-owner 0xacb3bb54d7c5295c158184044bdeedd9aa426607 \\\n  --deposit-rich \\\n  --private-keys-file-path ../../fixtures/keys/private_keys_l1.txt \\\n  --deploy-based-contracts \\\n  --sequencer-registry-owner 0xacb3bb54d7c5295c158184044bdeedd9aa426607\n```\n\n(you need to have a l1 running)\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-30T20:10:49Z",
          "tree_id": "f6144b9fde822d5fbe97b5e37800d120de2f7ca2",
          "url": "https://github.com/lambdaclass/ethrex/commit/2f9a876e6e2fe51c53bc646680b838b8e124a847"
        },
        "date": 1753909254972,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161273583007,
            "range": "± 576981516",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d5a49278a85ec3e7d663b403e53c23d6f1b5cd0",
          "message": "fix(l2): integration tests hotfix (#3892)\n\n**Motivation**\n\nafter merging #3776 a test was added that spams the bridge with big gas\nlimit transactions. In #3851 we upped the gas limit of all transactions\nby x2 because the estimation was too low. These two contributed to\nexceed the block gas limit.\n\nThis PR lowers the amount of spam txs\n\nthanks @iovoid !",
          "timestamp": "2025-07-30T21:01:48Z",
          "tree_id": "26a5877ab68e3eac5b1d233323d327de12e0e04e",
          "url": "https://github.com/lambdaclass/ethrex/commit/0d5a49278a85ec3e7d663b403e53c23d6f1b5cd0"
        },
        "date": 1753912229430,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160307952590,
            "range": "± 210568483",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "26416053148bc54d441aa85e529c474c8d8ef820",
          "message": "perf(l1): add (sender,nonce)=>tx_hash mapping (#3865)\n\nSome mempool operations need to query transactions by their sender and\nnonce. One of those cases is to know which transaction to replace when\nsender and nonce match.\nUntil now, we did that by iterating the whole mempool. This became a\nbottleneck for the mempool, given it's quadratic to the number of txs\nyou want to add.\nThis adds an auxiliary BTreeMap from the (sender, nonce) to the\ntransaction's hash.\nThis also helps for querying the current nonce of an address.\n\nTesting with a load test on ethrex-sync-3 (AMD Ryzen 5 3600 6-Core\nProcessor, 2 threads-per-core, 64GB RAM):\n- Reported time went down from 84\" to 71\";\n- Contribution of `find_tx_to_replace` to `add_transaction_to_pool` went\n  down from 80% to 1.6% according to samply;\n- Max throughput slightly improved, from 0.292Ggas/s to 0.362Ggas/s.\n\nFixes #3867\n\n---------\n\nCo-authored-by: Edgar <git@edgl.dev>",
          "timestamp": "2025-07-31T12:23:48Z",
          "tree_id": "24cc4208d8e7be7d98a7f1ea6dae36f54536b5f6",
          "url": "https://github.com/lambdaclass/ethrex/commit/26416053148bc54d441aa85e529c474c8d8ef820"
        },
        "date": 1753967592174,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 164104277576,
            "range": "± 344545842",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e02a846f11d5ca1b06099a8129b6a08d014bf786",
          "message": "fix(l1):  use p2p's `sync-test` feature in crate's `sync-test` feature (#3889)\n\n**Motivation**\n`ethrex-p2p` crate has code gated behind a `sync-test` feature, but this\nfeature is not enabled within the crate's `sync-test` feature, causing\nthis code not to be enabled when running ethrex with `sync-test`\nfeature.\nThis causes issues such as the one reported by #3594 where\n`EXECUTE_BATCH_SIZE` env var is not used.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Include p2p's `sync-test` feature in crate's `sync-test` feature\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3594",
          "timestamp": "2025-07-31T13:08:05Z",
          "tree_id": "ac8fea6e38c6d1f0d4acc4a431ae8df16b1bb9d0",
          "url": "https://github.com/lambdaclass/ethrex/commit/e02a846f11d5ca1b06099a8129b6a08d014bf786"
        },
        "date": 1753970309192,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163333814793,
            "range": "± 390541625",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cd6a57df800dba6645709518be653286e2c9b41c",
          "message": "fix(l1): yield in-between blocks during batch execution (#3873)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nRecently, while running full sync on sepolia network it has become a\ncommon occurrence to suddenly lose all connected peers due to a `Broken\nPipe` error. Upon further investigation this seems to be due to block\nexecution being too intensive and leaving p2p unresponsive.\nA quick fix for this was to add yields in-between block executions when\nexecuting blocks in batches. This has solved the problem for sepolia\ntestnet (Over 1 Day without incidents).\nThis could also be improved by further integrating `spawned` into the\nfull sync process.\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n* Add yields inbetween each block execution when executing blocks in\nbatches\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-31T13:09:45Z",
          "tree_id": "eda29b170beb98147e071897bf35bd473532c6d7",
          "url": "https://github.com/lambdaclass/ethrex/commit/cd6a57df800dba6645709518be653286e2c9b41c"
        },
        "date": 1753970446730,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162090272446,
            "range": "± 454071511",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "dcf04b3ca9c18a11d62b68073ebe5f05ccaac8f5",
          "message": "feat(l1): add specific error message when import is used with the wrong network (#3893)\n\n**Motivation**\nWhen using `import` subcommand with a chain.rlp file that doesn't match\nthe network, we issue the regular `Parent Block Not Found` error. We are\nable to distinguish this specific case as it will mean that the parent\nblock of block number 1 (aka the genesis block) is not found. This PR\ntakes advantage of this to issue a specific, more informative warning\nmessage for this specific case\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Add a separate warning message when the imported chain file is not\ncompatible with the genesis\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3813",
          "timestamp": "2025-07-31T13:28:37Z",
          "tree_id": "6f9eacf993b3d4486ebb70ed0a0a1bc78d1b002a",
          "url": "https://github.com/lambdaclass/ethrex/commit/dcf04b3ca9c18a11d62b68073ebe5f05ccaac8f5"
        },
        "date": 1753971450104,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163277192145,
            "range": "± 310139169",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8c89f522390ea3d47e334b78f582ab7181ef6a85",
          "message": "perf(levm): refactor `JUMPDEST` blacklist into a lazyly generated one (#3812)\n\n**Motivation**\n\nRight now we're generating the full jump target blacklist for each\nprogram.\n\n**Description**\n\n- Avoid generating the full blacklist for the entire program before\nrunning it.\n- Generate only up until the last checked address.\n- Generate only when requested.\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Edgar <git@edgl.dev>\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>",
          "timestamp": "2025-07-31T13:53:37Z",
          "tree_id": "a1b01711def3979e1d3045b51351e013e23de9a1",
          "url": "https://github.com/lambdaclass/ethrex/commit/8c89f522390ea3d47e334b78f582ab7181ef6a85"
        },
        "date": 1753973200517,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167918466363,
            "range": "± 1046727323",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "df57b3f3e1669d33370ca8c7689fcf83078f678f",
          "message": "feat(l2): always use monitor (#3759)\n\n**Motivation**\nOnce all monitor issues are resolved, it should be used by default\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nChange the `--monitor` flag for the `--no-monitor` one, which turns off\nthe monitor\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nIt should only be merged after all other issues are resolved\nhttps://github.com/lambdaclass/ethrex/issues/3513,\nhttps://github.com/lambdaclass/ethrex/issues/3526,\nhttps://github.com/lambdaclass/ethrex/issues/3534,\nhttps://github.com/lambdaclass/ethrex/issues/3516,\nhttps://github.com/lambdaclass/ethrex/issues/3520,\nhttps://github.com/lambdaclass/ethrex/issues/3521,\nhttps://github.com/lambdaclass/ethrex/issues/3522,\nhttps://github.com/lambdaclass/ethrex/issues/3523,\nhttps://github.com/lambdaclass/ethrex/issues/3524,\nhttps://github.com/lambdaclass/ethrex/issues/3525,\nhttps://github.com/lambdaclass/ethrex/issues/3527,\nhttps://github.com/lambdaclass/ethrex/issues/3528,\nhttps://github.com/lambdaclass/ethrex/issues/3529,\nhttps://github.com/lambdaclass/ethrex/issues/3530,\nhttps://github.com/lambdaclass/ethrex/issues/3531,\nhttps://github.com/lambdaclass/ethrex/issues/3532,\nhttps://github.com/lambdaclass/ethrex/issues/3695,\nhttps://github.com/lambdaclass/ethrex/pull/3757,\nhttps://github.com/lambdaclass/ethrex/pull/3736",
          "timestamp": "2025-07-31T14:19:16Z",
          "tree_id": "ffac00547d4e94650bcde9ecd21f80c8e2ef06cc",
          "url": "https://github.com/lambdaclass/ethrex/commit/df57b3f3e1669d33370ca8c7689fcf83078f678f"
        },
        "date": 1753974602642,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170235431104,
            "range": "± 527614533",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "86d1c7baca3a8fb1509457c3a128ba1efdc4f7f1",
          "message": "chore(l2): clean makefile (#3870)\n\n**Motivation**\n\nImprove our Makefile is a tech debt we are already suffering from. It is\noutdated, with unused or broken targets, and it's disorganized, making\nit hard to find useful ones.\nWhile reviewing it, I found it easier to make the changes myself rather\nthan creating issues.\n\n**Description**\n\n- Organizes the file into categories (l1,l2,prover,etc). Inspired in\n#3373.\n- Removes unused targets.\n- Since #3604, we only need `clean-contract-deps`, as our tests still\nclone and compile contracts. This PR removes the target and adds a step\nat the end of the integration tests to clean those directories.\n- Adds `deploy-l1-sp1` target to deploy the `sp1-verifier` contract,\nuseful for running tests on servers with a GPU.\n\nCloses None\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>",
          "timestamp": "2025-07-31T14:43:55Z",
          "tree_id": "6d46736349649032ef8ab796f8f8beaad0463b19",
          "url": "https://github.com/lambdaclass/ethrex/commit/86d1c7baca3a8fb1509457c3a128ba1efdc4f7f1"
        },
        "date": 1753976379313,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 171474097606,
            "range": "± 843656380",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "15d41ac4d0da0a2fc8c061a91d90b11b03787819",
          "message": "perf(levm): refactor the implementation of BLAKE2B that uses AVX2 (#3789)\n\n**Motivation**\n\nOur BLAKE2 precompile implementation using is slower than almost any\nother implementation.\n\n**Description**\n\nThis rewrite:\n- Avoids using the AVX2 gather instructions, which are notoriously slow.\n- Uses loop unrolling.\n\nThere was a problem in which the compiler did not inline AVX2 builtins\nand the performance went to the floor. This is the reason why there's an\nassembly file in this PR.\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Edgar <git@edgl.dev>",
          "timestamp": "2025-07-31T15:49:58Z",
          "tree_id": "94d1492bee9285e335197f89e56e9134b2d3997a",
          "url": "https://github.com/lambdaclass/ethrex/commit/15d41ac4d0da0a2fc8c061a91d90b11b03787819"
        },
        "date": 1753979960230,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163880587718,
            "range": "± 284983453",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "52fb1b737fe4e0fa57246a6136a220b1038f96ff",
          "message": "feat(l2): move ethrex l2 init command to ethrex l2 (#3805)\n\n**Motivation**\nWe want to init an l2 like this `ethrex l2` instead of `ethrex l2 init`\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nChange the l2 command to start with `ethrex l2` instead of `ethrex l2\ninit`\nThe rest of the commands that were ran like `ethrex l2 <command>` are\nnow run as `ethrex l2-tools <command>`\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>",
          "timestamp": "2025-07-31T17:20:48Z",
          "tree_id": "cafc0c247dadf1db48c5b342cfe4b43426e3097a",
          "url": "https://github.com/lambdaclass/ethrex/commit/52fb1b737fe4e0fa57246a6136a220b1038f96ff"
        },
        "date": 1753985452281,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162640509797,
            "range": "± 676898533",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "525cf45eeabc04d1b78838dceac4ee12ef6063e9",
          "message": "feat(l2): ethrex replay add metrics & logs (#3785)\n\n**Motivation**\n\nEthrex replay is not showing enough information which might lead users\nto think the program is stuck when it's actually doing things. Also we\nwant to have a way to easily create samply profiles for sp1\n\n**Description**\n\n- Add `profiling` feature to ethrex-replay and ethrex-prover to enable\nthe profiling feature in sp1\n- Add a makefile command to easily generate a samply for an l2 batch or\nan l1 block\n- Set tracing level to INFO for ethrex_replay, disable some sp1 logs\nthat were too spammy, add info! logs to ethrex replay\n- Logs where the data for the prover is coming from (local cache or RPC\nserver)\n   - Logs the amount of time an it took for the execution program to run\n   - Logs the amount of gas that was proven/executed\n- Fixes an issue where getting data for a batch from a validium mode L2\nfailed because when in validium mode the blobs field is empty\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>",
          "timestamp": "2025-07-31T18:23:21Z",
          "tree_id": "5dd7dacba3fc949893496b89abba677f3db4b7c6",
          "url": "https://github.com/lambdaclass/ethrex/commit/525cf45eeabc04d1b78838dceac4ee12ef6063e9"
        },
        "date": 1753989174188,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163645704610,
            "range": "± 963109753",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a02c142db47b2dddde24be1d75d1e2d1b4b820fa",
          "message": "fix(l2): update make target to init-l1-docker in tdx (#3910)\n\n**Motivation**\n\nWe have old targets in the TDX workflow. \n\n**Description**\n\n- Update target to initialize the L1 and L2 to the new ones\n- Update condition to run the TDX workflow in every change made under\n`crates/l2`",
          "timestamp": "2025-07-31T19:18:51Z",
          "tree_id": "79c8e79afda2c93044da34b9acf0c8facbb4005b",
          "url": "https://github.com/lambdaclass/ethrex/commit/a02c142db47b2dddde24be1d75d1e2d1b4b820fa"
        },
        "date": 1753992501670,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 165497660810,
            "range": "± 410650660",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bdba6262688d7f8f11fb55da7085303a7fc0f016",
          "message": "refactor(l2): deduplicate l2 test logic (#3796)\n\n**Motivation**\n\nThe \"wait until withdrawal is verified\" is duplicated four times.\n\nThe imports are disorganized.\n\n**Description**\n\nMoves the duplicate logic into a function, and improves imports.",
          "timestamp": "2025-07-31T19:22:16Z",
          "tree_id": "4394890f3773dbafb0b0bceb000a605d70dffd24",
          "url": "https://github.com/lambdaclass/ethrex/commit/bdba6262688d7f8f11fb55da7085303a7fc0f016"
        },
        "date": 1753992729491,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166179628025,
            "range": "± 321243633",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "58b93a2b120fb9f1e84bbd3b5ffccc10c38da669",
          "message": "refactor(l2): remove old dependencies from ethrex replay (#3902)\n\n**Motivation**\n\nIn the `ethrex_replay` crate there are some crates that are leftovers of\nprevious implementations. We want to remove those.\n\n**Description**\n\n- Remove all unused dependencies from the `Cargo.toml`\n- Change `HashMap` to the `std` version\n- Use `let Err(..)` instead of `match`",
          "timestamp": "2025-07-31T20:41:03Z",
          "tree_id": "189258e9fb3cea2fa969121db28f06e4eaf79f56",
          "url": "https://github.com/lambdaclass/ethrex/commit/58b93a2b120fb9f1e84bbd3b5ffccc10c38da669"
        },
        "date": 1753997442220,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 164124957608,
            "range": "± 223814911",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f628ff01996eb99075425720055ae16a88953127",
          "message": "chore(l1): add snooper for ethrex on ethereum package network params (#3693)\n\n**Motivation**\n\nWe want to see the JSON-RPC requests while running a local net.\n\n**Description**\n\nThis pr sets the snooper flag as true in the ethrex client configuration\nand a target to see the JSON-RPC messages on the console output.\n\nTo test it you can run:\n```bash\nmake localnet-snooper  \n```\n\n---------\n\nCo-authored-by: JereSalo <jeresalo17@gmail.com>",
          "timestamp": "2025-07-31T22:06:50Z",
          "tree_id": "68820da3d70bd99df0f7949438b643f451aab51f",
          "url": "https://github.com/lambdaclass/ethrex/commit/f628ff01996eb99075425720055ae16a88953127"
        },
        "date": 1754002650772,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 165667915460,
            "range": "± 695293522",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7914b6f359cd68da76c84868648cdbc18695374c",
          "message": "chore(l2): bump risc0 to 2.3.1 enable risc0 precompiles  (#3741)\n\n**Motivation**\n\nEnable risc0 precompiles to improve performance\n\n**Description**\n- bump risc0 to 2.3.1\n- Tested all patches from https://dev.risczero.com/api/zkvm/precompiles\nto see which ones compile\n- Added\n  - k256\n  - ed25519-dalek\n  - rsa\n  - crypto-bigint\n- Can be tested by running\n```Shell\ncd crates/l2/prover/zkvm/interface/risc0\ncargo tree -p <crate-name>\n```\nreplacing \\<crate-name\\> with one of the above added precompiles\n\n[Here](https://github.com/lambdaclass/ethrex/actions/runs/16422230774/job/46403548180)\nis a run of ethrex replay with the new precompiles",
          "timestamp": "2025-08-01T13:53:13Z",
          "tree_id": "9985dc376c358ccb464f2379aafd51cef965b549",
          "url": "https://github.com/lambdaclass/ethrex/commit/7914b6f359cd68da76c84868648cdbc18695374c"
        },
        "date": 1754059460679,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 165426501955,
            "range": "± 610931409",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4ef8801965cf2895d7896cfb0339fed02413ddf2",
          "message": "ci(l1): update to new ethereum package version. (#3860)\n\n**Motivation**\nStart using the official `ethrereum-package` repo instead of a fork\n\n**Description**\nSee https://github.com/ethpandaops/ethereum-package/pull/1131\n\n- Updated version of ethereum-package to use the lastest one instead of\na fork\n- Improved `checkout-ethereum-package` make task\n- Made sure we're using the local build of ethrex everywhere\n- Downgraded an error to warning\n\nCloses #595",
          "timestamp": "2025-08-01T14:15:41Z",
          "tree_id": "a55302f13ead84c4d7dfe0333cb3e6e6cf503461",
          "url": "https://github.com/lambdaclass/ethrex/commit/4ef8801965cf2895d7896cfb0339fed02413ddf2"
        },
        "date": 1754060772124,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166072452063,
            "range": "± 712955906",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a59fc0ba0e2beac421fcb7ce9741e894ad37121c",
          "message": "fix(l2): gas bump logic  (#3904)\n\n**Motivation**\n\nFix some errors related to the `send_tx_bump_gas_exponential_backoff`\nthat appeared while running in testnet scenarios\n\n**Description**\n- when bumping gas += was being used for max_priority_fee_per_gas\ninstead of = so priority_gas was growing much more than expected\n- Some RPCs returned an error when the transaction could not replace an\nexisting one because the gas of the new tx did not exceed the previous\none, now instead of returning that error we bump the gas and continue\n- The parsing of a hex string in `get_max_priority_fee` was wrong\nbecause u64 does not implement the parsing of hex string now it retruns\na U256 the same way the `get_gas_price` function does and its then\ncasted to u64\n- With the fix of `get_max_priority_fee` a new issue appeared where the\ngas_price in the tx receipt was incorrect, this was fixed by using\n`tx.effective_gas_price()` instead of `tx.gas_price()`",
          "timestamp": "2025-08-01T14:53:18Z",
          "tree_id": "d7216c449269ed667df8191f29ac5cfc9fcecce7",
          "url": "https://github.com/lambdaclass/ethrex/commit/a59fc0ba0e2beac421fcb7ce9741e894ad37121c"
        },
        "date": 1754063007134,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166037292323,
            "range": "± 342450573",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "53660242+samoht9277@users.noreply.github.com",
            "name": "Tomás Casagrande",
            "username": "samoht9277"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5628e4578a9f43e18d4e754149f2dd67e8b7558a",
          "message": "ci(l1): add Docker login to prevent rate limit. (#3919)\n\n**Motivation**\n\nUnauthenticated users have strict rate limiting. We created an DockerHub\naccount to circumvent this.\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\nAdds Docker login and reverts caché removal.\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-08-01T15:11:40Z",
          "tree_id": "b0366bfcabd20a1d3f9f91e69940894b16d60b2a",
          "url": "https://github.com/lambdaclass/ethrex/commit/5628e4578a9f43e18d4e754149f2dd67e8b7558a"
        },
        "date": 1754064085785,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166475765801,
            "range": "± 589557361",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "54416486e60d080baeaa0857bc861642783dc668",
          "message": "perf(l1): batch new pooled tx hashes (#3912)\n\n**Motivation**\n\nReduce throughput degradation seen in localnet scenarios with more than\none ethrex\n\n**Description**\n\nUp until now we were sending individual messages for each tx we haven't\nshared with the network. We discovered [in this\nbranch](https://github.com/lambdaclass/ethrex/pull/3900) that removing\nthe send of new pooled transactions along with the broadcast of\ntransactions removed the issue.\n\nBatching the new pooled transactions in localnets with two ethrex show\nmetrics similar to previous runs for localnets with only one ethrex.\n\nApart from this a Test have been disable due to being a false positive\npreviously, here is an issue explaining it: #3914",
          "timestamp": "2025-08-01T15:34:22Z",
          "tree_id": "fd122bd091da3e034c4d58cbe2dbf86179483390",
          "url": "https://github.com/lambdaclass/ethrex/commit/54416486e60d080baeaa0857bc861642783dc668"
        },
        "date": 1754065550370,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 164628837498,
            "range": "± 616147668",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce98123c062a50cfb92b45ca8950cab66ffab01c",
          "message": "feat(l1): add max blob count check to `BlobsBundle::validate` (#3888)\n\n**Motivation**\nValidate that the blob count doesn't exceed the maximum amount when\nvalidating blob bundles\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Add max amount check to `BlobsBundle::validate`\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #1201",
          "timestamp": "2025-08-01T18:41:58Z",
          "tree_id": "14a2f69deee1053a8d139f51798e9a8ddf2ec5f7",
          "url": "https://github.com/lambdaclass/ethrex/commit/ce98123c062a50cfb92b45ca8950cab66ffab01c"
        },
        "date": 1754076751040,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 164600218823,
            "range": "± 255305892",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fb1fd37e64e6bc51ee7bdf0f5491fa401535604d",
          "message": "fix(l1): disable default request body limit on authenticated RPC (#3929)\n\n**Motivation**\n\nConsensus client calls to `engine_newPayload` sometimes failed with `413\npayload too large` HTTP errors (and sometimes `broken pipe`, which might\nbe related).\n\n**Description**\n\nThis PR solves this by disabling the request body limit, since it\ndoesn't make much sense to add a limit to authenticated requests.",
          "timestamp": "2025-08-01T23:30:19Z",
          "tree_id": "73cd781393cb7f53596e34b4ef6a27bc203b2e20",
          "url": "https://github.com/lambdaclass/ethrex/commit/fb1fd37e64e6bc51ee7bdf0f5491fa401535604d"
        },
        "date": 1754094003410,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 164125613117,
            "range": "± 246625272",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2b5f17e54d97e5d29ef77858e67d780a134a77b9",
          "message": "fix(l1): avoid broadcasting duplicate transactions (#3897)\n\n**Motivation**\n\nWire protocol correctness. Crucially, sending a transaction back to its\nsource is punishable by connection drop.\n\n**Description**\n\nAdd an early check for presence in the mempool for received\ntransactions, update the per-peer filters, and use them to avoid sending\nthem transactions they already know about in the `Transactions` relay\nand the `SendNewPooledTransactionHashes` paths.",
          "timestamp": "2025-08-04T14:07:32Z",
          "tree_id": "8d31b85b81f96d69ae44bddc24f467718c3d6c33",
          "url": "https://github.com/lambdaclass/ethrex/commit/2b5f17e54d97e5d29ef77858e67d780a134a77b9"
        },
        "date": 1754320231010,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163224238089,
            "range": "± 207703998",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e6c47ec5c1d13c7f3a98fd44baf7b928f32c26f8",
          "message": "fix(l1): allow some txs to be missing in GetPooledTransactions (#3921)\n\n**Motivation**\n\nWe're failing to respond `GetPooledTransactions` messages because we\ngive up when we can't find one of the hashes.\nThe spec states it's OK to simply skip that transaction in that case and\nthat it's better to send what we have.\nThis fixes the \"hash not in mempool\" messages, but mostly makes our\nclient more compliant.\n\n**Description**\n\nErrors in `Blockchain::get_p2p_transaction_by_hash` come from missing or\ninvalid transactions only. None of that is fatal for the ends of the\nwire protocol, so ignore those errors and return all valid transactions\nwe have matching the hashes.\n\nCloses #3928\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-08-04T15:02:19Z",
          "tree_id": "46745705810064f56e102a843e411637ebf909d6",
          "url": "https://github.com/lambdaclass/ethrex/commit/e6c47ec5c1d13c7f3a98fd44baf7b928f32c26f8"
        },
        "date": 1754322784359,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 165053624573,
            "range": "± 1007526174",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estebandh@gmail.com",
            "name": "ElFantasma",
            "username": "ElFantasma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "49fde90e24ca437c2fbc0caf8ba81d2820faad0b",
          "message": "chore(l1): preventing errors to propagate to spawned (#3840)\n\n**Motivation**\n\nError lines in spawned logs [were\nmuted](https://github.com/lambdaclass/ethrex/pull/3467) because there\nwas a lot of spam regarding failed connections and handshakes. That was\nnot safe as other important problems may get muted too.\n\n**Description**\n\nThis PR handles the connection errors on handshake and initialization\nand logs a lower priority log line (debug) as it is pretty common.\n\nIt also reverts the log directive to mute spawned initialization errors.\n\nit requires [spawned\n0.2.2](https://github.com/lambdaclass/spawned/pull/39).\n\nCloses #3472",
          "timestamp": "2025-08-04T16:25:48Z",
          "tree_id": "36fdd705fd3162a82dd9e4616806878c0705ccec",
          "url": "https://github.com/lambdaclass/ethrex/commit/49fde90e24ca437c2fbc0caf8ba81d2820faad0b"
        },
        "date": 1754327754556,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 164725041738,
            "range": "± 999665450",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e610d4a9781d216c07289a650a7aa6e334d1fbae",
          "message": "refactor(l2): improve error handling in `EthClient`'s `send_request_to_all` (#3932)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nWhen sending a transaction, the `EthClient` returns the last `Ok()`\nresult, if there is one, but it doesn't take into account\n`Ok(RpcResponse::Error)` cases, resulting in confusing errors.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nImprove the way responses are handled.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-08-04T19:39:07Z",
          "tree_id": "ca9cd4c29fe79a5d44b398d1279bbf7faa7cf5fa",
          "url": "https://github.com/lambdaclass/ethrex/commit/e610d4a9781d216c07289a650a7aa6e334d1fbae"
        },
        "date": 1754339334511,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 165049708380,
            "range": "± 350033969",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f30ef7bdaeabe07ae43e94631e2668e0f43ebdc6",
          "message": "feat(l2): ethrex l2 --dev (#3836)\n\n**Motivation**\nWe want to be able to initialize the full l2 by running `ethrex l2\n--dev`\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nMove all the logic for initializing the l2 to `cmd/ethrex`\nNow calling `ethrex l2 --dev` does the following\n\n- Remove L1 and L2 DBs\n- Initialize an L1\n- Deploy contracts\n- Initialize an L2\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>\nCo-authored-by: Manuel Iñaki Bilbao <manuel.bilbao@lambdaclass.com>",
          "timestamp": "2025-08-04T20:44:32Z",
          "tree_id": "074c7abef322d7221ee15e42e6f9ef6f534ad8a2",
          "url": "https://github.com/lambdaclass/ethrex/commit/f30ef7bdaeabe07ae43e94631e2668e0f43ebdc6"
        },
        "date": 1754343372085,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 164573385374,
            "range": "± 243385445",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2775a126bf5c55f4430287104a19df44c6656d2a",
          "message": "ci(l1): set project status automatically for `ethrex_l1`. (#3567)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nThis affects only PRs and issues of the project `ethrex_l1`. If this PR\ndoesn't belong to that project then it will exit early.\n\n- Automatically change the project status of a PR in cases in which we\ncan determine it with 100% accuracy:\n- `In Progress`: PR is **moved** to **draft** (or opened in draft too).\n  - `In Review`: PR is **opened** for review.\n- `Requested Changes`: Reviewer submitted a **review requesting\nchanges**. (changed: now this puts pr `in Progress`)\n- The `Approved` status is not worth being determined in the CI because\nfor it to know this all the other CI checks must have run, and it\ndefeats the purpose of the status itself, because we only want to use\nthis status for knowing when not to review a PR that has already reached\napproval status, it's just for efficiency. So manual intervention would\nmake much more sense in this case.\n- Sync the status of the issues that the PR closes with the status of\nthe PR. Note that the sync won't be triggered if the status is manually\nchanged, but changing status manually should be reserved for special\noccasions.\n\n\nConcrete example:\nIf I had a PR that was `In Review` and somebody requested changes then\nthe state would change to `Requested Changes`. If I then put the PR in\ndraft it would change to `In Progress` and if I re-open the PR it would\nbe `In Review` once again. Then imagine somebody manually changes the\nstate to `Approved` because the PR is ready to be merged but then comes\nanother person that sees that something is wrong and requests changes,\nthe PR state is going to be `Requested Changes` once again. Remember\nthat in this process the issues linked to the PR mimic its state, so\nthat info is updated in both ends.\n\nEdit: `Requested Changes` state was removed, when changes are requested\nthe PR is put `In Progress`, the rest of the example remains the same.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3585\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-08-04T21:47:22Z",
          "tree_id": "038ca816cf78c86e842121260ddb99cb38eba5d7",
          "url": "https://github.com/lambdaclass/ethrex/commit/2775a126bf5c55f4430287104a19df44c6656d2a"
        },
        "date": 1754347024031,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 165814484859,
            "range": "± 348970310",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8f7a3bb6a69f96ec186ff8e698409d287618cff8",
          "message": "chore(l1): downgrade rpc api read requests to debug. (#3923)\n\n**Motivation**\nWe don't want to spam the logs with getters. Only relevant things should\nbe logged with info or above.\n\n**Description**\n- Downgraded read RPC requests to `debug`.\n- Changed some log levels that were inappropriate\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>\nCo-authored-by: fmoletta <99273364+fmoletta@users.noreply.github.com>",
          "timestamp": "2025-08-04T22:00:20Z",
          "tree_id": "530037b1ecc7f4be0a1ee22c97d77368f8b65675",
          "url": "https://github.com/lambdaclass/ethrex/commit/8f7a3bb6a69f96ec186ff8e698409d287618cff8"
        },
        "date": 1754347870433,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 165391126321,
            "range": "± 1018627058",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5db9cc8dcec16d8831e83669068aa3a9ae0d57f4",
          "message": "fix(l1): remove panics in blockchain tests, re run stateless as separate suite (#3872)\n\n**Motivation**\n\nThe logic that did stateless execution for blockchain tests had panics\nthat stopped the whole suite run instead of failing only that test.\n\n**Description**\n- Remove all panics from `re_run_stateless` function, `return Result<(),\nString>`\n- Modify `parse_and_execute` function to accept a boolean as parameter\nthat when set to true enables stateless execution\n- Add when running with levm, a new function\n`parse_and_execute_stateless_runner` that enables this flag as a second\nsuite of tests.\n\n**Examples**\n\nrunning a single test with levm\n```\ncargo test --release --features levm parse_and_execute_runner::prague/eip7002_el_triggerable_withdrawals/withdrawal_requests_during_fork/withdrawal_requests_during_fork.json\n```\nrunning a single test with levm with stateless execution\n```\ncargo test --release --features levm parse_and_execute_stateless_runner::prague/eip7002_el_triggerable_withdrawals/withdrawal_requests_during_fork/withdrawal_requests_during_fork.json -- --nocapture\n```\n\nCloses #3859",
          "timestamp": "2025-08-05T12:31:33Z",
          "tree_id": "f27b92121155d56708e9f1fd5c1c36216d03e491",
          "url": "https://github.com/lambdaclass/ethrex/commit/5db9cc8dcec16d8831e83669068aa3a9ae0d57f4"
        },
        "date": 1754400101233,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163435660250,
            "range": "± 1015882384",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "53660242+samoht9277@users.noreply.github.com",
            "name": "Tomás Casagrande",
            "username": "samoht9277"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a4ad768392d29e73376e1eeadfc9901fc49c9237",
          "message": "ci(l1): fix Docker Login CI. (#3935)\n\n**Motivation**\nExternal contributors who forked the repo were experiencing CI failures\nduring Docker Hub login because they didn’t have access to our Docker\ncredentials (stored as repository variables and secrets)\n\nThis PR fixes the issue by adding a conditional step to the GitHub\nAction workflow. It checks if Docker credentials are available, and if\nthey're not set (as in forks), the login step is skipped.",
          "timestamp": "2025-08-05T14:30:48Z",
          "tree_id": "bb68c4c75083700fcc3991f01e5fca3c9da84e21",
          "url": "https://github.com/lambdaclass/ethrex/commit/a4ad768392d29e73376e1eeadfc9901fc49c9237"
        },
        "date": 1754407253163,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 164606725237,
            "range": "± 460174691",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "41284bd7bc077cecb601042269fd99fbf3f86755",
          "message": "refactor(l2): use logs from receipt for the integration tests (#3937)\n\n**Motivation**\n\nWe are currently using the logs of the receipt to get the block number\nto requests again the logs.\n\n**Description**\n\nUse the same logs from the receipts and remove the request to the client\nfor the logs\n\nCloses #3876",
          "timestamp": "2025-08-05T14:34:50Z",
          "tree_id": "ebac3197320cb8240c0403e4faaab0e0c051fef5",
          "url": "https://github.com/lambdaclass/ethrex/commit/41284bd7bc077cecb601042269fd99fbf3f86755"
        },
        "date": 1754407584290,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166099484279,
            "range": "± 476294503",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5ec00e544af6f1d39f61a811d279c7be3b137b5f",
          "message": "perf(l1): save chain config in vm,  cache latestblock header (#3878)\n\n**Motivation**\n\nOn samply, most of the work seems to be in validate_tx on the rpc.\n\nInside validate tx, get_block_header took 22% and latest_block_number\nabout 3%.\nThis pr turns those numbers into 0.2%. Now get account info takes 93%. \n\nPR based on #3865\n\nBefore (pr #3865):\n<img width=\"1008\" height=\"188\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/4de19499-aa0c-4a07-84ab-3d6c1403e6ea\"\n/>\n\n\nAfter:\n<img width=\"968\" height=\"194\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/3dba9a15-710d-4e8a-986e-273c23deb587\"\n/>\n\n\nmake load-test\n\nPrev(perf/aux_sender_nonce_mempool) gigas of first 4 blocks:\n0.6, 0.5, 0.4, 0.4, 0.4\n\nPR Gigagas of first 4 blocks:\n0.7, 0.56, 0.43, 0.42,\n\n\nSlightly improves ethrex transfers bench on gas benches (7.82%).\n\n---------\n\nCo-authored-by: Mario Rugiero <mrugiero@gmail.com>",
          "timestamp": "2025-08-05T15:07:41Z",
          "tree_id": "9d45a300c14ddfb48c171b18ff458dce16adf818",
          "url": "https://github.com/lambdaclass/ethrex/commit/5ec00e544af6f1d39f61a811d279c7be3b137b5f"
        },
        "date": 1754410152992,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163930722087,
            "range": "± 438508305",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "032dbc9294c579ea18da5097c4cbae46901478cb",
          "message": "fix(levm): fix tracing delegatecall (#3823)\n\n**Motivation**\n\n- The from in the DELEGATECALL trace was wrong.\n\n**Description**\n\nI wanted the trace of a transaction that made use of DELEGATECALL and I\nsaw that ethrex had a weird response, so I tried getting the same trace\nwith geth and the response was what I expected it to be. So that's how I\nrealized that we had a bug :)\n\n[Hoodi\ntransaction](https://hoodi.etherscan.io/tx/0x0bca10d4b752d3c630f4666a226a37d57a08b0b042b18888dbcb34de73679cf0)\n```\ncurl <rpc_hoodi_node> \\\n-X POST \\\n-H \"Content-Type: application/json\" \\\n--data '{\"method\":\"debug_traceTransaction\",\"params\":[\"0x0bca10d4b752d3c630f4666a226a37d57a08b0b042b18888dbcb34de73679cf0\", {\"tracer\": \"callTracer\"}], \"id\":1,\"jsonrpc\":\"2.0\"}'\n```\n\nBasically if our trace was used in a block explorer (be it blockscout or\netherscan) the delegatecall \"From\" field would be the EOA and that is\nwrong! Check the actual tracing in etherscan\n[here](https://hoodi.etherscan.io/tx/0x0bca10d4b752d3c630f4666a226a37d57a08b0b042b18888dbcb34de73679cf0#internal)",
          "timestamp": "2025-08-05T16:44:50Z",
          "tree_id": "926e92b4631cdacfb93533cefbad13e093221ad5",
          "url": "https://github.com/lambdaclass/ethrex/commit/032dbc9294c579ea18da5097c4cbae46901478cb"
        },
        "date": 1754415287972,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163552093726,
            "range": "± 284125977",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "53660242+samoht9277@users.noreply.github.com",
            "name": "Tomás Casagrande",
            "username": "samoht9277"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c9912cce64b46779d621788a737d9053262d92cf",
          "message": "ci(l1): fix typo in Docker Login CI. (#3956)\n\n**Motivation**\nWhen credentials were present, `DOCKER_CREDS_EXISTS` was never set to\ntrue, meaning the Docker login step was always skipped, even when creds\nwere there. This PR fixes this.",
          "timestamp": "2025-08-05T18:48:35Z",
          "tree_id": "d1aaf535e6423409f640ab652c62e17aa26c09d4",
          "url": "https://github.com/lambdaclass/ethrex/commit/c9912cce64b46779d621788a737d9053262d92cf"
        },
        "date": 1754422708045,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162402985581,
            "range": "± 528043415",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bc75e72075f48a2f8f01c4f63b99e0f3d9b319f8",
          "message": "refactor(l2): reduce lines in eth client (#3957)\n\n**Motivation**\n\nCreating a `RpcRequest` required ~6 lines of duplicated code in each\nmethod.\nWe were also matching on `Result` instead of using the `?` operator.\n\n**Description**\n\n- Adds a `RpcRequest::new()` method.  \n- Improves error handling.\n\n\nCloses None",
          "timestamp": "2025-08-05T21:22:50Z",
          "tree_id": "fdf48d3eaf08edf27f27312eb7b02807027f7801",
          "url": "https://github.com/lambdaclass/ethrex/commit/bc75e72075f48a2f8f01c4f63b99e0f3d9b319f8"
        },
        "date": 1754432602345,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 164258724432,
            "range": "± 827023068",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e2e597008a7d7c40a12d44712566ae9cdef929cf",
          "message": "fix(l1,l2): fix git branch and hash in `ethrex --version` (#3947)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n`ethrex --version` is broken in Docker image right now, displaying\n`VERGEN_IDEMPOTENT_OUTPUT` instead of git branch and hash. This also\nbreaks the commit check between L2 sequencer and prover when running one\nin Docker and another natively.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nCopy `.git` dir into the Docker build stage allowing `cargo build` to\ncalculate the values.\nRelated: #3848 \n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-08-06T17:35:25Z",
          "tree_id": "7ca84148c6d123d520d8a9e59d217f6c7706b33d",
          "url": "https://github.com/lambdaclass/ethrex/commit/e2e597008a7d7c40a12d44712566ae9cdef929cf"
        },
        "date": 1754504730523,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162470502163,
            "range": "± 733213470",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5fd68a2ee5c4e1749605344ad1b586380ae2ce01",
          "message": "fix(levm): ignore offset value when size is zero (#3950)\n\n**Motivation**\nWe recently ran into a gas mismatch when running full sync in sepolia\ntestnet. The problem was that we were reverting earlier due to an\n`ExceptionHalt::VeryLargeNumber`. This happened during a `STATICCALL`\nopcode execution where the `arg_offset` value taken from the stack was a\nvery large number. Upon comparing our implementation with geth we\nrealized that the difference lies in that we do ignore the value of the\noffset when calculating the memory size If the size is zero, but by that\ntime we have already converted the offset into a usize value, and failed\nif we couldn't do so.\nThe transaction where this bug was discovered is\nhttps://sepolia.etherscan.io/tx/0x0495f636d6d69c91e40afc44d3bd12800831d848391666cf23325720fd9ebfd4\nThis PR solves this problem and aims to solve future related problems by\nadding a utility function `size_offset_to_usize` which first converts\nthe size into a size value and if it is not zero then converts the\noffset into a size value, if the size is zero, offset will be ignored\nand given a default value as it won't be used.\nIt also gets rid of some explicit error handling by adding utility\nfunction `u256_to_usize` to checkedly convert U256 to usize. Some tweaks\nhave also been performed while checking against geth handling.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Add util  function `u256_to_usize` which converts a U256 to usize.\n* Add util function `size_offset_to_usize` which converts U256 size and\noffset to usize, ignoring the offset value if size is zero.\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None, but is needed in order to progress through #1676",
          "timestamp": "2025-08-06T17:51:43Z",
          "tree_id": "d3df32822cc1e773677992d5a7cf197b34cb3bc7",
          "url": "https://github.com/lambdaclass/ethrex/commit/5fd68a2ee5c4e1749605344ad1b586380ae2ce01"
        },
        "date": 1754505733383,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 159905030825,
            "range": "± 347485737",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "023c3ca51210233318512911ebdbfa804450ae51",
          "message": "fix(l1): allow P2P init with `dev` feature (#3970)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nIf compiled with `dev` feature and not using `--dev`, P2P is not\nenabled, making it impossible to sync with other networks.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nRemove feature dependency on P2P initialization.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>",
          "timestamp": "2025-08-06T17:53:09Z",
          "tree_id": "2c8142756e43fb46b0ce98aa23c8482fc7fee851",
          "url": "https://github.com/lambdaclass/ethrex/commit/023c3ca51210233318512911ebdbfa804450ae51"
        },
        "date": 1754505826006,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 159766965558,
            "range": "± 264673650",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45134e83fc8d2cc39473f9cb391490f54262d03f",
          "message": "chore(l1): improve load_test readme about samply (#3899)\n\n**Motivation**\n\nAdds a better command snippet for running samply",
          "timestamp": "2025-08-06T18:13:25Z",
          "tree_id": "a00551be36ed8632090f1820679317b5ea491804",
          "url": "https://github.com/lambdaclass/ethrex/commit/45134e83fc8d2cc39473f9cb391490f54262d03f"
        },
        "date": 1754507042107,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162333237228,
            "range": "± 520235707",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6a511ff2e0a1b8bcacf59a042d42a95fc9a1438e",
          "message": "feat(l1): embed bootnodes for public networks inside binary (#3967)\n\n**Motivation**\n\nWe want users to be able to run the binary without needing to have a\nfile of known bootnodes for each public network.\n\n**Description**\n\nThis PR embeds the bootnode files inside the binary.\n\nCloses #3966",
          "timestamp": "2025-08-06T19:13:51Z",
          "tree_id": "35509bef5962a276de04c4ac67d0bfa7056cd8c5",
          "url": "https://github.com/lambdaclass/ethrex/commit/6a511ff2e0a1b8bcacf59a042d42a95fc9a1438e"
        },
        "date": 1754510646003,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161764105253,
            "range": "± 518732141",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4e0ed9cc3b4ccb818dbc37afb305726cc01cec55",
          "message": "refactor(l1,l2): merge prover binary into `ethrex` + improve releases (#3826)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nThere were too many binaries in the release and it was confusing.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nMerge `ethrex_prover` CLI into `ethrex` under `l2 prover` subcommand.\nAlso, the same binary can now support both SP1 and RISC0 provers, the\nuser may select desired one with the `--backend` flag. This ends up with\na single binary that can run an L1 EL, an L2 sequencer and an L2 prover.\nL1 and L2 contracts were also merged in a single tar, along with the\nverification keys for the provers\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Juan Bono <juanbono94@gmail.com>",
          "timestamp": "2025-08-06T19:37:42Z",
          "tree_id": "7e56597d52173d14dc9b11e7fe7107939c34ed21",
          "url": "https://github.com/lambdaclass/ethrex/commit/4e0ed9cc3b4ccb818dbc37afb305726cc01cec55"
        },
        "date": 1754514535030,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163090339611,
            "range": "± 555565024",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "319c050790d47825ed8dcd156644f0503fd2457e",
          "message": "chore(l1): remove unused genesis path constants (#3969)\n\nThis PR removes some unused constants and functions related to genesis\npaths.",
          "timestamp": "2025-08-08T12:54:48Z",
          "tree_id": "ccd86490d65450164c7b0dbf4b82ee2f8a9c7577",
          "url": "https://github.com/lambdaclass/ethrex/commit/319c050790d47825ed8dcd156644f0503fd2457e"
        },
        "date": 1754663719879,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161704512409,
            "range": "± 289839323",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "aca533e892a69c5978d4fceed7eef34c794a2828",
          "message": "chore(l1): remove needless clone in ExecutionPayload into_block (#3996)\n\n**Motivation**\nFound this needless clone while checking the code.",
          "timestamp": "2025-08-08T13:45:48Z",
          "tree_id": "7b98a5c497afa03967a43f2b5481d84a28014603",
          "url": "https://github.com/lambdaclass/ethrex/commit/aca533e892a69c5978d4fceed7eef34c794a2828"
        },
        "date": 1754666374266,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161878911311,
            "range": "± 190512168",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "02b02a5c49458ebd448199c1d7e624c8a8ac1938",
          "message": "refactor(l2): use recover_address from common types (#3795)\n\n**Motivation**\n\nWhen #2999 was introduced, the initial refactor for using\nrecover_address was added, but some refactoring was still missing. See\n[here](https://github.com/lambdaclass/ethrex/pull/2999#discussion_r2219846846)\nfor the relevant conversation.\n\n**Description**\n\n- Remove the `recover_address` function from `rlpx/utils.rs` in favor of\nusing the one in `ethrex_common`\n- Modify all L2 Messages to use `Signature` struct from `ethereum_types`\ninstead of a `[u8; 64]` and one `u8`.\n- Remove the `based.rs` file which became unused after the refactor made\nin #2999",
          "timestamp": "2025-08-08T14:23:55Z",
          "tree_id": "27eef7a8e886890f16e36af68696461ac2c3ff96",
          "url": "https://github.com/lambdaclass/ethrex/commit/02b02a5c49458ebd448199c1d7e624c8a8ac1938"
        },
        "date": 1754668436963,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 159898576640,
            "range": "± 346954854",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "230d247751b142c6fb57a57c48338b3b3c99aa7a",
          "message": "fix(l1): decode the fork ID as a list (#3492)\n\nThis PR decodes the fork ID of a node record's \"eth\" entry as a list.\nPreviously, we were assuming the list was small enough to have a length\nof a single byte.",
          "timestamp": "2025-08-08T14:33:01Z",
          "tree_id": "6d5bbd826043b03ef1901bd2613ea3bc777d37ee",
          "url": "https://github.com/lambdaclass/ethrex/commit/230d247751b142c6fb57a57c48338b3b3c99aa7a"
        },
        "date": 1754669057059,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163280807639,
            "range": "± 211634508",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0a5e1f3407d95decc0bcd066aa54a0bb635519a2",
          "message": "refactor(l1,levm): improve levm `Database` and `Account` (#3913)\n\n**Motivation**\n\n- Handle tech debt within LEVM Database and Accounts. Improve Database\ninterface when getting account info, decouple getting account info from\ncode, creating our type of Account for LEVM so that it enables future\nchanges.\n\n**Description**\n\n- Inside of LEVM use a brand new type of account called `LevmAccount`,\nthe difference with the previous `Account` type is that this one doesn't\nstore the code and it also has an `AccountStatus` that is useful in the\nEVM for various comparisons. The most important being if an account has\nbeen destroyed and re-created, which is an edge case that can cause\ntrouble. Also we can determine if an account state was modified or not,\nso if it wasn't accessed mutably we'll know we don't have to do any\ncheck when getting state transitions.\n- Change the API of the Database. Before we got the AccountInfo and code\nwithin get_account_info method, which is kinda wrong. Now we just get\nthe actual AccountInfo and the refactor of LevmAccount enables us to get\nthe code in another instant.\n- Now we get the code of an account only if we really need it! So there\nare not unnecessary accesses to the database and also as a side effect\n`ethrex_replay` will work better because before we tried to access some\ncode when the Execution Witness didn't have this and we failed on\nreplaying the block.\n- stop cloning account on withdrawal processing\n- add `get_account_mut` method to db. This is for accessing an account\nmutably from outside the VM, for example, when processing withdrawals.\n\nIt is shown to fix ethrex_replay withdrawal issues in this branch:\n`jere-test-refactor-levm-replay`\nIt has the changes of `fix_execution_witness_serde` and the changes of\nthis PR\n\nCreated Issues, some of them are follow-ups to this #3946 #3948 #3951\n\nCloses #3298\nCloses #3907\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>\nCo-authored-by: fmoletta <99273364+fmoletta@users.noreply.github.com>",
          "timestamp": "2025-08-08T15:18:56Z",
          "tree_id": "95fe7a8cb2a99155935d14ac7c3d7b091594eba4",
          "url": "https://github.com/lambdaclass/ethrex/commit/0a5e1f3407d95decc0bcd066aa54a0bb635519a2"
        },
        "date": 1754669344301,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160605368035,
            "range": "± 371439363",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3316a5b10a992018a5dcc9c4f3d9ec084e343314",
          "message": "refactor(l2): remove eth_sender module (#3997)\n\n**Motivation**\n\nThere is no reason to keep it in a separate module.\n\n**Description**\n\nMoves `EthClient.call()` method with the rest of methods.\n\nCloses #3751",
          "timestamp": "2025-08-08T19:26:42Z",
          "tree_id": "f00cbe8f12639b73d45cabe594e6afd10172c83f",
          "url": "https://github.com/lambdaclass/ethrex/commit/3316a5b10a992018a5dcc9c4f3d9ec084e343314"
        },
        "date": 1754684215577,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 159894788071,
            "range": "± 207368478",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0b49b19f80363f72edb2b48bbcf3537b84830f14",
          "message": "refactor(l2): remove ProofCoordinator dev_mode (#3999)\n\n**Motivation**\n\nWe can infer the `Exec` proof type from the contract.\n\n**Description**\n\n- Removes the `dev_mode` ProofCoordinator CLI option.\n- If no other proof type is needed, defaults to `Exec`.\n\nCloses #3698",
          "timestamp": "2025-08-08T19:37:11Z",
          "tree_id": "c88de0ebbff81a374a0ff883616da59414194d8b",
          "url": "https://github.com/lambdaclass/ethrex/commit/0b49b19f80363f72edb2b48bbcf3537b84830f14"
        },
        "date": 1754684793613,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 159824040584,
            "range": "± 342099188",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9f0505edf49e6715d08204fa2fdc6d1e5926ee28",
          "message": "fix(l1): commit forkchoice update in a single db tx (#3927)\n\n**Motivation**\n\nA bug was found in our L2 integration tests caused by a race condition\nduring the forkchoice update. More context\n[here](https://github.com/lambdaclass/ethrex/issues/3887).\n\n**Description**\n- Creates `forkchoice_update` method in the L1 store to perform all\ncanonical updates and block labeling in a single tx in the db.\n- Removes the following `Store` methods:\n    - `mark_chain_as_canonical`\n    - `update_finalized_block_number`\n    - `update_safe_block_number`\n    - `update_latest_block_number`\n    - `set_canonical_block`\n    - `unset_canonical_block`\n- Updates the calls to the removed methods to use the new one.\n\nCloses #3887",
          "timestamp": "2025-08-08T20:06:04Z",
          "tree_id": "15dbdb332c777d8a05fe2b48f43dac629da014fa",
          "url": "https://github.com/lambdaclass/ethrex/commit/9f0505edf49e6715d08204fa2fdc6d1e5926ee28"
        },
        "date": 1754686636481,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162394408852,
            "range": "± 259791600",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44068466+SDartayet@users.noreply.github.com",
            "name": "SDartayet",
            "username": "SDartayet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c5db7a94930be77aa7ec90ac0ed87c2d8784d4fe",
          "message": "feat(l1, l2, levm): profiling metrics (#3240)\n\n**Motivation**\n\nBeing able to profile the different sections of block processing in a\nway that let's us analyze them via graphs.\n\n**Description**\n\nThis PR adds the necessary instrumenting to measure the time spent in\ndifferent sections of code. A section can be measured with span, and the\naccumulated runtime for each section can be exported and reset with an\n`export_metrics` event. All metrics are also moved to a folder in the\nroot of the project to simplify things.\n\nTo test this PR, you can run the client with metrics enabled and the\nrequisite Grafana and Prometheus docker images up. In `tooling/sync`\nthere's a makefile with some targets to do this automatically.\n`start_hoodi_metrics_docker` and `start_holesky_metrics_docker`. You can\nalso test an import with the target `import_with_metrics` by passing it\nthe environment variable `RLP_FILE` with a path to the rlp file with the\nblocks you wanna add. Metrics can be seen on\n`http://localhost:3701/metrics` and the grafana dashboards are available\non `http://localhost:3001`\n\nExample of the graph output:\n\n![image](https://github.com/user-attachments/assets/aad508df-8772-4d83-b53a-2f9fea0ba4f5)\n\n---------\n\nCo-authored-by: Lucas Fiegl <iovoid@users.noreply.github.com>\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Manuel Iñaki Bilbao <manuel.bilbao@lambdaclass.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>\nCo-authored-by: Mario Rugiero <mrugiero@gmail.com>\nCo-authored-by: MrAzteca <azteca1998@users.noreply.github.com>\nCo-authored-by: Edgar <git@edgl.dev>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-08-08T20:10:30Z",
          "tree_id": "eae2bc96040be8d2c1b26589de8ef3141a27cd78",
          "url": "https://github.com/lambdaclass/ethrex/commit/c5db7a94930be77aa7ec90ac0ed87c2d8784d4fe"
        },
        "date": 1754687064717,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160352077030,
            "range": "± 281609776",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "895de3ec8cedefc4383737f411b64e1f9291fab1",
          "message": "fix(l2): compile contracts on releases (#4002)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nWithout compiling contracts, `ethrex l2 --dev` doesn't work.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nAdd `COMPILE_CONTRACTS` env var to compilation. Also default `.env` file\nto cwd instead of cargo manifest path\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-08-08T20:43:16Z",
          "tree_id": "ddfe5b223c46ef02342ff837e2771c3ffb0ff602",
          "url": "https://github.com/lambdaclass/ethrex/commit/895de3ec8cedefc4383737f411b64e1f9291fab1"
        },
        "date": 1754688872686,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161048062305,
            "range": "± 460657933",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3478a18011f20016479d5b5fe351480dd656d1f9",
          "message": "fix(l1): load Store state when exporting blocks (#3998)\n\n**Motivation**\n\n`ethrex export` is broken due to #3878\n\n**Description**\n\nThis PR fixes the `Export` subcommand by adding an initial state loading\nfrom the DB to initialize the `latest_block_header` cache.\n\n---------\n\nCo-authored-by: fmoletta <99273364+fmoletta@users.noreply.github.com>",
          "timestamp": "2025-08-08T21:01:42Z",
          "tree_id": "d05802812c5ba2873bd988730958756215737c11",
          "url": "https://github.com/lambdaclass/ethrex/commit/3478a18011f20016479d5b5fe351480dd656d1f9"
        },
        "date": 1754689938420,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160460667338,
            "range": "± 312569828",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f43e1731f5c363c92e6408f702da8a628aa49dc6",
          "message": "docs(l1,l2): refactor documentation (#3978)\n\n**Motivation**\n\nThe documentation is too messy and has internal development instructions\nmixed with the instruction for the actual users\n\n**Description**\n\nThe best way to review this pr by looking at the final result using\n`make docs-serve` in the root of the repo. If it's your first time using\nmdbook you might need to run `make docs-deps` first\n\nCloses #issue_number",
          "timestamp": "2025-08-08T22:01:53Z",
          "tree_id": "7dc2f9da7faac060d56a5d4c6c4ceee32d2a72b0",
          "url": "https://github.com/lambdaclass/ethrex/commit/f43e1731f5c363c92e6408f702da8a628aa49dc6"
        },
        "date": 1754693565400,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161273833833,
            "range": "± 321850392",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9b57e2b9c8fb5adf745a7afa03d6e373689eabfe",
          "message": "fix(l1): re-tag image as latest in hive report (#4001)\n\n**Motivation**\n\n[The daily report workflow is\nfailing.](https://github.com/lambdaclass/ethrex/actions/runs/16821221966/job/47648330723)\n\n**Description**\n\nThis PR re-tags `ethrex:unstable` as `ethrex:latest`, so hive finds the\nimage. You can see this is working\n[here](https://github.com/lambdaclass/ethrex/actions/runs/16839851386).",
          "timestamp": "2025-08-08T22:10:35Z",
          "tree_id": "4d86d6f391f780e3d3a1cec8143d4bdf5651b652",
          "url": "https://github.com/lambdaclass/ethrex/commit/9b57e2b9c8fb5adf745a7afa03d6e373689eabfe"
        },
        "date": 1754694142476,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162767136803,
            "range": "± 414851057",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "967ed78c2197a871a90a5f79420fd9f8a546d79a",
          "message": "ci(l1,l2): use Ubuntu 24 instead of 22 for Linux ARM runners (#4004)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nUbuntu 22 has an old version of clang which is not compatible with `solc\n0.8.29`.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nBumped to Ubuntu 24.04\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-08-11T12:45:34Z",
          "tree_id": "eb1e8ebd9974b1705b3b253c580bc3f773a9faa1",
          "url": "https://github.com/lambdaclass/ethrex/commit/967ed78c2197a871a90a5f79420fd9f8a546d79a"
        },
        "date": 1754922264440,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161624587919,
            "range": "± 307032962",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7241f57e0594d79979bcf17eb1b9daab2e39dc58",
          "message": "docs(l2): fix ethrex contracts download link (#4009)\n\n**Motivation**\n\nThe contracts are now bundled in a single file\n\n**Description**\n\nChange the link to use the new name `ethrex-contracts.tar.gz`",
          "timestamp": "2025-08-11T13:43:13Z",
          "tree_id": "dfd645841f253b947b36c565fed131107ff000c9",
          "url": "https://github.com/lambdaclass/ethrex/commit/7241f57e0594d79979bcf17eb1b9daab2e39dc58"
        },
        "date": 1754925271624,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161173356175,
            "range": "± 243873982",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "97bdff0c672e0e01434b9a8363442f8de1f31a08",
          "message": "fix(l1): potential overflows in `calculate_base_fee` (#3954)\n\n**Motivation**\nWhile the values used and the output of `calculate_base_fee` fit into\nu64, some results of internal multiplications can go over 64 bits. This\nPR fixes this potential overflows by using u128 to handle values that\ncan go over 64 bits during calculation (aka values involved in additions\nand multiplications)\nThis bug was first encountered on block 6029872 of sepolia testnet\n(which failed due to invalid base fee)\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Use `u128` to handle internal values which may overflow u64 during\n`calculate_base_fee`\n* Add test for `calculate_base_fee` using values that would overflow u64\nduring calcs\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None, but is needed in order to progress through #1676\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>",
          "timestamp": "2025-08-11T15:01:28Z",
          "tree_id": "d96dc69d9df31690997790cdb63609e637b6f5d7",
          "url": "https://github.com/lambdaclass/ethrex/commit/97bdff0c672e0e01434b9a8363442f8de1f31a08"
        },
        "date": 1754927540307,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163241826074,
            "range": "± 231352701",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b7b7c1bf19e873c93e1791687a7bf038fad490ae",
          "message": "refactor(l1): tooling/sync make targets to be generic across networks (#3869)\n\n**Motivation**\nThe current Makefile on tooling/sync has a bunch of different yet very\nsimilar targets that vary depending on whether they are used on hoodi or\nholesky networks. This is not much of an issue with just two networks,\nbut would become quite bloated if we wanted to also add targets for\nsepolia and mainnet networks.\nThe aim of this PR is to refactor these duplicated targets into a single\none leveraging the `NETWORK` env var and also allow these targets to\nsupport mainnet and sepolia networks\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Replace inner targets `holesky-lighthouse` & `hoodi-lighthouse` with\ngeneric `start-lighthouse` target that depends on `NETWORK` env var\n* Replace inner targets `start-ethrex-holesky` & `start-ethrex-hoodi`\nwith generic `start-ethrex` target that depends on `NETWORK` env var\n* Replace targets `start-holesky-metrics-docker` &\n`start-hoodi-metrics-docker` with generic `start-metrics-docker` target\nthat depends on `NETWORK` env var + A wildcard target\n`start-%-metrics-docker` that sets the `NETWORK` env var to the wildcard\nso that previous targets are still functional.\n* Replace targets `flamegraph-holesky` & `flamegraph-hoodi` with generic\n`flamegraph-inner` target (as `flamegraph` is already its own target)\nthat depends on `NETWORK` env var + A wildcard target `flamegraph-%r`\nthat sets the `NETWORK` env var to the wildcard so that previous targets\nare still functional.\n* `NETWORK` env var is no longer strictly required, and has default\nvalue set to mainnet (Docs updated)\n* Removed check for `NETWORK` env var being present (as it now uses\ndefault value)\n* Updated handling of BOOTNODES:\n* Removed `HOLESKY_BOOTNODES` and `HOODI_BOOTNODES` as they are already\npresent on the preset bootnodes file\n* Only set the `--bootnodes` flag when running ethrex if the `BOOTNODES`\nenv var was set\n* (Misc) Fix `help` target so that it also includes wildcard targets +\nset it as default target\n* (Misc) Mention installing `flamegraph` crate on README`\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3838 (No longer needed with this change)\n\n---------\n\nCo-authored-by: Mario Rugiero <mrugiero@gmail.com>",
          "timestamp": "2025-08-11T15:17:54Z",
          "tree_id": "3afab62f322b5356269e8499e105b6899e1dd18b",
          "url": "https://github.com/lambdaclass/ethrex/commit/b7b7c1bf19e873c93e1791687a7bf038fad490ae"
        },
        "date": 1754928650064,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163501150580,
            "range": "± 989127468",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9d6d7c61120775c6bfea73f21eef22e6d126869c",
          "message": "feat(l1): bump libmdbx max size to 8TB (#4011)\n\n**Motivation**\nRecently, we ran out of map space while full syncing on sepolia testnet\nat 2.1TB. This PR increases the max size of the DB so we don't run into\nthis problem again in the near future\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Increase `MAX_MAP_SIZE` constant from 2TB to 8TB\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None, but is needed for #1676",
          "timestamp": "2025-08-11T15:34:45Z",
          "tree_id": "ed660011bc415a24b5a1cc07854e203bb934d98c",
          "url": "https://github.com/lambdaclass/ethrex/commit/9d6d7c61120775c6bfea73f21eef22e6d126869c"
        },
        "date": 1754929474443,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161496760952,
            "range": "± 210552005",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "48914d88570975b838373416d47e6c2672b8bb44",
          "message": "fix(l2): fix default vk paths of deployer (#4013)\n\n**Motivation**\n\nPaths were invalid because now the L2 is run from the `cmd/ethrex`\nbinary crate.\n\nIntegration tests were passing because the vk paths are overwritten in\nthe L2 config, to point into the vk file that's on the container's\nvolume root dir.",
          "timestamp": "2025-08-11T18:00:25Z",
          "tree_id": "6aabf873212f791d35b8ae1c673d7936359f2534",
          "url": "https://github.com/lambdaclass/ethrex/commit/48914d88570975b838373416d47e6c2672b8bb44"
        },
        "date": 1754938334199,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163253346043,
            "range": "± 557815289",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e4d97165c314e096aafc553f727210bde631d7af",
          "message": "refactor(levm): move `get_state_transitions` logic to `GeneralizedDatabase` (#4003)\n\n**Motivation**\nMove `get_state_transitions` implementation logic from `vm` crate to\n`levm` crate in order to improve its api for levm users\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Add `GeneralizedDatabase` method `get_state_transitions`\n* Use above method in `LEVM:: get_state_transitions` (vm/backend)\n* Re-export `AccountUpdate` from levm crate\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3951",
          "timestamp": "2025-08-11T22:00:44Z",
          "tree_id": "65baac1ae124b3fd0010dbb07ce1d7cad56d0bb6",
          "url": "https://github.com/lambdaclass/ethrex/commit/e4d97165c314e096aafc553f727210bde631d7af"
        },
        "date": 1754952757294,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163252615992,
            "range": "± 448485622",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9a771ea8f3b895153a5f122caab87a1e7e6f7967",
          "message": "feat(l1): add `--input_dir` and `--output_dir` options to archive sync (#3962)\n\n**Motivation**\nAllow writing dump state to files while archive syncing and using them\nfor archive syncing without the need of an active archive node .\nThis PR adds the following flags:\n* `--ipc_path`: replaces the previously required `archive_node_ipc`\nrequired unnamed arg\n* `--output_dir`: outputs the state data received during the sync to the\ngiven directory\n* `--input_dir`: allows fetching state data from a previous archive sync\nexecution instead of an archive node\n* `--no_sync`: skips state rebuild, only usable with `--output_dir` to\nspeed up state data writing when syncing the current node is not needed\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Adds new CLI flags `--ipc_path`, `--input_dir`, `--output_dir`,\n`--no_sync`\n* Abstracts archive sync main behaviour into structs to accommodate new\nfeatures:\n* DumpReader: Allows reading state data from either an ipc connection or\na directory\n* DumpProcessor: Processes state data by either using it to rebuild the\nstate and/or writing it to a file\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-08-11T22:18:28Z",
          "tree_id": "d2f1dc95e5f8e2a9903a6f710cad03a2b2910b22",
          "url": "https://github.com/lambdaclass/ethrex/commit/9a771ea8f3b895153a5f122caab87a1e7e6f7967"
        },
        "date": 1754953743581,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161142790308,
            "range": "± 150546747",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5acad245d6893db13cc2e28c53ba064f33a7e51c",
          "message": "fix(l2): use SP1 embedded allocator (#3760)\n\n**Motivation**\n\nSP1 by default uses a \"[bump\nallocator](https://docs.succinct.xyz/docs/sp1/generating-proofs/advanced#embedded-allocator)\"\nwhich never deallocs zkvm memory. If we try to prove a batch with ~1500\nempty blocks, SP1 panics with an OOM error.\n\nBy enabling the `embedded-alloc` allocator the proof is generated\ncorrectly for this big batch. This is being tested further.\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-08-12T13:25:18Z",
          "tree_id": "160ed6b7a22878cca1b2dd5c3805e872b2f08f0a",
          "url": "https://github.com/lambdaclass/ethrex/commit/5acad245d6893db13cc2e28c53ba064f33a7e51c"
        },
        "date": 1755008138713,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162103424583,
            "range": "± 387995006",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "154b2f7f7b706250ad8259736bef8022219f3e5e",
          "message": "fix(l2): make tdx private key an optional argument (#3934)\n\n**Motivation**\n\nThe `proof-coordinator.tdx-private-key` flag was always required even\nwhen not actively used\n\n**Description**\n\n- Make the flag optional and handle the Option type in the required\nplaces\n\nCloses #3750",
          "timestamp": "2025-08-12T18:47:46Z",
          "tree_id": "e17429ab18be4bcb699347681cde03ffb993bbf1",
          "url": "https://github.com/lambdaclass/ethrex/commit/154b2f7f7b706250ad8259736bef8022219f3e5e"
        },
        "date": 1755030245460,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160305417856,
            "range": "± 181820073",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "78d57f4b9a523dfc861b2c8c8352bc59b76522eb",
          "message": "feat(l1,l2): show default datadir when running `--help`. (#4024)\n\n**Motivation**\nWhen running `ethrex --help`, I want to see the default datadir that is\ngoing to be used.\n\n**Description**\nThis is part of https://github.com/lambdaclass/ethrex/pull/3770 but with\na smaller scope (no migration to PathBuf) to keep the changes small.\n\nCloses #issue_number",
          "timestamp": "2025-08-12T19:00:15Z",
          "tree_id": "9b2e2f261e344faa41c2d0c52f714b1d1767fb4b",
          "url": "https://github.com/lambdaclass/ethrex/commit/78d57f4b9a523dfc861b2c8c8352bc59b76522eb"
        },
        "date": 1755031031819,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 158397968946,
            "range": "± 207523237",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4491ebbc11615b48204beec41d4753bd058b06b9",
          "message": "feat(l1): add more block execution breakdown metrics. (#4043)\n\n**Motivation**\nTo know how much time it takes to read accounts/storage.\n\n**Description**\n- Added instrumentation for account and storage reads\n- Also fixed the store DB job not working properly because of it\nhappening in another thread.\n- Added pie chart to the L1 Performance dashboard and removed the other\none.",
          "timestamp": "2025-08-14T13:57:31Z",
          "tree_id": "c026ebe95c44440d3b018a1abf8894df05e0ffc1",
          "url": "https://github.com/lambdaclass/ethrex/commit/4491ebbc11615b48204beec41d4753bd058b06b9"
        },
        "date": 1755185727525,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161676315226,
            "range": "± 269315287",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "58a6347caa2730e4785bd45c8e3f27201debf5d8",
          "message": "chore(l1): improve log message when trying to run incompatible configs (#4022)\n\n**Motivation**\nCurrent error message was confusing.",
          "timestamp": "2025-08-14T16:13:13Z",
          "tree_id": "4295b5beea8b44ac2666649772943f08161a8203",
          "url": "https://github.com/lambdaclass/ethrex/commit/58a6347caa2730e4785bd45c8e3f27201debf5d8"
        },
        "date": 1755191403326,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163129228674,
            "range": "± 221342729",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2e4bf6d5c3d5e845a49747447098e4db644aa935",
          "message": "fix(l2): disable gpu in `make lint` target (#4048)\n\n**Motivation**\n\n`make lint` was failing with:\n\n```text\nwarning: risc0-sys@1.4.0: Compiler family detection failed due to error: ToolNotFound: failed to find tool \"nvcc\": No such file or directory (os error 2)\nerror: failed to run custom build command for `risc0-sys v1.4.0`\n\nCaused by:\n  process didn't exit successfully: `/Users/mega/execution/ethrex/target/release/build/risc0-sys-d088ac4aaf714579/build-script-build` (exit status: 1)\n  --- stdout\n...(a lot of lines)\n\n  --- stderr\n\n\n  error occurred in cc-rs: failed to find tool \"nvcc\": No such file or directory (os error 2)\n```\n\n**Description**\n\nThis PR removes the `--all-features` flag and replaces it with `-F` and\na list of all features minus the \"gpu\" one that caused the problem\n(`--all-features` is kept for L2 lint workflow). I got the list of\nfeatures with `cargo add -n ethrex`.",
          "timestamp": "2025-08-14T17:14:50Z",
          "tree_id": "ecb8d45f8fc2a5adc99f7cce6628e8b6df1927d0",
          "url": "https://github.com/lambdaclass/ethrex/commit/2e4bf6d5c3d5e845a49747447098e4db644aa935"
        },
        "date": 1755194740734,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161664688242,
            "range": "± 195353704",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "37f25170badef29a2a47a86992e2717ee0b3def4",
          "message": "perf(levm): use malachite for modexp (#4045)\n\nUse malachite library to improve the performance of the modexp\nprecompile. There are speedups up to 7-8x observed in the new\nbenchmarks.\n\n---------\n\nCo-authored-by: Tomás Arjovsky <tomas.arjovsky@lambdaclass.com>",
          "timestamp": "2025-08-14T17:40:22Z",
          "tree_id": "b4e6884f84debf2dcab25b0046b9c8c55744eca8",
          "url": "https://github.com/lambdaclass/ethrex/commit/37f25170badef29a2a47a86992e2717ee0b3def4"
        },
        "date": 1755196575613,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162250831980,
            "range": "± 325840171",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a71da2164627496e57de09fbd84295ce03864515",
          "message": "feat(l1): add a new manual docker publish for performance tag (#4053)\n\n**Motivation**\n\nHave a manually triggered docker publish of our latest changes in\nperformance.\n\n**Description**\n\nThis PR adds a workflow which copy our current docker publish but\ninstead of be triggered by push to main it can be just triggered\nmanually.",
          "timestamp": "2025-08-14T19:05:39Z",
          "tree_id": "753e2b5d32498e057988d20d7bdf8cd44767d7f5",
          "url": "https://github.com/lambdaclass/ethrex/commit/a71da2164627496e57de09fbd84295ce03864515"
        },
        "date": 1755201401232,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 165382508205,
            "range": "± 2632390424",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e220fbe44abe2bb9743d9239b31f29d6bb39ce0d",
          "message": "fix(l1): restore datadir path  (#4050)\n\n**Motivation**\nPR #4024 changed how we initialize the datadir. Instead of looking for\nthe database in a path relative to the home directory (ie:\n.local/share/datadir on linux) it now looks for it on the path relative\nto the current directory (ie: ethrex/datadir). This caused problems when\nupdating the ethrex commit on currently running ethrex nodes due to the\nDB mismatch.\nThis PR restores the previous behaviour, and has been confirmed to work\nas usual on the aforementioned ethrex nodes.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Restore where we look for the datadir (relative to home vs current\ndir)\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None, but is needed to continue #1676",
          "timestamp": "2025-08-14T21:19:20Z",
          "tree_id": "c4f260b1ff71c3c7f1beed9459ec48fcf49ba43b",
          "url": "https://github.com/lambdaclass/ethrex/commit/e220fbe44abe2bb9743d9239b31f29d6bb39ce0d"
        },
        "date": 1755209341506,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 159840167639,
            "range": "± 553076435",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e1da8bff3abbafd6dc202385bc56f72d3f9ddf78",
          "message": "chore(levm): remove unused bigint dep from levm (#4060)\n\n**Motivation**\n\nWith the change from bigint to malachite for modexp, bigint is now an\nunused dependency.\n\nfixes #4057",
          "timestamp": "2025-08-18T14:18:06Z",
          "tree_id": "00953dde9885a6844f348a43fec8aea364c993c6",
          "url": "https://github.com/lambdaclass/ethrex/commit/e1da8bff3abbafd6dc202385bc56f72d3f9ddf78"
        },
        "date": 1755530250614,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 164799785808,
            "range": "± 852835239",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "104713523f3bbc32a9d56b54e925370e02c3cc61",
          "message": "perf(l2): use rkyv instead of bincode for sp1 (#3831)\n\n**Motivation**\n\nafter #3765 running a samply shows bincode deserialization taking up\nmore than 45% of execution time in a large l2 batch\n\n**Description**\n\n- implement rkyv Archive trait for all of `ProgramInput` fields and its\ncontaining structs\n- for sp1 serialize `ProgramInput` as bytes, then use write_slice to\nwrite to sp1 stdin, then deserialize the bytes in sp1 main with\nfrom_bytes\n\n**Metrics**\n\ncommand:\n```\nSP1_PROVER=cuda cargo run --release --features \"sp1,l2,gpu\" -- prove batch --rpc-url <RPC-URL> --network 65536300 48\n```\n\nspecs:\n```\nCPU: 13th Gen Intel(R) Core(TM) i5-13500\nRAM: 64GB DDR4 3200MT/s\nGPU: NVIDIA RTX 4000 SFF Ada Generation\n```\n\n\n716 blocks 0tx/b\n\n- this pr: `Successfully executed SP1 program  in 83.47s`\n- main: `Successfully executed SP1 program  in 262.82s`\n\n\n716 blocks 1tx/b\n\n- this pr: `Successfully executed SP1 program  in 528.02s`\n- main: `Successfully executed SP1 program  in 784.57s`\n\n\n717 blocks 2tx/b\n\n- this pr: `Successfully executed SP1 program  in 1234.45s`\n- main: `Successfully executed SP1 program  in 1676.83s`",
          "timestamp": "2025-08-18T16:47:41Z",
          "tree_id": "5a836fd0e1a8af51a085f69bd6d5843cb5af3b5e",
          "url": "https://github.com/lambdaclass/ethrex/commit/104713523f3bbc32a9d56b54e925370e02c3cc61"
        },
        "date": 1755539054936,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163201389057,
            "range": "± 322683311",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f17fb7dbe2edb3e32ea30b7415c809846a9d56a",
          "message": "fix(l2): get gas price error (#4061)\n\n**Motivation**\n\nOur CI is sometimes failing with:\n```\nthread 'l2_integration_test' panicked at crates/l2/tests/tests.rs:1847:10:\ncalled `Result::unwrap()` on an `Err` value: GetGasPriceError(RPCError(\"Internal Error: Error calculating gas price: missing data\"))\n```\n\n**Description**\n\n- Modifies `get_block_body()` to check whether the requested body is the\nlatest, and makes the query by hash if so.\n\nCloses #4006",
          "timestamp": "2025-08-18T18:20:08Z",
          "tree_id": "24b0289c086a3d5b08e39ca5fc5e73b5463bdb8e",
          "url": "https://github.com/lambdaclass/ethrex/commit/9f17fb7dbe2edb3e32ea30b7415c809846a9d56a"
        },
        "date": 1755544343856,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 165792914761,
            "range": "± 778826914",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "443f9d0c31b4da413f7f798e58aeae0e5a51abac",
          "message": "refactor(l2): remove redb and libmdbx from rollup store (#4063)\n\n**Motivation**\n\nWe are not using `libmdbx` and `redb` for the rollup store and\nmaintaining them is a waste of time.\n\n**Description**\n\nRemoves `libmdbx` and `redb` from the rollup store.\n\nCloses #3743",
          "timestamp": "2025-08-18T19:28:25Z",
          "tree_id": "5fd590c4a80d87db9a38e1ecbff420596a912339",
          "url": "https://github.com/lambdaclass/ethrex/commit/443f9d0c31b4da413f7f798e58aeae0e5a51abac"
        },
        "date": 1755548683074,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163080566680,
            "range": "± 398012153",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estebandh@gmail.com",
            "name": "ElFantasma",
            "username": "ElFantasma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "66d3e7dcec4d7628a6fe34762251fc5106e3a589",
          "message": "chore(l1,l2): upgraded spawned to 0.3.0 (#4062)\n\nSpawned 0.3.0 has a major performance upgrade on certain GenServers.\n\nUpgrades spawned to the version 0.3.0 and updates the code accordingly",
          "timestamp": "2025-08-18T20:20:17Z",
          "tree_id": "2b97d7572f7a52b050247324c3f2c6d7cb1aee53",
          "url": "https://github.com/lambdaclass/ethrex/commit/66d3e7dcec4d7628a6fe34762251fc5106e3a589"
        },
        "date": 1755551504139,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162043841607,
            "range": "± 464138278",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "314ba222e42eef6012489904322e7c34786e597f",
          "message": "fix(l2): ignore \"based\" capability if not in L2 (#4041)\n\n**Motivation**\n\nThe capability exchange would fail if our peer supported the \"based\"\ncapability and we were running in L1 mode.\n\n**Description**\n\nThis PR ignores the \"based\" capability if we aren't in L2 mode.",
          "timestamp": "2025-08-18T21:42:46Z",
          "tree_id": "7b80e14bec2e3b2a40fc139a996dc0893d0ee95f",
          "url": "https://github.com/lambdaclass/ethrex/commit/314ba222e42eef6012489904322e7c34786e597f"
        },
        "date": 1755556392183,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 159979970568,
            "range": "± 286547817",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d85e6d4d6641b0c4c82583ea5c0a231bd4b17d92",
          "message": "chore(l1): cache tx hash (#4049)\n\n**Motivation**\n\nWe saw that the hashing of txs takes a significant amount of time and\npart of it is repeated.\n\n**Description**\n\nThis PR create a new public hash function that allows to cache the\ncomputation of the hash for subsequent calls.\n\nAfter merging main there are some more changes needed. I'm taking a look\nat them.\n\nCloses #issue_number",
          "timestamp": "2025-08-18T21:43:40Z",
          "tree_id": "a5a65c360ff46435aa2d7d0ca14508f47123321f",
          "url": "https://github.com/lambdaclass/ethrex/commit/d85e6d4d6641b0c4c82583ea5c0a231bd4b17d92"
        },
        "date": 1755556434974,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162631155932,
            "range": "± 330927094",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d744176e86df0f0aa6239607decdf96f1312937c",
          "message": "chore(l2): avoid CI_ETHREX_WORKDIR docker warnings (#4064)\n\n**Motivation**\n\nRunning `make down` or `make init` prints the following warnings:\n\n```\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\n```\n\nThe same was happening for the `L1_RPC_URL` variable.\n\n**Description**\n\n- Sets the variables when running docker compose targets.\n- Renames `CI_ETHREX_WORKDIR` to `DOCKER_ETHREX_WORKDIR`.\n\nCloses #3810",
          "timestamp": "2025-08-19T15:59:20Z",
          "tree_id": "08994c1f264588261d858b53a144692de442d348",
          "url": "https://github.com/lambdaclass/ethrex/commit/d744176e86df0f0aa6239607decdf96f1312937c"
        },
        "date": 1755622698681,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163275290928,
            "range": "± 297007885",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6aac0d0ac0d05e0ca11df68cf1584400d6937fa3",
          "message": "chore(levm): improve organization of new levm test runner (#3958)\n\n**Motivation**\n\n- this runner was inside the same folder as the other runner and also\nthe internal structure wasn't the most organized\n\n**Description**\n\n- move files\n- improve makefile\n- improve files structure\n\n<img width=\"290\" height=\"416\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/7d4f6583-2af1-4b3f-b77b-dcf355dee897\"\n/>",
          "timestamp": "2025-08-19T18:09:41Z",
          "tree_id": "15581f9fa6e5e69afbc8ffdb842dc5599f505b16",
          "url": "https://github.com/lambdaclass/ethrex/commit/6aac0d0ac0d05e0ca11df68cf1584400d6937fa3"
        },
        "date": 1755630160656,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 165813045703,
            "range": "± 1221492121",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "da96b3878ff45cb8a1789f0a52124ec624fa4e38",
          "message": "refactor(l2): remove WrappedTransaction (#3984)\n\n**Motivation**\n\n`WrappedTransaction` is an abstraction that is not really necessary. We\ncan use `GenericTransaction` instead, which serves a similar purpose but\nis easier to manipulate, as we don't have to match Enum variants to\naccess its attributes.\n\n**Description**\n\n- Removes `WrappedTransaction`.\n- Updates all `WrappedTransaction` related functions (send,bump) to use\n`GenericTransactions` instead.\n- Implements mapper functions to convert a `GenericTransaction` to a\nspecific transaction type.\n- Replaces `build_eipxxx`/`send_eipxxx` functions with generic ones:\n`build_generic_tx(type)`/`send_generic_tx()`.\n\nCloses #3787\n\n---------\n\nCo-authored-by: Manuel Iñaki Bilbao <manuel.bilbao@lambdaclass.com>",
          "timestamp": "2025-08-19T23:26:47Z",
          "tree_id": "ccbe706b9e892b782a083e1f3d6a4e1fc9c5ef6d",
          "url": "https://github.com/lambdaclass/ethrex/commit/da96b3878ff45cb8a1789f0a52124ec624fa4e38"
        },
        "date": 1755649100663,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160326816552,
            "range": "± 467847575",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2a9c4185ed8361d4827877bd4617b3f173574db1",
          "message": "perf(levm): improve perf of calldataload, calldatacopy,  extcodecopy, codecopy, returndatacopy (#4070)\n\n**Motivation**\n\nimprove perf of calldataload, calldatacopy, extcodecopy, codecopy,\nreturndatacopy\n\n\n(left is this pr, right is main)\n\n<img width=\"1383\" height=\"1273\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/d82a9e4f-51da-4db4-82ec-7d38e3c31477\"\n/>",
          "timestamp": "2025-08-20T08:25:26Z",
          "tree_id": "b89e7487e4bf097aa473c4f7c3a006c3ce6d53bc",
          "url": "https://github.com/lambdaclass/ethrex/commit/2a9c4185ed8361d4827877bd4617b3f173574db1"
        },
        "date": 1755681365845,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161329618294,
            "range": "± 599999401",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cc1346ecb067f1ab698c4ac80af8a5fec528e0bd",
          "message": "perf(levm): improve signextend opcode performance (#4071)\n\n**Motivation**\n\nRemoved some unnecesary double checks.\n\n(left is pr, right is main)\n<img width=\"1416\" height=\"925\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/ee0272b3-014d-4317-bad5-c7b738b7edd2\"\n/>",
          "timestamp": "2025-08-20T09:06:44Z",
          "tree_id": "bc51ca03ebf268c67ab509865a7bc1591293c444",
          "url": "https://github.com/lambdaclass/ethrex/commit/cc1346ecb067f1ab698c4ac80af8a5fec528e0bd"
        },
        "date": 1755684092148,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163063236090,
            "range": "± 279481958",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "72007d4f3ce2302d71af2863b25ca15cb02ded34",
          "message": "feat(l1): engine_getBlobsV1 request endpoint (#3636)\n\n**Motivation**\n\nWe need to implement the RPC endpoint as it will be needed for Fusaka.\n\n**Description**\n\nThis pr incorporates a new module to handle RPC endpoint for the\n**engine_getBlobsV1** request according to the following spec's\ndescription from\n[here](https://ethereum.github.io/execution-apis/api-documentation/) and\n[here](https://github.com/ethereum/execution-apis/blob/main/src/engine/cancun.md#engine_getblobsv1).\n\nTo check the messages are sent correctly you can set the\n`fixtures/network/network_params.yaml` like this:\n```bash\nparticipants:\n  # NOTE: Both erigon and geth work on this example, but they provide wrong nodes information on discovery protocol\n  # - el_type: erigon\n  #   el_image: ethpandaops/erigon:main-764a2c50\n  #   cl_type: lighthouse\n  #   cl_image: sigp/lighthouse:v7.0.0-beta.0\n  #   validator_count: 32\n  # - el_type: reth\n  #   el_image: ghcr.io/paradigmxyz/reth:v1.2.2\n  #   cl_type: lighthouse\n  #   cl_image: sigp/lighthouse:v7.0.0-beta.0\n  #   validator_count: 32\n  - el_type: besu\n    el_image: ethpandaops/besu:main-142a5e6\n    cl_type: lighthouse\n    cl_image: sigp/lighthouse:v7.0.0-beta.0\n    validator_count: 32\n  - el_type: geth\n    el_image: ethereum/client-go:v1.15.2\n    cl_type: lighthouse\n    cl_image: sigp/lighthouse:v7.0.0-beta.0\n    validator_count: 32\n    count: 1\n  - el_type: ethrex\n    cl_type: lighthouse\n    cl_image: sigp/lighthouse:v7.0.0-beta.0\n    validator_count: 32\n    snooper_enabled: true\n\nnetwork_params:\n  electra_fork_epoch: 1\n\n  # The address of the staking contract address on the Eth1 chain\n  deposit_contract_address: \"0x4242424242424242424242424242424242424242\"\n\nethereum_metrics_exporter_enabled: true\n\nadditional_services:\n  - dora\n  - forkmon\n  - spamoor\n\nblockscout_params:\n  image: \"blockscout/blockscout:latest\"\n  verif_image: \"ghcr.io/blockscout/smart-contract-verifier:latest\"\n  frontend_image: \"ghcr.io/blockscout/frontend:latest\"\n\nprometheus_params:\n  # TODO: switch to latest when it points to v3.x\n  image: \"prom/prometheus:v3.2.1\"\n```\n\nThen run in a console:\n```bash\nmake localnet\n```\n\nAnd run in another console:\n```bash\ndocker logs -f $(docker ps -q --filter name=snooper-engine-3-lighthouse-ethrex)\n```\n\nThis last console will show all the rpc requests and the responses. It's\noverwhelming. Here I left some pictures of my logs:\n\n<img width=\"785\" height=\"411\" alt=\"Screenshot 2025-07-22 at 16 07 22\"\nsrc=\"https://github.com/user-attachments/assets/474ee749-0721-4ae6-8934-fc8c00fae70d\"\n/>\n<img width=\"855\" height=\"195\" alt=\"Screenshot 2025-07-22 at 16 07 42\"\nsrc=\"https://github.com/user-attachments/assets/be879e7c-244c-4130-9ae9-c4e2976f513d\"\n/>\n<img width=\"898\" height=\"155\" alt=\"Screenshot 2025-07-22 at 16 07 59\"\nsrc=\"https://github.com/user-attachments/assets/7f8922a0-077f-4361-9eed-2b42dd89dd99\"\n/>\n<img width=\"843\" height=\"144\" alt=\"Screenshot 2025-07-22 at 16 08 18\"\nsrc=\"https://github.com/user-attachments/assets/eb7e1246-1aba-417f-8217-34cbfec6b95c\"\n/>\n<img width=\"861\" height=\"129\" alt=\"Screenshot 2025-07-22 at 16 08 34\"\nsrc=\"https://github.com/user-attachments/assets/eee3c6c5-17fd-44f8-8e14-6bff8aba4a63\"\n/>\n<img width=\"831\" height=\"117\" alt=\"Screenshot 2025-07-22 at 16 08 52\"\nsrc=\"https://github.com/user-attachments/assets/3f450e2a-cd8d-4374-b87c-9f83107c09c3\"\n/>\n<img width=\"830\" height=\"105\" alt=\"Screenshot 2025-07-22 at 16 09 18\"\nsrc=\"https://github.com/user-attachments/assets/b7a8c40a-02c2-44f3-8f96-129a682a5046\"\n/>\n\nI haven't found a better way of testing it. I think you can check it\nwith the dora service but I'm not sure how.\n\nCloses #3428",
          "timestamp": "2025-08-20T13:11:53Z",
          "tree_id": "92e25588a855d9a907fa478597704351c3ab0abe",
          "url": "https://github.com/lambdaclass/ethrex/commit/72007d4f3ce2302d71af2863b25ca15cb02ded34"
        },
        "date": 1755698611955,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162635210673,
            "range": "± 333683648",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5677a0d7ca9945eea7e7f08268928fc82021381c",
          "message": "fix(l1): subtract DB read times from block execution. (#4051)\n\n**Motivation**\nBe able to get the _net_ block execution, substracting the DB reads in\nGrafana.\n\n**Description**\nThis is how it looks:\n<img width=\"577\" height=\"297\" alt=\"Screenshot 2025-08-14 at 13 24 56\"\nsrc=\"https://github.com/user-attachments/assets/feb5d9fd-3dce-426e-8705-4049e5c2b98e\"\n/>",
          "timestamp": "2025-08-20T14:21:44Z",
          "tree_id": "2f07cdfd14cac1e33afdda2196da6f590af74562",
          "url": "https://github.com/lambdaclass/ethrex/commit/5677a0d7ca9945eea7e7f08268928fc82021381c"
        },
        "date": 1755702734828,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161115969571,
            "range": "± 251108843",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "38d96c3466a2054591152b9376d0996f00f9551b",
          "message": "refactor(levm): change ecrecover implementation to use k256 instead of secp256k1 (#4085)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- Change precompile ecrecover to use `k256` instead of `secp256k1`\n\n\n\nI tested this out by going to the fix_execution_witness_serde branch,\nmerging this branch into that and executing a block that used to fail\nwith a Gas Mismatch like the 8968278 with SP1. Execution passed in\nmultiple blocks that had this problem.\n\nCloses #4087",
          "timestamp": "2025-08-20T15:22:01Z",
          "tree_id": "f46e0727b506747f23d0a8c97cedd31c90e20230",
          "url": "https://github.com/lambdaclass/ethrex/commit/38d96c3466a2054591152b9376d0996f00f9551b"
        },
        "date": 1755706499046,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161822657113,
            "range": "± 263864181",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "1eb58c84be6231fdac1484829bc37371f6f4a17c",
          "message": "chore(l1): remove redb support (#4103)\n\n**Motivation**\n\n#4095\n\nCloses #4095",
          "timestamp": "2025-08-20T18:38:24Z",
          "tree_id": "6489ebb1356d2f1bc308f1b1d99bdc0ff2b85eb9",
          "url": "https://github.com/lambdaclass/ethrex/commit/1eb58c84be6231fdac1484829bc37371f6f4a17c"
        },
        "date": 1755718321092,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160626623969,
            "range": "± 366738909",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2ffd28ee6022cb951f3cdaf99179bec16d503d6c",
          "message": "fix(l1): `ethrex-replay` block execution in different networks (#3992)\n\n**Motivation**\n\nThe `ethrex-replay` tool is not working correctly in many aspects. From\nthe starts block execution is not working correctly in the different\nnetworks (Hoodi, Sepolia, and Mainnet).\n\n**Description**\n\nThis PR fixes the following related to `ethrex-replay`:\n- `ExecutionWitnessResult` serialization and deserialization to make it\ncompliant with Reth nodes.\n- Ensures the use of the correct chain configuration on each command.\n- The latest block is now correctly cached and labeled (by network and\nblock number, e.g. `cache_network_number.json`).\n- Ensures the replay of the last canonical block when replaying the\nlatest block.\n\nAnd the following extras:\n- Improves logging.\n- Renames some functions and variables.\n\n> [!NOTE]\n> - This PR ensures the correct execution of most of blocks produced by\nreth and ethrex clients.\n> - Some block execution may fail, and their corresponding fixes should\nbe done in other PRs.\n> - To ensure block execution from other clients than the stated above,\nwe need to support retrieving block execution data using the endpoint\n`eth_getProofs` (this is a WIP, we're currently using\n`debug_executionWitness`, but only Reth and ethrex nodes support this\nendpoint).\n\n**Test it out**\n\n```\n# reth RPCs\nHoodi = http://65.108.69.58:8545\nSepolia = http://65.109.97.102:8545\nMainnet = http://157.180.1.98:8545\n\n# Executing\ncargo run --release --package ethrex-replay --bin ethrex-replay -- execute block --rpc-url http://65.108.69.58:8545 --network hoodi\n\n# Executing (SP1)\ncargo run --release --package ethrex-replay --bin ethrex-replay --features sp1 -- execute block 1033114 --rpc-url http://65.108.69.58:8545 --network hoodi\n\n # Proving (SP1) \n SP1_PROVER=cuda cargo run --release --package ethrex-replay --bin ethrex-replay --features sp1,gpu -- execute block 1033114 --rpc-url http://65.108.69.58:8545 --network hoodi\n```\n\n---------\n\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>\nCo-authored-by: JereSalo <jeresalo17@gmail.com>\nCo-authored-by: LeanSerra <46695152+LeanSerra@users.noreply.github.com>",
          "timestamp": "2025-08-20T18:48:52Z",
          "tree_id": "5d2a8b5bacc6729b70814ce28dae7f90370c22d4",
          "url": "https://github.com/lambdaclass/ethrex/commit/2ffd28ee6022cb951f3cdaf99179bec16d503d6c"
        },
        "date": 1755719301346,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161296961507,
            "range": "± 251308618",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5dfb043809bfde94b927325fe69a505d7762a1f5",
          "message": "ci(l1,l2): separate GPU builds and use x86-64-v2 target (#4090)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nCurrent releases need CUDA installed in order to run. Also, some not so\nold CPUs were incompatible because of a build flag.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nRemove that dependency separating GPU binaries.\nChange CPU target for more compatibility. Worst case bench throw ~25%\nlower performance. For a more efficient build, consider building from\nsource with native CPU target\n\n<img width=\"1210\" height=\"786\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/fa4f43eb-7809-4f22-b131-e71e0234de89\"\n/>\n\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-08-20T18:58:47Z",
          "tree_id": "5145f3ea027951ea92cf351fb189062d70d23f26",
          "url": "https://github.com/lambdaclass/ethrex/commit/5dfb043809bfde94b927325fe69a505d7762a1f5"
        },
        "date": 1755719427667,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 157942216563,
            "range": "± 337289051",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "96d1b074b21d5055135dedb1e2f638b21f0eed9e",
          "message": "fix(l1): `ethrex_replay` reduce cases were OOM happen with SP1 (#4076)\n\n**Motivation**\n\nSome of the blocks execution with `ethrex_replay` ans SP1 where failing\ndue to Out Of Memory. We fix some of them here\n\n**Description**\n\n- Remove unnecessary clones and variables from the `from_nodes(..)`\nfunction\n- Change the behavior of the `storage_tries`, we build them on demand\nand store them in a hash map indexed by the address\n\n**How to Test**\n\nRunning this with an url for a Hoodi client (using a cache for the block\nis faster):\n```\ncargo run --release --features sp1 -- execute block 989143 --rpc-url <RPC_URL> --network hoodi\n```\n\nThis block now succeeds when in the base branch it doesn't.\n\n**What's next**\n\nThis could be more optimized following this\n[issue](https://github.com/lambdaclass/ethrex/issues/4094)\n\nAdvances #4089\n\n---------\n\nCo-authored-by: ilitteri <ilitteri@fi.uba.ar>\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>\nCo-authored-by: JereSalo <jeresalo17@gmail.com>\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>\nCo-authored-by: LeanSerra <46695152+LeanSerra@users.noreply.github.com>",
          "timestamp": "2025-08-21T00:33:39Z",
          "tree_id": "cc23934df637604cefe850592fcd7dcac26a99ba",
          "url": "https://github.com/lambdaclass/ethrex/commit/96d1b074b21d5055135dedb1e2f638b21f0eed9e"
        },
        "date": 1755739525519,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161729362661,
            "range": "± 660701855",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8ab56bc031af906e9b32ad97b9a1fe5d4ded98bc",
          "message": "fix(levm): fix problems related to 32 bit architecture (#4104)\n\n**Motivation**\n\n- Find errors on 32 bit architecture\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- `u256_to_usize` now halts if the number doesn't fit in 32 bits instead\nof 64.\n- Memory size cost is computed using u64 instead of usize. The previous\nimplementation overflowed on 32 bit architectures in some edge cases.\nAlso I made it prettier :D\n\n\nHow this was tested: Adapting ethrex to run on 32 bit x86 in branch\n[replay_32_bit_x86_testing](https://github.com/lambdaclass/ethrex/tree/replay_32_bit_x86_testing)\nand running EFTests, both state and blockchain. After these changes they\nall pass.\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nMakes progress towards #4081",
          "timestamp": "2025-08-21T14:07:32Z",
          "tree_id": "e62be3934be14887e4c1679fc262710e40ecd40d",
          "url": "https://github.com/lambdaclass/ethrex/commit/8ab56bc031af906e9b32ad97b9a1fe5d4ded98bc"
        },
        "date": 1755788889901,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166789300541,
            "range": "± 662606407",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b4e7286c2e02174ad0545cb917b89573103cdf21",
          "message": "refactor(l1): remove unnecessary `usize`s from blockchain crate (#4110)\n\n**Motivation**\n\nThis PR does not fix any specific bug, but it reduces the usage of\n`usize` throughout the codebase, as it has caused issues when running on\n32-bit architectures.\n\n**Description**\n\n- This PR focuses on the `blockchain` crate. The rest of the changes\nwere made simply to make the code compile.\n- Some constants were changed from `u64` to `u32`, as IMO there is no\nrisk of overflow and this reduces `u64 -> usize` conversions.\n\n\nRelated to #4081",
          "timestamp": "2025-08-21T14:52:58Z",
          "tree_id": "2d3316a393d40f572520338cf63569750badb410",
          "url": "https://github.com/lambdaclass/ethrex/commit/b4e7286c2e02174ad0545cb917b89573103cdf21"
        },
        "date": 1755791007264,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160696535791,
            "range": "± 301787033",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estebandh@gmail.com",
            "name": "ElFantasma",
            "username": "ElFantasma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "dcf547762232dae4de6ec35c3c4b1b15e94fbc3d",
          "message": "fix(l1): removed unnecesary state clone (#4117)\n\nAfter spawned upgrade, there is no need to clone `RLPxConnection` state.\nBut we left a `clone()` in the code that was causing performance issues\non high load of peer messages.\n\nThis was discovered analyzing a flame graph by @juan518munoz :\n<img width=\"2934\" height=\"1598\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/041264cd-63c9-4855-85ad-8d277bdaac8e\"\n/>\n\n\n**Description**\n\nThis removes the cost of the inner state `clone()` showing some nice\nimprovement on a high load test (two reth and one ethrex nodes being\nspammed by about 10.000 transactions per slot)\n\nGgas/s on the ethrex node:\nAfter: (the second peak is due to peers disconnecting)\n<img width=\"410\" height=\"299\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/3ef44258-0390-4cff-8083-b96d710f7d53\"\n/>\n\nBefore: (peers remained connected through all the test)\n<img width=\"438\" height=\"300\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/eed2a1b4-3106-4498-8bbc-9d7f994b11e7\"\n/>",
          "timestamp": "2025-08-21T18:13:04Z",
          "tree_id": "dccf3e3a14f6edbbf75c5ec6167448cb6c3b6053",
          "url": "https://github.com/lambdaclass/ethrex/commit/dcf547762232dae4de6ec35c3c4b1b15e94fbc3d"
        },
        "date": 1755803106131,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161970478986,
            "range": "± 705097578",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "885ddaf8a8557d458f38bf6629d7f9314553b66f",
          "message": "feat(l1, l2): setup `ethrex-replay` for memory profiling (#4121)\n\n**Motivation**\n\nWe now have `ethrex-replay` reliable enough to start debugging ethrex\nperformance. We currently have memory usage issues related to:\n- The program we execute inside the zkVMs.\n- Excessive memory usage of `ethrex-replay` when replaying large blocks.\n\n**Description**\n\nThis PR aims to set up the tool for memory profiling.\n[Jemalloc](https://github.com/jemalloc/jemalloc) goes well with\nBytehound and Heaptrack (tools we'll use).\n\nThis PR:\n- Sets `profile.dev` and `profile.release` in `ethrex-replay`'s\n`Cargo.toml`\n- Sets the usage of Jemalloc's allocator when compiling the tool under\nthe `jemalloc` feature flag.\n\n---------\n\nCo-authored-by: Mario Rugiero <mrugiero@gmail.com>",
          "timestamp": "2025-08-21T18:38:55Z",
          "tree_id": "9eaa92d0189e14af4428d6290a6616b350dcbc67",
          "url": "https://github.com/lambdaclass/ethrex/commit/885ddaf8a8557d458f38bf6629d7f9314553b66f"
        },
        "date": 1755804902302,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161850645630,
            "range": "± 340143462",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "6e874c507f303125021e87d936fae025e9622d7f",
          "message": "perf(levm): improve blobbasefee (#4092)\n\n**Motivation**\n\nImproves blobbasefee perfomance by avoiding unnecesary checks\n\nImproves the blobbasefee performance from 30 to 320mgas (966%)",
          "timestamp": "2025-08-22T12:38:26Z",
          "tree_id": "5702e5ed0f5dae9faf2c9acff5bba3918e5cd5df",
          "url": "https://github.com/lambdaclass/ethrex/commit/6e874c507f303125021e87d936fae025e9622d7f"
        },
        "date": 1755869763279,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161244009700,
            "range": "± 291607957",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "27e3bb6b9d9dfd475d7bc52bbcd2aac5150000fa",
          "message": "ci(l1): skip some internal jobs for external contributions. (#4102)\n\n**Motivation**\nExternal contributors don't have permissions for some things and the\naction fails\n\nCloses #3925",
          "timestamp": "2025-08-22T13:20:28Z",
          "tree_id": "ba007736720bb7d2b0168c2545042b7e4b1c1890",
          "url": "https://github.com/lambdaclass/ethrex/commit/27e3bb6b9d9dfd475d7bc52bbcd2aac5150000fa"
        },
        "date": 1755871945480,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162326020745,
            "range": "± 651803446",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f631ce36f9741b3a1fa41d2b38bf353f2a8f74f7",
          "message": "fix(l1): use proper docker image to spin up localnets. (#4131)\n\n**Motivation**\nWe were using the stable ethrex docker images instead of the one build\nlocally\n\n**Description**\n- Use the local image of ethrex\n- Merge many localnet makefile commands into one\n- Fix passing of `el_extra_params`",
          "timestamp": "2025-08-22T13:54:07Z",
          "tree_id": "a30a4d20dab513a3c61ead48faffb10f2315ed74",
          "url": "https://github.com/lambdaclass/ethrex/commit/f631ce36f9741b3a1fa41d2b38bf353f2a8f74f7"
        },
        "date": 1755873931127,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162891630202,
            "range": "± 404040297",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "34b27a7fcc877800c86fd7df8e4c21f4866e3fb9",
          "message": "chore(l1): add block time to grafana dashboard. (#4112)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n<img width=\"1194\" height=\"436\" alt=\"Screenshot 2025-08-21 at 13 40 32\"\nsrc=\"https://github.com/user-attachments/assets/5987a418-d7d2-4ef2-9782-2fa78e3950f6\"\n/>",
          "timestamp": "2025-08-22T13:54:31Z",
          "tree_id": "c24872aea8b0c42ba05203de4f5f1f5a0fc27725",
          "url": "https://github.com/lambdaclass/ethrex/commit/34b27a7fcc877800c86fd7df8e4c21f4866e3fb9"
        },
        "date": 1755873977795,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162805368767,
            "range": "± 1454466129",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "989f52a638c901029aa26fcda849a6e59c3da054",
          "message": "chore(l1): metric improvements. (#4118)\n\n**Description**\n- Do not send metrics on initialization since it will show incorrect\nnumbers (block number 0, gas 0, etc..)\n- Filter out profiling metrics that don't come from ethrex (like tokio\nones)\n- Filter profiling metrics to current job",
          "timestamp": "2025-08-22T14:26:37Z",
          "tree_id": "c103d4aae7b77172f5988185e93a7d113d1a4abc",
          "url": "https://github.com/lambdaclass/ethrex/commit/989f52a638c901029aa26fcda849a6e59c3da054"
        },
        "date": 1755875855983,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162616001670,
            "range": "± 442546868",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "618c6d78af24c595a2fa264473147a0cb5bed3d0",
          "message": "feat(l1,l2): add new commands to execution witness (#4107)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- Add a new command to run multiple blocks, they don't necessarily need\nto be one after the other. They can be arbitrary blocks like\n`23213112,23214317,23121300`\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: ilitteri <ilitteri@fi.uba.ar>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>\nCo-authored-by: Estéfano Bargas <estefano.bargas@fing.edu.uy>\nCo-authored-by: LeanSerra <46695152+LeanSerra@users.noreply.github.com>",
          "timestamp": "2025-08-22T17:22:43Z",
          "tree_id": "fd7ba42234b6a6d8b0b5389fb633e00ae8ca24d4",
          "url": "https://github.com/lambdaclass/ethrex/commit/618c6d78af24c595a2fa264473147a0cb5bed3d0"
        },
        "date": 1755886655665,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162284574374,
            "range": "± 312434796",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bede38ea0b18bbe5f939d34e13063c6ee996a3db",
          "message": "perf(levm): improve bls12 precompile (#4073)\n\n**Motivation**\n\nImproves \n\n- g1 msm from 18 mgas/s to 100\n- g2 msm from 14 mgas/s to 143\n\nCloses #issue_number",
          "timestamp": "2025-08-22T18:10:24Z",
          "tree_id": "3417027451f1663cc9d8d158046ecc91c882da66",
          "url": "https://github.com/lambdaclass/ethrex/commit/bede38ea0b18bbe5f939d34e13063c6ee996a3db"
        },
        "date": 1755889623461,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 183875712288,
            "range": "± 1333767945",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "187a9d806d16b54d822036aa79d4bb6d05dfc62d",
          "message": "refactor(l2): change usize state diff constants (#4128)\n\n**Motivation**\n\nTo continue enforcing the use of `usize` only when strictly necessary.\n\n**Description**\n\nRefactors the `StateDiff` size calculation to use `u64` constants.\nReplaces `lazy_static` pointers with `u64` constants and adds tests to\nensure the constant is updated with future changes to the `StateDiff`.\n\n\n\nRelated to #4081",
          "timestamp": "2025-08-22T20:09:25Z",
          "tree_id": "ace7c4a435142a24f0e0e8dbe968a2ef40893453",
          "url": "https://github.com/lambdaclass/ethrex/commit/187a9d806d16b54d822036aa79d4bb6d05dfc62d"
        },
        "date": 1755896525907,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161424392347,
            "range": "± 477742334",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c673d17568fdb044dce05513ecb17ec6db431e3f",
          "message": "perf(levm): improve ecpairing (bn128) (#4130)\n\n**Motivation**\n\na 73% improvement over ethrex main\n\nThe main change is properly batching BN254AtePairing::compute_batch\ncalls\n\n<img width=\"1337\" height=\"1108\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/626ff6ac-978a-4b69-b674-8e5692736912\"\n/>",
          "timestamp": "2025-08-22T20:12:24Z",
          "tree_id": "3e10c20dbddc63b630b7e694e098d5e2a12c15bc",
          "url": "https://github.com/lambdaclass/ethrex/commit/c673d17568fdb044dce05513ecb17ec6db431e3f"
        },
        "date": 1755896663053,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160918114174,
            "range": "± 455846939",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "be59021bcd607683fccc5b3747ff16f1e53465fc",
          "message": "chore(l1): add hoodi kurtosis network configuration. (#4031)\n\n**Motivation**\nBeing able to easily spin up a ethrex client that syncs with Hoodi\n\n**Description**\n- Adds network configuration for hoodi\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>",
          "timestamp": "2025-08-22T20:55:08Z",
          "tree_id": "fcf520fe8de13a1734af734e43c38f73b4976427",
          "url": "https://github.com/lambdaclass/ethrex/commit/be59021bcd607683fccc5b3747ff16f1e53465fc"
        },
        "date": 1755899088699,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161726682041,
            "range": "± 237511714",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "64f9d2108006d4d9618dd9bb681237fc7e7ab26f",
          "message": "ci(l1,l2): fix main_prover_l1 block cache (#4129)\n\n**Motivation**\n\nThe block was not updated with the changes in #3992\n\n**Description**\n\n- update with a new cache file for block\nhttps://hoodi.etherscan.io/block/974567\n\nCloses #4124",
          "timestamp": "2025-08-22T21:01:38Z",
          "tree_id": "454a8dbd04618e7df27e231e4d092fe5a2b9ae4f",
          "url": "https://github.com/lambdaclass/ethrex/commit/64f9d2108006d4d9618dd9bb681237fc7e7ab26f"
        },
        "date": 1755899519073,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160587351505,
            "range": "± 446983880",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "70196c1e8ef9a8cdbde714d7fd9f9abf3befb7a4",
          "message": "perf(levm): improve mulmod and addmod opcodes (#4072)\n\n**Motivation**\n\nImprove addmod and mulmod opcode performance by avoiding unnecesary\nchecks",
          "timestamp": "2025-08-22T21:48:49Z",
          "tree_id": "b9d8a541a40adb5e34304131dc96b506e5fdd455",
          "url": "https://github.com/lambdaclass/ethrex/commit/70196c1e8ef9a8cdbde714d7fd9f9abf3befb7a4"
        },
        "date": 1755902282834,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160979188084,
            "range": "± 238452804",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c59033d979b931895e2cab7c4310d9894495a4b6",
          "message": "perf(levm): make precompiles use a constant table (#4097)\n\n**Motivation**\n\nImproves performance of precompile calls\n\n---------\n\nCo-authored-by: Mario Rugiero <mrugiero@gmail.com>",
          "timestamp": "2025-08-25T08:30:22Z",
          "tree_id": "0675e95b1ce969501c67b6424a077e0a44777f03",
          "url": "https://github.com/lambdaclass/ethrex/commit/c59033d979b931895e2cab7c4310d9894495a4b6"
        },
        "date": 1756114059162,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160571724109,
            "range": "± 284345837",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8c312705f4295279dad3297c1f0630fbd66685de",
          "message": "perf(levm): improve load_range by returning a Bytes directly, avoding a vec (#4098)\n\n**Motivation**\n\nAll load range usage leads to creating a Bytes, but to do so we allocate\na intermediate vec, this pr avoids this.\n\nimprove load_range by returning a Bytes directly, avoding a vec\n\n---------\n\nCo-authored-by: Mario Rugiero <mrugiero@gmail.com>",
          "timestamp": "2025-08-25T09:02:40Z",
          "tree_id": "b43426d32c02a260b64897801aef39417d83da9c",
          "url": "https://github.com/lambdaclass/ethrex/commit/8c312705f4295279dad3297c1f0630fbd66685de"
        },
        "date": 1756115540639,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161099767388,
            "range": "± 285516386",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bb10d0bb3e405c36002b9cb8f951f3c528c31353",
          "message": "chore(l1): use `local` tag for ethrex images for local hive and kurtosis (#4132)\n\n**Motivation**\nMake it explicit that we're using a locally build version of ethrex.\nDecouple CI from local use of docker images\n\n**Description**\nSince `latest` is the default tag if none is specified, we had bugs in\nthe past where we were accidentally using an old version of ethrex\ninstead of the locally build one. Lets make it explicit that we're using\na local version by using the `local` tag instead of `latest`.",
          "timestamp": "2025-08-25T14:20:33Z",
          "tree_id": "f0226e5383e1cb5df54a45453474dc149704ef76",
          "url": "https://github.com/lambdaclass/ethrex/commit/bb10d0bb3e405c36002b9cb8f951f3c528c31353"
        },
        "date": 1756134921980,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162346739251,
            "range": "± 429527037",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "797e81810f81c3503e97e05c214b0443275ca868",
          "message": "refactor(l1): remove usize usage from constants in network crate (#4116)\n\n**Motivation**\n\nAvoid unnecessary usage of `usize` in the codebase.\n\n**Description**\n\nThe approach taken was the following: if the constant is used only for\nindexing or to be compared against `usize` values, keep it as `usize`.\nOtherwise, change it to `u32` or `u64`, depending on the case.\n\nRelated to #4081",
          "timestamp": "2025-08-25T14:38:45Z",
          "tree_id": "4dc7a46de1a33636e8e76e5c485ed18de3f23533",
          "url": "https://github.com/lambdaclass/ethrex/commit/797e81810f81c3503e97e05c214b0443275ca868"
        },
        "date": 1756135786691,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161563646222,
            "range": "± 259599424",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5bbb11fee439cdd5787bb4c509fa0d0c4faa791a",
          "message": "fix(l2): use `spawned::start_blocking` for block_producer (#4151)\n\n**Motivation**\n\nTo prevent blocking other async tasks.\n\n**Description**\n\n- Uses\n[spawned::start_blocking](https://github.com/lambdaclass/spawned/blob/aa47f8277b058737e351cf75a0926bd580d0f4e4/concurrency/src/tasks/gen_server.rs#L146)\nfor the L2 `BlockProducer` `GenServer`.\n\nCloses None",
          "timestamp": "2025-08-25T15:11:35Z",
          "tree_id": "915f7a01bec31b1ab78bab1d198c3206eba81079",
          "url": "https://github.com/lambdaclass/ethrex/commit/5bbb11fee439cdd5787bb4c509fa0d0c4faa791a"
        },
        "date": 1756137710848,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161950607084,
            "range": "± 234282643",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pdeymon@fi.uba.ar",
            "name": "Pablo Deymonnaz",
            "username": "pablodeymo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "524685cc3c3c5ca7a38dad711116278cb6644519",
          "message": "chore(l1,l2): uniformity of tokio dependency in subcrates (#3409)\n\n**Motivation**\n\nThe inclusion of tokio in the Cargo.toml files of the subcrates was\nreferencing different versions.\nThis PR changes Cargo.toml files to use the version in workspace.\n\n**Description**\n\nThis PR changes Cargo.toml files to use the version in workspace.\n\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>",
          "timestamp": "2025-08-25T16:27:11Z",
          "tree_id": "8f7a9b550f1289bdd15e099f184e5e451619efe6",
          "url": "https://github.com/lambdaclass/ethrex/commit/524685cc3c3c5ca7a38dad711116278cb6644519"
        },
        "date": 1756142741991,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163104451109,
            "range": "± 429473014",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4e9336d6c090f9048be12f4613725d136bdfb514",
          "message": "chore(l2): rename `ETHREX_MONITOR` to `ETHREX_NO_MONITOR` (#4141)\n\nthe boolean is a negation",
          "timestamp": "2025-08-25T17:53:28Z",
          "tree_id": "789521e730bb0c7f727cb27ceab27ddf49fc9127",
          "url": "https://github.com/lambdaclass/ethrex/commit/4e9336d6c090f9048be12f4613725d136bdfb514"
        },
        "date": 1756147416041,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160672090488,
            "range": "± 584314835",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7d444698ff94e416eb67d784bf9ad631e09dccf3",
          "message": "feat(l1): don't log an error if we have no node config file when reading known peers (#4127)\n\n**Motivation**\nWe shouldn't emit a warning if we have no node config files where to\nread known peers from. We should log an error if we get an actual error\nwhile reading from an existing node config file\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Don't emit a warning if we have no node config file when reading known\npeers\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3908",
          "timestamp": "2025-08-25T18:53:48Z",
          "tree_id": "2fdf927a0b6dc56f28ca4e77d1ecd36848d1fa73",
          "url": "https://github.com/lambdaclass/ethrex/commit/7d444698ff94e416eb67d784bf9ad631e09dccf3"
        },
        "date": 1756151104087,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 159949536365,
            "range": "± 728312086",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "731ee9453fa35ec885c30768c2f582f1bce62a5c",
          "message": "chore(l1): move `ef_tests` to `tooling` (#4143)\n\nCloses #3208",
          "timestamp": "2025-08-26T11:35:49Z",
          "tree_id": "b88103f5cbaa1c786d1fa37c439893b4cc530f35",
          "url": "https://github.com/lambdaclass/ethrex/commit/731ee9453fa35ec885c30768c2f582f1bce62a5c"
        },
        "date": 1756211312861,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 158398342923,
            "range": "± 738814933",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b6457402151cf642d9e180a071d6bd9b9d60dae8",
          "message": "test(l1): add possibility of running Blockchain EFTests with SP1 (#4135)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nRun tests with SP1.\n\nIf we weren't able to generate the execution witness we won't run the\ntest with SP1 because it'd make no sense.\n\nCreated this issue so that we can do stateless run without depending on\na normal run done before, it's not essential though.\nhttps://github.com/lambdaclass/ethrex/issues/4142\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #4144\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-08-27T14:10:33Z",
          "tree_id": "fa05739f0d879d965235753cb3bb814022a52cde",
          "url": "https://github.com/lambdaclass/ethrex/commit/b6457402151cf642d9e180a071d6bd9b9d60dae8"
        },
        "date": 1756307726665,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161725435677,
            "range": "± 508206336",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f9fa22f0706975082b957ba08d4965edd387b99c",
          "message": "ci(l2): use updated fork of get-solc action (#4178)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nCI is broken due to move of Solidity's GH repositories.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nChange the CI to use lambda's fork of `get-solc` GH action, which has\nupdated links\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-08-27T14:47:46Z",
          "tree_id": "19561695ae97c716a945f285641bedeb1342d96c",
          "url": "https://github.com/lambdaclass/ethrex/commit/f9fa22f0706975082b957ba08d4965edd387b99c"
        },
        "date": 1756309652953,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162359917429,
            "range": "± 569724612",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "efa69e7c01013c7b773d0965347572f1c03a22dc",
          "message": "perf(levm): improve calldatacopy further (#4150)\n\n**Motivation**\n\nAdded a specific memory function to zero fill, also simplified the code\n+ removed some unnecesary checked arithmetic.\n\n<img width=\"1350\" height=\"294\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/8747be0a-1c96-4fbc-b0a9-e9875b46058b\"\n/>",
          "timestamp": "2025-08-27T15:35:07Z",
          "tree_id": "c9e36e8cf205f11ee3afb5832ea191cd81143eec",
          "url": "https://github.com/lambdaclass/ethrex/commit/efa69e7c01013c7b773d0965347572f1c03a22dc"
        },
        "date": 1756311949863,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163463782271,
            "range": "± 868493233",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "61285ae6fe4512517327e0bb0e4a2d153ee54e4a",
          "message": "fix(l2): l1_watcher don't request logs if latest L1 block is already checked (#4122)\n\n**Motivation**\n\nWhen getting logs we were constantly getting `Error when getting logs\nfrom L1: eth_getLogs request error: end (8944755) < begin (8944756)`\nerrors because the default `watch_interval_ms` for l1_watcher was 1\nsecond and we were not checking that end > begin\n\n**Description**\n\n- change default `watch_interval_ms` to 1 L1 slot (12seconds)\n- if `self.last_block_fetched == latest_block_to_check` there are no new\nblocks to check so we just return",
          "timestamp": "2025-08-27T18:13:08Z",
          "tree_id": "234724708e03a6e6c87f1151577bf3f4d16795ab",
          "url": "https://github.com/lambdaclass/ethrex/commit/61285ae6fe4512517327e0bb0e4a2d153ee54e4a"
        },
        "date": 1756321454368,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160794742535,
            "range": "± 237109232",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "06fb63969a799c93b3187d5d8949093ee599acf3",
          "message": "fix(l2): log errors in send_generic_transaction, improve web3signer errors (#4113)\n\n**Motivation**\n\nWhen `send_generic_transaction` failed we didn't log the reason we only\nretried.\nWhen web3signer fails we were not checking the response code from the\nserver, we were still trying to decode the response as a Signature\n\n**Description**\n\n- use inspect_err to log the error from `send_generic_transaction`\n- check the response `StatusCode` from the web3signer request and return\ncorrect errors",
          "timestamp": "2025-08-27T18:13:17Z",
          "tree_id": "827896b50ec60ce7d18b94210ab55aeb4d5636b1",
          "url": "https://github.com/lambdaclass/ethrex/commit/06fb63969a799c93b3187d5d8949093ee599acf3"
        },
        "date": 1756321600654,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161326760312,
            "range": "± 985780681",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "895a6c210a970b611baadb974ee997fe8c2bb8ba",
          "message": "chore(l1): create reusable build docker job. (#4120)\n\n**Motivation**\nBe able to leverage caching and not having rate limits\n\n**Description**\n- Adds a reusable docker build action\n- Removes the incorrect use of `make build-image` from the CI",
          "timestamp": "2025-08-27T18:38:49Z",
          "tree_id": "1c5e46be87dd274e34aa098f69f34bf0fbdf2c81",
          "url": "https://github.com/lambdaclass/ethrex/commit/895a6c210a970b611baadb974ee997fe8c2bb8ba"
        },
        "date": 1756322971587,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161753356115,
            "range": "± 216767237",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e019531dfdc25fb92e0413213d72eb9e7c2171f4",
          "message": "feat(l2): deposit rich accounts by default (#4184)\n\n**Motivation**\n\nCurrently, running `ethrex l2 --dev` doesn't make deposits because\n`../../fixtures/keys/private_keys_l1.txt` can't be found at runtime.\n\n**Description**\n\nEmbeds the contents of `private_keys_l1.txt` into the binary and uses\nthem when the `deposit_rich` flag is set without a private key path\nspecified.\n\nCloses None",
          "timestamp": "2025-08-27T19:25:22Z",
          "tree_id": "68622f52167242d73e4dd16b5dcd4e6c91872e41",
          "url": "https://github.com/lambdaclass/ethrex/commit/e019531dfdc25fb92e0413213d72eb9e7c2171f4"
        },
        "date": 1756325823319,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 163098719524,
            "range": "± 461188245",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "62400508+juan518munoz@users.noreply.github.com",
            "name": "juan518munoz",
            "username": "juan518munoz"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "742f9d532d468d6ab431684d31c138956f37e4e4",
          "message": "refactor(l1,l2): rename genserver errors (#3825)\n\n**Motivation**\n\nEnd user might (and shouldn't) be aware of what a `GenServer`\nrepresents, so seing an error of such type would be confusing.\n\n**Description**\n\nThis PR rewords the _GenServer_ errors to _Internal_ such that they are\nstill as detailed as before, but without the technical wording. There\nwere some parts of the where `InternalError` already existed, in such\ncases this types of errors have been expanded to different, new, types.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3376\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>",
          "timestamp": "2025-08-27T20:48:18Z",
          "tree_id": "79892e9496a585ed653aafe92b6bb9b2d46577da",
          "url": "https://github.com/lambdaclass/ethrex/commit/742f9d532d468d6ab431684d31c138956f37e4e4"
        },
        "date": 1756330818400,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162562490766,
            "range": "± 220473574",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dc38e604f066ec8366277de499a479138e010f8c",
          "message": "perf(levm): adjust memory resize (#4177)\n\nCurrent memory resize is overly eager, tune it to resize to multiples of\n64 instead, this avoids really small allocations while not over\nallocating, since we require to zero the allocated bytes, it can be\nexpensive to overallocate\n\n<img width=\"1361\" height=\"1259\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/f56a217d-c78b-492d-bf50-137df830a570\"\n/>",
          "timestamp": "2025-08-27T20:50:41Z",
          "tree_id": "0b7b4c5d55036f8567e6efd165e61545ce022ee6",
          "url": "https://github.com/lambdaclass/ethrex/commit/dc38e604f066ec8366277de499a479138e010f8c"
        },
        "date": 1756331030596,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161950926444,
            "range": "± 291517440",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f6dcb766bd3d274a36664a2074228257061e6387",
          "message": "perf(levm): improvements to precompiles (#4168)\n\nMinor improvements:\n\n- In fill_with_zeros, when the size is already target or more avoid\nallocating a vec.\n- Also avoided allocating vecs in other contexts.\n- Improved further the modexp code, making it more predictable to\ncompiler optimizations.\n- Changed some infallible functions from returning a Result to a value\ndirectly.\n\n\nNeed to measure if it improves.\n\n<img width=\"1347\" height=\"260\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/a934cf61-aed9-4f7a-bfc6-861ee8c16ebc\"\n/>",
          "timestamp": "2025-08-28T10:21:53Z",
          "tree_id": "661b8aec00535bb7c6028f520fe84aea0814819a",
          "url": "https://github.com/lambdaclass/ethrex/commit/f6dcb766bd3d274a36664a2074228257061e6387"
        },
        "date": 1756379510757,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161995963371,
            "range": "± 339855110",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d8796eb086d8a7dc98f166ca5fee62b00b08a1b2",
          "message": "fix(l1): update references to moved folder (tooling/ef_tests) (#4193)\n\n**Motivation**\nFixing the leftovers from\nhttps://github.com/lambdaclass/ethrex/pull/4143\n\n**Description**\n- Fixes missing reference updates after moving.",
          "timestamp": "2025-08-28T13:25:22Z",
          "tree_id": "250de603cfdb56401d882d04b3a70be3a8549044",
          "url": "https://github.com/lambdaclass/ethrex/commit/d8796eb086d8a7dc98f166ca5fee62b00b08a1b2"
        },
        "date": 1756390468990,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 158904164053,
            "range": "± 439123976",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "95fe9b75cea2ce303120ed36e7bcda717980739a",
          "message": "build(l1, l2): tag `ethrex:main` instead of `ethrex:unstable`. (#4192)\n\n**Motivation**\nthe term `unstable` is confusing. `main` is much clearer imo and it's\nthe default other clients use\n\n**Description**\n- Changed the docker tag on merge from `unstable` to `main`\n- Updated references to `unstable` across the codebase.",
          "timestamp": "2025-08-28T13:59:29Z",
          "tree_id": "deea1cd7d0d030687c1f354133d80f0e2175c714",
          "url": "https://github.com/lambdaclass/ethrex/commit/95fe9b75cea2ce303120ed36e7bcda717980739a"
        },
        "date": 1756392670872,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161296463827,
            "range": "± 292497374",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c40ac146c116c26d7a61b252cafeef37e5faee2d",
          "message": "ci(l1,l2): recompile replay caches to rkyv (#4195)\n\n**Motivation**\n\nCI was failing due to old cache serialization.\n\n**Description**\n\nRecompile cache that runs on the CI to use `rkyv`\nSucceeded\n[here](https://github.com/lambdaclass/ethrex/actions/runs/17297071969/job/49097875868?pr=4195)",
          "timestamp": "2025-08-28T14:38:39Z",
          "tree_id": "bf3e244f107158f2c31ac3c577cd6949400420f6",
          "url": "https://github.com/lambdaclass/ethrex/commit/c40ac146c116c26d7a61b252cafeef37e5faee2d"
        },
        "date": 1756395005237,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160904292171,
            "range": "± 256255125",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a4de96d6c60293d357a0ab36bcaf43f35a45d263",
          "message": "feat(l1, l2): preprocess execution witness data (#4172)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\nBlock execution and proving replay using SP1 is currently very slow due\nto some computation being done inside the zkVM that can be avoided.\n\n**Description**\n\nThis PR aims to perform said zkVM-expensive computation prior to zkVM\nexecution.\n\nThis PR adds 3 convenient fields to `ExecutionWitnessResult`:\n- `state_nodes: HashMap<H256, NodeRLP>`: A map that associates a MPT\nnode hash to its raw RLP-encoded form. This is convenient because by\nhaving this generated before execution inside the zkVM we avoid some\nprover-expensive computation like hashing each node.\n- `account_storage_root_hashes: HashMap<Address, H256>`: A map that\nassociates an account address to its storage root hash. It is convenient\nto have this precomputed before execution inside the zkVM because we\navoid doing this association inside the zkVM (which is expensive, mainly\nbecause of the hashing and recurrent iteration over all the MPT nodes).\n- `touched_account_storage_slots: HashMap<Address, Vec<H256>>`: This\nstructure that it's only purpose is to track the accessed account\nstorage slots. It is necessary to serve the `debug_executionWitness`\nrequests properly.\n\n**Samply Results**\n\n**Before**\n\n<img width=\"1920\" height=\"583\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/f14fd34c-3a4b-4a2e-b3fa-5804aa818da4\"\n/>\n\n**After**\n\n<img width=\"1918\" height=\"433\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/9cdf0dc1-904d-40d2-9bbd-d8bad0aee1d9\"\n/>\n\n---------\n\nCo-authored-by: Tomás Paradelo <tomas.paradelo@lambdaclass.com>",
          "timestamp": "2025-08-28T17:36:50Z",
          "tree_id": "fe6390c580ce64abbc18f1a3dee38eb33e5916cd",
          "url": "https://github.com/lambdaclass/ethrex/commit/a4de96d6c60293d357a0ab36bcaf43f35a45d263"
        },
        "date": 1756406325835,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 158950567483,
            "range": "± 244948525",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f648d769c4a8b5f0a7afb83d154b4cc059e2f481",
          "message": "feat(l1): `ethrex_replay` add tooling for periodic replay runs (#4108)\n\n**Motivation**\n\nWe urge the need for a tool for internal usage that replays L1 blocks\nfrom public networks like Hoodi, Sepolia, and Mainnet periodically\n(either execution with or without SP1, or proving with SP1) to ensure\n`ethrex-replay` works correctly and also to find potential bugs in\n`ethrex`.\n\n**Description**\n\nReplayer script that executes or proves the latest public network blocks\nin a loop and notifies to a Slack channel through a slack web hook if\nthe flag --slack-web-hook is passed.\n\n**Usage**\n\n```\nUsage: ethrex-replayer [OPTIONS] <--hoodi-rpc-url <URL>|--sepolia-rpc-url <URL>|--mainnet-rpc-url <URL>>\n\nOptions:\n  -h, --help  Print help\n\nReplayer options:\n      --slack-webhook-url <URL>  [env: SLACK_WEBHOOK_URL=]\n      --hoodi-rpc-url <URL>      [env: HOODI_RPC_URL=]\n      --sepolia-rpc-url <URL>    [env: SEPOLIA_RPC_URL=]\n      --mainnet-rpc-url <URL>    [env: MAINNET_RPC_URL=]\n      --execute                  Replayer will execute blocks\n      --prove                    Replayer will prove blocks\n```\n\n**How to test**\n\nTo periodically execute the latest Hoodi blocks, run:\n```\ncargo run --release -p ethrex-replayer --bin ethrex-replayer -- --hoodi-rpc-url http://65.108.69.58:8545 --execute\n```\n\n---------\n\nCo-authored-by: ilitteri <ilitteri@fi.uba.ar>\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>\nCo-authored-by: JereSalo <jeresalo17@gmail.com>\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>\nCo-authored-by: LeanSerra <46695152+LeanSerra@users.noreply.github.com>",
          "timestamp": "2025-08-28T18:40:50Z",
          "tree_id": "a89f74bf2910077daf21dde394d653186f7683e6",
          "url": "https://github.com/lambdaclass/ethrex/commit/f648d769c4a8b5f0a7afb83d154b4cc059e2f481"
        },
        "date": 1756410046856,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161883324916,
            "range": "± 301843254",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "867e34f00cb1969cfa7162a0adb1e7774d667cf8",
          "message": "feat(l2): revert batch subcommand with web3signer (#4194)\n\n**Motivation**\n\nMost L2 chains are deployed with the private keys hidden under a\nweb3signer, we want the `ethrex l2 revert-batch` subcommand to support\nweb3signer\n\n**Description**\n\n- Add 2 flags\n   - `remote-signer-url`: the url of the web3signer server\n- `remote-signer-public-key`: the public key to send to the web3server\nto ask for a signature\n- Modify `call_contract` to get a `Signer` as an argument instead of\nonly a private key\n- Modify `revert-batch` subcommand to parse either a `RemoteSigner` or a\n`LocalSigner` then use that value when calling `call_contract`\n\nCloses #4189",
          "timestamp": "2025-08-28T21:11:41Z",
          "tree_id": "b1fdad526a2fe09027de0d7a876ed576cfa8fefb",
          "url": "https://github.com/lambdaclass/ethrex/commit/867e34f00cb1969cfa7162a0adb1e7774d667cf8"
        },
        "date": 1756418483620,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161155049993,
            "range": "± 160285591",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f06595020db5a6f0ebd5ce5291dfe25edac25213",
          "message": "feat(l2): rich accounts monitor tab (#4197)\n\n**Motivation**\n\nWhen launching an L2 with `ethrex l2 --dev`, one of the main things you\nwant to have at hand is the set of rich accounts on the localnet.\n\n**Description**\n\n- Adds a new `Rich Accounts` tab to the ethrex monitor.\n- Loads the private keys from `LOCAL_DEVNET_PRIVATE_KEYS` and\nperiodically updates their balances.\n\n<img width=\"1507\" height=\"946\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/ff100d1b-fe61-4b3c-a3f4-d0418d20ea44\"\n/>\n\n\n\n#4198 and #4200 where created to be addressed in future PRs.\n\nCloses None",
          "timestamp": "2025-08-28T21:47:59Z",
          "tree_id": "6a8bdb4aa89e9b55147276399bfb46742106c928",
          "url": "https://github.com/lambdaclass/ethrex/commit/f06595020db5a6f0ebd5ce5291dfe25edac25213"
        },
        "date": 1756421003292,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160701000590,
            "range": "± 316808515",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "48f2f4245eeb62799125c8d6dba86b05719a49b3",
          "message": "perf(l1): avoid cloning the mempool keys when filtering (#4205)\n\n**Motivation**\n\nCurrently, on larger networks the CPU usage is very high and increases\nuntil the node can't keep up with execution.\n\n**Description**\n\nCurrently, filter_unknown_transactions makes a copy of the mempool keys\n(known transaction hashes).\n\nThis cloning is not necessary, we can query the mempool directly.",
          "timestamp": "2025-08-29T17:30:31Z",
          "tree_id": "326fc5ad1fd5d83d04ee5157ec07bd863744072b",
          "url": "https://github.com/lambdaclass/ethrex/commit/48f2f4245eeb62799125c8d6dba86b05719a49b3"
        },
        "date": 1756491780944,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162724515031,
            "range": "± 441436467",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fae4fd6cd7344964c78ae17854fc2f8dfd860d3",
          "message": "feat(l2): add support for multiple networks on a single prover (#4186)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nProver may be idle for a long time if batch generation frequency is low,\nwasting resources.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nAllow the prover to have multiple proof coordinator endpoints. This can\nbe used both for multiple networks as for redundancy. Since the prover\nis stateless, it doesn't matter if the endpoints are from different\nnetworks.\nThe prover will try to get a task sequentially on each endpoint. After\nall endpoints are checked and proofs generated (in case there's anyone\nto generate), the prover will sleep `--proving-time` milliseconds and\nstart again\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: LeanSerra <46695152+LeanSerra@users.noreply.github.com>",
          "timestamp": "2025-08-29T18:38:25Z",
          "tree_id": "1220314e7be0d19aded70859afec36816ccd7fee",
          "url": "https://github.com/lambdaclass/ethrex/commit/9fae4fd6cd7344964c78ae17854fc2f8dfd860d3"
        },
        "date": 1756495730144,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 159896159055,
            "range": "± 262857246",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me+git@droak.sh",
            "name": "Oak",
            "username": "d-roak"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b5b710b098e709b9782d05df2811ad450acccd2c",
          "message": "fix(l1): out of bounds on jwt file (#4148)\n\n**Motivation**\n\nThere's a problem when `contents` value has fewer than 2 characters, it\npanics the program.\n\n**Description**\n\nThe program shouldn't panic with out-of-bounds errors. The solution was\nto replace it with the native check `starts_with()`",
          "timestamp": "2025-08-29T21:25:10Z",
          "tree_id": "db714cd50d3c5879a549ed1ff52f7532e6f8beed",
          "url": "https://github.com/lambdaclass/ethrex/commit/b5b710b098e709b9782d05df2811ad450acccd2c"
        },
        "date": 1756505756001,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160715342545,
            "range": "± 343581416",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44068466+SDartayet@users.noreply.github.com",
            "name": "SDartayet",
            "username": "SDartayet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0299d044a77c0ad99a0b8e41723a7eb76c491f26",
          "message": "feat(l1): added fusaka support for runners (#4163)\n\n**Motivation**\n\nAdding the boilerplate in the runners to be able to execute the Fusaka\ntests in the future when we start implementing it\n\n**Description**\n\nThis PR changes the fixture URLs to the most recent execution spec tests\nrelease that supports Fusaka. Additionally, it adds the parameters\nneeded to the structs the runners use to be able to parse and execute\nthe test; although at the moment they're skipped by default. The Osaka\ntests were also added to the Hive daily report.\n\nCloses #4114",
          "timestamp": "2025-09-01T12:18:44Z",
          "tree_id": "8fbdbf3a8b9cac6c2b2c725aeef952a519bf71f4",
          "url": "https://github.com/lambdaclass/ethrex/commit/0299d044a77c0ad99a0b8e41723a7eb76c491f26"
        },
        "date": 1756732608867,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 159327707599,
            "range": "± 385797761",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "09c6defb6a6ef47c606fd5587017f94d602764c1",
          "message": "perf(levm): process JUMPDEST gas and pc together within the given JUMP/JUMPI opcode (#4220)\n\n**Motivation**\n\nIt's basically #3763 without the nop slide, see the discussion there. \nIt only skips 1 jumpdest if coming from a jump, but doesn't slide if\nthere are a lot of sequential jumpdests afterwards.\n\nStill has improvements overall to a lot of benches\n\n<img width=\"1405\" height=\"4352\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/88748fd2-f2b0-436b-bed0-33d163779872\"\n/>\n\n---------\n\nCo-authored-by: Esteve Soler Arderiu <azteca1998@users.noreply.github.com>",
          "timestamp": "2025-09-01T13:13:26Z",
          "tree_id": "fec9b49c82dd96b65f59a03d14b35b21470b218e",
          "url": "https://github.com/lambdaclass/ethrex/commit/09c6defb6a6ef47c606fd5587017f94d602764c1"
        },
        "date": 1756735397852,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161416072105,
            "range": "± 332115861",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cbef92ec2aa0a39ff9f468d28d49d23a58318bc5",
          "message": "chore(l1): improve logging on the `import` subcommand. (#4201)\n\n**Motivation**\nLogging in general, and specifically in the `import` subcommand is quite\nmessy.\n\n**Description**\n- Improves the logging phrasing\n- Instead of logging for each block, logs a summary every 10 seconds\n- Logs the total time that it took.\n- Some misc log additions and downgrades\n\nThis is how it looks:\n```\n2025-08-28T17:27:12.121079Z  INFO ethrex_storage::store: Opening storage engine engine=Libmdbx path=/Users/mpaulucci/Library/Application-Support/ethrex\n2025-08-28T17:27:12.158692Z  INFO ethrex_storage::store: Storing genesis block hash=0xbbe3…971b\n2025-08-28T17:27:12.159567Z  INFO ethrex::initializers: Initiating blockchain evm=levm\n2025-08-28T17:27:12.159726Z  INFO ethrex::cli: Importing blocks from file path=./hoodi-1k.rlp\n2025-08-28T17:27:22.415021Z  INFO ethrex::cli: Import progress processed=151 total=1000 percent=15.1\n2025-08-28T17:27:32.602179Z  INFO ethrex::cli: Import progress processed=180 total=1000 percent=18.0\n```",
          "timestamp": "2025-09-01T13:51:03Z",
          "tree_id": "f4b2a8aa1b155f1a710358f6c92e61a9475c5423",
          "url": "https://github.com/lambdaclass/ethrex/commit/cbef92ec2aa0a39ff9f468d28d49d23a58318bc5"
        },
        "date": 1756737654162,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160756299677,
            "range": "± 231254991",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "12ace664e19cee360df58e2610f66e905aebccab",
          "message": "ci(l1): fix daily hive job (#4222)\n\n**Motivation**\nHive job was not working properly since the local docker image was not\nloaded.",
          "timestamp": "2025-09-01T16:11:12Z",
          "tree_id": "35ed06d85281b6f79f485f7c862e115ac61d2d97",
          "url": "https://github.com/lambdaclass/ethrex/commit/12ace664e19cee360df58e2610f66e905aebccab"
        },
        "date": 1756746101005,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161035725712,
            "range": "± 271562435",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "cbbd6f8f94b6f19acdc69318f78f46c4e7606f8b",
          "message": "fix(l2): make `down-l2` kill only the L2 process, not the prover (#4225)\n\n**Motivation**\n\nWhen running `make restart-l2`, the `down-l2` rule kills the prover if\nit's already running. This filters out the `ethrex l2 prover ...`\nprocess.",
          "timestamp": "2025-09-01T17:08:39Z",
          "tree_id": "10b28551306694cef947c16ecddeb7061aaf4710",
          "url": "https://github.com/lambdaclass/ethrex/commit/cbbd6f8f94b6f19acdc69318f78f46c4e7606f8b"
        },
        "date": 1756749580628,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162275580668,
            "range": "± 370769480",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "75ab1026b1f03b9fc8b1f2360ed37a5505b7cd44",
          "message": "docs(l1,l2): update `ethrex-replay` docs (#4214)\n\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>",
          "timestamp": "2025-09-01T17:11:34Z",
          "tree_id": "90bb99e0698824505c1091138b99566146ec69a9",
          "url": "https://github.com/lambdaclass/ethrex/commit/75ab1026b1f03b9fc8b1f2360ed37a5505b7cd44"
        },
        "date": 1756749967276,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161648797209,
            "range": "± 332952768",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e77ff564825296660bfee50c9623cfab2d5e6aaa",
          "message": "fix(l2): properly restore context in payload_builder (#4242)\n\n**Motivation**\n\nWe have a bug in our `payload_builder` when filling transactions into a\nblock, which appears later during the block validation process of the\n`prover`:\n\n\n```\n2025-09-01T18:27:49.421092Z ERROR ethrex_prover_lib::prover: Gas validation error: Invalid Block: Gas used doesn't match value in header. Used: 46011000, Expected: 50064000 endpoint=tcp://127.0.0.1:3900\n```\n\n#### What is it about?\n\nAfter executing a transaction, if the block’s `stateDiff` size exceeds\nthe maximum allowed, we restore the `vm.context`, reverting the account\nupdates generated by the transaction.\nThe problem is that we should also update `context.remaining_gas` and\n`context.block_value` as well.\n\n#### Why haven’t we seen the error before?\n\nThere is an `if` check that prevents the error from appearing in our\ndaily usage:\n\n\n```Rust\n// Check if we have enough space for the StateDiff to run more transactions\nif acc_size_without_accounts + size_accounts_diffs + SIMPLE_TX_STATE_DIFF_SIZE\n> safe_bytes_per_blob {\n\twarn!(\"No more StateDiff space to run transactions\");\n\tbreak;\n};\n```\n\nThis is an early return that checks if we have enough space for a simple\ntransfer, and stops adding transactions to the block if we don’t.\nHowever, it can also happen that we have enough space for a simple\ntransfer, but the transaction we are trying to add occupies more space\nthan that, making us restore the previous state.\n\n#### How to trigger the error\n\nThe easiest way to trigger the error is to comment out the early return,\nallowing the `payload_builder` to attempt restoring the previous state.\nThen start the `L2` and `prover` with:\n\n```\nmake init\nmake init-prover\n```\n\nand run a load test with:\n```\ncargo run --release --manifest-path ./tooling/load_test/Cargo.toml -- -k ./fixtures/keys/private_keys_l1.txt -t eth-transfers -n \"http://localhost:1729\"\n```\n\n\n**Description**\n\nThis PR updates the `paylaod_builder` to restore the `remaining_gas` and\nthe `block_value` If the `stateDiff` size exceeds the maximum allowed\nafter executing a transaction.\n\nIssue #4243 was created to add an integration test covering this case.\n\nCloses None",
          "timestamp": "2025-09-01T20:35:55Z",
          "tree_id": "22cb4402aa6cc5bc146ccde482144aa02f78fae3",
          "url": "https://github.com/lambdaclass/ethrex/commit/e77ff564825296660bfee50c9623cfab2d5e6aaa"
        },
        "date": 1756761946634,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160899074324,
            "range": "± 418893542",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49622509+jrchatruc@users.noreply.github.com",
            "name": "Javier Rodríguez Chatruc",
            "username": "jrchatruc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cae720162fd889eb18417010e5f091c6d097d35",
          "message": "feat(l1): improve p2p peer discovery and rework snap sync (#4213)\n\n**Motivation**\n\nThis PR does two main things:\n\n- Improves the process of finding peers by being way more aggressive in\nour lookup. The previous version was too passive and as a result did not\nfind many peers in a reasonable amount of time.\n- Reworks and fixes a few things in snap sync to make it work on the\nmain networks: this was tested and ran succesfully on hoodi, sepolia and\nmainnet. It currently syncs hoodi in around 20 minutes in a good\nscenario, sepolia in around 3 and a half hours, and mainnet in ~24\nhours. These times are very far from ideal and there is a ton of room\nfor improvement here. This is a first iteration that will be improved in\nsubsequent PRs, along with improvements to our p2p code in general (lots\nof bugs and performance issues were found once we started succesfully\nsyncing big testnets). The code is also far from ideal from a\nreadability standpoint, something we will also tackle on a future PR by\nrewriting this code using `spawned`.\n\nSome of the things left to tackle on subsequent PRs are:\n\n- Fix memory usage, currently the snap sync code does not flush data to\ndisk frequently enough and as a result uses massive amounts of memory on\nbig networks when syncing.\n- Use a global peer scoring mechanism instead of tracking scores\nseparately on each snap sync stage.\n- Improve download task distribution to peers; the algorithm is\ncurrently too simple and becomes very slow if run on a node with high\nlatency to most of its peers.\n- Various p2p fixes: improve tx broadcast logic to decrease cpu usage\nwhen we have lots of peers, limit mempool size and other changes needed\nto make the node more stable.\n- Optionally download blocks and receipts as well once the sync process\nis finished. These are not necessary for a node to be synced but they\nare common data that most clients usually serve by default.\n- Various performance improvements to reduce time spent writing to the\ndatabase, make db writes concurrent to downloads, and more.\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: ilitteri <ilitteri@fi.uba.ar>\nCo-authored-by: Pablo Deymonnaz <deymonnaz@gmail.com>\nCo-authored-by: Lucas Fiegl <iovoid@users.noreply.github.com>\nCo-authored-by: ricomateo <mrico@fi.uba.ar>\nCo-authored-by: Gianbelinche <39842759+gianbelinche@users.noreply.github.com>\nCo-authored-by: Francisco Xavier Gauna <francisco.gauna@lambdaclass.com>\nCo-authored-by: Mateo Rico <89949621+ricomateo@users.noreply.github.com>\nCo-authored-by: Juan Munoz <juanmunoz890@gmail.com>\nCo-authored-by: Esteban Dimitroff Hodi <esteban.dimitroff@lambdaclass.com>\nCo-authored-by: Pablo Deymonnaz <pdeymon@fi.uba.ar>\nCo-authored-by: juan518munoz <62400508+juan518munoz@users.noreply.github.com>",
          "timestamp": "2025-09-01T21:15:01Z",
          "tree_id": "8d4577ca009a9683dfc86805d24a31b55dae0d2b",
          "url": "https://github.com/lambdaclass/ethrex/commit/0cae720162fd889eb18417010e5f091c6d097d35"
        },
        "date": 1756764939930,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161782600464,
            "range": "± 342574259",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e7df1cce1bc62fadbbc5c954394123cb29bf89f0",
          "message": "ci(l1): replace old cache and add workflow to verify that we keep consistency (#4209)\n\n**Motivation**\n\nCI was broken again due to replay cache format changes.\n\n**Description**\n\n- Update cache to the new format\n- Add workflow to verify that we are consistent with the cache stored\n- Execute in 7 minutes\n[here](https://github.com/lambdaclass/ethrex/actions/runs/17333409316/job/49214515851?pr=4209)",
          "timestamp": "2025-09-02T15:00:15Z",
          "tree_id": "625d0aa5f1384773740888afb5610b2b9578c63e",
          "url": "https://github.com/lambdaclass/ethrex/commit/e7df1cce1bc62fadbbc5c954394123cb29bf89f0"
        },
        "date": 1756828483683,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162390905821,
            "range": "± 294806217",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a1b29d495901fccfc612756508634aa1fa7344d6",
          "message": "fix(l1): fix high memory usage in `ethrex_replay` (#4254)\n\n**Motivation**\n\nFix memory problems when executing with SP1 on replay with heavy blocks.\nThe cause was that SP1 embedded allocator has a max of 1GB memory\nallocated and we were exceeding even 3GB. This improves memory usage of\nethrex replay itself (independently of the zkvm used) and as a\nconsequence we don't have these kind of errors anymore because memory\nusage is now drastically lower.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nBytehound of a normal run for a [heavy mainnet\nblock](https://etherscan.io/block/23242537).\nPre Fix:\n<img width=\"3320\" height=\"1394\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/991eb712-a249-43d0-9296-183a42618445\"\n/>\n\nPost Fix:\n<img width=\"3320\" height=\"1410\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/8fcbae6e-5994-4828-a335-1bcf2686cd27\"\n/>\n\nFrom 3.2GB RAM to 42MB\n~20% improvement in performance. From 10s to 8s.\n\nCloses #4089",
          "timestamp": "2025-09-02T15:17:49Z",
          "tree_id": "c3c2a74912f1ce109a41725e6a8fcf1eefbaa3e4",
          "url": "https://github.com/lambdaclass/ethrex/commit/a1b29d495901fccfc612756508634aa1fa7344d6"
        },
        "date": 1756829602475,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 159052289275,
            "range": "± 503758269",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44068466+SDartayet@users.noreply.github.com",
            "name": "SDartayet",
            "username": "SDartayet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "fc077fdcfff125223deea014e228a0ec1e738cd0",
          "message": "feat(l1,levm): implement CLZ opcode (#4188)\n\n**Motivation**\n\nImplementing the Fusaka fork, specifically [EIP\n7939](https://eips.ethereum.org/EIPS/eip-7939)\n\n**Description**\n\n- Added the CLZ opcode\n- Made it so the test runner runs the tests for it\n\nDepends on #4163 for tests\n\nCloses #4159",
          "timestamp": "2025-09-02T16:59:54Z",
          "tree_id": "8414b36a246160f2972771fa33a31a1d7f5d98f6",
          "url": "https://github.com/lambdaclass/ethrex/commit/fc077fdcfff125223deea014e228a0ec1e738cd0"
        },
        "date": 1756835531285,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 161345628078,
            "range": "± 363320293",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7a169cf414791b892430abf1e716442e318f8d84",
          "message": "fix(levm): check coordinates are within field bounds in ecpairing precompile (#4082)\n\n**Motivation**\nA gas mismatch was found on a [sepolia\ntransaction](https://sepolia.etherscan.io/tx/0x4355d49be46e61a53c71f45a128ebefb52cb38df08ed55833c2c162d26396819).\nThis was due to the transaction failing at an ecpairing precompile on\nthe network but not on levm. The difference was that geth checks that\nthe coordinates received are within the bounds of the field, while we\nperform modulus on the input coordinates (see\n`BN254FieldElement::from_bytes_be`). This PR fixes this by checking that\nthe input coordinates are within the field bounds before constructing\nthe FieldElements.\nIt also adds some tests taken from geth to ensure that the\nimplementation remains correct + a test for the out of bounds case\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Check that input coordinates are within field bounds in `ecpairing`\nprecompile\n* Add tests for `ecpairing` precompile\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-02T18:11:12Z",
          "tree_id": "06b03d360335a6293ead17faa2bda86677781f28",
          "url": "https://github.com/lambdaclass/ethrex/commit/7a169cf414791b892430abf1e716442e318f8d84"
        },
        "date": 1756840101439,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160775904428,
            "range": "± 374820248",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0f821ad9a68d9fcf1469b62d5aa5cc54bf37aa79",
          "message": "test(levm,l1): run state tests as if they were blocks instead of transactions (#4179)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n- The final goal is to run state tests with SP1, that's why we need to\nrun them as blocks. This is a first step in that direction.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- Fix `sign_inplace` for Legacy Transactions.\n- Remove code that checks that withdrawal request and consolidation\nrequest accounts have code. This breaks 2 tests but it's completely\nworth it I'd say. It is an unrealistic case that doesn't happen in\nmainnet nor testnets.\n- [Geth skips these tests\ntoo](https://github.com/ethereum/go-ethereum/blob/72d92698a474059f3a73798c6312699c1f210497/tests/block_test.go#L84-L85)\n- I had to remove this because in the state tests scenarios these\naccounts don't exist.\n- I had to skip `HighGasPrice` EFTests because we need to fix the gas\nprice for our Legacy and Type 1 transactions, it should be U256 #3629\n- Now we accurately get the transaction from a test case, without doing\nthe shady stuff we were previously doing.\n- We also sign the transaction with the private key of the sender\nbecause it has to be valid.\n- Corrects all kinds of things we were doing wrong because when running\nthe transaction only we didn't have problems. For example, make an\naccurate `Genesis` block. (Which wasn't very trivial I'd say)\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #4183\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-02T19:08:56Z",
          "tree_id": "89b7fbd11d3103e87da7e8c44dafab8773c46d6d",
          "url": "https://github.com/lambdaclass/ethrex/commit/0f821ad9a68d9fcf1469b62d5aa5cc54bf37aa79"
        },
        "date": 1756843701272,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162325948986,
            "range": "± 304725144",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ea88ae472db9fbed0b3c2725624f70ee1b100fcb",
          "message": "fix(l2): make CommonBridgeL1 pausable  (#4215)\n\n**Motivation**\n\nWe want to make CommonBridge.sol pausable\n\n**Description**\n\n- Add `PausableUpgradeable` to CommonBridge\n- Add `ethrex l2 pause` and `ethrex l2 unpause subcommands`\n\nCloses #3126",
          "timestamp": "2025-09-02T19:43:08Z",
          "tree_id": "78cd473ed19b5cb6bc778c2613c9d651f438b27f",
          "url": "https://github.com/lambdaclass/ethrex/commit/ea88ae472db9fbed0b3c2725624f70ee1b100fcb"
        },
        "date": 1756845533644,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 164376465939,
            "range": "± 720998153",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f5e41d633f9663f9b03304e4a7f681f695327750",
          "message": "feat(l2): discard invalid batch proofs (#3866)\n\n**Motivation**\n\nIn case a verify_batch transaction failed, the proof_sender would get\nstuck because the old proof would be retried instead of asking for a new\none\n\n**Description**\n\n- Add a function to rollup_store to delete a proof\n- Modify OnChainProposer to return an error message indicating which\nproof was determined to be invalid\n- Modify l1_proof_sender to identify the the invalid proof and delete it\n\n**How to test**\n\nBuild a working sp1 prover\n```\nmake build-prover PROVER=sp1 G=true\n```\n\ncopy the built binary to a different folder because we are going to\noverwrite it\n```\ncp target/release/ethrex_prover <destination-folder>\n```\n\nstart a local testnet with sp1 enabled (set `--sp1.deploy-verifier` on\nl2 Makefile deploy-l1 target)\n```\nETHREX_PROOF_COORDINATOR_DEV_MODE=false make restart\n```\n\nstart the valid prover and check that the batches are correctly proved\n```\ncd <destination-folder> \n```\n\n```\nSP1_PROVER=cuda ./ethrex_prover --http.addr 127.0.0.1 --http.port 3900 --log.level debug\n```\n\nkill the prover with ctrl-c\n\nmodify the prover code to generate invalid proofs (I commented all the\ncode from `execution_program` function and returned a `ProgramOutput`\nwith everything set to 0)\n\n```\nmake build-prover PROVER=sp1 G=true\n```\n\nand\n\n```\nSP1_PROVER=cuda make init-prover PROVER=sp1\n```\n\nyou should see on the sequencer logs `Deleting invalid SP1 proof` you\ncan then kill this invalid prover with ctrl-c and restart the original\ncorrect prover. Now the valid prover should receives the batch that was\npreviously sent to the invalid prover and batches should start verifying",
          "timestamp": "2025-09-02T19:48:05Z",
          "tree_id": "d32fd0bdd8827c20261320fa0eec8ec888451a61",
          "url": "https://github.com/lambdaclass/ethrex/commit/f5e41d633f9663f9b03304e4a7f681f695327750"
        },
        "date": 1756845692936,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162927022258,
            "range": "± 308756313",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f836841fa7fbfa0e44adab1c3c8c39ef5aaf370b",
          "message": "feat(levm): osaka modexp gas cost changes (#4206)\n\n**Motivation**\nImplement gas cost calculation updates defined in\n[EIP-7883](https://eips.ethereum.org/EIPS/eip-7883)\nAdd boundary checks defined in\n[spec](https://github.com/ethereum/execution-specs/blob/51cabd86502df7af596f5c78a0c4e00a4f92822c/src/ethereum/osaka/vm/precompiled_contracts/modexp.py#L31)\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Adds gas cost calculation for modexp precompile as of Osaka fork\n* Adds boundary checks for modexp inputs as of Osaka fork\n* Gate base fee being charged if modules & base where == 0 under\npre-osaka fork (Not in the spec & caused tests to fail)\n* `PrecompileFn` now takes a `fork: Fork` argument (there was no other\nway around this)\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #4155",
          "timestamp": "2025-09-02T19:54:51Z",
          "tree_id": "3c07720c0410bac1e4344b66ff9ca80b2adf6ef3",
          "url": "https://github.com/lambdaclass/ethrex/commit/f836841fa7fbfa0e44adab1c3c8c39ef5aaf370b"
        },
        "date": 1756846030349,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 160493872349,
            "range": "± 192081154",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "50249e0f68c965568e6155d2a14e3a64c49f9f87",
          "message": "chore(l1): added docker compose init + metric flags to snapsync make target (#4251)\n\n**Motivation**\n\nAdd metrics + a docker compose with prometheus and grafana\n\n**Description**\n\nThis PR add a couple of commands before the actual execution of the node\nin the `server-sync` make target to start prometheus and grafana as\ncontainers and later add the metrics flags to the node execution.\n\nLocally this starts grafana at `3001` with default us/pass and allow to\nsee the block metrics as well as the resource (CPU/Memory/etc) ones.",
          "timestamp": "2025-09-02T20:13:47Z",
          "tree_id": "622492a7429e1570df8e4fca9b0eebb56a6f995c",
          "url": "https://github.com/lambdaclass/ethrex/commit/50249e0f68c965568e6155d2a14e3a64c49f9f87"
        },
        "date": 1756847195626,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 164353944569,
            "range": "± 320995489",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a776a321a2f4378c48252769b8afa206568c5a64",
          "message": "feat(l1): chunk bytecode downloads (#4255)\n\n**Motivation**\n\nWe want to chunk download of bytecodes, in order to reduce RAM usage.\n\n**Description**\n\nThis splits download of bytecodes into chunks of fixed size.",
          "timestamp": "2025-09-02T20:19:30Z",
          "tree_id": "87e3932448739940c5f5b6fc5f54b199bf54afaa",
          "url": "https://github.com/lambdaclass/ethrex/commit/a776a321a2f4378c48252769b8afa206568c5a64"
        },
        "date": 1756847846437,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 162189357716,
            "range": "± 883483686",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "13ea64344e4fb71835d5ca76e7aac67845465e98",
          "message": "feat(l1): start building payloads as soon as we get an fcu (#4029)\n\n**Motivation**\n* Start the block building process as soon as we get a payload from a\nFCU\n* Only wait for the building process to finish when we get a\n`GetPayload` message\n* Keep latest 10 payloads in memory instead of filling up the DB with\nold payloads\n* Continuosly rebuild payload until requested/ slot time is up\n* Only remove transactions from mempool when we execute a payload\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Add `Blockchain` methods `initiate_payload_build` & `get_payload` to\nstart & finish a payload build process\n* Add `Blockchain` field `payloads` containing a vector of payload ids\nand payload building tasks/ built payloads (max 10 at a time)\n* Remove any instance of payloads being stored in the DB\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3920\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-09-02T21:08:24Z",
          "tree_id": "9ca01e6a36d7b6e2ef5cf80ed71a49070005c2cc",
          "url": "https://github.com/lambdaclass/ethrex/commit/13ea64344e4fb71835d5ca76e7aac67845465e98"
        },
        "date": 1756850332913,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 159323107275,
            "range": "± 574579922",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2e24dc04e6009728a46aa9b28f15880d3499b5c3",
          "message": "fix(l1, l2): use `BTreeMap` for `InMemoryTrieDB` and optimize stateless execution by avoiding state cloning (#4264)\n\n**Motivation**\n\nStateless execution with SP1 is stable, but it still takes too much time\nto execute and prove compared with other tools.\n\n1. We were aware that we were cloning the entire state on each trie\nrebuild (state and account storage ones).\n2. `HashMap` insertions are expensive for the prover. By changing the\ndata structure used under the hood, we can avoid these operations.\n\n**Description**\n\n- Use a `BTreeMap` as the `InMemoryTrieDB` inner storage instead of a\n`HashMap`.\n- Pass a reference to the state nodes map instead of cloning it every\ntime we want to build a trie.\n\n**Results**\n\n*`mainnet`'s 23276522  block Execution Time with SP1 Before (145s)*\n\n```\n2025-09-02T17:16:17.815246Z  INFO ethrex_replay::fetcher: Retrieving execution data for block 23276522 (329 block behind latest)\n2025-09-02T17:16:17.821839Z  INFO ethrex_replay::fetcher: Getting block 23276522 data from cache\n2025-09-02T17:16:17.822414Z  INFO ethrex_replay::bench: Starting prover program\n2025-09-02T17:16:17.824406Z  WARN sp1_sdk::env: SP1_PROVER environment variable not set, defaulting to 'cpu'\nstderr: WARNING: Using insecure random number generator.\n2025-09-02T17:18:45.292679Z  INFO execute: sp1_prover: gas: 7777466726\n2025-09-02T17:18:45.298342Z  INFO ethrex_prover_lib::backends::sp1: Successfully executed SP1 program in 145.31s\n2025-09-02T17:18:45.299427Z  INFO ethrex_replay::bench: Total gas from block/s: 22330686\n```\n\n*`mainnet`'s 23276522  block Execution Time with SP1 After (35s)*\n\n```\n2025-09-02T18:56:28.782876Z  INFO ethrex_replay::fetcher: Retrieving execution data for block 23276522 (827 block behind latest)\n2025-09-02T18:56:28.789067Z  INFO ethrex_replay::fetcher: Getting block 23276522 data from cache\n2025-09-02T18:56:28.789627Z  INFO ethrex_replay::bench: Starting prover program\n2025-09-02T18:56:28.791437Z  WARN sp1_sdk::env: SP1_PROVER environment variable not set, defaulting to 'cpu'\nstderr: WARNING: Using insecure random number generator.\n2025-09-02T18:57:05.758187Z  INFO execute: sp1_prover: gas: 1629109439\n2025-09-02T18:57:05.760484Z  INFO ethrex_prover_lib::backends::sp1: Successfully executed SP1 program in 34.81s\n2025-09-02T18:57:05.761603Z  INFO ethrex_replay::bench: Total gas from block/s: 22330686\n```\n\n*`mainnet`'s 23276522 block Execution with SP1 Flamegraph Before\n(`get_storage_slot` = ~80%)*\n\n<img width=\"1512\" height=\"457\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/b0bd9b36-a998-4228-ac9e-8b583fd986d5\"\n/>\n\n*`mainnet`'s 23276522 block Execution with SP1 Flamegraph After\n(`get_storage_slot` = ~18%)*\n\n<img width=\"1512\" height=\"437\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/4e90f631-3e14-47ac-a3dd-ba4871237b83\"\n/>",
          "timestamp": "2025-09-02T21:52:08Z",
          "tree_id": "45052b9f52e859d812880da8a9ec0c71b6da4518",
          "url": "https://github.com/lambdaclass/ethrex/commit/2e24dc04e6009728a46aa9b28f15880d3499b5c3"
        },
        "date": 1756853429986,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 158947428557,
            "range": "± 246278598",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c4c8f2a3a45bc97ea97348450f0f99695de0153b",
          "message": "perf(levm): use x86-64-v2 cpu target on linux by default (#4252)\n\n**Motivation**\n\nReleases are made with this target already\n\n\nhttps://github.com/lambdaclass/ethrex/blob/0cae720162fd889eb18417010e5f091c6d097d35/.github/workflows/tag_release.yaml#L33\n\nSetting it by default for linux targets at the repo level ensures more\nconsistency, specially when making benchmarks.\n\nThe reports i make in other prs about performance showing bench\ncomparisions use the v2, but because i manually edit the dockerfile\neverytime, which is an unnecesary manual process.\n\nx86_64-v2 basically is around the first Intel Core processors and should\nsupport most processors whereas x86_64-v1 goes back to the very first\nx86\n\nBy default rust uses v1.",
          "timestamp": "2025-09-03T09:31:52Z",
          "tree_id": "5dea5c6a1db363867d9b9cbc1e655e476962a981",
          "url": "https://github.com/lambdaclass/ethrex/commit/c4c8f2a3a45bc97ea97348450f0f99695de0153b"
        },
        "date": 1756895474147,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 171125273685,
            "range": "± 665030845",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d1155fe43a5f9821392a00f03ea46802f811fbd3",
          "message": "fix(l1): filter empty tries in storage healing (#4276)\n\n**Motivation**\n\nCurrently, we don't filter accounts that go from having storage to\nhaving an empty trie. This causes storage healing to get stuck with a\nlog like:\n\n```\n2025-09-03T12:47:36.412558Z  INFO ethrex_p2p::sync::storage_healing: this peer 0x062b…6972 request NodeRequest { acc_path: Nibbles { data: [1, 8, 11, 9, 5, 12, 15, 10, 0, 5, 15, 2, 12, 9, 14, 12, 0, 6, 2, 0, 11, 11, 8, 6, 2, 6, 15, 3, 6, 9, 4, 12, 0, 2, 9, 5, 10, 4, 6, 10, 3, 3, 15, 12, 0, 5, 9, 2, 9, 0, 10, 11, 14, 0, 15, 1, 4, 2, 6, 15, 10, 11, 12, 13, 16] }, storage_path: Nibbles { data: [] }, parent: Nibbles { data: [] }, hash: 0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421 }, had this error InvalidLength, and the raw node was b\"\"\n```\n\n(0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421 is\nthe empty trie hash)\n\n**Description**\n\nThis filters accounts with an empty trie as the storage root.",
          "timestamp": "2025-09-03T13:13:47Z",
          "tree_id": "0a67edd8bd9f0c118452d85c5d9d4e6784249605",
          "url": "https://github.com/lambdaclass/ethrex/commit/d1155fe43a5f9821392a00f03ea46802f811fbd3"
        },
        "date": 1756908391428,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168166756757,
            "range": "± 374356778",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "602d8f0d007808430d2bc0850ed93b8b86707323",
          "message": "chore(l1): correct block time and gas used % y axis labels on grafana panel (#4263)\n\n**Motivation**\n\nFix previously wrong labels on a grafana panel\n\n**Description**\n\nThis PR simply change the labels to be correct on the Blocktime/Gas Used\n% panel.",
          "timestamp": "2025-09-03T13:51:53Z",
          "tree_id": "27ee4bca4e010f78a32e9fecdf4d9028ec2cfe88",
          "url": "https://github.com/lambdaclass/ethrex/commit/602d8f0d007808430d2bc0850ed93b8b86707323"
        },
        "date": 1756910706481,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169050348205,
            "range": "± 461214688",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5dc636ae2a243a087a73379ec4f15a1c6d4a9da9",
          "message": "chore(l1): remove old comments and code (#4269)\n\n**Motivation**\n\nDuring snapsync development we left old code and comments.\n\n**Description**\n\nRemoves old comments and a useless \"validation\" on big accounts, which\nis pointless because errors are expected (hence why healing is needed).",
          "timestamp": "2025-09-03T13:56:02Z",
          "tree_id": "68f5921ccced03fd177e3513c4a9de697ec72a75",
          "url": "https://github.com/lambdaclass/ethrex/commit/5dc636ae2a243a087a73379ec4f15a1c6d4a9da9"
        },
        "date": 1756910907212,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170422640977,
            "range": "± 599006097",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9d1fb230cb83de478c85b45244ef26013ee6701f",
          "message": "chore(l1): only validate trie in debug mode (#4266)\n\n**Motivation**\n\nCurrently, we reconstruct the whole state and storage tries as a\nvalidation. This is very expensive, taking several hours on mainnet.\n\n**Description**\n\nThis moves the validations to a debug_assert, so they are only executed\nin debug mode.",
          "timestamp": "2025-09-03T13:55:12Z",
          "tree_id": "85a2e2106133e382632f129c2102384a429aca35",
          "url": "https://github.com/lambdaclass/ethrex/commit/9d1fb230cb83de478c85b45244ef26013ee6701f"
        },
        "date": 1756910911501,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170097998484,
            "range": "± 871585328",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3bcc9cf6221dfbb98317ba67ecb6edb6a28238ce",
          "message": "ci(l1): fix daily hive report. (#4274)\n\n**Motivation**\nDaily Hive report is broken\n\n**Description**\n- Fixes edge case where there are zero tests of a suite\n- Revert back to stable Pectra release since the Osaka devnets only have\nosaka tests.",
          "timestamp": "2025-09-03T14:11:52Z",
          "tree_id": "9d970199c20293d9bbde222d67a5ae8307306293",
          "url": "https://github.com/lambdaclass/ethrex/commit/3bcc9cf6221dfbb98317ba67ecb6edb6a28238ce"
        },
        "date": 1756911881944,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169694279767,
            "range": "± 2094764566",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "358746f0db85efb31a42bdc28c809d87cf0e6242",
          "message": "fix(l1,l2): eth client support 4 byte signatures, return decoded error in `RpcErr::Revert` (#4229)\n\n**Motivation**\n\nWhen calling contracts with `eth_call` or `eth_estimateGas` ethrex rpc\nwas returning an empty message from `get_message_from_revert_data`, we\nhad some code that decoded the error from the revert data but it was\nonly used when calling `eth_estimateGas` from our EthClient.\n\n**Description**\n\n- Move the code used to decode error from `EthClient::estimate_gas` to\n`get_message_from_revert_data`\n- Add logic to check for 4 byte function signatures, instead of trying\nto decode this as string, we just return the selector so that the user\ncan look it up in existing databases\n- Now that the `RpcErrorMetadata` has a message with content in it use\n`error_response.error.message.to_string()` in `EthClient::estimate_gas`\nwhen an error occurs\n\nCloses #4021",
          "timestamp": "2025-09-03T15:16:00Z",
          "tree_id": "c78d7fee96b78904df9906d78cf01fcfe91031ef",
          "url": "https://github.com/lambdaclass/ethrex/commit/358746f0db85efb31a42bdc28c809d87cf0e6242"
        },
        "date": 1756915714380,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168318910051,
            "range": "± 289777579",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5c77843b395cd0e440e1408385e42f520c1ca854",
          "message": "feat(l1, l2): use SP1's bump allocator (#4275)\n\n**Motivation**\n\nWe want to use SP1's bump allocator since it's faster than the embedded\none and also enables more memory usage for the guest program in the\nzkVM.\nCurrently, we are using the embedded allocator for two reasons: 1. It\nmitigates most of our allocation memory issues when executing the guest\nprogram with SP1, and 2. The bump allocator has some troubles with\n`rkyv` serialization.\n\n**Description**\n\nAfter reading [this\ndiscussion](https://github.com/eth-act/ere/issues/121), it seems to be a\nfix to the incompatibility issues we were having when using SP1's bump\nallocator with `rkyv` serialization.\n\nAfter a few successful executions, it seems to be working.\n\n**Test it out**\n\nRun the following in `ethrex`'s root to periodically execute Mainnet\nblocks using SP1:\n```\ncargo r -r -p ethrex-replayer --features sp1 -- --execute --mainnet-rpc-url http://157.180.1.98:8545\n```",
          "timestamp": "2025-09-03T17:28:27Z",
          "tree_id": "8d4d3eb040cadefee2daa31d11684811bfcb1f73",
          "url": "https://github.com/lambdaclass/ethrex/commit/5c77843b395cd0e440e1408385e42f520c1ca854"
        },
        "date": 1756923765692,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167455531053,
            "range": "± 364564505",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ffed957d95fad4048ee7986aeafc54500898a216",
          "message": "fix(l2): grafana for macos (#4283)\n\n**Motivation**\n\nOur Grafana dashboards are not showing data when running the node on\nmacos because the Linux bridge address is hardcoded in the Prometheus\ncontainer.\n \n**Description**\n\n- Use the `host-gateway` feature instead.\n\nCloses None",
          "timestamp": "2025-09-03T19:38:02Z",
          "tree_id": "79fb4f84b222f8c252112d3410efffaa50280f97",
          "url": "https://github.com/lambdaclass/ethrex/commit/ffed957d95fad4048ee7986aeafc54500898a216"
        },
        "date": 1756931479601,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168651446876,
            "range": "± 417567127",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f7f402c2e23305e64a1cb53b4c1070ba8a63480f",
          "message": "chore(l1): change bytecode fetching log to debug (#4293)\n\n**Motivation**\n\nThe \"Failed to get bytecode\" log is expected to happen sometimes (the\npeer might not have the bytecode), we shouldn't log it as an error.\n\n**Description**\n\nChanges the log to debug.",
          "timestamp": "2025-09-03T19:54:20Z",
          "tree_id": "5421051a068d44355794c5f2c0282a30a81ea4de",
          "url": "https://github.com/lambdaclass/ethrex/commit/f7f402c2e23305e64a1cb53b4c1070ba8a63480f"
        },
        "date": 1756932351968,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168259417764,
            "range": "± 621078208",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f89343e9dbad04839f3b35f41790ea55176295c5",
          "message": "refactor(l1, l2): `ethrex-replay` (#4228)\n\n**Motivation**\n\n`ethrex-replay`'s code was messy and unnecessarily large, and its API\nwas a little bit inconsistent\n\n**Description**\n\n- Refactors API\n    - `ethrex-replay execute block` -> `ethrex-replay block --execute`.\n    - `ethrex-replay execute blocks` -> `ethrex-replay blocks --execute`\n- `ethrex-replay execute block-range` -> `ethrex-replay block-range\n--execute`\n    - `ethrex-replay prove block` -> `ethrex-replay block-range --prove`\n- `ethrex-replay prove blocks` -> `ethrex-replay block-range --prove`\n- `ethrex-replay prove block-range` -> `ethrex-replay block-range\n--prove`\n- `ethrex-replay execute transaction` -> `ethrex-replay transaction\n--execute`\n- `ethrex-replay execute transaction --l2` -> `ethrex-replay l2\ntransaction --execute`\n- `ethrex-replay execute batch` -> `ethrex-replay l2 batch --execute`\n    - `ethrex-replay prove batch` -> `ethrex-replay l2 batch --prove`\n- Adds `log` function to `BlockExecutionReport`.\n- Adds `replay` function to abstract repeated replay logic.\n- Adds `setup` function to abstract repeated setup logic.\n- Adds some structs for common options between different\ncommands/subcommands.\n- Infer `Network` from chain ID.\n- Change `usize` to `u64` for block numbers.\n- Adapts `ethrex-replayer` to the changes.\n- Adapts Makefile to the changes.\n\n**Note**\n\n1. There's still room for more refactors, but this one settles down the\nnew structure.\n2. The `l2` feature flag cannot be removed as it requires a bigger\nrefactor in the `ethrex-prover` crate.",
          "timestamp": "2025-09-03T20:39:57Z",
          "tree_id": "e7f0c1ebe560431af83b32daa9c412121eb0df0e",
          "url": "https://github.com/lambdaclass/ethrex/commit/f89343e9dbad04839f3b35f41790ea55176295c5"
        },
        "date": 1756935140042,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166670698242,
            "range": "± 646164514",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5f5ae2ff90ea49a73afc2cef52fcf60007479d42",
          "message": "fix(l2): remove empty account diffs from payload builder's blob size estimation (#4042)\n\n**Motivation**\n\nThe payload builder estimates the state diff encoded size before adding\nanother transaction to the block to make sure that we can fit it in a\nblob, and a batch can be committed with that single block.\n\nWhen I executed load tests on the L2 the batch size metric reported 0,\nso I initially suspected that the estimation was wrong (smaller than the\nreal state diff size) and I investigated the implementation but found\nthat the batch size metric was wrong instead, and the estimation was\ncorrect*.\n\n*Nevertheless I found that sometimes `get_account_diffs_in_tx()` returns\nempty account diffs (I think because of accounts in the callframe's\noriginal state that didn't participate in that transaction) and they get\naccounted when estimating the state diff size, making the estimation\nlarger than the true value.\n\n**Description**\n\n- prevent `get_account_diffs_in_tx()` to retrieve empty account diffs\n- add an internal error in the case that the sequencer can't make a\nsingle block batch because of blob size, instead of getting stuck\nsilently.\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-09-03T21:14:06Z",
          "tree_id": "bca5fd0e8daa138235d2ccb0e3eaf22fe2289af2",
          "url": "https://github.com/lambdaclass/ethrex/commit/5f5ae2ff90ea49a73afc2cef52fcf60007479d42"
        },
        "date": 1756937251864,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167246757012,
            "range": "± 609276013",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "80769968+emirongrr@users.noreply.github.com",
            "name": "emirongrr",
            "username": "emirongrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f1c25d45e206d4e22ea66f2faf297757a32b7536",
          "message": "feat(l1): print loaded chain config on startup (#4027) (#4034)\n\n**Motivation**\n\nWhen starting the execution client, operators need clear and immediate\ninformation about the loaded chain configuration to verify correct setup\nand aid debugging. Currently, this information is not displayed at\nstartup.\n\n\n**Description**\n\nThis PR adds logging output on startup that prints the chain ID, and\nlists of pre-merge and post-merge hard forks with relevant block numbers\nor timestamps.\n\nIf there are any requested changes or feedback regarding the\nimplementation, I would be happy to address them. Please feel free to\nlet me know, and I’ll gladly make the necessary adjustments.\n\n<img width=\"1300\" height=\"419\" alt=\"terminal\"\nsrc=\"https://github.com/user-attachments/assets/9026e084-47b3-4bb3-9617-0bee0f4c05d1\"\n/>\n\n\nCloses #4027\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>",
          "timestamp": "2025-09-03T22:10:33Z",
          "tree_id": "eaeb1717dd03e6cc10de2e8d4dd935a2e8dd588e",
          "url": "https://github.com/lambdaclass/ethrex/commit/f1c25d45e206d4e22ea66f2faf297757a32b7536"
        },
        "date": 1756940600139,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166377428011,
            "range": "± 435650847",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5c0681db9dc344138192c793b88fadf7db1fcb46",
          "message": "refactor(l2): prover crate (#3800)\n\n**Description**\n\nRefactors the prover crate\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-03T22:13:33Z",
          "tree_id": "380745ee7fafc41c3fff02fd68ce87929d31bed8",
          "url": "https://github.com/lambdaclass/ethrex/commit/5c0681db9dc344138192c793b88fadf7db1fcb46"
        },
        "date": 1756940894313,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169303204136,
            "range": "± 480297441",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b95f845c7d11ab29198618487efd70ffaf08a2f6",
          "message": "chore(l1): various improvements on kurtosis networks. (#4285)\n\n**Description**\n- Changed `make localnet` so that when you exit via Ctrl+C it will\nshutdown the network\n- Removed `make hoodi` in favor of having a single localnet and\nconfiguring it through the `KURTOSIS_CONFIG_FILE`\n- Renamed the network configuration files\n- Changed all lighthouse image versions to be the same",
          "timestamp": "2025-09-04T14:00:31Z",
          "tree_id": "4714cd26b159acaeeb5119d5473188779679d494",
          "url": "https://github.com/lambdaclass/ethrex/commit/b95f845c7d11ab29198618487efd70ffaf08a2f6"
        },
        "date": 1756998093132,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169058679686,
            "range": "± 852721121",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c129d29fb0ec02478e9383d72b2bc86de26280a8",
          "message": "fix(l1): prevent panic in `eth68/Receipts` message handling (#4268)\n\n**Motivation**\nI ran into the following panic while running ethrex on sepolia testnet:\n```\nthread 'tokio-runtime-worker' panicked at crates/networking/p2p/rlpx/eth/eth68/receipts.rs:30:69:\nindex out of bounds: the len is 0 but the index is 0\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n```\nThis PR prevents this panic from happening\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* (eth68 message) `Receipts::new` no longer asumes we have at least one\nreceipt for a given block\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-04T15:05:33Z",
          "tree_id": "829c6ffc8ce17c495e9e63bde0aa17bb4bddc87e",
          "url": "https://github.com/lambdaclass/ethrex/commit/c129d29fb0ec02478e9383d72b2bc86de26280a8"
        },
        "date": 1757001477091,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168490787219,
            "range": "± 500777763",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "fe6f115b07a8138583b7586993df5fd9abd7252b",
          "message": "chore(l1): adjust bytecode chunk size (#4311)\n\n**Motivation**\n\nBytecode download is currently slow, in part due to the small chunk\nsize.\n\n**Description**\n\nConsidering that the maximum size of a contract is 0x6000, the new limit\nwould mean a max usage of ~1.2GB. In practice it's even lower because\nnot all contracts are that big, and many accounts point to the same\ncontracts.",
          "timestamp": "2025-09-04T15:06:03Z",
          "tree_id": "1e1afb775a01376dfb19650c3131dd098b2e7dbd",
          "url": "https://github.com/lambdaclass/ethrex/commit/fe6f115b07a8138583b7586993df5fd9abd7252b"
        },
        "date": 1757001512487,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168797492537,
            "range": "± 401149662",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "34144fb33998122c8a8d5c5222fcf488a515d431",
          "message": "feat(l1): chunk the download of headers (#4310)\n\n**Motivation**\n\nFor large networks such as mainnet, downloading all the headers at once\ncauses high RAM usage since the headers are kept in memory until they're\nall downloaded.\n\n**Description**\n\nWe download them in batches (of 500k, should use ~300MB). Since the sync\nhead number is not known in the main sync loop, the cut is made in the\nheader fetching function.",
          "timestamp": "2025-09-04T15:06:23Z",
          "tree_id": "1bd18e69810ec824d9ee7006c6d384e676664d1a",
          "url": "https://github.com/lambdaclass/ethrex/commit/34144fb33998122c8a8d5c5222fcf488a515d431"
        },
        "date": 1757001569426,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169558037847,
            "range": "± 690447517",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e5a44ecc361808d9ece99e56d788351ee9bb3cea",
          "message": "style(l1): clarify variable name in apply_updates (#4291)\n\n**Motivation**\n\nWe call the variable hashed_address but it contains code hashes instead\nof address hashes.\n\n**Description**\n\nChanges the variable name to a more descriptive one. No changes in\nfunctionality.",
          "timestamp": "2025-09-04T15:14:34Z",
          "tree_id": "1e14f0ccd56af86f7fda359d508bcc2efa72a726",
          "url": "https://github.com/lambdaclass/ethrex/commit/e5a44ecc361808d9ece99e56d788351ee9bb3cea"
        },
        "date": 1757002133956,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 173157305858,
            "range": "± 584569093",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "97d4827922b402b7ac544b8db6aae21a3e33decd",
          "message": "perf(levm): add an implementation of BLAKE2B that uses NEON (#3850)\n\n**Motivation**\n\nIn ARM machines, the implementation used always falls back to the\ndefault because AVX2 is x86-specific.\n\n**Description**\n\nImplement a NEON-specific version of blake2 (equivalent to the one for\nAVX2, but for NEON).\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\ncloses #4315",
          "timestamp": "2025-09-04T16:40:42Z",
          "tree_id": "ff3da4d6d24c0d0e570157b066a1ce600fb90be5",
          "url": "https://github.com/lambdaclass/ethrex/commit/97d4827922b402b7ac544b8db6aae21a3e33decd"
        },
        "date": 1757007170242,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170128848425,
            "range": "± 361405282",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "390cc0aa08fcf5ece451105859cb8d099b38984c",
          "message": "fix(l1): revert \"perf(levm): add an implementation of BLAKE2B that uses NEON...\" (#4322)\n\nThis reverts commit 97d4827922b402b7ac544b8db6aae21a3e33decd.\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- This commit broke blockchain tests on ARM\n\n```bash\nfailures:\n    blockchain_runner::istanbul/eip152_blake2/blake2/blake2b.json\n    blockchain_runner::istanbul/eip152_blake2/blake2/blake2b_large_gas_limit.json\n    blockchain_runner::istanbul/eip152_blake2/blake2/blake2b_gas_limit.json\n```\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-04T18:47:06Z",
          "tree_id": "1e14f0ccd56af86f7fda359d508bcc2efa72a726",
          "url": "https://github.com/lambdaclass/ethrex/commit/390cc0aa08fcf5ece451105859cb8d099b38984c"
        },
        "date": 1757014815070,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170049304723,
            "range": "± 251937295",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "13c21542facb0292c44b40b5d2c3b8ac4cd89a36",
          "message": "refactor(l1, l2): use `BTreeMap` for execution witness (#4313)\n\n**Motivation**\n\nHashing is expensive for zkVMs; using `BTreeMap`s instead of `HashMap`s\nduring stateless execution would avoid some hashing.",
          "timestamp": "2025-09-04T19:21:06Z",
          "tree_id": "d465d86c64fb74fc54df6b9305fd8d512fad0640",
          "url": "https://github.com/lambdaclass/ethrex/commit/13c21542facb0292c44b40b5d2c3b8ac4cd89a36"
        },
        "date": 1757016765429,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167517713980,
            "range": "± 334920354",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "24d6a6920d543e3fbc0abc5696cc24c6468f9a39",
          "message": "feat(l1): make server runner stop if failed (#4320)\n\n**Motivation**\nThe server script runner doesn't stop if a run failed, restarting and\nnot letting debug.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nNow the script stops if a run failed\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-04T20:53:49Z",
          "tree_id": "c1d7d289fe3948f6dd17b5380b3f300e033db106",
          "url": "https://github.com/lambdaclass/ethrex/commit/24d6a6920d543e3fbc0abc5696cc24c6468f9a39"
        },
        "date": 1757022387259,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169850943921,
            "range": "± 424934945",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "900eb4079928c6b219582cd9cfc7f08be00d7e89",
          "message": "chore(l1): fix IPv6 listener (#4250)\n\n**Motivation**\n\nWe had issues when handling discovery with IPv6 connections, because we\nused a TCPv4 stream. With a TCPv6 stream, it should handle both IPv4 and\nIPv6 connections\n\n**Description**\n\n- Removed superflous parameter for p2p address\n- Fixed the listener to support ipv6 port\n- Made the default port ipv6\n- Changed documentation and makefile to new format\n\nCloses #4232\n\n---------\n\nCo-authored-by: Gianbelinche <39842759+gianbelinche@users.noreply.github.com>",
          "timestamp": "2025-09-04T20:53:21Z",
          "tree_id": "f535f2d644b9432056cdc893e4e49e15fba688d7",
          "url": "https://github.com/lambdaclass/ethrex/commit/900eb4079928c6b219582cd9cfc7f08be00d7e89"
        },
        "date": 1757022463739,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170584608963,
            "range": "± 484036561",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "cbaa4f1ee0798f0fc4065b00ace802faa1fb9552",
          "message": "chore(l2): optimize execution of empty batches (#4216)\n\n**Motivation**\n\nTo optimize the execution of L2 empty batches in the prover\n\n**Description**\n\n- initialize block header hashes in `get_first_invalid_block_hash()` to\navoid hashing twice\n\n**Flamegraphs**\nRunning 7500 empty blocks\n\nBefore:\n<img width=\"3024\" height=\"762\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/0588de66-c9aa-4110-8b80-4a1f02ff000c\"\n/>\n\nAfter:\n<img width=\"3024\" height=\"750\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/44ed7620-804b-4657-970e-d9a28a5feb00\"\n/>\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-04T20:57:09Z",
          "tree_id": "9061607cde6595c49dfa9dace2b74e56d0c1db59",
          "url": "https://github.com/lambdaclass/ethrex/commit/cbaa4f1ee0798f0fc4065b00ace802faa1fb9552"
        },
        "date": 1757022616843,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167278047221,
            "range": "± 407570435",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7f7025c44bd7daf65a47f56a02a859dbeda8e288",
          "message": "chore(l1): fix snap sync logs (#4295)\n\n**Motivation**\n\nThe logs of snap sync were left broken after doing some optimizations to\nthe leaves download step. This PR aims to fix and improve the broken\nlogs.\n\n**Description**\n\n- Added a log that looks like this\n<img width=\"943\" height=\"233\" alt=\"Screenshot 2025-09-03 at 5 01 56 PM\"\nsrc=\"https://github.com/user-attachments/assets/2473ff57-b41b-424d-af88-526f6853c33c\"\n/>\n\n---------\n\nCo-authored-by: Lucas Fiegl <iovoid@users.noreply.github.com>\nCo-authored-by: Javier Chatruc <jrchatruc@gmail.com>\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>",
          "timestamp": "2025-09-04T21:17:02Z",
          "tree_id": "df77a316df462ede05dffaf154e88c6ab8867278",
          "url": "https://github.com/lambdaclass/ethrex/commit/7f7025c44bd7daf65a47f56a02a859dbeda8e288"
        },
        "date": 1757023769279,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170012960967,
            "range": "± 838396223",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4bd4259af5e0ca97de3f2dbf54739cf98ee7a877",
          "message": "fix(l1, l2): hash every address once (#4289)\n\n**Motivation**\n\nHashing is very expensive for zkVMs. We were hashing the same address\nmultiple times.\n\n**Description**\n\nThis PR:\n\n- Modifies the `Trie` API by requiring `&PathRLP` instead of `PathRLP`\nas `Trie::remove` parameter since in the function implementation, only\nits reference was needed. This removes the need for cloning this\nparameter in some cases.\n- Creates a hashed address by address mapping to store the already\nhashed accounts.",
          "timestamp": "2025-09-04T21:29:05Z",
          "tree_id": "1177ef493010c933ed126c6d57dd627535c27348",
          "url": "https://github.com/lambdaclass/ethrex/commit/4bd4259af5e0ca97de3f2dbf54739cf98ee7a877"
        },
        "date": 1757024462470,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170303867857,
            "range": "± 229324559",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e19613907f6c7b4838422eb066a31367bfb9bb3c",
          "message": "feat(l1, l2): print zkVM cycles of guest programs (#4273)\n\n**Description**\n\nPrints zkVM cycles of guest program execution\n\n*SP1 Example*\n\n```\n2025-09-02T22:50:28.896156Z  INFO ethrex_replay::fetcher: Retrieving execution data for block 23278512 (0 block behind latest)\n2025-09-02T22:50:28.899384Z  WARN ethrex_replay::fetcher: Failed to load cache: No such file or directory (os error 2)\n2025-09-02T22:50:32.833793Z  INFO ethrex_replay::bench: Starting prover program\n2025-09-02T22:50:32.835513Z  WARN sp1_sdk::env: SP1_PROVER environment variable not set, defaulting to 'cpu'\n2025-09-02T22:50:35.038134Z  INFO execute: sp1_core_executor::syscalls::write: ┌╴read_input\nstderr: WARNING: Using insecure random number generator.\n2025-09-02T22:50:35.665546Z  INFO execute: sp1_core_executor::syscalls::write: └╴34,125,436 cycles\n2025-09-02T22:50:35.665570Z  INFO execute: sp1_core_executor::syscalls::write: ┌╴execution\n2025-09-02T22:51:13.041072Z  INFO execute: sp1_core_executor::syscalls::write: └╴1,458,794,351 cycles\n2025-09-02T22:51:13.041100Z  INFO execute: sp1_core_executor::syscalls::write: ┌╴commit_public_inputs\n2025-09-02T22:51:13.042884Z  INFO execute: sp1_core_executor::syscalls::write: └╴26,791 cycles\n2025-09-02T22:51:13.104707Z  INFO execute: sp1_prover: gas: 1687294509\n2025-09-02T22:51:13.107200Z  INFO ethrex_prover_lib::backends::sp1: Successfully executed SP1 program in 38.11s\n2025-09-02T22:51:13.109821Z  INFO ethrex_replay::bench: Total gas from block/s: 23830149\n```",
          "timestamp": "2025-09-04T21:29:40Z",
          "tree_id": "1fd65e85ef0acebb85bf24c3559ced278fb542e6",
          "url": "https://github.com/lambdaclass/ethrex/commit/e19613907f6c7b4838422eb066a31367bfb9bb3c"
        },
        "date": 1757024541569,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169136808172,
            "range": "± 701930863",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bc23c398bfbfce8fa0bce020f301a439a5904316",
          "message": "feat(l1, l2): display hardware info on `ethrex-replayer` slack message (#4319)\n\n**Motivation**\n\nIt's useful to know the hardware on which the replay was run.\n\n**Example**\n\n<img width=\"394\" height=\"313\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/afacc33a-05e5-4593-9912-0259da08ca2a\"\n/>",
          "timestamp": "2025-09-04T21:38:14Z",
          "tree_id": "80dbe59ecfced65880d6c7d8d79e0b17c5577389",
          "url": "https://github.com/lambdaclass/ethrex/commit/bc23c398bfbfce8fa0bce020f301a439a5904316"
        },
        "date": 1757025103277,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169353493411,
            "range": "± 715942099",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "119eb3e52da7c84bfa16b978096496c1e653caa3",
          "message": "ci(l1): make replay not required (#4316)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nmake replay test not required so we can merge despite it failing, maybe\nin the future when things become more stable we can make it required\nagain.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-05T14:17:59Z",
          "tree_id": "2ba81e5f70cbe070ca6b8c57599def7892e5b4fe",
          "url": "https://github.com/lambdaclass/ethrex/commit/119eb3e52da7c84bfa16b978096496c1e653caa3"
        },
        "date": 1757085531603,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170099315136,
            "range": "± 559135453",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "1eda8bff8c47ccac481097a9a5eda8de7118981c",
          "message": "fix(l1): fixed update_pivot deadlock (#4329)\n\n**Motivation**\n\nFix a deadlock in request_account_range\n\n**Description**\n\n- Localizes the lock of the scores to a smaller scope in\nrequest_account_range which doesn't conflict with update_pivot",
          "timestamp": "2025-09-05T14:26:54Z",
          "tree_id": "80b89074a49da17ecf4ad7c8402eb6b477c8b38c",
          "url": "https://github.com/lambdaclass/ethrex/commit/1eda8bff8c47ccac481097a9a5eda8de7118981c"
        },
        "date": 1757086007901,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 171076664600,
            "range": "± 369671583",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bc9bc50f698183e78623e8c7d711efac7d6dbddf",
          "message": "feat(l1): improve transaction broadcasting logic (#4259)\n\n**Motivation**\n\nCurrent version just broadcast every transaction we receive to every\nactive peer we have. This presents some issues on performance, memory\nand even in code responsibilities.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nReorganizes the transaction broadcast logic\nWhen a new peer connection is initialized, we send the hashes of all the\ntxs in the mempool.\nThen every time we receive new txs, we add them to the mempool and send\nthem to our peers, we send the txs to a sqrt of our peers, while sending\nonly the hashes to the rest.\nThe mempool itself is the one responsible for knowing which txs need to\nbe broadcasted. Every time we add a new tx to the mempool we add it to\nthe list of pending broadcast, then once we broadcast them, we erase\nthem. Also if a tx is removed from the mempool before being broadcasted\nit is also deleted from the broadcast pool.\n\nThere is one possible scenario where we could send a tx twice to the\nsame peer, that is if after the tx left the mempool, we receive it again\nand add it back, we would send it again to the peers.\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses https://github.com/lambdaclass/ethrex/issues/4241",
          "timestamp": "2025-09-05T18:26:46Z",
          "tree_id": "db7aeac38d493954414ea6674c453c031b95bbc3",
          "url": "https://github.com/lambdaclass/ethrex/commit/bc9bc50f698183e78623e8c7d711efac7d6dbddf"
        },
        "date": 1757100232329,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167118563903,
            "range": "± 447755887",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ae286f61d690d48bceb369beea0fbd3558fd7faa",
          "message": "feat(l1): run with debug assert (#4331)\n\n**Motivation**\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nAdds an option to the makefile and server runner script to run with\ndebug assertions enabled\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-09-05T19:11:40Z",
          "tree_id": "52a4354383bf183fa5f3984e431cd888ae1e3789",
          "url": "https://github.com/lambdaclass/ethrex/commit/ae286f61d690d48bceb369beea0fbd3558fd7faa"
        },
        "date": 1757102637702,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169726905394,
            "range": "± 909036662",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "347fed933e1162d57da43fcf7cef67fb5b5fe38b",
          "message": "feat(l1): improve syncing helper function update_pivot (#4270)\n\n**Motivation**\nThe current update_pivot funciton in crates/networking/p2p/sync.rs has\nseveral room for improvement, primarily in the logic.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nThe function now estimates the new block number based on the block\ntimestamp\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses https://github.com/lambdaclass/ethrex/issues/4261\n\n---------\n\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>",
          "timestamp": "2025-09-05T19:14:32Z",
          "tree_id": "1dfcd32d7ab04a37c32742444fd3095291ab8bea",
          "url": "https://github.com/lambdaclass/ethrex/commit/347fed933e1162d57da43fcf7cef67fb5b5fe38b"
        },
        "date": 1757102778122,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167453624930,
            "range": "± 342352420",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a38e9ff8ef9b7b6d47a013b9632d4370da4c30c4",
          "message": "feat(l1): add max blobs per tx check (Osaka EIP-7594) (#4332)\n\n**Motivation**\nAdd the max blobs per tx check introduced by\n[EIP-7594](https://eips.ethereum.org/EIPS/eip-7594)\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Add max blobs per tx check to levm pre check sequence\n* Enable ef tests for eip-7594\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #4152",
          "timestamp": "2025-09-05T19:25:49Z",
          "tree_id": "4521b00a74433e712479f43451e0939aa0ed56dc",
          "url": "https://github.com/lambdaclass/ethrex/commit/a38e9ff8ef9b7b6d47a013b9632d4370da4c30c4"
        },
        "date": 1757103526164,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168518769296,
            "range": "± 845189815",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e360298da467784d86d5f4c2db3391068c72c884",
          "message": "feat(l2): revert batches improvements (#4305)\n\n**Motivation**\n\nImprove the revert-batch tool\n\n**Description**\n\n- Move deleting blocks from the blockchain db to --delete-blocks flag\n- Separate contract owner and sequencer Ethereum accounts\n- Improve logging\n\nCloses #4281 \nCloses #4298",
          "timestamp": "2025-09-05T19:28:27Z",
          "tree_id": "4a7090006a4370451b965a82ef852f194a940671",
          "url": "https://github.com/lambdaclass/ethrex/commit/e360298da467784d86d5f4c2db3391068c72c884"
        },
        "date": 1757103611878,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167599115359,
            "range": "± 610499979",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "06b0889e5ecca8254600d0a44fbb962261bfa3d6",
          "message": "fix(l1): replay witness get code missing (#4280)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- Gets the witness with the proper block number instead of using Latest\n(when it wasn't specified) to avoid getting a witness that differs with\nthe requested block number that we say we are looking for.\n- Different execution clients access state at different times, one can\naccess code of an account before a particular validation and the other\none can access it later. In the case in which the validation failed, the\nlatter client will generate a witness without the code whereas the\nformer will actually need that code.\n- A possible fix would be to access data ONLY when we are 100% sure that\nwe are going to use it. But this would mean making the code uglier in\norder to fix this, which is probably not worth it.\n- The fix that I propose here is to assume that the witness is correct\nand return a default value when it wasn't found in it, because it would\nmean that it isn't relevant for execution. We also print a warning\nalongside this for debugging purposes if there's a state root mismatch.",
          "timestamp": "2025-09-05T19:36:06Z",
          "tree_id": "744ef517543e26f0d3540e5bab6aadb2a4021e1e",
          "url": "https://github.com/lambdaclass/ethrex/commit/06b0889e5ecca8254600d0a44fbb962261bfa3d6"
        },
        "date": 1757104080157,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168784693765,
            "range": "± 1438916947",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8cc08b76b9daa99c8b1d8503ebc52941d0e2ae72",
          "message": "ci(l1): add new workflow to test snap sync on public testnets (#4303)\n\n**Motivation**\nTo be able to continually test snap sync on hoodi and other testnets\n\n**Description**\n- Adds a periodical job that syncs hoodi every two hours\n- It can also be manually triggered\n \nHere are some runs:\nhttps://github.com/lambdaclass/ethrex/actions/workflows/manual_sync_assertoor.yaml\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-05T19:38:16Z",
          "tree_id": "2a013c755414636685f5c3dd2d5a9702e50812a1",
          "url": "https://github.com/lambdaclass/ethrex/commit/8cc08b76b9daa99c8b1d8503ebc52941d0e2ae72"
        },
        "date": 1757104244540,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 165411907932,
            "range": "± 623463025",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e4ab856fb1ed71d3ac77d7b60c97ea09050d4998",
          "message": "ci(l1,l2): add workflow to notify failed jobs in main. (#4258)\n\n**Motivation**\nGet a slack notification if a main job fails\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-05T19:40:27Z",
          "tree_id": "208370386e437c43cda584b7dc26928648438caa",
          "url": "https://github.com/lambdaclass/ethrex/commit/e4ab856fb1ed71d3ac77d7b60c97ea09050d4998"
        },
        "date": 1757104313193,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 164307797272,
            "range": "± 475603892",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "aaac95a8e1d9e4f6e46b7646d6bda9dc7532d5c9",
          "message": "feat(l1): improve peer discovery (#4340)\n\n**Motivation**\n\nCurrently we don't have as many peers as we should, which slows down\nsnap sync on networks like hoodi.\n\n**Description**\n\nThis PR:\n- Remember unwated (different network, no matching capabilities) peers\nand avoids trying again with them\n- Avoids starting new connections to nodes we are already connected with\n\nThis allows the whole contact table to be explored, leading to more\npeers.",
          "timestamp": "2025-09-05T20:31:41Z",
          "tree_id": "ff7068df5129fcd9614c4e4a48df05f9ef7c5100",
          "url": "https://github.com/lambdaclass/ethrex/commit/aaac95a8e1d9e4f6e46b7646d6bda9dc7532d5c9"
        },
        "date": 1757107423332,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168853676475,
            "range": "± 488206130",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "16d895bfc3abee0d13ceb625be4016236bffb68f",
          "message": "fix(l1): `ethrex_replay` temporary fix for block header hashes (#4341)\n\n**Motivation**\n\n`ethrex_replay` was broken due to not finding the current block header\nin the `block_headers` map.\n\n**Description**\n\nTemporary solution for fixing it.\nInitialize the header by looking it in the block\n\n---------\n\nCo-authored-by: JereSalo <jeresalo17@gmail.com>",
          "timestamp": "2025-09-05T21:06:14Z",
          "tree_id": "86d7f8196c2fee8bef18354e74a9137082ee2079",
          "url": "https://github.com/lambdaclass/ethrex/commit/16d895bfc3abee0d13ceb625be4016236bffb68f"
        },
        "date": 1757109465145,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167003374636,
            "range": "± 599472883",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "962f9b1e0595e3f30283ea1773a92ba63cec2fdc",
          "message": "fix(l1,levm): fix execution result when using levm (#3911)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- ExecutionResult was inaccurate with LEVM, specially the gas used that\nsubtracted the gas refunded but that's already done in LEVM.\n\nWe don't have the ideal endpoints to try this out because the only ones\nthat use this are `eth_estimateGas` and `eth_call`. The only way to see\nif it works fine is to try out the former RPC method with a transaction\nthat triggers refunds... It would be good to have `eth_simulateV1` I\nguess\nHere's evidence that the gas_used in the VM is the `total gas used -\nrefunded gas`\n\nhttps://github.com/lambdaclass/ethrex/blob/1918c5cedaf3f76df1bc01aba3b20d1d95162c84/crates/vm/levm/src/hooks/default_hook.rs#L199-L201\nBear with me, `exec_gas_consumed` is the same as `actual_gas_used`\n\nhttps://github.com/lambdaclass/ethrex/blob/1918c5cedaf3f76df1bc01aba3b20d1d95162c84/crates/vm/levm/src/hooks/default_hook.rs#L164\n\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-08T12:40:51Z",
          "tree_id": "b75f179ad9bfbcdaba641c9e597a7ebf23ee72c5",
          "url": "https://github.com/lambdaclass/ethrex/commit/962f9b1e0595e3f30283ea1773a92ba63cec2fdc"
        },
        "date": 1757339022388,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170699837150,
            "range": "± 2312545237",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "667399b86fc73ecec9d047e456245a9c0b059424",
          "message": "chore(l2): improve logs in eth client request (#4338)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nETH client doesn't log too much, making it difficult to debug different\nproblems.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nAdd trace, debug, and warning logs for better debugging.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-09-08T13:53:39Z",
          "tree_id": "d9165aba3131ab194f986d097d14c14b2f1eeb86",
          "url": "https://github.com/lambdaclass/ethrex/commit/667399b86fc73ecec9d047e456245a9c0b059424"
        },
        "date": 1757342893619,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167921692475,
            "range": "± 876558155",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5f460384b2c424a1100ee584c2df2e6eedb08554",
          "message": "feat(l1,l2): enable log levels update in runtime (#4324)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nSometimes we want to change the log level, primarly for debugging, and\nrestarting the node would break the case of study.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nAdd a custom `admin_setLogLevel` endpoint that enables the node operator\nto specify a new log filter, just like with `RUST_LOG`.\n\nHow to test:\n1. Run a node (e.g. `ethrex --dev`)\n2. Change the log levels:\n    ```\ncurl localhost:8545 -H 'content-type: application/json' -d '{\"jsonrpc\":\n\"2.0\", \"id\": \"1\", \"method\": \"admin_setLogLevel\", \"params\":\n[\"ethrex_dev::block_producer=info\"]}'\n     ```\n3. You should now only see `ethrex_dev::block_producer` logs\n\n> [!WARNING]\n> The `admin` namespace is currently unauthenticated and cannot be\nturned off. Be aware of this in public nodes\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #4299",
          "timestamp": "2025-09-08T13:54:07Z",
          "tree_id": "a1293abd074c3d087d7eeab0fbe3e83d090d405f",
          "url": "https://github.com/lambdaclass/ethrex/commit/5f460384b2c424a1100ee584c2df2e6eedb08554"
        },
        "date": 1757343195298,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170449741650,
            "range": "± 794165098",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "tomas.arjovsky@lambdaclass.com",
            "name": "Tomás Arjovsky",
            "username": "Arkenan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5dc0b2bd5a3ae52804cf3416da2c56fab13ad394",
          "message": "fix(levm): neon blake2f fix (#4336)\n\n**Description**\n\n- Re-adds the blake2f NEON implementation by reverting the revert.\n- Applies the patch by @azteca1998 (fix in the number of bits rotated,\nand diagonalization corrections)\n\nAfter this, the local state EF tests pass all tests again.\n\nCloses #4308",
          "timestamp": "2025-09-08T14:41:33Z",
          "tree_id": "6003cbd1305480002eb81c587e9f3f5eacdf050f",
          "url": "https://github.com/lambdaclass/ethrex/commit/5dc0b2bd5a3ae52804cf3416da2c56fab13ad394"
        },
        "date": 1757345577104,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167521717228,
            "range": "± 721455458",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9bf1b52200b8ef4c8a4bbc10e5b761a4f1dd8710",
          "message": "feat(l2): increase metrics check interval to 5s (#4351)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nCurrently the L2 metrics gatherer component scraps data every 1s,\nincluding L1 data (gas price and last committed/verified batch). This\nconsumes a lot of unnecessary resources.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nIncrease the check interval to 5 seconds\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-09-08T16:39:40Z",
          "tree_id": "cac7513921b5f95179b7a75369745d6c9bef9a27",
          "url": "https://github.com/lambdaclass/ethrex/commit/9bf1b52200b8ef4c8a4bbc10e5b761a4f1dd8710"
        },
        "date": 1757352656193,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167242441493,
            "range": "± 308874089",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9e28e58078f1d21af81d1d2ddd53bdb141e7080a",
          "message": "fix(l1): prevent race conditions on getReceipts calls (#4346)\n\n**Motivation**\n\nWe are encountering the following error in our L2 integration tests:\n```\n2025-08-29T19:17:04.573865Z  WARN ethrex_l2::sequencer::l1_watcher: Error when getting logs from L1: eth_getLogs request error: Internal Error: Could not get receipt\n```\n\nAfter debugging, it turned out to be a race condition that can occur if\na new block has just been marked as canonical in the store cache, but\nhas not yet been updated in the db. If a `getReceipt` call arrives in\nthis window, the node won't be able to find the receipts by block\nnumber.\n\n**Description**\n\n- Updates the engine API to identify blocks by hash instead of block\nnumber.\n- Resolves the block hash by calling `get_canonical_block_hash` in the\nstore.\n\n\nCloses None",
          "timestamp": "2025-09-08T17:02:46Z",
          "tree_id": "4bda26b8afc5d20f746a64156c7e4299a23f280b",
          "url": "https://github.com/lambdaclass/ethrex/commit/9e28e58078f1d21af81d1d2ddd53bdb141e7080a"
        },
        "date": 1757354189546,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 172315732727,
            "range": "± 328610850",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5e527c38f73159ff1015167d5e587a67f01f26a9",
          "message": "fix(l2): avoid updating last_block_fetched when getLogs fails (#4355)\n\n**Motivation**\n\nWe are encountering the following error in our L2 integration tests:\n\n```\n2025-08-29T19:17:04.573865Z  WARN ethrex_l2::sequencer::l1_watcher: Error when getting logs from L1: eth_getLogs request error: Internal Error: Could not get receipt\n```\n\nAlthough this error is being addressed in #4346, our `l1_watcher`\nshouldn't simply log the error and update `last_block_fetched` as if it\nwere already reviewed. We should retry since we might be missing some\n`privilegedTransactions`.\n\n**Description**\n\n- If `getLogs()` fails, return without updating `last_block_fetched`.\n\n\nCloses None",
          "timestamp": "2025-09-08T17:16:14Z",
          "tree_id": "a9a7859119b9180b85893c9502c835907d4cb62c",
          "url": "https://github.com/lambdaclass/ethrex/commit/5e527c38f73159ff1015167d5e587a67f01f26a9"
        },
        "date": 1757354894541,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166700414629,
            "range": "± 437825586",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2e3c6248444160b9602b66d0f272048168894afa",
          "message": "feat(l2): add `ethrex_batchNumber` to RPC (#4349)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nWe lack a way to get the latest batch sealed, something similar to\n`eth_blockNumber`.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nAdd a new RPC method `ethrex_batchNumber` that returns the last sealed\nbatch.\n\nHow to test:\n1. Start an L2 node:\n    ```\n    COMPILE_CONTRACTS=true cargo run --release -- l2 --dev\n    ```\n3. Wait about 1 minute until a batch is sealed.\n4. Request the last batch number:\n    ```\ncurl localhost:1729 -H 'content-type: application/json' -d '{\"jsonrpc\":\n\"2.0\", \"id\": \"1\", \"method\": \"ethrex_batchNumber\"}'\n    ```\nShould return something like `{\"id\":\"1\",\"jsonrpc\":\"2.0\",\"result\":\"0x2\"}`\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-08T17:22:00Z",
          "tree_id": "630b490baa65ba03fbd39762c9c9adc7e56c3901",
          "url": "https://github.com/lambdaclass/ethrex/commit/2e3c6248444160b9602b66d0f272048168894afa"
        },
        "date": 1757355284919,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166185800557,
            "range": "± 410370452",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d9cd6cd9e2082636a46dbe3333fc90291b0f1206",
          "message": "refactor(l1): add revm feature flag (#4317)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nWe want to be able to compile ethrex without compiling revm, this PR\nenables it.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-08T20:18:15Z",
          "tree_id": "371ea0a016183445a166d86d20665dfa89c4c012",
          "url": "https://github.com/lambdaclass/ethrex/commit/d9cd6cd9e2082636a46dbe3333fc90291b0f1206"
        },
        "date": 1757366156599,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169023980580,
            "range": "± 863950973",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9445a758ae1892cf118d15ec106dd6a9184a0a71",
          "message": "ci(l1,l2): improve PR auto labelling. (#4354)\n\n**Motivation**\nIf a pr had multiple scopes, only l2 label was added\n\n**Description**\n- Fix labeling per scope. If a pr has multiple scopes, potentially add\nmultiple labels.\n- Move the script to a separate file",
          "timestamp": "2025-09-08T20:27:51Z",
          "tree_id": "7030dc4cc2354ed9557605fa3e80993bf673aae4",
          "url": "https://github.com/lambdaclass/ethrex/commit/9445a758ae1892cf118d15ec106dd6a9184a0a71"
        },
        "date": 1757366723617,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167106207560,
            "range": "± 1176294415",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "FredrikaPhililip@proton.me",
            "name": "Suuuuuuperrrrr fred",
            "username": "FredPhilipy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cffdc8a4824d9fa282053abd7cf189c408fce459",
          "message": "deps(l1): replace abandoned tempdir with tempfile (#4180)\n\nFIx #4162\n\nReplace abandoned tempdir with actively maintained tempfile\n\n- Update dependencies in 3 Cargo.toml files: tempdir 0.3.7 → tempfile\n3.8\n- Update API usage in test and benchmark code:\n  - tempdir::TempDir::new(\"name\") → tempfile::TempDir::new()\n  - into_path() → path()\n- Affects only test and benchmark code, no production impact\n- All tests pass (105 trie tests + storage tests)\n\n---------\n\nSigned-off-by: Fredrika <FredrikaPhililip@proton.me>",
          "timestamp": "2025-09-08T20:51:29Z",
          "tree_id": "967b1de547c9be27fa2d16de20b05307e8ef6b9a",
          "url": "https://github.com/lambdaclass/ethrex/commit/cffdc8a4824d9fa282053abd7cf189c408fce459"
        },
        "date": 1757368051795,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 164116311535,
            "range": "± 695527632",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c8ce1f272241106f4bdbfc5028c0526f75189e1e",
          "message": "build(l2): bump the cargo group across 1 directory with 1 update (#4278)\n\nBumps the cargo group with 1 update in the /crates/l2/tee/quote-gen\ndirectory: [slab](https://github.com/tokio-rs/slab).\n\nUpdates `slab` from 0.4.10 to 0.4.11\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/tokio-rs/slab/releases\">slab's\nreleases</a>.</em></p>\n<blockquote>\n<h2>v0.4.11</h2>\n<ul>\n<li>Fix <code>Slab::get_disjoint_mut</code> out of bounds (<a\nhref=\"https://redirect.github.com/tokio-rs/slab/issues/152\">#152</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/tokio-rs/slab/blob/master/CHANGELOG.md\">slab's\nchangelog</a>.</em></p>\n<blockquote>\n<h1>0.4.11 (August 8, 2025)</h1>\n<ul>\n<li>Fix <code>Slab::get_disjoint_mut</code> out of bounds (<a\nhref=\"https://redirect.github.com/tokio-rs/slab/issues/152\">#152</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/tokio-rs/slab/commit/2e5779f8eb318827c78cad38007445a93ec04503\"><code>2e5779f</code></a>\nRelease v0.4.11 (<a\nhref=\"https://redirect.github.com/tokio-rs/slab/issues/153\">#153</a>)</li>\n<li><a\nhref=\"https://github.com/tokio-rs/slab/commit/2d65c514bc964b192bab212ddf3c1fcea4ae96b8\"><code>2d65c51</code></a>\nFix get_disjoint_mut error condition (<a\nhref=\"https://redirect.github.com/tokio-rs/slab/issues/152\">#152</a>)</li>\n<li>See full diff in <a\nhref=\"https://github.com/tokio-rs/slab/compare/v0.4.10...v0.4.11\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `slab` from 0.4.10 to 0.4.11\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/tokio-rs/slab/releases\">slab's\nreleases</a>.</em></p>\n<blockquote>\n<h2>v0.4.11</h2>\n<ul>\n<li>Fix <code>Slab::get_disjoint_mut</code> out of bounds (<a\nhref=\"https://redirect.github.com/tokio-rs/slab/issues/152\">#152</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/tokio-rs/slab/blob/master/CHANGELOG.md\">slab's\nchangelog</a>.</em></p>\n<blockquote>\n<h1>0.4.11 (August 8, 2025)</h1>\n<ul>\n<li>Fix <code>Slab::get_disjoint_mut</code> out of bounds (<a\nhref=\"https://redirect.github.com/tokio-rs/slab/issues/152\">#152</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/tokio-rs/slab/commit/2e5779f8eb318827c78cad38007445a93ec04503\"><code>2e5779f</code></a>\nRelease v0.4.11 (<a\nhref=\"https://redirect.github.com/tokio-rs/slab/issues/153\">#153</a>)</li>\n<li><a\nhref=\"https://github.com/tokio-rs/slab/commit/2d65c514bc964b192bab212ddf3c1fcea4ae96b8\"><code>2d65c51</code></a>\nFix get_disjoint_mut error condition (<a\nhref=\"https://redirect.github.com/tokio-rs/slab/issues/152\">#152</a>)</li>\n<li>See full diff in <a\nhref=\"https://github.com/tokio-rs/slab/compare/v0.4.10...v0.4.11\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't\nalter it yourself. You can also trigger a rebase manually by commenting\n`@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits\nthat have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after\nyour CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge\nand block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating\nit. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all\nof the ignore conditions of the specified dependency\n- `@dependabot ignore <dependency name> major version` will close this\ngroup update PR and stop Dependabot creating any more for the specific\ndependency's major version (unless you unignore this specific\ndependency's major version or upgrade to it yourself)\n- `@dependabot ignore <dependency name> minor version` will close this\ngroup update PR and stop Dependabot creating any more for the specific\ndependency's minor version (unless you unignore this specific\ndependency's minor version or upgrade to it yourself)\n- `@dependabot ignore <dependency name>` will close this group update PR\nand stop Dependabot creating any more for the specific dependency\n(unless you unignore this specific dependency or upgrade to it yourself)\n- `@dependabot unignore <dependency name>` will remove all of the ignore\nconditions of the specified dependency\n- `@dependabot unignore <dependency name> <ignore condition>` will\nremove the ignore condition of the specified dependency and ignore\nconditions\nYou can disable automated security fix PRs for this repo from the\n[Security Alerts\npage](https://github.com/lambdaclass/ethrex/network/alerts).\n\n</details>\n\nSigned-off-by: dependabot[bot] <support@github.com>\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-08T22:12:44Z",
          "tree_id": "b0c3e01fe1fcb4cdcf4ad3c47c10966b1c0d727c",
          "url": "https://github.com/lambdaclass/ethrex/commit/c8ce1f272241106f4bdbfc5028c0526f75189e1e"
        },
        "date": 1757372731781,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169279859191,
            "range": "± 558310195",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitriymozir@gmail.com",
            "name": "MozirDmitriy",
            "username": "MozirDmitriy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b35fe1d6e51fce8cb985b949f8e9b1efacc414ef",
          "message": "docs(levm): add detailed documentation for CallFrame backups and revert/merge logic (#4074)\n\n## Motivation\n\nThis pull request aims to improve the documentation for the Lambda EVM\nimplementation by providing a clear and detailed explanation of\nCallFrame backups. Proper documentation of this mechanism is essential\nfor both new and existing contributors to understand how state reversion\nand merging are handled during nested calls and transaction execution.\n\n## Description\n\nThis PR adds a comprehensive section to callframe.md that covers:\n\n- The structure and purpose of CallFrame backups.\n- When and why backups are created and used.\n- The logic for reverting and merging state changes during nested calls.\n- The importance of the order of operations (such as value transfer and\nnonce increment).\n- A practical example based on the generic_call function.\n- References to relevant code locations for further study.\nCloses #3071",
          "timestamp": "2025-09-09T10:35:18Z",
          "tree_id": "4684d2ea564ff77a41f143ee127adb20208c9ee3",
          "url": "https://github.com/lambdaclass/ethrex/commit/b35fe1d6e51fce8cb985b949f8e9b1efacc414ef"
        },
        "date": 1757417347278,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169373268412,
            "range": "± 980805735",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "23f0f6506fa326b092302e2838471e25e34dbdde",
          "message": "feat(l1): avoid cloning the list of all block hashes (#4347)\n\n**Motivation**\n\nWe want to reduce RAM usage. On mainnet, the list of block hashes uses\n>700MB (23M blocks * 32B per hash).\n\n**Description**\n\nWe avoid cloning this list when possible, and keep it in RAM less time\nif possible.",
          "timestamp": "2025-09-09T12:34:02Z",
          "tree_id": "a93b6f196a3d42a0a7692a8ed8f3e0b60dcbff20",
          "url": "https://github.com/lambdaclass/ethrex/commit/23f0f6506fa326b092302e2838471e25e34dbdde"
        },
        "date": 1757424410511,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167910639449,
            "range": "± 660162464",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c048c71213a517ffce7a7e8718e1c2d11b367f0b",
          "message": "fix(l2): update privileged_range once all checks have passed (#4224)\n\n**Motivation**\n\nNoticed a weird behavior while testing #4211. Once the configured\n`max_gas_limit` was reached, no further deposits were included in\nsubsequent blocks until a new batch is started. This happens because we\nfirst update the `privileged_range`, and if the transaction is later\nrejected (for example, due to the gas limit), we don’t remove the nonce\nfrom the range. As a result, when the next block starts, we try to add\nthe tx again, but since the nonce was already included to the range, the\ntransaction is marked as out-of-order.\n\n#### Why haven’t we seen the error before?\n\nThere is an `if` check that prevents the error from appearing in our\ndaily usage:\n\n```Rust\n// Check if we have enough space for the StateDiff to run more transactions\nif acc_size_without_accounts + size_accounts_diffs + SIMPLE_TX_STATE_DIFF_SIZE\n> safe_bytes_per_blob {\n\twarn!(\"No more StateDiff space to run transactions\");\n\tbreak;\n};\n```\n\nThis is an early return that checks if we have enough space for a simple\ntransfer in our `stateDiff`, and stops adding transactions to the block\nif we don’t. But, it can happen that we have enough space for a simple\ntransfer, but the transaction we are trying to add occupies more space\nthan that, making us restore the previous state in another check a[ few\nlines\nlater](https://github.com/lambdaclass/ethrex/blob/0cae720162fd889eb18417010e5f091c6d097d35/crates/l2/sequencer/block_producer/payload_builder.rs#L215).\n\n<!-- \n#### How to trigger the error\n\nThe easiest way to trigger the error is to comment out the early return,\nallowing the `payload_builder` to attempt restoring the previous state.\nThen start the `L2` and `prover` with:\n\n```\nmake init\nmake init-prover\n```\n\nand run a load test with:\n```\ncargo run --release --manifest-path ./tooling/load_test/Cargo.toml -- -k ./fixtures/keys/private_keys_l1.txt -t eth-transfers -n \"http://localhost:1729\"\n```\n\nObserve the following behavior in the monitor:\n\nAfter a block reaches its max `stateDiff` size allowed, the subsequent\nblocks contain 0 transactions until a new batch is started.\n-->\n\n**Description**\n\nMoves the update of `privileged_range` after all other checks have\npassed.\n\n\nIssues #4248 and #4243 were created.\nCloses None",
          "timestamp": "2025-09-09T13:31:21Z",
          "tree_id": "df56e5007050016e7d074b6056550ac4f98c64b7",
          "url": "https://github.com/lambdaclass/ethrex/commit/c048c71213a517ffce7a7e8718e1c2d11b367f0b"
        },
        "date": 1757427878267,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169206679680,
            "range": "± 1241848034",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c356adc73e2ae50a465cdb1f0090d3d3e1b86323",
          "message": "feat(l1): only track state root of big accounts (#4262)\n\n**Motivation**\n\nWhen inserting storages ranges during snap sync, we keep track of the\nstorage root to insert to the same tree as we go from one chunk to\nanother. We don't need to keep track if the state root is already\ncomplete.\n\n**Description**\n\nThis PR only updates maybe_big_account_storage_state_roots if the\naccount is, in fact, big (couldn't be fetched in a single batch).",
          "timestamp": "2025-09-09T13:44:16Z",
          "tree_id": "14a74fb69b7486c74720f42d563ab7f3fbe2c560",
          "url": "https://github.com/lambdaclass/ethrex/commit/c356adc73e2ae50a465cdb1f0090d3d3e1b86323"
        },
        "date": 1757428645042,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167474675882,
            "range": "± 383326976",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pdeymon@fi.uba.ar",
            "name": "Pablo Deymonnaz",
            "username": "pablodeymo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4627745f9fd704c9abcdcbfc53a36987ba26922f",
          "message": "refactor(l1): unify peer score (#4294)\n\n**Motivation**\n\nPerformance improvement on snap sync.\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\nThis PR refactors the P2P networking layer by centralizing peer scoring\nfunctionality into a unified system. The changes move from multiple\nscattered peer scoring implementations to a single `PeerScore` module\nthat manages peer reputation and selection consistently across all sync\noperations.\n\nKey changes include:\n\n- Creation of a centralized `PeerScores` system to replace scattered\nscoring logic\n- Removal of local peer scoring implementations from state and storage\nhealing modules\n- Updated peer selection to use the unified scoring system across all\nsync operations\n\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #2073 \n\n**Known issues**\n\n#4352: the usage of this method is required for scoring to be useful,\nbut it shouldn't be used always for performance reasons. This is error\nprone, so eventually the scoring data should be embedded in the kademlia\ntable's `PeerData`.\n\n---------\n\nCo-authored-by: Javier Chatruc <jrchatruc@gmail.com>\nCo-authored-by: Juan Munoz <juanmunoz890@gmail.com>\nCo-authored-by: Mateo Rico <89949621+ricomateo@users.noreply.github.com>\nCo-authored-by: Esteban Dimitroff Hodi <esteban.dimitroff@lambdaclass.com>\nCo-authored-by: Lucas Fiegl <iovoid@users.noreply.github.com>\nCo-authored-by: Gianbelinche <39842759+gianbelinche@users.noreply.github.com>\nCo-authored-by: Francisco Xavier Gauna <francisco.gauna@lambdaclass.com>\nCo-authored-by: ricomateo <mrico@fi.uba.ar>\nCo-authored-by: juan518munoz <62400508+juan518munoz@users.noreply.github.com>\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-09T14:08:41Z",
          "tree_id": "f75c02950a9553120b346d611a3fe0c1f8cfdb0c",
          "url": "https://github.com/lambdaclass/ethrex/commit/4627745f9fd704c9abcdcbfc53a36987ba26922f"
        },
        "date": 1757430195271,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166577666818,
            "range": "± 197097527",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d8c0614ac60bb1ba696632966913e6d1bc26d841",
          "message": "ci(l1, l2): improve sending of slack messages to appropriate channels (#4345)\n\n**Motivation**\nSend failure notifications to appropriate channels based on which\nworkflow failed.\n\n**Description**\n- Sends to L1 or L2 channel depending on workflow\n- Removes printing repo or actor",
          "timestamp": "2025-09-09T14:43:16Z",
          "tree_id": "c76d9a9dd73eb858c3fc795ad1a8737f3ab9ccab",
          "url": "https://github.com/lambdaclass/ethrex/commit/d8c0614ac60bb1ba696632966913e6d1bc26d841"
        },
        "date": 1757432321316,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166550891334,
            "range": "± 297495985",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44068466+SDartayet@users.noreply.github.com",
            "name": "SDartayet",
            "username": "SDartayet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "87890b1abc1d9806ab15137de43a25c33e11ed56",
          "message": "feat(l1): p256 verify implementation on L1 (#4292)\n\n**Description**\n\n- Implements\n[EIP-7591](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-7951.md),\nwhich consists of the L1 implementation for the P256 precompile that\nalready exists on L2; with the main difference being gas cost.\n\n- Unifies the L2 and L1 implementations of the precompile for our\nclient, having a single function for both\n\nCloses #4160",
          "timestamp": "2025-09-09T15:24:26Z",
          "tree_id": "b061b02578bacfc0d70ee8d846344701da39a925",
          "url": "https://github.com/lambdaclass/ethrex/commit/87890b1abc1d9806ab15137de43a25c33e11ed56"
        },
        "date": 1757434619083,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169239051291,
            "range": "± 993492418",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8b2f2f3dc10fb956959eb1acaef5e3621681d98b",
          "message": "feat(l1): add `--checkpoint` flag to `archive_sync` tool (#4231)\n\n**Motivation**\nCurrenlty, we have no way of resuming an archive sync if it crashes/ we\nneed to stop it. Our only option is to begin from the start, which can\nmake us lose precious time in the case of unexpected crashes during long\narchive syncs.\nThis PR proposes adding a `--checkpoint` flag which will periodically\nwrite the current archive sync's checkpoint data (current root, last\nhash, current file, etc) to a file. And which can later be used to\nresume archive sync from that same checkpoint\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: cdiielsi <49721261+cdiielsi@users.noreply.github.com>",
          "timestamp": "2025-09-09T15:30:59Z",
          "tree_id": "6b2ad54cb64d76476c98bcc001a262b52b2b78ba",
          "url": "https://github.com/lambdaclass/ethrex/commit/8b2f2f3dc10fb956959eb1acaef5e3621681d98b"
        },
        "date": 1757435009031,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169823610088,
            "range": "± 373982470",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7d9b061e43c89a602689c0e71bab9ef255634fec",
          "message": "fix(l1): fixed global storage slot metric (#4385)\n\n**Motivation**\n\nThe global storage slots metrics was displaying a number way larger than\nexpected.\n\n**Description**\n\n- Fixed bug where the global metrics counter was being added to itself\nmultiple times.",
          "timestamp": "2025-09-09T15:34:55Z",
          "tree_id": "af59bf84e46565134532c2a9646c7831bade6b5f",
          "url": "https://github.com/lambdaclass/ethrex/commit/7d9b061e43c89a602689c0e71bab9ef255634fec"
        },
        "date": 1757435272419,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167123683890,
            "range": "± 671421728",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "leanrafa@gmail.com",
            "name": "Leandro Ferrigno",
            "username": "lferrigno"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "085f6831d9c74da1219f7cf72ff8ba192dc533c8",
          "message": "docs(l1,l2,levm): add contributing docs (#4387)\n\n**Motivation**\n\nImprove contributor onboarding and project maintainability by providing\nclear, up-to-date guidelines for contributing\n\n**Description**\n\nAdded a new file CONTRIBUTING.md with different sections\n\nUpdated main README to easly find contribution outlines",
          "timestamp": "2025-09-09T17:36:07Z",
          "tree_id": "4c7881aea5bf94ccecaa48ab4b2372c0836aff45",
          "url": "https://github.com/lambdaclass/ethrex/commit/085f6831d9c74da1219f7cf72ff8ba192dc533c8"
        },
        "date": 1757442516762,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167687602207,
            "range": "± 596422050",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5b4c943007b96152453e5a8f8a1a592608b11ea0",
          "message": "fix(l1, l2): remove trust assumptions from guest program inputs (#4337)\n\n**Motivation**\n\nFor performance reasons, [this\nPR](https://github.com/lambdaclass/ethrex/pull/4172) was focused on\ndoing heavy work before pushing data to the zkVM.\n\nDespite hashing and decoding beforehand is helpful for performance,\nthese optimizations introduced some trust assumptions on the guest\nprogram about the correctness of the hashing and decoding computation.\n\n**Description**\n\nThis PR aims to remove these trust assumptions by moving the computation\nof the convenient data structures from outside the guest program to the\ninside of it.\n\nThe block headers decoding, bytecode hashing, and state RLP nodes\nhashing computation is now part of the guest program execution\n(`crates/l2/prover/src/guest_program/src/execution.rs`), ensuring its\ncorrectness.\n\nThis PR also refactors the `ExecutionWitnessResult` by splitting it into\ntwo different structs with different responsibilities:\n`ExecutionWitness`, which essentially is an `RpcExecutionWitness` but\nwith extra useful data like the chain config and the number of the first\nblock to execute; and `GuestProgramState`, which is a result of a\nperformance-friendly preprocessing of the `ExecutionWitness` **inside\nthe zkVM** and has some other useful fields that are filled on-demand\nduring stateless execution.\n\n**Test it out**\n\nStep into `ethrex`'s root directory and run, depending on your test\ncase:\n\n- Executing the latest mainnet block without any prover backend \n```\ncargo r -r -p ethrex-replay -- block --execute --rpc-url http://157.180.1.98:8545\n```\n- Executing the latest mainnet block with SP1\n```\ncargo r -r -p ethrex-replay --features sp1 -- block --execute --rpc-url http://157.180.1.98:8545\n```\n- Proving the latest mainnet block with \n```\ncargo r -r -p ethrex-replay --features sp1,gpu -- block --prove --rpc-url http://157.180.1.98:8545\n```\n\n---------\n\nCo-authored-by: JereSalo <jeresalo17@gmail.com>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>\nCo-authored-by: ilitteri <ilitteri@fi.uba.ar>\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-09-09T17:55:20Z",
          "tree_id": "dd056f6c23bfbe23081b0e13c61b4159e26d0cd1",
          "url": "https://github.com/lambdaclass/ethrex/commit/5b4c943007b96152453e5a8f8a1a592608b11ea0"
        },
        "date": 1757443816308,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168338954735,
            "range": "± 787005546",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a1e7ca8f9e17a62418b1ad1c6fe8f7d0c8c944ee",
          "message": "perf(levm): refactor substate backups (#4381)\n\n**Motivation**\n\nCurrently, `Substate` backups clone everything, which is expensive.\n\n**Description**\n\nImplement the `Substate` as a stack of updates, which can be merged or\ndiscarded at need.\n\nCloses #issue_number",
          "timestamp": "2025-09-09T18:42:00Z",
          "tree_id": "7d6870e2dcc6ac877fed7be141efc1176068f503",
          "url": "https://github.com/lambdaclass/ethrex/commit/a1e7ca8f9e17a62418b1ad1c6fe8f7d0c8c944ee"
        },
        "date": 1757446580465,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 171048774640,
            "range": "± 1248498167",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d75dc988eb75b31b35a8ef439f60d07bf914e362",
          "message": "refactor(l1):  remove unneeded usize casts (#4342)\n\n**Motivation**\nRemove cases where we using `as usize` to cast `u64` values when not\nneeded\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nContributes to #4081",
          "timestamp": "2025-09-09T20:42:37Z",
          "tree_id": "aade0876f2427f91ee458a62c39cfefc116fb6c7",
          "url": "https://github.com/lambdaclass/ethrex/commit/d75dc988eb75b31b35a8ef439f60d07bf914e362"
        },
        "date": 1757453741601,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169344039416,
            "range": "± 529984252",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3565e63abdfeb7fdbb7bfd6b40943b0c891cc6eb",
          "message": "fix(l1): make account and storage ranges handlers async (#4401)\n\n**Motivation**\n\nThese handlers are currently sync and can block the runtime for quite a\nlong time. This is not the ideal solution for this; we still need to do\nthings better so the handler itself doesn't take a long time to fetch\nthe requested nodes. We'll tackle this on a subsequent PR.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Javier Chatruc <jrchatruc@gmail.com>",
          "timestamp": "2025-09-09T22:05:09Z",
          "tree_id": "aa0487027bcf30b9695271fa583b480e4745ee83",
          "url": "https://github.com/lambdaclass/ethrex/commit/3565e63abdfeb7fdbb7bfd6b40943b0c891cc6eb"
        },
        "date": 1757458758927,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167525092640,
            "range": "± 698174914",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2e023fa72877be10a7142d8790c90e5940407adb",
          "message": "ci(l1): fix fork detection. (#4382)\n\n**Motivation**\nThe previous check was not working properly\n\n**Description**\n- Fixes the fork detection",
          "timestamp": "2025-09-10T15:17:13Z",
          "tree_id": "b3c028ab569d9f8bca47d5ac0f5dd585055883d9",
          "url": "https://github.com/lambdaclass/ethrex/commit/2e023fa72877be10a7142d8790c90e5940407adb"
        },
        "date": 1757520613252,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170324943329,
            "range": "± 415562097",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b6637776a15427389236d7af14c07703c6ba7ebe",
          "message": "chore(l2): add scope for `ethrex-replay` (#4416)\n\n**Motivation**\n\n`ethrex-replay` has become big enough to have its own scope for PRs,\nseparate from the current ones (`l1`, `l2`, and `levm`).",
          "timestamp": "2025-09-10T16:13:54Z",
          "tree_id": "282d3de7cb12d486470209564880d40c8728a904",
          "url": "https://github.com/lambdaclass/ethrex/commit/b6637776a15427389236d7af14c07703c6ba7ebe"
        },
        "date": 1757524036071,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 165732431186,
            "range": "± 695319628",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ea1e8a713c60a098de8dd33e76f9045bf19cf2cb",
          "message": "ci(l1): move replay job to a different workflow. (#4413)\n\n**Motivation**\nMoving Replay stuff to a different workflow from L1\n\n**Description**\n- Moved Replay to a different workflow\n- Disabled Replace job since it's broken",
          "timestamp": "2025-09-10T16:56:26Z",
          "tree_id": "9f20ed687f4b7c2822a0a480c97546d6539c3747",
          "url": "https://github.com/lambdaclass/ethrex/commit/ea1e8a713c60a098de8dd33e76f9045bf19cf2cb"
        },
        "date": 1757526529893,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169772408090,
            "range": "± 288026009",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "37075e13cea3cd67ffb54002dac40d0448a7a349",
          "message": "perf(l1): implement fast skip for TrieIter (#4404)\n\n**Motivation**\n\nThere's been stalls in sync'd nodes due to receiving requests for\n`GetAccountRanges` and `GetStorageRanges`.\nThe cause was that we iterate the whole state/storage trie from the root\nto the leaves, manually skipping the irrelevant ones, which takes\nminutes.\nAt the time, the operation was also blocking, freezing the runtime.\n\n**Description**\n\nAdds an `advance` method to avoid having to traverse the whole state\ntrie when requested account and storage ranges.\nAdds methods to `Store` receiving the initial keys.\nUses those methods for snap capability handlers.",
          "timestamp": "2025-09-10T19:42:54Z",
          "tree_id": "33ac0156ea3ea173b36c454409ebe6305847ae97",
          "url": "https://github.com/lambdaclass/ethrex/commit/37075e13cea3cd67ffb54002dac40d0448a7a349"
        },
        "date": 1757537180276,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 171243743646,
            "range": "± 747942037",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estebandh@gmail.com",
            "name": "ElFantasma",
            "username": "ElFantasma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "15d58446a569fc82e132014cbc00ce568366258f",
          "message": "refactor(l1): clean up discv4 code (#4257)\n\n**Motivation**\n\nDiscv4 server was migrated to `spawned` `GenServer` in a quick and dirty\nfashion. It needs a rework in order to improve performance, and code\nquality.\n\n**Description**\n\n- Uses `spawned` `spawn_listener` function to listen the udp socket and\nforward messages to the discv4 server.\n- Creates a Discv4Codec for transparent handling of incoming and\noutgoing discv4 messages.\n- Replaces unnecessary tasks or `GenServer`s spawning with a single\n`GenServer` to handle all udp traffic.\n- Merges `DiscoverySideCar` with `DiscoveryServer` to remove code\nredundancy.\n\nCloses #3389\n\n---------\n\nCo-authored-by: ilitteri <ilitteri@fi.uba.ar>\nCo-authored-by: Pablo Deymonnaz <deymonnaz@gmail.com>\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Javier Chatruc <jrchatruc@gmail.com>\nCo-authored-by: Lucas Fiegl <iovoid@users.noreply.github.com>\nCo-authored-by: ricomateo <mrico@fi.uba.ar>\nCo-authored-by: Gianbelinche <39842759+gianbelinche@users.noreply.github.com>\nCo-authored-by: Francisco Xavier Gauna <francisco.gauna@lambdaclass.com>\nCo-authored-by: Mateo Rico <89949621+ricomateo@users.noreply.github.com>\nCo-authored-by: Juan Munoz <juanmunoz890@gmail.com>\nCo-authored-by: Pablo Deymonnaz <pdeymon@fi.uba.ar>\nCo-authored-by: juan518munoz <62400508+juan518munoz@users.noreply.github.com>",
          "timestamp": "2025-09-10T19:56:46Z",
          "tree_id": "c04bc87b4781092262e67487ba6c30c8b4c9b4ab",
          "url": "https://github.com/lambdaclass/ethrex/commit/15d58446a569fc82e132014cbc00ce568366258f"
        },
        "date": 1757538083016,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170962901044,
            "range": "± 988758604",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49622509+jrchatruc@users.noreply.github.com",
            "name": "Javier Rodríguez Chatruc",
            "username": "jrchatruc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4166ab85f33b388f1b1aa91350a3b8531baec2e6",
          "message": "chore(l1): increase ulimit on sync-server makefile target (#4430)\n\n**Motivation**\n\n\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-10T20:18:31Z",
          "tree_id": "36ba9f91cd7568eed083280de7e004ada023c0af",
          "url": "https://github.com/lambdaclass/ethrex/commit/4166ab85f33b388f1b1aa91350a3b8531baec2e6"
        },
        "date": 1757539076160,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 171250928641,
            "range": "± 589153864",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "871873f211106dcfe435653ad47962053d3be2aa",
          "message": "chore(l1,l2): use IPs instead of localhost as default RPC address (#4429)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nUsing \"localhost\" as default bind address can cause some problems.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nChanged default to `0.0.0.0` for ETH RPC and `127.0.0.1` for EngineAPI\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-09-10T21:01:44Z",
          "tree_id": "4191182ca400b113e3230201e3916e36e6a1669a",
          "url": "https://github.com/lambdaclass/ethrex/commit/871873f211106dcfe435653ad47962053d3be2aa"
        },
        "date": 1757541242838,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169305818945,
            "range": "± 340591507",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "24504d9d655b8b5e3bd4a1731293ad217fb49528",
          "message": "fix(l1): handshake and codec panics (#4399)\n\n**Motivation**\nThere are several possible sources of panic in `handshake.rs` and\n`codec.rs`\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nSolves the possible panics\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses https://github.com/lambdaclass/ethrex/issues/4314",
          "timestamp": "2025-09-10T21:28:41Z",
          "tree_id": "46af7bd3c7114b7f0a40f04eb2e64b4868833aca",
          "url": "https://github.com/lambdaclass/ethrex/commit/24504d9d655b8b5e3bd4a1731293ad217fb49528"
        },
        "date": 1757542889431,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167145630222,
            "range": "± 223314205",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c008bfc692f61e0db083b020ff03e7047c6f2427",
          "message": "ci(replay): disable proving job with `ethrex_replay` until stable (#4410)\n\n**Motivation**\n\nThis job is failing consistently: proving with risc0 fails to compile,\nand with sp1 the cache is outdated.\n\n**Description**\n\nRemove the CI workflow triggers by temporarily commenting them in\n`.github/workflows/main_prover_l1.yaml` until it becomes stable.\n\nI opened issue #4411 to re-enable it.",
          "timestamp": "2025-09-11T01:06:44Z",
          "tree_id": "172e4ea08b497f84c9df21a0c2ae9b224eb05253",
          "url": "https://github.com/lambdaclass/ethrex/commit/c008bfc692f61e0db083b020ff03e7047c6f2427"
        },
        "date": 1757556052512,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168698945348,
            "range": "± 710407508",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49622509+jrchatruc@users.noreply.github.com",
            "name": "Javier Rodríguez Chatruc",
            "username": "jrchatruc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c211d3a8db979316c82af92c4af10f6543638a3b",
          "message": "fix(l1): remove incorrect debug_assert on trie iteration (#4434)\n\n**Motivation**\n\nWhen adding support for trie iteration from a given starting point, we\nadded a `debug_assert!` that checks that the internal stack isn't empty,\nbut this is incorrect; it is entirely possible that the stack is empty\nif the trie is empty, in that case we simply return an empty iterator,\nwhich is fine.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-11T13:04:13Z",
          "tree_id": "7a343f2b260ece7fb423e41b474ce754a7f2c04c",
          "url": "https://github.com/lambdaclass/ethrex/commit/c211d3a8db979316c82af92c4af10f6543638a3b"
        },
        "date": 1757599025203,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169976084356,
            "range": "± 4228750827",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8d318718cd07b7bdb4e316d7c71a0f1990b8fc33",
          "message": "fix(l1):  use eth capability version when decoding messages + fix `BlockRangeUpdate` handling (#4360)\n\n**Motivation**\nBeing able to support eth/69 messages\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Add missing validation to `BlockRangeUpdate` (latest_hash != zero)\n* Disconnect from peers if `BlockRangeUpdate` is invalid\n* Enable eth/69 as supported capability\n* Use negotiated eth capability version when decoding incoming messages\n* Enable hive tests for `BlockRangeUpdate`\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses ##2785",
          "timestamp": "2025-09-11T13:23:59Z",
          "tree_id": "67ff66a2b1ddd496d93a91be64a93d774c28747c",
          "url": "https://github.com/lambdaclass/ethrex/commit/8d318718cd07b7bdb4e316d7c71a0f1990b8fc33"
        },
        "date": 1757600196147,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168323022293,
            "range": "± 207366521",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9d61e15af6be80d7a2610c9eeea4357306e1d57e",
          "message": "feat(l1): implement osaka EIPs 7918 & 7892 + use `BlobSchedule` from EFTests (#4284)\n\n**Motivation**\nImplement changes defined in\n[EIP-7918](https://eips.ethereum.org/EIPS/eip-7918) &\n[EIP-7892](https://eips.ethereum.org/EIPS/eip-7892)\nFix EFTests not using the `BlobSchedule` defined in the test files\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Update `calc_excess_blob_gas` according to EIP\n* Add `ForkBlobSchedule`s for Osaka & BPO1-BPO5 forks\n* Enable EIP-7918 & EIP-7892  ef tests\n* Use the `BlobSchedule` defined in each test file when running EF Tests\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #4157 & Closes #4156",
          "timestamp": "2025-09-11T13:23:28Z",
          "tree_id": "21e97346530e1622de08c7d6f57680dd54a00a9c",
          "url": "https://github.com/lambdaclass/ethrex/commit/9d61e15af6be80d7a2610c9eeea4357306e1d57e"
        },
        "date": 1757600285960,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 172068961635,
            "range": "± 1001249763",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0bb360a915d908d8efd5e5f7a978dd09197f5602",
          "message": "fix(l1): avoid sending a transaction to a peer that already knows it (#4363)\n\n**Motivation**\nThe TxBroadcaster does not follow the spec, since it can send a tx to a\npeer that already knows of it\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nAdds a HashMap stating which transactions each peer knows, and avoiding\nsending a tx if a peer already knows it.\nAfter some time, this HashMap is pruned.\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses https://github.com/lambdaclass/ethrex/issues/4356",
          "timestamp": "2025-09-11T13:30:11Z",
          "tree_id": "33e474ad67513989bb9fb478eb69430e7aeef247",
          "url": "https://github.com/lambdaclass/ethrex/commit/0bb360a915d908d8efd5e5f7a978dd09197f5602"
        },
        "date": 1757600669687,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 172373400381,
            "range": "± 784750775",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d4fb47eba30cab87a51c6589e0f10c5005369e43",
          "message": "feat(replay): add functionality to replay custom blocks and batches (#4339)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Motivation**\n\nUsually (mostly for L2) to benchmark the prover in a custom scenario,\nwhat we do is to spin up a localnet and spam it with a custom script\nthat sends a specific number of specific txs periodically.\n\nThis practice could take a lot of time to make just one measurement. We\nneed a tool to prepare blocks and batches, and populate them however we\nwant to make measurements fast and easy.\n\n**Description**\n\n> [!NOTE]\n> This is an initial version of the feature that only supports the\nbuilding of empty blocks and batches with empty blocks.\n\nAdds a `custom` command with `block` and `batch` subcommands.\n\n**Usage**\n\n```\n# Batches\n\n## Execute batch (exec)\ncargo r -r -p ethrex-replay --features l2 -- custom batch --n-blocks <N>\n## Execute batch (SP1)\ncargo r -r -p ethrex-replay --features sp1,l2 -- custom batch --n-blocks <N>\n## Prove batch (SP1)\nSP1_PROVER=cuda cargo r -r -p ethrex-replay --features sp1,gpu,l2 -- custom batch --n-blocks <N> --prove\n\n# Blocks\n\n## Execute block (exec) (L1)\ncargo r -r -p ethrex-replay -- custom block\n## Execute block (SP1) (L1)\ncargo r -r -p ethrex-replay --features sp1 -- custom block\n## Prove block (SP1) (L1)\nSP1_PROVER=cuda cargo r -r -p ethrex-replay --features sp1,gpu -- custom block --prove\n\n## Execute block (exec) (L2)\ncargo r -r -p ethrex-replay --features l2 -- l2 custom block\n## Execute block (SP1) (L2)\ncargo r -r -p ethrex-replay --features sp1,l2 -- l2 custom block\n## Prove block (SP1) (L2)\nSP1_PROVER=cuda cargo r -r -p ethrex-replay --features sp1,gpu,l2 -- l2 custom block --prove\n```\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-11T16:37:54Z",
          "tree_id": "b765489d65c17cbfe3e5160ee79f849d5f318247",
          "url": "https://github.com/lambdaclass/ethrex/commit/d4fb47eba30cab87a51c6589e0f10c5005369e43"
        },
        "date": 1757612039696,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170287463439,
            "range": "± 1180181016",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "damian.ramirez@lambdaclass.com",
            "name": "Damian Ramirez",
            "username": "damiramirez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "12ad38e27d8ec32f4288a14e2c0ff6d475015986",
          "message": "feat(l1): rocksdb (#4272)\n\n> [!WARNING]  \n> We added `rocksdb` as a feature flag in the Dockerfile to test how\nHive and Assertoor run with RocksDB instead of libmdbx. This change\nshould be reverted before merging, since RocksDB is not our default\ndatabase yet.\n\n\n**Motivation**\n\nAdd a first version of `rocksdb`\n\n---------\n\nCo-authored-by: Francisco Xavier Gauna <francisco.gauna@lambdaclass.com>\nCo-authored-by: Pablo Deymonnaz <pdeymon@fi.uba.ar>\nCo-authored-by: Gianbelinche <39842759+gianbelinche@users.noreply.github.com>\nCo-authored-by: Lucas Fiegl <iovoid@users.noreply.github.com>\nCo-authored-by: ricomateo <mrico@fi.uba.ar>\nCo-authored-by: Mateo Rico <89949621+ricomateo@users.noreply.github.com>\nCo-authored-by: Javier Chatruc <jrchatruc@gmail.com>\nCo-authored-by: juan518munoz <62400508+juan518munoz@users.noreply.github.com>\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>\nCo-authored-by: Mario Rugiero <mrugiero@gmail.com>",
          "timestamp": "2025-09-11T19:32:40Z",
          "tree_id": "dc589e1bcb9384aeb648cc94350af32aec81909d",
          "url": "https://github.com/lambdaclass/ethrex/commit/12ad38e27d8ec32f4288a14e2c0ff6d475015986"
        },
        "date": 1757622445830,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170656339524,
            "range": "± 469061742",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5860ab86506413cccd2232ba6e276aee91babd5b",
          "message": "feat(l2): bump risc0 to `3.0.3` and re enable main ci jobs (#4425)\n\n**Motivation**\n\nWe want to use the newer version of the RISC0 zkVM.\nAlso re enable the CI jobs that tests replay proving an executing.\n\n**Description**\n\n* Updated `risc0-zkvm` from version `2.3.1` to `3.0.3`.\n* Updated `risc0-zkp` from version `2.0.2` to `3.0.2`..\n  * This is the latest version for this crate, not `3.0.3` available\n* Updated `risc0-zkvm-platform` from version `2.0.3` to `2.2.1`.\n* Re-enabled the \"Test\" job in `pr-main_replay.yaml`.\n* Restored push and pull request triggers in `main_prover_l1.yaml`.\n* Updated block number and cache file.\n\nCloses #4411\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-09-12T13:57:48Z",
          "tree_id": "8a4f9a290a5e237307dc4016ad27a5c5fb5671cb",
          "url": "https://github.com/lambdaclass/ethrex/commit/5860ab86506413cccd2232ba6e276aee91babd5b"
        },
        "date": 1757688680072,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 171217912022,
            "range": "± 1060219768",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d7cfdb6142ea9e675327e7fc29edd6fa49ac189d",
          "message": "feat(l1,l2): add ethreum-metrics-exporter, node_exporter dashboard and new panels (#4433)\n\n**Motivation**\n\nWe were lacking some previously usefull panels in snapsync, specially\nthe ones related to ethereum-metrics-exporter, also we needed to\nvisualize better host metrics, this were added through node_exporter.\n\n**Description**\n\n_**Note: The new addition of node_exporter depends on having the\nnode_exporter service started pushing metrics on port 9122. After that,\nthe server is ready to use the new dashboard as well as some additional\npanels**_\n\nThis PR:\n- Fixes an issue with the ethereum-metrics-exporter config to be able to\nuse it in snapsync initiated runs\n- Add the node_exporter scrapper to prometheus on port 9122\n- Adds a new dashboard to the common ones, the `Node Exporter Full`\n- Add 3 new panels:\n  - Historic FDs\n  - Host RAM\n  - Host CPU Utilization\n- Add mean and max info to most of the legends to be able to easily tell\nkey graphs metrics\n\nScreenshots in comments\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-12T16:59:22Z",
          "tree_id": "5478a35847ae639dee705c56e3b413e6a2e9ccaa",
          "url": "https://github.com/lambdaclass/ethrex/commit/d7cfdb6142ea9e675327e7fc29edd6fa49ac189d"
        },
        "date": 1757699543514,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 171187747347,
            "range": "± 506434534",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9b259772ef15bd189fd7a539751e241e75cb9417",
          "message": "fix(l1): fixed global state slot metric  (#4449)\n\n**Motivation**\n\nThe global state account healed metrics was displaying a number way\nlarger than expected.\n\n**Description**\n\n- Fixed bug where the global metrics counter was being added to itself\nmultiple times.",
          "timestamp": "2025-09-12T17:55:30Z",
          "tree_id": "95b7aa124fe28be9570c0043f170dc8ed01f13bc",
          "url": "https://github.com/lambdaclass/ethrex/commit/9b259772ef15bd189fd7a539751e241e75cb9417"
        },
        "date": 1757702928773,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170029425128,
            "range": "± 1064876673",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44068466+SDartayet@users.noreply.github.com",
            "name": "SDartayet",
            "username": "SDartayet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "504dd26fcd5768efec955dce58125f3c1aaae4f6",
          "message": "feat(l1): block size limit (#4217)\n\n**Description**\n\nThis PR implements [EIP-7934](https://eips.ethereum.org/EIPS/eip-7934),\nwhich will be incorporated in Fusaka. Said EIP introduces a limit on the\nsize of the RLP encode of blocks. This PR adds the required check in\nblock validation.\n\nPartially resolves #4158, the block building side of the EIP will be a\nseparate PR.",
          "timestamp": "2025-09-12T18:58:39Z",
          "tree_id": "2454a1657bc1b9b6fdacb38beb2778368e20c823",
          "url": "https://github.com/lambdaclass/ethrex/commit/504dd26fcd5768efec955dce58125f3c1aaae4f6"
        },
        "date": 1757706662783,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167832652676,
            "range": "± 373911747",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7937b620d9102cf8554efaff682ea17efed17e39",
          "message": "ci(l2): optimize tdx job (#4451)\n\n**Motivation**\n\nThe docker image for the l2 ci was being built both for tdx and for the\nmain jobs also it makes more sense to have this job in `pr-main_l2.yaml`\nas it runs the integration test the same way the other jobs do. This\nremoves ~20 minutes from the tdx job\n\n- This pr\n[~40min](https://github.com/lambdaclass/ethrex/actions/runs/17683522286/job/50264069464)\n- Main\n[~60min](https://github.com/lambdaclass/ethrex/actions/runs/17681349803/job/50256046400)\n\n**Description**\n\n- Remove pr-main_l2_tdx.yaml file and move all the logic to\n`pr-main_l2.yaml`\n- remove the build l2 step and the build docker image step saving\n~20minutes of execution time",
          "timestamp": "2025-09-12T20:34:20Z",
          "tree_id": "2b55781d01890f519f4f659d315e8dcbb8190765",
          "url": "https://github.com/lambdaclass/ethrex/commit/7937b620d9102cf8554efaff682ea17efed17e39"
        },
        "date": 1757712450135,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169094072403,
            "range": "± 378313231",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e37894d174835c6f8b9001df45f0b394e921a5a3",
          "message": "refactor(replay): use `eth_getBlockByNumber` instead of `debug_getRawBlock` (#4454)\n\n**Motivation**\n\nThis pull request updates the block fetching logic in `fetcher.rs`.\nInstead of relying on the debug endpoint, we now use\n`eth_getBlockByNumber`, which is implemented across all nodes. This\nmakes the process more reliable and avoids depending on an endpoint that\nis not universally available.\n\n**Description**\n\n- Added a `hydrated` boolean parameter to\n`EthClient::get_block_by_number`, allowing callers to specify whether to\nretrieve full block data or just hashes. All call sites are updated to\nuse this new parameter.\n- Refactored `get_blockdata` in `cmd/ethrex_replay/src/fetcher.rs` to\nuse `get_blockByNumber` with `hydrated=true` instead of `get_rawBlock`,\nand updated logic to construct the full `Block` from the response.",
          "timestamp": "2025-09-12T21:08:27Z",
          "tree_id": "c6af94e44124e35588becf0f818574a672a4d81b",
          "url": "https://github.com/lambdaclass/ethrex/commit/e37894d174835c6f8b9001df45f0b394e921a5a3"
        },
        "date": 1757714521369,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167999673205,
            "range": "± 506602599",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "67b265e7d1a5140e3c0a2f36ba81743efba2072a",
          "message": "feat(l1): add docker compose with CL and EL (#4432)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nAdd a `docker-compose.yaml` file that deploys a Consensus client\n(lighthouse) and ethrex with just one command:\n```sh\ndocker compose up\n```\n`ETHREX_NETWORK` can be used to set the network, default is `mainnet`.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-12T21:49:11Z",
          "tree_id": "d55baf82ae869c76d342a0a60d13bf4758cdab31",
          "url": "https://github.com/lambdaclass/ethrex/commit/67b265e7d1a5140e3c0a2f36ba81743efba2072a"
        },
        "date": 1757716925408,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166289315423,
            "range": "± 278898792",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8e7a734eb7b91feca9ded109ccf19f5f47f4ce99",
          "message": "docs(levm): fix minor comments in levm code (#4405)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\nFix comments that were merged in #4381 before they could be fixed there.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>",
          "timestamp": "2025-09-15T14:20:30Z",
          "tree_id": "2ff61d6b838a281829057aedeee22138a942ba80",
          "url": "https://github.com/lambdaclass/ethrex/commit/8e7a734eb7b91feca9ded109ccf19f5f47f4ce99"
        },
        "date": 1757949792459,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 165965146877,
            "range": "± 600034421",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e8b776a84c2c0ef6414b48f6de19d5980cd1e53d",
          "message": "feat(l2): serialize RISC0's guest program input using `rkyv` (#4459)\n\n**Motivation**\n\nJSON deserializations are slow and take too many zkVM cycles.\n\n**Description**\n\nSerialize RISC0's guest program input with `rkyv`.\n\n**Results**\n\nzkVM cycles to read RISC0's guest program takes half the cycles now. \n\n*Before*\n\n> [!NOTE]\n> See the logs below, it takes 1.122.344.791 cycles to read the input\n\n```\n2025-09-13T00:52:28.376524Z  INFO ethrex_replay::fetcher: Retrieving execution data for block 23350480 (205 block behind latest)\n2025-09-13T00:52:28.381127Z  INFO ethrex_replay::fetcher: Getting block 23350480 data from cache\n2025-09-13T00:52:28.381827Z  INFO ethrex_replay::bench: Starting prover program\nstart reading input\nend reading input, cycles: 1122344791\nstart execution\nend execution, cycles: 1929020069\nstart committing public inputs\nend committing public inputs, cycles: 2648\ntotal cycles: 3051367508\n2025-09-13T00:52:58.019699Z  INFO ethrex_prover_lib::backend::risc0: Successfully generated session info in 29.62s\n2025-09-13T00:52:58.019749Z  INFO ethrex_replay::block_run_report: [mainnet] Block #23350480, Gas Used: 10932281, Tx Count: 114, execute_risc0 Result: Success, Time Taken: 29s 637ms | https://etherscan.io/block/23350480\n```\n\n*After*\n\n> [!NOTE]\n> See the logs below, it takes 623.283.163 cycles to read the input\n(almost half of the cycles)\n\n```\nadmin@ethrex-office-2:~/ethrex$ ./ethrex-replay-risc0 block --block 23350480 --execute --rpc-url http://157.180.1.98:8545\n2025-09-13T00:49:59.531233Z  INFO ethrex_replay::fetcher: Retrieving execution data for block 23350480 (192 block behind latest)\n2025-09-13T00:49:59.535781Z  INFO ethrex_replay::fetcher: Getting block 23350480 data from cache\n2025-09-13T00:49:59.536302Z  INFO ethrex_replay::bench: Starting prover program\nstart reading input\nend reading input, cycles: 623283163\nstart execution\nend execution, cycles: 1929032701\nstart committing public inputs\nend committing public inputs, cycles: 2645\ntotal cycles: 2552318509\n2025-09-13T00:50:28.021984Z  INFO ethrex_prover_lib::backend::risc0: Successfully generated session info in 28.48s\n2025-09-13T00:50:28.022693Z  INFO ethrex_replay::block_run_report: [mainnet] Block #23350480, Gas Used: 10932281, Tx Count: 114, execute_risc0 Result: Success, Time Taken: 28s 486ms | https://etherscan.io/block/23350480\n```",
          "timestamp": "2025-09-15T14:26:30Z",
          "tree_id": "e58a36c857c488b0a8dddb005458b0ba3930019a",
          "url": "https://github.com/lambdaclass/ethrex/commit/e8b776a84c2c0ef6414b48f6de19d5980cd1e53d"
        },
        "date": 1757950147553,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169166724641,
            "range": "± 921532047",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitriymozir@gmail.com",
            "name": "MozirDmitriy",
            "username": "MozirDmitriy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "26329f474c3444ceea35f014aef9da9a1c7d294d",
          "message": "fix(l1): add RLP_INVALID_VALUE exception support (#4369)\n\nAdd missing TransactionException.RLP_INVALID_VALUE case to\ndeserialize_transaction_expected_exception function.\n\nThe RlpInvalidValue enum variant was already defined but not handled in\nthe deserializer, causing these exceptions to fall through to the _other\ncase.\n\nreopen #3941\n\n---------\n\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-09-15T14:50:32Z",
          "tree_id": "c4ec764a8a4b4e4acae3185f5f2d7fbf5dbe03d0",
          "url": "https://github.com/lambdaclass/ethrex/commit/26329f474c3444ceea35f014aef9da9a1c7d294d"
        },
        "date": 1757951452633,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 164979488563,
            "range": "± 635595566",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0b546aa8d85a55f43c2640d0d67113895ca2e01e",
          "message": "fix(l2): race condition tracking privileged tx count (#4394)\n\n**Motivation**\n\nWe have a race condition between the `block_producer` and the\n`l1_committer` when updating the `precommit_privileged` table. The race\ncondition manifests as the following error:\n```\n2025-09-08T18:17:00.931203Z ERROR ethrex_l2::sequencer::l1_committer: L1 Committer Error: Committer failed to send transaction: Failed to send commitment for batch 3. first_block: 14 last_block: 38: Committer failed because of an EthClient error: eth_estimateGas request error: execution reverted: unknown error\n```\n\nThis is what happens:\n\nThe `block_producer` tracks the number of privileged transactions in the\n`rollup_store` to ensure it does not exceed the maximum cap of 300,\nwhich is imposed by gas limitations. Once the cap is reached, it stops\nadding privileged transactions until the `l1_committer` resets the\ncounter after creating a new batch.\n\nBut given the `block_producer` and `l1_committer`run concurrently, the\nfollowing scenario may occur:\n1. The `l1_committer` starts producing a new batch containing the last\navailable block.\n2. The `block_producer` creates a new block with 150 privileged\ntransactions and sets the counter to 150.\n3. The `l1_committer` finishes the batch and resets the counter to 0.\n4. The `block_producer` continues adding privileged transactions until\nthe cap is reached again.\n5. As a result, the `l1_committer` builds a batch containing 450\nprivileged transactions instead of 300.\n\n**Description**\n- Removes the shared table in the `rollup_store`.\n- The `block_producer` only enforces a `PRIVILEGED_TX_BUDGET` per block.\nIt no longer has a notion of batches.\n- The `l1_committer` ensures that the `PRIVILEGED_TX_BUDGET` is not\nexceeded per batch when adding blocks.\n- The `block_producer` tracks the `last_privileged_nonce` to ensure all\nprivileged transactions are added sequentially across blocks. IMO, this\nis a better solution since it allows us to enforce ordering across\ndifferent batches. However, it is not the ultimate solution, because we\nstill mark the very first processed privileged transaction as the first\none, even though it may not actually be in order (this issue already\nexists and should be addressed in a separate PR). #4398 was created to\nsolve this.\n\n\nCloses #4359",
          "timestamp": "2025-09-15T15:53:27Z",
          "tree_id": "e4eab10c95e5a83fff9ce8846b508566078cbe47",
          "url": "https://github.com/lambdaclass/ethrex/commit/0b546aa8d85a55f43c2640d0d67113895ca2e01e"
        },
        "date": 1757954809909,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169150138792,
            "range": "± 629289458",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce96b49c69ca1c306ad169a9e479ae093588ddf8",
          "message": "perf(levm): fix block hash caching (#4479)\n\n**Motivation**\n\nThe original code made it so that the cache mechanism never worked\nproperly.\n\n**Description**\n\nFix the block hash caching mechanism so that the result is actually\ncached.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>",
          "timestamp": "2025-09-15T16:49:20Z",
          "tree_id": "e3c24ae00e58cdb5fb515b3f6520b07ddb260cfb",
          "url": "https://github.com/lambdaclass/ethrex/commit/ce96b49c69ca1c306ad169a9e479ae093588ddf8"
        },
        "date": 1757958170727,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168157115853,
            "range": "± 413136527",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "36f50db47400d4adc78aa65252c0d44fe9a450ae",
          "message": "fix(l1): enable SOCKS5(h) proxy support in Reqwest so RPC calls work behind SOCKS proxies (#4481)\n\n**Description**\n\nSome environments (e.g. SSH dynamic port forwarding via ssh -D) expose\nan outbound SOCKS5 proxy. Our binaries were built with `reqwest = {\nfeatures = [\"json\"] }`, which does not include SOCKS support. As a\nresult, when users set ALL_PROXY=socks5h://…, Reqwest read the env var\nbut could not speak SOCKS, leading to connection failures and misleading\nerrors (e.g. “incompatible SOCKS version”, local DNS failures).",
          "timestamp": "2025-09-15T17:58:57Z",
          "tree_id": "a9aa6bc7fc14db194072bd182828e2c816d5e58e",
          "url": "https://github.com/lambdaclass/ethrex/commit/36f50db47400d4adc78aa65252c0d44fe9a450ae"
        },
        "date": 1757962429948,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168787416419,
            "range": "± 257374089",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "FredrikaPhililip@proton.me",
            "name": "Suuuuuuperrrrr fred",
            "username": "FredPhilipy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "52eefc01dd1ef5ba6a1828badd8b142b678e599c",
          "message": "feat(l2): reject Blob transaction in the L2 from P2P (#4146)\n\nCloses https://github.com/lambdaclass/ethrex/issues/2857",
          "timestamp": "2025-09-15T18:01:12Z",
          "tree_id": "b2ba788be8159bf6b6a1cb265dec3b88118c70b7",
          "url": "https://github.com/lambdaclass/ethrex/commit/52eefc01dd1ef5ba6a1828badd8b142b678e599c"
        },
        "date": 1757962532120,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168853621759,
            "range": "± 434154298",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "54ad169a23152592a0c9b3797f1732e208317f3a",
          "message": "fix(l1): handle syncing in case of reorgs and handle the case of reorg with invalid side chain (#4028)\n\n**Motivation**\n\nRestoring `request_block_headers` previous to this\n[pr](https://github.com/lambdaclass/ethrex/pull/4213) since it brought\nissues in case of re org.\nFixing the Invalid Missing Ancestor Syncing ReOrG hive tests which are\nfailing.\n\n**Description**\n\nUp to now, when executing blocks during syncing, if there's an error\nwhile running a batch we set only the failing block with having an\ninvalid ancestor. This pr sets all the downloaded descendants of a\nfailing block with having an invalid ancestor during syncing.\n\nAlso, when syncing, it drops the sync head header from the requested\nheaders when downloading block bodies if the sync head is stored as a\npending block, since we already have it and there's no need to ask for\nit.\n\nOn another note, it was necessary to restore for full syncing the\n`request_block_headers` that we had previous to merging this\n[pr](https://github.com/lambdaclass/ethrex/pull/4213), since there was\nan issue with the way the block headers were requested. The core problem\nwith the update was that we requested the all headers left from the sync\nhead on by number, and since the tests come with a re-org scenario and\nthe sync head number was the same as the current head number, no headers\nwere requested, so the fork choice update never stopped syncing.\n\nCloses #3105",
          "timestamp": "2025-09-15T19:03:28Z",
          "tree_id": "fe5b1ea84784e2df1d607a7505fe0df15929c2c8",
          "url": "https://github.com/lambdaclass/ethrex/commit/54ad169a23152592a0c9b3797f1732e208317f3a"
        },
        "date": 1757966155953,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166849041329,
            "range": "± 595443025",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49622509+jrchatruc@users.noreply.github.com",
            "name": "Javier Rodríguez Chatruc",
            "username": "jrchatruc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "fa328e240666b96d82119a4e83d8a9427937d9e1",
          "message": "fix(l1): use `try_lock` instead of `lock` in state healing (#4488)\n\n**Motivation**\n\nThis is most likely the source of a deadlock we've been seeing during\nstate healing. Regardless, it's what we should be doing anyways (and\nwhat's currently done during storage healing). All this locking should\ngo away once we've properly migrated this part of the codebase to use\n`spawned`\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-15T20:06:49Z",
          "tree_id": "1bf7d9f65ff0bb5bd7aee369e08b64d06bfc0239",
          "url": "https://github.com/lambdaclass/ethrex/commit/fa328e240666b96d82119a4e83d8a9427937d9e1"
        },
        "date": 1757970072180,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166969544110,
            "range": "± 309540058",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1e9e81274dadd9df98166105833b5f196a927642",
          "message": "refactor(l1): update snap sync slack messages (#4442)\n\n**Description**\n\nUpdates both success and failure slack messages in server runner script\n\n**Examples**\n\n<img width=\"569\" height=\"171\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/167daf31-1248-41cb-bef9-4a8b10c96532\"\n/>\n\n<img width=\"483\" height=\"400\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/d827e8bd-30cd-4546-b1bb-a9302f9364d6\"\n/>\n\n---------\n\nCo-authored-by: Gianbelinche <39842759+gianbelinche@users.noreply.github.com>",
          "timestamp": "2025-09-15T20:31:10Z",
          "tree_id": "2c73a5dcc2cbf328ef53162653af5cfb24da7f8f",
          "url": "https://github.com/lambdaclass/ethrex/commit/1e9e81274dadd9df98166105833b5f196a927642"
        },
        "date": 1757971504828,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169680891345,
            "range": "± 423160309",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b5deea9fd51f0ad00fc7a250302e340579b816d5",
          "message": "refactor(replay): standardize replay cache (#4485)\n\n**Motivation**\n\nWe want to make the replay cache more reliable to future changes. This\nincludes using a standard execution witness and use when possible (on\nthe L1) known network names.\nAlso, use `json` caches for better readability.\n\n**Description**\n\n* Switched cache serialization from binary (`rkyv`) to JSON\n(`serde_json`), updating `load_cache` and `write_cache` to use JSON and\nchanging cache file extensions from `.bin` to `.json`.\n* Expanded the `Cache` struct to include `network` and `chain_config`\nfields, allowing the cache to distinguish between L1 and L2 chains and\nsupport custom configurations.\n* Added `TryFrom<u64>` for `Network` to map chain IDs to network\nvariants, improving robustness when determining the network from chain\nconfiguration.\n* Made `Network` and `PublicNetwork` serializable with `serde`, and\nadjusted their usage to ensure correct (de)serialization in cache files.\n* Refactored input preparation functions (`get_l1_input`,\n`get_l2_input`) to enforce presence/absence of `network` and\n`chain_config` fields according to the context (L1 vs L2).\n\nCloses #4286\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-15T20:49:36Z",
          "tree_id": "eaf6b0f7e67e5484df0feb50d124ca3fee4e8df5",
          "url": "https://github.com/lambdaclass/ethrex/commit/b5deea9fd51f0ad00fc7a250302e340579b816d5"
        },
        "date": 1757972693804,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170750919144,
            "range": "± 703913518",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b2c647c63ac82ff998fb379ba085d4fa949d25f5",
          "message": "feat(l1, l2): add action button to EthProofs in `BlockRunReport` slack message (#4388)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\nMainnet blocks whose numbers are multiples of 100 are proved in\n[EthProofs](http://ethproofs.org/). If we happen to prove one of them,\nit is useful to have a link to more proving stats for that block.\n\n---------\n\nCo-authored-by: Jeremías Salomón 🐃🐄🥚 <48994069+JereSalo@users.noreply.github.com>",
          "timestamp": "2025-09-15T21:02:46Z",
          "tree_id": "ca9e65b8be65504f9893b31bcf3308e507492237",
          "url": "https://github.com/lambdaclass/ethrex/commit/b2c647c63ac82ff998fb379ba085d4fa949d25f5"
        },
        "date": 1757973479012,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169358473231,
            "range": "± 860879107",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "da519b6c9c32ca65f51e338971e0014dd90fa535",
          "message": "ci(replay): add job on every pr for zkvm executing (#4441)\n\n**Motivation**\n\nThis pull request updates the CI workflows to support executing L1 block\nreplays with both SP1 and Risc0 backends.\n\n**Description**\n\n* Added a new `test` job in `pr-main_replay.yaml` to execute an L1 block\nwith both `sp1` and `risc0` backends.\n* Added new targets `execute-sp1-ci` and `execute-risc0-ci` to\n`cmd/ethrex_replay/Makefile` for executing blocks with the respective\nbackends in CI.\n\n*\n[Both](https://github.com/lambdaclass/ethrex/actions/runs/17674951506/job/50234765309?pr=4441)\nexecute under 25 minutes\n\nCloses #4436\nCloses #4134\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>\nCo-authored-by: ilitteri <ilitteri@fi.uba.ar>",
          "timestamp": "2025-09-15T21:58:29Z",
          "tree_id": "16521e2a2925ecc66a99663f3948c9b46791a92f",
          "url": "https://github.com/lambdaclass/ethrex/commit/da519b6c9c32ca65f51e338971e0014dd90fa535"
        },
        "date": 1757976619571,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167094294389,
            "range": "± 343338997",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "671cc6e5eb2c9b73a328a78bf0efa5ac56160fa5",
          "message": "ci(l2): install latest rex version (#4498)\n\n**Motivation**\n\nThe CI is still broken because we have an old Rex version pinned.\n\n**Description**\n\nInstall the latest Rex version.\n\nCloses None",
          "timestamp": "2025-09-16T13:13:29Z",
          "tree_id": "5c4c214c6e7b12bcf1d34ae15b84cb192eb05b05",
          "url": "https://github.com/lambdaclass/ethrex/commit/671cc6e5eb2c9b73a328a78bf0efa5ac56160fa5"
        },
        "date": 1758031618009,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 171079857262,
            "range": "± 595118598",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "76a773ac668888f17721ee9efc05be6aa7020ec8",
          "message": "feat(l2): start/pause sequencer admin endpoint (#4367)\n\n**Motivation**\n\nWe want to have more control over the sequencer, for this reason this PR\nimplements a new admin server with an API to start/stop the sequencer\ncommits. In the future this server can be expanded to provide a /health\nendpoint with information about the sequencer status.\n\n**Description**\n\n- This PR adds a new admin http server that starts with the sequencer\nand has access to the L1Committer mailbox to send start/stop messages\n- Add to the L1Committer logic to handle a call message that stops the\nsequencer\n- Add to the L1Committer logic to handle a call message that start the\nsequencer with an optional parameter of a start delay in ms\n- Add 3 endpoints to the admin server they can be tested by running\n`make init-l2-dev` and then using any of the commands:\n- `/committer/start`: starts the committer `curl -i\nlocalhost:5555/committer/start`\n- `/committer/start/{delay}`: starts the committer with a delay in ms\n`curl -i localhost:5555/committer/start/60000`\n- `/committer/stop`: stops the committer `curl -i\nlocalhost:5555/committer/stop`\n- Add new page in docs for the admin server API",
          "timestamp": "2025-09-16T14:40:42Z",
          "tree_id": "96d4bca1799c3f1f3965b7c65b6e364a500ae07f",
          "url": "https://github.com/lambdaclass/ethrex/commit/76a773ac668888f17721ee9efc05be6aa7020ec8"
        },
        "date": 1758036909816,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168255871116,
            "range": "± 787611023",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e1b03c8359c7cc7e8ef9831cb01073989ea6ccca",
          "message": "feat(l2): configure block max gas limit (#4211)\n\n> [!CAUTION]\n> Merge after #4224\n\n**Motivation**\n\nWe need a way to limit the gas used per block to avoid overloading our\nprover.\n\n**Description**\n\n- Adds a new CLI parameter: `max_gas_limit`.\n- Updates the `payload_builder` to check this parameter as well.\n\n**How to test**\n\nSet a low `max_gas_limit`, start the L2, and watch in the monitor how\nthe initial deposits are distributed across different blocks, ensuring\nthat the gas used per block is lower than the configured amount.\n\n\nCloses #4207 \nCloses #2526",
          "timestamp": "2025-09-16T14:55:31Z",
          "tree_id": "32b9b3a5c7c33ed48d748cb34926836101a7b3dc",
          "url": "https://github.com/lambdaclass/ethrex/commit/e1b03c8359c7cc7e8ef9831cb01073989ea6ccca"
        },
        "date": 1758037727119,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169521757018,
            "range": "± 442046219",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9e23e515e11487ffdefc3a4d2dc56ae508d4ac04",
          "message": "fix(l2): use empty SP1 elf when linting (#4486)\n\n**Motivation**\n\n`make lint` fails with the following error:\n\n```\n    Checking ethrex-prover v0.1.0 (/Users/mega/execution/ethrex/crates/l2/prover)\nerror: couldn't read `crates/l2/prover/src/backend/../guest_program/src/sp1/out/riscv32im-succinct-zkvm-elf`: No such file or directory (os error 2)\n  --> crates/l2/prover/src/backend/sp1.rs:17:5\n   |\n17 |     include_bytes!(\"../guest_program/src/sp1/out/riscv32im-succinct-zkvm-elf\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `ethrex-prover` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nmake: *** [lint] Error 101\n```\n\n**Description**\n\nThis PR overrides the included bytes with an empty slice when it's being\ncompiled by clippy.\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>",
          "timestamp": "2025-09-16T15:00:51Z",
          "tree_id": "736291aabe74cfedfcd24ba3b47ede231b8892c4",
          "url": "https://github.com/lambdaclass/ethrex/commit/9e23e515e11487ffdefc3a4d2dc56ae508d4ac04"
        },
        "date": 1758038241564,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166591775326,
            "range": "± 320242567",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estebandh@gmail.com",
            "name": "ElFantasma",
            "username": "ElFantasma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4c8ac740b5d78a57ba9addc49861596c72df7719",
          "message": "refactor(l1): moved peer scores into kademlia's PeerData (#4444)\n\n**Motivation**\nPeer Scores were stored separately from the rest of peer data and that\nled to probable inconsistencies and errors\n\n**Description**\nThis PR combines PeerScores inside PeerData, and removes the requirement\nto update the peer_score table periodically, as now it is the same as\nthe peer_table\n\nCloses #4352\n\n---------\n\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>",
          "timestamp": "2025-09-16T15:45:09Z",
          "tree_id": "81027ec1b3853170981aaae0148dbc972b92aa93",
          "url": "https://github.com/lambdaclass/ethrex/commit/4c8ac740b5d78a57ba9addc49861596c72df7719"
        },
        "date": 1758040663457,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166574880534,
            "range": "± 472409055",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "435dd7fe41a6b2b39422b1da363309383948766c",
          "message": "fix(replay):  `ethrex_replay` add fallback when executionWitness is not implemented (#4039)\n\n**Motivation**\n\nWe want to re incorporate the `ProverDB` struct that uses the endpoint\n`eth_getProof` for common usability.\n\n**Description**\n\n- Bring the deleted `ProverDB` and `RpcDB` structs.\n- Create new enum `PreExecutionState` for handling both\n`ExecutionWitnessResult` and `ProverDB`\n- Added an `--l2` flag to both the `execute` and `prove` subcommands in\nthe CLI, enabling users to specify L2 block processing.\n- Modify the block data fetcher to use a fallback mechanism: if the\n`debug_executionWitness` RPC endpoint is missing, it falls back to using\n`eth_getProof` and builds a database from RPC data, supporting both L1\nand L2 VM types.\n\n**Follow up**\n\n- Investigate if the changes made\n[here](https://github.com/lambdaclass/ethrex/pull/2952) are still\nrequired\n\n- We want to configure the RPC_LIMIT constant #4504\n\n**Known Issues**\n\nSome of the executions when using a Nethermind endpoint end up in\nerrors. Issue [here](http://github.com/lambdaclass/ethrex/issues/4109)\n\n**How to test**\n\nRunning with `RPC_URL` being and enpoint that does not implement\n`debug_executionWitness`:\n\n```\ncargo run --release --features sp1 -- execute block <N> --rpc-url <RPC_URL> --network <NETWORK>\n```\n\nCloses #3989\n\n---------\n\nCo-authored-by: ilitteri <ilitteri@fi.uba.ar>\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>\nCo-authored-by: JereSalo <jeresalo17@gmail.com>\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>\nCo-authored-by: LeanSerra <46695152+LeanSerra@users.noreply.github.com>",
          "timestamp": "2025-09-16T15:56:18Z",
          "tree_id": "11a88f93959ca1e28d121048df6349c20d3df7bb",
          "url": "https://github.com/lambdaclass/ethrex/commit/435dd7fe41a6b2b39422b1da363309383948766c"
        },
        "date": 1758041437097,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170659599698,
            "range": "± 450243798",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b37a6b8dd4b815d8a321b9a70ca54736cbf577d5",
          "message": "fix(l1): change default script branch in sync tool (#4506)\n\n**Motivation**\nThe default server script is snap_sync which is no longer valid\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nChanged default script branch to main\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-16T16:19:38Z",
          "tree_id": "ebd4315d3425750ddcbb56a8acb997af775c7feb",
          "url": "https://github.com/lambdaclass/ethrex/commit/b37a6b8dd4b815d8a321b9a70ca54736cbf577d5"
        },
        "date": 1758042305944,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170230759840,
            "range": "± 798506036",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5b08631a07d1fbb76018c450ec79d3dbcd730070",
          "message": "feat(l2): `/health` sequencer endpoint (#4415)\n\n**Motivation**\n\nWhen an issue occurs on production we want an easy way to check the\nsequencer status\n\n**Description**\n\n- Add to the admin server the `/health` endpoint\n- For each component(Genserver) of the sequencer implement a call\nmessage Health and a response with information about the status of the\ncomponent\n     - TODO #4508 : implement it for BASED components\n     - TODO #4509 :  implement it for proof coordinator\n     - TODO #4510 : implement it for l1_proof_verifier\n- Implement helper methods for `Signer` and `EthClient` to check their\nstatus\n- Add to the admin server the `/admin/health` endpoint to check the\nstatus of the actual admin server\n\n**How to test**\n\n```\nmake init-l2-dev\n```\n\n```\ncurl -X GET http://localhost:5555/health\n```\n\npiping the output to jq can be used to filter components for example\n\n```\ncurl -X GET http://localhost:5555/health |jq .l1_watcher\n```\nwill show only the health status of the l1 watcher:\n\n```\n{\n  \"bridge_address\": \"0x39ba039e4862a44d6613b20373aaf90a8b3ba244\",\n  \"check_interval\": 12000,\n  \"l1_block_delay\": 0,\n  \"l1_rpc_healthcheck\": {\n    \"http://localhost:8545/\": {\n      \"id\": 1,\n      \"jsonrpc\": \"2.0\",\n      \"result\": \"0x766f\"\n    }\n  },\n  \"l2_rpc_healthcheck\": {\n    \"http://localhost:1729/\": {\n      \"id\": 1,\n      \"jsonrpc\": \"2.0\",\n      \"result\": \"0x14cb\"\n    }\n  },\n  \"last_block_fetched\": \"30309\",\n  \"max_block_step\": \"5000\",\n  \"sequencer_state\": \"Sequencing\"\n}\n```",
          "timestamp": "2025-09-16T16:21:07Z",
          "tree_id": "eaa601ac045a053ddbd4d2d5bdcfdc4fe656778b",
          "url": "https://github.com/lambdaclass/ethrex/commit/5b08631a07d1fbb76018c450ec79d3dbcd730070"
        },
        "date": 1758042984933,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168026338784,
            "range": "± 341410428",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estebandh@gmail.com",
            "name": "ElFantasma",
            "username": "ElFantasma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7d6f83bfb7cfdddfe30552ace30a367f12a2ed16",
          "message": "test(l1): added error line to get more detail on InvalidArgument error (#4501)\n\n**Motivation**\n\nA `MessageSendFailure(IoError(Os { code: 22, kind: InvalidInput,\nmessage: \"Invalid argument\" }))` is spamming from time to time when\ntrying to send a discv4 message.\n\n**Description**\n\nAdded an error line to detail the message being send, the destination\naddress and the internal error to get better insight of the problem\n\nOnce the problem is found, we can revert this code.\n\nCloses #4492",
          "timestamp": "2025-09-16T17:19:44Z",
          "tree_id": "d781fcdba0d79c5c515737a0f56cf644cadf0afd",
          "url": "https://github.com/lambdaclass/ethrex/commit/7d6f83bfb7cfdddfe30552ace30a367f12a2ed16"
        },
        "date": 1758046357031,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170207658745,
            "range": "± 604607477",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bf5c671fa26e772e392abdac1143ff403cffa0d3",
          "message": "test(l2): run integration tests concurrently (#4445)\n\n> [!CAUTION]\n> Merge after #4394 \n\n**Motivation**\n\nRunning our integration tests sequentially takes a lot of time and\nlimits us in adding more tests since we don’t want to add more wait time\nto the CI.\n\n**Description**\n\n- Runs integration tests concurrently.\n- Improves test logs and descriptions.\n- Tests that check the fee vault balance variations now return the\nexpected balance change, and we verify the fee vault balance only once\nat the end.\n- Tests that check the bridge balance are run separately.\n- Updates the privileged spammer to send 3000 privileged transactions\ninstead of 600.\n- Reduces the commit time to 30 seconds in the CI jobs.\n\nAs a result, the \"Run tests\" step now takes ~4 minutes instead of ~9,\neven while spamming more privileged transactions than before.\n\n\nCloses #3864\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>",
          "timestamp": "2025-09-16T17:44:37Z",
          "tree_id": "72eec794b5ddbd82df39e89d647ec09f6d0397cc",
          "url": "https://github.com/lambdaclass/ethrex/commit/bf5c671fa26e772e392abdac1143ff403cffa0d3"
        },
        "date": 1758047970776,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168936511164,
            "range": "± 321978153",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "690bdb4c16cce02d7699c4af01b0c475ba5044fa",
          "message": "feat(l2): add a configurable batch gas limit (#4267)\n\n> [!CAUTION]\n> Merge after #4211\n\n**Motivation**\n\nWe need a way to limit the gas used per batch to prevent overloading our\nprover.\n\n\n**Description**\n\n- Adds a new CLI parameter: `batch_gas_limit`.\n- Updates the `l1_committer` to ensure that the batch never exceeds this\nlimit if set.\n\nCloses #4208",
          "timestamp": "2025-09-16T18:38:25Z",
          "tree_id": "b0d27b27df364c909d77ba64933a8b3232646b31",
          "url": "https://github.com/lambdaclass/ethrex/commit/690bdb4c16cce02d7699c4af01b0c475ba5044fa"
        },
        "date": 1758051086572,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170696538314,
            "range": "± 436013083",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dfb267a37ac3ea4eaf284c531f05dd9d347c9b48",
          "message": "fix(l1): remove second log level override from `init_tracing` (#4515)\n\n**Motivation**\n\n`RUST_LOG` is the common way to specify the log level for a Rust\nprogram. Currently, any global level specified by the envvar is being\noverriden by the value of the CLI flag `--log.level`, which defaults to\n`INFO`.\n\n**Description**\n\nThis PR removes an `add_directive` call from the filter in\n`init_tracing`, which was causing the override. The CLI flag value will\nbe set by the `with_default_directive` call, unless the user sets the\n`RUST_LOG` variable.",
          "timestamp": "2025-09-16T18:49:11Z",
          "tree_id": "54cfa327996ee8bed312d991dfaa36fab3873f99",
          "url": "https://github.com/lambdaclass/ethrex/commit/dfb267a37ac3ea4eaf284c531f05dd9d347c9b48"
        },
        "date": 1758051872739,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167178555050,
            "range": "± 305238284",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "764c4f50167619918f355b23f49c4d8774728e01",
          "message": "docs(l1,l2): refactor docs (#4513)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nDocs were outdated and had a messing structure\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nRefactor them with quickstart guides, cleaner summary structure, etc.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Leandro Ferrigno <leanrafa@gmail.com>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-16T19:39:47Z",
          "tree_id": "d36d6ef5102eb1357aad00bf0060c4577dbc97d6",
          "url": "https://github.com/lambdaclass/ethrex/commit/764c4f50167619918f355b23f49c4d8774728e01"
        },
        "date": 1758054823470,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 172303958758,
            "range": "± 538591136",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49622509+jrchatruc@users.noreply.github.com",
            "name": "Javier Rodríguez Chatruc",
            "username": "jrchatruc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a41ab15be09666f86fd54d6299809e0d5450afb8",
          "message": "chore(l1): change default block wait time to 2 minutes instead of 1 on sync tooling script (#4512)\n\n**Motivation**\n\nWe have had runs fail simply because there were 5 missed slots in a row\non Hoodi, triggering notifications that we were not advancing when in\nreality the entire network had not advanced in that timeframe. This\nchanges the default time from 1 minute to 2, meaning there would need to\nbe at least 9 missed slots in a row to have this affect us, which should\nbe good enough.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-16T19:56:21Z",
          "tree_id": "61f0b59b33a636096a0fae251943adf462f79fe9",
          "url": "https://github.com/lambdaclass/ethrex/commit/a41ab15be09666f86fd54d6299809e0d5450afb8"
        },
        "date": 1758055889358,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170349266413,
            "range": "± 537101479",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7a7525b1566bca5ab2108e9670cd29e2ef7ec069",
          "message": "chore(l1): add specific logs to ipv6 bug (#4511)\n\n**Motivation**\nThere's currently an error `MessageSendFailure(Os { code: 97, kind:\nUncategorized, message: \"Address family not supported by protocol\" })`\nthat happens once in a while.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nAdds logs to help debug if the error occurs\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-09-16T20:13:15Z",
          "tree_id": "64413edd0ad6a11d991f0e4ff225b9513aef03e2",
          "url": "https://github.com/lambdaclass/ethrex/commit/7a7525b1566bca5ab2108e9670cd29e2ef7ec069"
        },
        "date": 1758056814838,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169745299498,
            "range": "± 376124761",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0da884129cc48cf99048bd6b3aed9fd0527f9d36",
          "message": "refactor(replay): merge block-range command with blocks (#4505)\n\n**Motivation**\n\nThe `BlockRange` subcommand is not used.\n\n**Description**\n\n- Instead of removing it entirely, this PR merges the `--from` and\n`--to` options into the `Blocks` subcommand, as explained in #4475.\n\nCloses #4475",
          "timestamp": "2025-09-16T20:18:31Z",
          "tree_id": "11fd8ee90a453e5384034aa7c69fc904bcfa0492",
          "url": "https://github.com/lambdaclass/ethrex/commit/0da884129cc48cf99048bd6b3aed9fd0527f9d36"
        },
        "date": 1758057028164,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166634497576,
            "range": "± 994996420",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "006802b07b24f4f3a537cd7630294156f9e90037",
          "message": "fix(l2): avoid blocking in `L1Committer` (#4164)\n\n**Motivation**\n\nThe L1 Committer does some blocking computations when publishing batches\nto L1, which took from 100ms to 30ms according to quick measurements on\nan M3. This is a low number, but still degrades the tokio runtime and\ncould cause issues elsewhere in the system.\n\n**Description**\n\n~This PR wraps the call to `generate_blobs_bundle` with a\n`spawn_blocking`, to avoid blocking the tokio runtime. Also adds a\ncomment on another call that seems to also be blocking, taking sometimes\n\\~40ms before reaching an `await` point.~ Changes reverted. Now we\ninstead spawn the whole GenServer as blocking.",
          "timestamp": "2025-09-16T20:55:45Z",
          "tree_id": "7c135955c608d9ba2423565b88f8f5adc3e6f470",
          "url": "https://github.com/lambdaclass/ethrex/commit/006802b07b24f4f3a537cd7630294156f9e90037"
        },
        "date": 1758059318012,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170925231361,
            "range": "± 1268647751",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49622509+jrchatruc@users.noreply.github.com",
            "name": "Javier Rodríguez Chatruc",
            "username": "jrchatruc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4a9cffb1744b10149760363d5c76725f2ff3a565",
          "message": "chore(l1): fix log level in tooling snap sync script (#4520)\n\n**Motivation**\n\nAfter #4515 was merged we lost most `info` logs when running with our\nautomated script, which are extremely important. This fixes it.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-16T21:27:58Z",
          "tree_id": "4ae20850a57eacef45bd0e08a3893e910bb394e4",
          "url": "https://github.com/lambdaclass/ethrex/commit/4a9cffb1744b10149760363d5c76725f2ff3a565"
        },
        "date": 1758061224448,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166690185568,
            "range": "± 895674174",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "02baa16307c9505acf1fdeaa8eb6978181f2980f",
          "message": "feat(replay): add `--cache-level` flag in `ethrex-replay` to decide whether to write the cache or not (#4402)\n\n**Motivation**\n\nThis feature was already implemented in the `ethrex-replayer` but was\nnot available for `ethrex-replay`. As `ethrex-replayer` already makes\nuse of `ethrex-replay` as a library, it is almost free to add this\nfeature to `ethrex-replay` while keeping it in `ethrex-replayer`.\n\n**Description**\n\n- Rename `CacheLevel::All` to `CacheLevel::On` due to the change in the\ncontext in which it is now used.\n- Implements `--cache-level` arg of type `CacheLevel` with 3 variants:\n`on` to cache block replays, `failed` to cache only failed replays, and\n`off` to avoid caching.\n- Refactors cache API\n    - `write_cache` now derives the file name from the cache.\n- Cache file name generation is now centralized in a single function to\nreduce error surface.",
          "timestamp": "2025-09-16T21:41:26Z",
          "tree_id": "6765e683c95734462fd165e94715b074ce6e2818",
          "url": "https://github.com/lambdaclass/ethrex/commit/02baa16307c9505acf1fdeaa8eb6978181f2980f"
        },
        "date": 1758062107324,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168103383795,
            "range": "± 536828463",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e0c018e8b5c7c400ed14950f3ad3b9e487a15701",
          "message": "feat(l1)!: change `--datadir` to be relative to current working directory (#4521)\n\nMay supersede https://github.com/lambdaclass/ethrex/pull/4514\n\n**Motivation**\n\nCurrently, the datadir is specified relative to the application\ndirectory (i.e. `/Users/<user>/Library/Application Support/` in macOS).\nThis behavior is confusing, since usually path args are relative to the\ncurrent working directory. Also, it seems to be prone to weird edge\ncases like #4514.\n\n**Description**\n\nThis PR changes this behavior by removing the path-prefixing behavior.\nIt also fixes the issue found in #4514, where any spaces in the path are\nreplaced by slashes (even if the path is the default path).",
          "timestamp": "2025-09-17T13:26:41Z",
          "tree_id": "798ff3d42cd3ef475c35c914e2debb96431de82e",
          "url": "https://github.com/lambdaclass/ethrex/commit/e0c018e8b5c7c400ed14950f3ad3b9e487a15701"
        },
        "date": 1758119060732,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169472430600,
            "range": "± 342677130",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a429e2dcec07d64e585e9346efa1b0b7b3b6142c",
          "message": "refactor(l1): decouple version-specific rlpx messages (#4395)\n\n**Motivation**\nWe already know which version of messages such as `Status` and\n`Receipts` we are going to send/expecting to receive, so we should\nhandle them separately instead of having unified logic for both eth/68 &\neth/68 variants. This will save us from having overly-complicated logic\nwhen decoding these messages.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Remove `Receipts` enum message and instead use `Receipts68` &\n`Receipts69` directly\n* Remove `Status` enum message and instead use `StatusMessage68` &\n`StatusMessage69` directly. Add `StatusMessage` trait to allow using\npre-existing status validation logic\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3032",
          "timestamp": "2025-09-17T14:47:12Z",
          "tree_id": "36983a1498fd93c84dea8ea81bedf8b76ce54ab5",
          "url": "https://github.com/lambdaclass/ethrex/commit/a429e2dcec07d64e585e9346efa1b0b7b3b6142c"
        },
        "date": 1758123650167,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169826805348,
            "range": "± 1343230466",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ffd0cae8f20b267c08b718fb7c9731a36058bd30",
          "message": "chore(l1): add branch and commit to script runner (#4517)\n\n**Motivation**\nWe want to add the branch and the commit to the script\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nAdds the branch and commit\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-09-17T15:45:50Z",
          "tree_id": "fc2599c571653fe080577f7c0093ac8cf5bae862",
          "url": "https://github.com/lambdaclass/ethrex/commit/ffd0cae8f20b267c08b718fb7c9731a36058bd30"
        },
        "date": 1758127445824,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 165215985427,
            "range": "± 537420855",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9925c371e90b0f7436c73ee208d9875aab66f4cc",
          "message": "ci(l2): pin rex version in TDX workflow (#4541)\n\n**Motivation**\n\nThe latest Rex commit broke the CI. We should pin a commit to prevent\nfurther breaking changes.\n\n**Description**\n\n- Pins a Rex commit in the TDX workflow.\n- Improves some logs in the integration tests.\n\nCloses None",
          "timestamp": "2025-09-17T21:50:51Z",
          "tree_id": "c12c38ffbf0d7e98cd3ed51e886da52b2790638e",
          "url": "https://github.com/lambdaclass/ethrex/commit/9925c371e90b0f7436c73ee208d9875aab66f4cc"
        },
        "date": 1758149524116,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168150659989,
            "range": "± 232028620",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e795d4de06022d2200bc514faa851f747cf70b90",
          "message": "ci(l2): silent prover slack notifications (#4549)\n\n**Motivation**\n\nWe will be cancelling workflows manually for debugging purposes.\n\n**Description**\n\n- Cancel slack notifications for `Replay proving` and `L2 (SP1\nBackend)`.\n- #4550 was created to re-enable slack notifications.\n\nCloses None",
          "timestamp": "2025-09-18T14:24:51Z",
          "tree_id": "367db0f7f29f32dcd189a0fc57cf4a8e425dc12a",
          "url": "https://github.com/lambdaclass/ethrex/commit/e795d4de06022d2200bc514faa851f747cf70b90"
        },
        "date": 1758208633065,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166223488261,
            "range": "± 543997568",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "800ff398c45a37d27554f1924c1fdb0391ede140",
          "message": "fix(l1): request storage peer leak (#4537)\n\n**Motivation**\n\nWhenever a step of snap sync is completed, the peers should be marked as\nfree. When requesting storage ranges, the function was ending without\nclearing the peers if the block was stale.\n\n**Description**\n\n- Changes the request_storage_ranges function to wait until all spawned\ntasks end and frees those peers before continuing.\n- Adds utility function that frees the peers when they're supposed to be\nfree and logs an error if it finds peers in that inconsistent state.\n\nThis pr shouldn't be merged before thorough testing on Sepolia!",
          "timestamp": "2025-09-18T15:26:23Z",
          "tree_id": "02d3599d6b511ab726a7f077edc5e1535ba27d06",
          "url": "https://github.com/lambdaclass/ethrex/commit/800ff398c45a37d27554f1924c1fdb0391ede140"
        },
        "date": 1758212405677,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 170781190391,
            "range": "± 489702235",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "FredrikaPhililip@proton.me",
            "name": "Suuuuuuperrrrr fred",
            "username": "FredPhilipy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "05ac12c2771f0e3f99003219e9490c15ba23f4de",
          "message": "feat(l2): add panic handling for exec and prove functions (#4525)\n\nFixes #4452\n\nImproves panic handling in the `exec` and `prove` functions across\ndifferent backends to prevent crashes and provide meaningful error\nmessages.\n\n- Added panic catching with `catch_unwind` in replay functions\n- Improved error messages for different backends (SP1, RISC0, Exec)\n- Added proper error context for execution and proving failures\n- Extracted common panic handling logic to helper functions",
          "timestamp": "2025-09-18T16:02:32Z",
          "tree_id": "6b15981e42f06fd869d4aff37ef0c8eebbb6c1b8",
          "url": "https://github.com/lambdaclass/ethrex/commit/05ac12c2771f0e3f99003219e9490c15ba23f4de"
        },
        "date": 1758214569947,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168096456064,
            "range": "± 588155217",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49622509+jrchatruc@users.noreply.github.com",
            "name": "Javier Rodríguez Chatruc",
            "username": "jrchatruc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5d785814013c194eda0156d94634098a3d00edea",
          "message": "fix(l1): fix snap sync edge case where we would not heal certain accounts' storages (#4558)\n\n**Motivation**\n\n~Contains changes from #4537 , should merge that one first~\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Francisco Xavier Gauna <francisco.gauna@lambdaclass.com>",
          "timestamp": "2025-09-18T16:03:40Z",
          "tree_id": "bc78f28526cdf09e7c207ee4466135b38a7b0610",
          "url": "https://github.com/lambdaclass/ethrex/commit/5d785814013c194eda0156d94634098a3d00edea"
        },
        "date": 1758214666483,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 168297226720,
            "range": "± 407086433",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "02330e2a0f36ceab463a7756d596d826070d1309",
          "message": "docs(l1): document rlpx messages (#4560)\n\n**Motivation**\nThe difference between `PeerMessage` and `BackendMessage` is not clear\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nDocument its differences\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses https://github.com/lambdaclass/ethrex/issues/4271",
          "timestamp": "2025-09-18T16:17:19Z",
          "tree_id": "a6b2a07d122eeea9b4eae20163210fdb1ab19f7c",
          "url": "https://github.com/lambdaclass/ethrex/commit/02330e2a0f36ceab463a7756d596d826070d1309"
        },
        "date": 1758215337324,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 164920752402,
            "range": "± 663837081",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "6e09bf00005ffc7b5a830393541efb44ee5db906",
          "message": "feat(replay): allow replay in range from some block to the latest (#4546)\n\n**Motivation**\n\nhttps://github.com/lambdaclass/ethrex/pull/4125\n\n**Description**\n\n- `--from` arg doesn't require `--to` anymore.\n- If `--from` is passed alone, then the `--to` is set to the latest\nblock.",
          "timestamp": "2025-09-18T16:59:00Z",
          "tree_id": "62af38ab15a43e75571cb50ade8bc4b0883ef962",
          "url": "https://github.com/lambdaclass/ethrex/commit/6e09bf00005ffc7b5a830393541efb44ee5db906"
        },
        "date": 1758217977907,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166777964325,
            "range": "± 293946772",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bf862f90e2bbad64a222c4b81a391b1dbe6efaad",
          "message": "docs(l1): discv4 send neighbors chunk size comment (#4532)\n\n**Motivation**\nWe send batches of 8 neighbors to avoid exceeding the package max\nlength, this is not properly explained.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nAdds a better explanation\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses https://github.com/lambdaclass/ethrex/issues/4493",
          "timestamp": "2025-09-18T17:04:20Z",
          "tree_id": "1c5db403a1ebba3aeeddbc5adcf7384da197dc68",
          "url": "https://github.com/lambdaclass/ethrex/commit/bf862f90e2bbad64a222c4b81a391b1dbe6efaad"
        },
        "date": 1758218281632,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167463895610,
            "range": "± 476694859",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "043415bad78f44db22568835b9af42ff2cac63f4",
          "message": "feat(l1): [EIP-7825] Set gas limit cap for tx and block validation (#4309)\n\n**Motivation**\n\nImplement EIP-7825 for Osaka fork.\n\n**Description**\n\nThis pr introduces the limit cap of 16,777,216 gas (2^24) for individual\ntransactions, as indicated in the\n[EIP-7825](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-7825.md).\n\nThis check is used in the `validate_transaction` and `validate_block`\nmethods of the blockchain crate and in `prepare_execution` for\ntransactions in `default_hooks`.\n\nAlso it updates the tests runners for running the tests associated to\nthe eip and it sets the gas_limit field of transactions for running the\nstate tests.\n\nCloses #4154\n\n---------\n\nCo-authored-by: Jeremías Salomón 🐃🐄🥚 <48994069+JereSalo@users.noreply.github.com>\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-09-18T17:18:22Z",
          "tree_id": "8cde4568db4a09f51b4829d9d9f9c8ff967c70b8",
          "url": "https://github.com/lambdaclass/ethrex/commit/043415bad78f44db22568835b9af42ff2cac63f4"
        },
        "date": 1758219180416,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 167014522707,
            "range": "± 1017546810",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "6f1a106a5e57a8eb5098298ec490e7439da1e0af",
          "message": "test(l1): enable snapsync tests (#4561)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-18T17:22:49Z",
          "tree_id": "2595fd572b208c5d472abee295776fdff0ff8b92",
          "url": "https://github.com/lambdaclass/ethrex/commit/6f1a106a5e57a8eb5098298ec490e7439da1e0af"
        },
        "date": 1758219386764,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169277879836,
            "range": "± 408684805",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ea9f3c1e086197a005bc207bd09c0415af80cf5c",
          "message": "chore(l1): pending snapsync comments (#4539)\n\n**Motivation**\nThere were pending comments on snapsync pr that needed to be addressed\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nAddress those comments:\n- Replaced `tmux kill-server` by `kill-session`\n- Removed unnecessary methods on storage\n- Re add serialize peer data test\n- Remove empty function on handshake\n- Simplify node digest\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses https://github.com/lambdaclass/ethrex/issues/4428",
          "timestamp": "2025-09-18T17:34:16Z",
          "tree_id": "bb364be5d5e81d82666fb06c9b9211dfd2cc5f9a",
          "url": "https://github.com/lambdaclass/ethrex/commit/ea9f3c1e086197a005bc207bd09c0415af80cf5c"
        },
        "date": 1758220108664,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 169378320892,
            "range": "± 465608914",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d02c03fc61afd4c43f4baea872140e0abf8ca2c9",
          "message": "feat(l1): added the allocator jemalloc (#4301)\n\n**Motivation**\n\nWe want to properly monitor the ram usage and test if we have improved\nperformance with other allocators. For this, we started with jemalloc.\n\n**Description**\n\n- added the jemallocator to ethrex\n- bumped the jemallocator version used in ethrex-replay\n- added an endpoint to our rpc which allows us to view a flamegraph of\ninuse memory\n- gated jemalloc as well as the profiling behind 2 new feature flags\njemalloc and jemalloc-profiling respectively\n- logging the corrent flobal allocator on start\n\n---------\n\nCo-authored-by: Rodrigo Oliveri <rodrigooliveri10@gmail.com>\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Javier Chatruc <jrchatruc@gmail.com>",
          "timestamp": "2025-09-18T18:23:46Z",
          "tree_id": "4faed4580829c2195d1b9547212c8a00b0810aca",
          "url": "https://github.com/lambdaclass/ethrex/commit/d02c03fc61afd4c43f4baea872140e0abf8ca2c9"
        },
        "date": 1758222982478,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 166834457366,
            "range": "± 299972126",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49622509+jrchatruc@users.noreply.github.com",
            "name": "Javier Rodríguez Chatruc",
            "username": "jrchatruc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "101a11dce6e86332de330699a54dc549df03f651",
          "message": "feat(l1): make rocksdb the default database (#4490)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-18T19:11:59Z",
          "tree_id": "8bcc5e1bf28817f9dd4b386f2ab852b2b1cae21c",
          "url": "https://github.com/lambdaclass/ethrex/commit/101a11dce6e86332de330699a54dc549df03f651"
        },
        "date": 1758225861376,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 90753731838,
            "range": "± 279145361",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b2f5ffef89e08ac81fd91bc1f689438d24dfd7f2",
          "message": "fix(l2): properly update message hashes in committer (#4547)\n\n**Motivation**\n\nWe are prematurely updating the\n[acc_messages](https://github.com/lambdaclass/ethrex/blob/101a11dce6e86332de330699a54dc549df03f651/crates/l2/sequencer/l1_committer.rs#L316)\nvariable in our committer, even though the block may later be discarded\ndue to `stateDiff` or privileged transaction limits.\nThe SP1 workflow is getting stuck in batches 1 or 2 for this reason. We\nhad not seen the error before because we weren’t spamming enough\ntransactions to hit the limit.\nI also noticed that, since we are spamming 3000 privileged transactions\nin our integration tests, 1000 retries to obtain a privileged receipt\nfalls short.\n\nSuccessful run\n[here](https://github.com/lambdaclass/ethrex/actions/runs/17838300648/job/50721020331).\n\n**Description**\n\n- Displays the sequencer logs in the SP1 workflow.  \n- Increases the number of retries in `wait_for_transaction_receipt` to\n10000.\n- Correctly calculates the message hashes of the batch.  \n- Re-enables the prover workflows on pushes to `main`.\n\nCloses #4550",
          "timestamp": "2025-09-18T23:09:12Z",
          "tree_id": "6c7141c1162aa5ab4a66734581288d86d3979b43",
          "url": "https://github.com/lambdaclass/ethrex/commit/b2f5ffef89e08ac81fd91bc1f689438d24dfd7f2"
        },
        "date": 1758239720751,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 91400296857,
            "range": "± 595892549",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "damian.ramirez@lambdaclass.com",
            "name": "Damian Ramirez",
            "username": "damiramirez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "468ec140e2182e98b8215c1c6ac36d2d0043471c",
          "message": "perf(l1): save code hash during account insertion and state healing (#4487)\n\n**Motivation**\n\nImprove bytecode download time saving code hash in files\n\n**Description**\n\nWhen we are doing snapsync, we see that we waste too much time\ndownloading bytecode since we are traversing the trie looking for the\ncode hash. Before this step, we are inserting the account state to the\ntrie so we could take advantage of this and start saving the code hash\nin a buffer. When the buffer exceeds the chunk size, flush it to a file.\n\nWe have some constant values ​​that we can adjust and see the numbers.\n- `BYTECODE_CHUNK_SIZE`\n- `CODE_HASH_WRITE_BUFFER_SIZE`\n\nHoodi\n- `main` - `bytecodes progress: downloaded: 719368, elapsed: 00h 03m 28s\n00ms`\n- `pr` - `bytecodes progress: downloaded: 710598, elapsed: 00h 00m 32s\n00ms`\n\nSepolia\n- `main` - `bytecodes progress: downloaded: 11090586, elapsed: 01h 43m\n58s 06ms`\n- `pr` - `bytecodes progress: downloaded: 7979995, elapsed: 00h 07m 59s\n00ms`\n\nMainnet\n- `main` - `bytecodes progress: downloaded: 4930763, elapsed: 03h 15m\n14s 11ms`\n- `pr` - `bytecodes progress: downloaded: 1813931, elapsed: 00h 02m 50s\n00ms`\n---\n\nCloses #4474\n\n---------\n\nCo-authored-by: fedacking <francisco.gauna@lambdaclass.com>\nCo-authored-by: Javier Chatruc <jrchatruc@gmail.com>",
          "timestamp": "2025-09-18T23:23:51Z",
          "tree_id": "c67c757cffcb5468b9801224bd25d0d9e1eae15c",
          "url": "https://github.com/lambdaclass/ethrex/commit/468ec140e2182e98b8215c1c6ac36d2d0043471c"
        },
        "date": 1758240462398,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 91444886826,
            "range": "± 267700133",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "52646071+Peponks9@users.noreply.github.com",
            "name": "josé v",
            "username": "Peponks9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5a83b191fe7b05b22d23aa172c5f3d757ec8a2fd",
          "message": "chore(l1): remove `#[allow(dead_code)]` attributes throughout codebase (#4530)\n\n- Removed `#[allow(dead_code)]` from various functions and structs where\nno longer needed.\n- Added explanatory comment for the remaining `#[allow(dead_code)]` on\nFeesDetails struct in tests.rs.\n\n\nResolves #3968",
          "timestamp": "2025-09-19T12:56:00Z",
          "tree_id": "0297954ac4f3d2b415cd21e273f1ea215afaeddf",
          "url": "https://github.com/lambdaclass/ethrex/commit/5a83b191fe7b05b22d23aa172c5f3d757ec8a2fd"
        },
        "date": 1758289201695,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 92995623530,
            "range": "± 811245515",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "44e5b59b3f16b2561e754c41137071612eb64795",
          "message": "feat(l1): make `jemalloc` the default global allocator (#4575)\n\n**Motivation**\n\n`jemalloc` reduce RAM usage in ~80% during snapsync\n\n**Description**\n\nThis PR adds the `jemalloc` feature flag to the default cmd features.",
          "timestamp": "2025-09-19T13:12:36Z",
          "tree_id": "b2326a4a5e0fc384e3453acabfe39434791379e3",
          "url": "https://github.com/lambdaclass/ethrex/commit/44e5b59b3f16b2561e754c41137071612eb64795"
        },
        "date": 1758290508480,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 92311583970,
            "range": "± 602130445",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "884247e87cd4127ad1a6b444b99de67494481da0",
          "message": "fix(l1): fetch transactions from mempool on `GetTransactionByHash` & `GetRawTransaction` rpc endpoints (#4533)\n\n**Motivation**\n`GetTransactionByHash` & `GetRawTransaction` should fetch pooled\ntransactions from the mempool if they are not yet finalized.\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* When handling `GetTransactionByHash` & `GetRawTransaction` we should\nfetch transactions from the mempool if they are not in the store\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None, needed for #3844",
          "timestamp": "2025-09-19T14:11:17Z",
          "tree_id": "e37c06fa5537a93d83cb8ffaf6a62a05d2103d52",
          "url": "https://github.com/lambdaclass/ethrex/commit/884247e87cd4127ad1a6b444b99de67494481da0"
        },
        "date": 1758293832024,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 96008454766,
            "range": "± 492065644",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44068466+SDartayet@users.noreply.github.com",
            "name": "SDartayet",
            "username": "SDartayet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "1d9fdf41e0e549db862112eb8e618eff85220f2a",
          "message": "feat(l1): update EEST to version 5.0 (#4484)\n\n**Motivation**\n\nKeeping up to date with the latest EF tests for Osaka.\n\n**Description**\n\nThis PR updates the fixture URL for the blockchain and state test\nrunners. It also adds some necessary code for some of the tests to pass,\nand skips those which are poorly contructed.",
          "timestamp": "2025-09-19T14:29:52Z",
          "tree_id": "aab6f5dfb139ef6fafc0db203c3571b2efbf863f",
          "url": "https://github.com/lambdaclass/ethrex/commit/1d9fdf41e0e549db862112eb8e618eff85220f2a"
        },
        "date": 1758295095473,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 90343054919,
            "range": "± 247304038",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "09c4597cf3a5d3f9bf12577d1fe74d22204c647b",
          "message": "ci(l1): update daily Hive job to use execution-spec-tests@v5.0.0 (#4380)\n\n**Motivation**\nAdds Fusaka tests\n\n**Description**\n- Updates to\nhttps://github.com/ethereum/execution-spec-tests/releases/tag/v5.0.0\n- Include Osaka tests\n- Unrelated: remove risc0 and SP1 dependency",
          "timestamp": "2025-09-19T16:03:26Z",
          "tree_id": "05dce60f626a2a9f9798a2f1ef47ca3d6460f578",
          "url": "https://github.com/lambdaclass/ethrex/commit/09c4597cf3a5d3f9bf12577d1fe74d22204c647b"
        },
        "date": 1758300683459,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 90916353791,
            "range": "± 981239684",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "56888fb00a7392b0afe6a52274c8b85c451eeb96",
          "message": "feat(l2): implement rip-7740 in l2 genesis (#4567)\n\n**Motivation**\n\nImplement RIP-7740 improving compatibility with existing projects that\nrely on these factories\n\n**Description**\n\n- Hardcode the bytecode for the \"Deterministic Deployment Proxy\"\n- For create2deployer we clone the repo and compile the contract\n- Finally we add to the genesis accounts:\n- 0x4e59b44847b379578588920cA78FbF26c0B4956C ->\nDETERMINISTIC_DEPLOYMENT_CODE\n- 0x914d7Fec6aaC8cd542e72Bca78B30650d45643d7 ->\nDETERMINISTIC_DEPLOYMENT_CODE\n   - 0x13b0D85CcB8bf860b6b79AF3029fCA081AE9beF2 -> CREATE2DEPLOYER_CODE\n- Because of possible licensing issues with `createx` it was not added\nin this PR, I created issue #4571 to track it\n\ncloses #4552",
          "timestamp": "2025-09-19T17:49:01Z",
          "tree_id": "386e7a493404d07350656f08417e17b2b1793137",
          "url": "https://github.com/lambdaclass/ethrex/commit/56888fb00a7392b0afe6a52274c8b85c451eeb96"
        },
        "date": 1758306977194,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 90255997890,
            "range": "± 348417619",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "38e0ffc4487548a7b89de02b8b2b13c791a84682",
          "message": "refactor(l1): use `Path` instead of `String` for `--datadir` (#4543)\n\n**Motivation**\n\nWe are currently using `String` when dealing with file paths. This\npushes error-handling later into the node's lifecycle, which could delay\nsome errors.\n\n**Description**\n\nThis PR changes the CLI flag `--datadir` to receive a `PathBuf`, and\nalso changes all uses of the flag to receive a `&Path` or similar type.",
          "timestamp": "2025-09-19T19:01:16Z",
          "tree_id": "6272d7a8c23a1c2e94bfc90322a5e634d70b1577",
          "url": "https://github.com/lambdaclass/ethrex/commit/38e0ffc4487548a7b89de02b8b2b13c791a84682"
        },
        "date": 1758311212107,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 88991240567,
            "range": "± 761483836",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "676689750a877811611f5cf826e0efc7dfb4a3a3",
          "message": "chore(l1): improve engine API logs (#4578)\n\n**Motivation**\n\n`engine_newPayload` logs don't include the block number, which is an\nimportant part of a block's context.\n\n**Description**\n\nThis PR changes `engine_newPayload`-related logs to include both the\nhash and number, as log attributes instead of being embedded, which is\nmore idiomatic.",
          "timestamp": "2025-09-22T14:51:29Z",
          "tree_id": "5989edc6408188938b2f7527fc39bf66cbf24516",
          "url": "https://github.com/lambdaclass/ethrex/commit/676689750a877811611f5cf826e0efc7dfb4a3a3"
        },
        "date": 1758556414127,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 90659061499,
            "range": "± 627699476",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ab855bc63c3043254474c6cb5d97fb4c6edbe435",
          "message": "fix(l1): wrong home path in sync tool makefile (#4593)\n\nThe Makefile was creating a '~' directory by trying to use the shell\nidiom for HOME. Replace it by the proper environent variable.",
          "timestamp": "2025-09-22T14:54:29Z",
          "tree_id": "e1a04b61d9f2734805f575935fe076a0dfb2bc62",
          "url": "https://github.com/lambdaclass/ethrex/commit/ab855bc63c3043254474c6cb5d97fb4c6edbe435"
        },
        "date": 1758556719036,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 89605569067,
            "range": "± 214059444",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7b992b826b88272de4c72c3def5531e35e5ad7b6",
          "message": "ci(l1): remove stale comment (#4597)\n\nThis comment is stale. We are still using our fork because we need some\nfixes that it introduces related to pre-merge data included in some\ntests.",
          "timestamp": "2025-09-22T14:59:13Z",
          "tree_id": "39ff296d76118079e77c69660038cee64f92d637",
          "url": "https://github.com/lambdaclass/ethrex/commit/7b992b826b88272de4c72c3def5531e35e5ad7b6"
        },
        "date": 1758556881164,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 90219255051,
            "range": "± 535993275",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "51405295da402be18ddf73c1292646cd47aac1bc",
          "message": "chore(l1): increased MISSING_SLOTS_PERCENTAGE to avoid reorgs (#4601)\n\n**Motivation**\n\nCurrently, when testing snapsync, we aren't prepared to handle a reorg.\nTo try to avoid snasyncing to blocks that can be reorged, we lowered the\namount of blocks we advanced in `update_pivot`.\n\n**Description**\n\n- Lowered `MISSING_SLOTS_PERCENTAGE` to 0.8 from 0.9\n- Added comment explaining `MISSING_SLOTS_PERCENTAGE`",
          "timestamp": "2025-09-22T16:23:41Z",
          "tree_id": "af4336c5efcde1ba44ea23ff4991427d797c123f",
          "url": "https://github.com/lambdaclass/ethrex/commit/51405295da402be18ddf73c1292646cd47aac1bc"
        },
        "date": 1758561065671,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 88686744473,
            "range": "± 791058200",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "241f79d9e993a221c5a9a9ab48c28d9c17c90835",
          "message": "perf(levm): refactor `bls12_g1add` to use lambdaworks (#4500)\n\n**Motivation**\n\nBLS12 computation is slow.\n\n**Description**\n\nReplace the BLS12 library with `lambdaworks`.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-22T16:29:52Z",
          "tree_id": "afd67720fc9ba20dbe8902806fa2a36a8aa725b4",
          "url": "https://github.com/lambdaclass/ethrex/commit/241f79d9e993a221c5a9a9ab48c28d9c17c90835"
        },
        "date": 1758561437208,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 89495250672,
            "range": "± 910555262",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3c9bb4cf648872fd131f85f1b79cfba44e1b029d",
          "message": "chore(l1): prune mempool (#4588)\n\n**Motivation**\nMempool grows indefinitely\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nNow the mempool has a maximum size, and after it is reached, the oldest\ntransaction is removed.\nFor this a vector with the hashes is added, which acts as a queue when\nremoving the oldest, but also allows removing any tx, since there are\nother mechanisms for removing txs from the mempool.\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses https://github.com/lambdaclass/ethrex/issues/4238\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-22T21:11:32Z",
          "tree_id": "a3b380ade1307fd137d47fb3d27e14ee0bd3437d",
          "url": "https://github.com/lambdaclass/ethrex/commit/3c9bb4cf648872fd131f85f1b79cfba44e1b029d"
        },
        "date": 1758578289547,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 92049336920,
            "range": "± 222010178",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "569783bea128302611d20b80980e768fbe25c44f",
          "message": "fix(l1): `RpcTransaction` representation for pending transactions (#4583)\n\n**Motivation**\nPR #4533 Enabled mempool transactions to be fetched by rpc endpoints\n`GetTransactionByHash` and `GetRawTransaction`, but it used default\nvalues instead of null values in the representation for the block hash,\nblock number, and transaction index fields. This doesn't match the spec\n(geth) and caused problems when running hive tests.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Make `block_hash` field of `RpcTransaction` optional\n* Use null values for block hash, number and tx index when building\n`RpcTransaction`s from pending transactions\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None, but is needed for #3844\n\nSpecial thanks to @cdiielsi for pointing this out!",
          "timestamp": "2025-09-23T08:11:06Z",
          "tree_id": "9f8a2c3a448ce2c5a19bb46cd86cde330695ee93",
          "url": "https://github.com/lambdaclass/ethrex/commit/569783bea128302611d20b80980e768fbe25c44f"
        },
        "date": 1758617857494,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 90893256117,
            "range": "± 216033035",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5dbdb33e57ad44f9ea012145fefb1330658824c3",
          "message": "feat(replay): replay use add block instead of stateless execution (#4396)\n\n**Motivation**\n\n- Use ethrex replay with `add_block` so we can measure the exact same\nthing that we measure in normal runs.\n\n**Description**\n\nIf we want a samply of `add_block` we can do this:\n`cargo build --profile release-with-debug -p ethrex-replay`\n`samply record target/release-with-debug/ethrex-replay block --rpc-url\n'http://65.109.97.102:8545' --execute --no-zkvm`\n\nIf searching for `add_block` in samply we will see something like this:\n<img width=\"1869\" height=\"936\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/dd128dc2-422c-4c04-bf9c-8eded8838621\"\n/>\n\n\nWe had to add feature flag replay so that this functionality works with\nreth nodes. Otherwise it only works with ethrex nodes that behave the\nsame as us and therefore require the exact same trie nodes and codes.",
          "timestamp": "2025-09-23T13:21:47Z",
          "tree_id": "988e5abc48da66cad1fd6d1068471feacfc212c0",
          "url": "https://github.com/lambdaclass/ethrex/commit/5dbdb33e57ad44f9ea012145fefb1330658824c3"
        },
        "date": 1758636687391,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 92024452609,
            "range": "± 7149496925",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a8a1a5e569514eccd8b381398358c9c8c18a447c",
          "message": "perf(levm): refactor `bls12_g2add` to use lambdaworks (#4538)\n\n**Motivation**\n\nBLS12 computation is slow.\n\n**Description**\n\nReplace the BLS12 library with lambdaworks.",
          "timestamp": "2025-09-23T14:18:00Z",
          "tree_id": "59375dc4f21c9820dbe105052fc2eeb282260120",
          "url": "https://github.com/lambdaclass/ethrex/commit/a8a1a5e569514eccd8b381398358c9c8c18a447c"
        },
        "date": 1758639852002,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 90173913329,
            "range": "± 332897322",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "52646071+Peponks9@users.noreply.github.com",
            "name": "josé v",
            "username": "Peponks9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "83dbbb1d36a005513de0eeadbbce1341c05e8c8f",
          "message": "chore(l1): replace `Result<T, String>` with `Result<T, NodeError>` (#4591)\n\n**Motivation**\n\nThis PR addresses issue #4167 by replacing non-standard `Result<T,\nString>` with `Result<T, Error>` in the networking types module. The\ngoal is to improve error handling with a structured error type for\nbetter debugging, type safety, and adherence to Rust best practices.\n\n**Description**\n\n- Introduced a new `NodeError` enum in `crates/networking/p2p/types.rs`\nwith variants for specific error cases (e.g., `InvalidFormat`,\n`ParseError`, `RLPDecodeError`).\n- Updated `Result<T, String>` to `Result<T, NodeError>` in `FromStr` for\n`Node`, and methods like `from_enode_url`, `from_enr_url`, `enr_url`,\n`from_node`, `update_seq`, `set_fork_id`, and `sign_record`.\n\n**Tests**\n- All tests in `ethrex-p2p` pass 52/52.\n\nCloses #4167",
          "timestamp": "2025-09-23T14:45:52Z",
          "tree_id": "f04faaf59b509cf6da61ae3dd3b83cf787a19550",
          "url": "https://github.com/lambdaclass/ethrex/commit/83dbbb1d36a005513de0eeadbbce1341c05e8c8f"
        },
        "date": 1758641565142,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 91912562468,
            "range": "± 614337469",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7bb40f56ce9f3f41548ba6e29cc111df0b9123e8",
          "message": "perf(levm): improve opcode table setup based on fork, instruction fetching, stack push_zero (#4579)\n\n**Motivation**\n\n- Changes the pc mutation to be more localized and opcodes instead\nreturn a setpc if they need to set the pc to an absolute value.\n- Changed the opcode table setup to be dynamic based on the given fork,\nso we avoid some fork checks at runtime. This could be extended further\nwith more opcodes that have fork checks within, such as create, or gas\ncalculation functions, but for this first pr i kept it simple. Removing\nthe branches helps the branch predictor and results in better\nperformance.\n- Added push_zero to the stack\n\n\nStatus: benching\n\nCloses #issue_number\n\n<img width=\"2560\" height=\"2235\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/06780227-353c-4abc-859f-416e3a853648\"\n/>",
          "timestamp": "2025-09-23T15:13:02Z",
          "tree_id": "a765c657d33bdcb97788214bd431702c3c6ec1f8",
          "url": "https://github.com/lambdaclass/ethrex/commit/7bb40f56ce9f3f41548ba6e29cc111df0b9123e8"
        },
        "date": 1758643176848,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 88671510092,
            "range": "± 1000224236",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3f3d00b8d7d70bd813da95e546ed3527938fdfb9",
          "message": "fix(l1,l2): avoid potential blocking code in p2p (#4531)\n\n**Motivation**\nThere are different parts of the code that could potentially block\nexecution.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nAdds spawn blocking so that the execution is not blocked\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses https://github.com/lambdaclass/ethrex/issues/4494",
          "timestamp": "2025-09-23T15:18:53Z",
          "tree_id": "bace75d258fcc60bced47377d565cfe9ab01070e",
          "url": "https://github.com/lambdaclass/ethrex/commit/3f3d00b8d7d70bd813da95e546ed3527938fdfb9"
        },
        "date": 1758643588644,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 90436910886,
            "range": "± 318528273",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7d758fe7e68ba3adc8e2599fc520939d97bf3f5e",
          "message": "fix(l2): add EthClient config to proof_sender and proof_verifier (#4607)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nCurrently, proof sender and proof verifier doesn't have control over max\ngas price, retries and so.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nReplace the simple `EthClient::new_with_multiple_urls` with\n`EthClient::new_with_config`\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #4562",
          "timestamp": "2025-09-23T16:18:50Z",
          "tree_id": "726097d11453cc5b6d67e1dfd11d888850c173bf",
          "url": "https://github.com/lambdaclass/ethrex/commit/7d758fe7e68ba3adc8e2599fc520939d97bf3f5e"
        },
        "date": 1758647256854,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 90201676367,
            "range": "± 303702251",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "87ec6cdb8952e510e656b31aac6e8c7dec102992",
          "message": "fix(l1): fixed edge case for missing accounts in state trie in storage healing (#4606)\n\n**Motivation**\n\nThe storage healing algorithm was assuming that missing accounts in the\nstate trie were a bug. Due to an edge case some accounts can be deleted\nfrom state trie. As such, the code now filters healed accounts that\ndon't exist in the trie.\n\n**Description**\n\n- Changed storage healing `get_initial_downloads` to filter healed\naccounts that aren't present in the trie.\n- Changed p2p logging to include header hash",
          "timestamp": "2025-09-23T18:24:17Z",
          "tree_id": "5eea0a647d13ffc4a77908323b4b09ef10c9e6b7",
          "url": "https://github.com/lambdaclass/ethrex/commit/87ec6cdb8952e510e656b31aac6e8c7dec102992"
        },
        "date": 1758654668632,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 88132799366,
            "range": "± 177384049",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "448cab70ba986af5377347c61f434447b9de7b0c",
          "message": "chore(l1): reduce range of account request to reduce memory overhead (#4584)\n\n**Motivation**\n\nReduce memory usage by reducing the chunks\n\n**Description**\n\nIt just reduce the calculation for file size to 128MB instead of 512MB",
          "timestamp": "2025-09-23T20:08:09Z",
          "tree_id": "6c9cbf7c3400bb2b597ad8a9e35b638f97146b7d",
          "url": "https://github.com/lambdaclass/ethrex/commit/448cab70ba986af5377347c61f434447b9de7b0c"
        },
        "date": 1758661030031,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 88884437013,
            "range": "± 366722431",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "011748f154343d390ffd3696edd13c7560cf4aff",
          "message": "feat(replay): support public L2 networks blocks/batches replay (#4548)\n\n**Motivation**\n\nWe want to run `ethrex_replay` on ethrex L2 chains. This contains the\nminimal changes to support them.\n\n**Description**\n\n- Add conditional use of crates and functions under the `l2` feature\nflag to solve lint problems.\n- Add the required L2 fields when running under the `l2` feature flag.\n- Add new network enum type `L2Chain`.\n  - This is for replay only for now.\n- Contains the `chain_id` and the genesis is an empty one but with the\n`chain_id` setted.\n\n**How to test**\n\nYo will need an L2 `RPC_URL` running ethrex\n\nExecute a block:\n```\ncargo r -r -p ethrex-replay --features l2 -- l2 block --block <N> --execute --rpc-url <RPC_URL>\n```\n\nExecute a batch:\n```\ncargo r -r -p ethrex-replay --features l2 -- l2 batch --batch <N> --execute --rpc-url <RPC_URL>\n```\n\nProve a block:\n```\ncargo r -r -p ethrex-replay --features l2 -- l2 block --block <N> --prove --rpc-url <RPC_URL>\n```\n\nProve a batch:\n```\ncargo r -r -p ethrex-replay --features l2 -- l2 batch --batch <N> --prove --rpc-url <RPC_URL>\n```\n\nCloses #4403",
          "timestamp": "2025-09-24T12:46:02Z",
          "tree_id": "b203a079e1c1d987e3f2464f8eb29e30ea62feab",
          "url": "https://github.com/lambdaclass/ethrex/commit/011748f154343d390ffd3696edd13c7560cf4aff"
        },
        "date": 1758720710511,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 89773531641,
            "range": "± 230800540",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pdeymon@fi.uba.ar",
            "name": "Pablo Deymonnaz",
            "username": "pablodeymo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1d4ae8fad5a8511742c26f89be8e252825477e6b",
          "message": "refactor(levm): improve ecrecover (#4627)\n\n**Motivation**\n\nThis PR improves readibility of `ecrecover` of levm.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-24T13:28:19Z",
          "tree_id": "417734e907f999f49cc1ccf5aabc411536a61020",
          "url": "https://github.com/lambdaclass/ethrex/commit/1d4ae8fad5a8511742c26f89be8e252825477e6b"
        },
        "date": 1758723331114,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 88753641821,
            "range": "± 213932667",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pdeymon@fi.uba.ar",
            "name": "Pablo Deymonnaz",
            "username": "pablodeymo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "815b58439a556aa3da42311fbdd11771f3da86db",
          "message": "deps(l2): remove unused crates in patch.crates-io section (#4540)\n\n**Motivation**\n\nThere where unused crates that where patched in `patch.crates-io`\nsection in `crates/l2/prover/src/guest_program/src/sp1/Cargo.toml`.\n\n**Description**\n\nThis PR removes that unused crates in the patch section.\n\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-24T14:25:20Z",
          "tree_id": "fc3ca6e767462973578b947a8b1eeeb6c187c255",
          "url": "https://github.com/lambdaclass/ethrex/commit/815b58439a556aa3da42311fbdd11771f3da86db"
        },
        "date": 1758727443679,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 91625278134,
            "range": "± 707001828",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49622509+jrchatruc@users.noreply.github.com",
            "name": "Javier Rodríguez Chatruc",
            "username": "jrchatruc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "beb31d8f564c723a226e6d29fd5e09eddd9b8fe8",
          "message": "chore(l1, l2): use version, authors, documentation and edition fields from the root cargo toml for all crates (#4633)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Pablo Deymonnaz <pdeymon@fi.uba.ar>",
          "timestamp": "2025-09-24T16:08:20Z",
          "tree_id": "024c48bb3df679f2e58e9fb73e2a6ffa5fd56d39",
          "url": "https://github.com/lambdaclass/ethrex/commit/beb31d8f564c723a226e6d29fd5e09eddd9b8fe8"
        },
        "date": 1758732864840,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 88203199127,
            "range": "± 264663307",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "cfb805c6c70df1f6172f1982c9ed8952b7399d28",
          "message": "chore(l1): fix memory spike when transitioning from snap to fullsync (#4630)\n\n**Motivation**\n\nWe were seeing spikes of more than 20GB of ram transitioning from\nsnapsync to full sync\n\n**Description**\n\nThis PR remove the call to `into_fullsync` during the end of snap sync.\nThat call was unnecessary, `into_fullsync` is used if we try to start a\nsnap sync and we detect we are close to the head (<64 blocks) we move\nthe headers to the fullsync state in that case, but in this one we\nalready finished snapsync so we just need to start fullsync from the\nlast known head.",
          "timestamp": "2025-09-24T18:00:34Z",
          "tree_id": "7232c44213e027cdfd16c3b7e7a266540bf32f3e",
          "url": "https://github.com/lambdaclass/ethrex/commit/cfb805c6c70df1f6172f1982c9ed8952b7399d28"
        },
        "date": 1758739627660,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 89189917060,
            "range": "± 464392448",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "df39b4bbc817b18ba7bb7f6c717c03d4e74f4f46",
          "message": "fix(l2): common bridge dependencies (#4637)\n\n**Motivation**\n\nReentrancyGuard was removed from the\n`openzeppelin/contracts-upgradable`. See\n[this](https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/commit/4a073ac393f1c1495391b810b2c7b6b96de28137#diff-06572a96a58dc510037d5efa622f9bec8519bc1beab13c9f251e97e657a9d4ed)\n\nFor now we pin the commit to the one we were using until we decide what\nto do.\n\n**Description**\n\nAdd to the `git_clone` an optional commit to checkout\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: avilagaston9 <gaston.avila@lambdaclass.com>",
          "timestamp": "2025-09-24T19:31:13Z",
          "tree_id": "9af7ca03c95468fd4bfa1fc3cf89695e6823b478",
          "url": "https://github.com/lambdaclass/ethrex/commit/df39b4bbc817b18ba7bb7f6c717c03d4e74f4f46"
        },
        "date": 1758745300311,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 88599624461,
            "range": "± 171647185",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f68c0015ff7357eda09ba582c516f5d5e14e9b89",
          "message": "fix(l1): remove \"background_threads\" feature in jemallocator (#4636)\n\n**Motivation**\n\nAny `ethrex` binary run in macOS starts by printing the message:\n\n```text\n<jemalloc>: option background_thread currently supports pthread only\n```\n\nThis is confusing, especially since the node appears to work as normal.\n\n**Description**\n\nThis PR removes the \"background_threads\" feature, which isn't supported\non macOS, it seems. It still enables it for linux, however.",
          "timestamp": "2025-09-24T20:58:35Z",
          "tree_id": "770950e05c865b671516f5d6eb2fc123791739af",
          "url": "https://github.com/lambdaclass/ethrex/commit/f68c0015ff7357eda09ba582c516f5d5e14e9b89"
        },
        "date": 1758750537889,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 89017776910,
            "range": "± 314873948",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a454c4762f733b495b65025764f7c518dd850f32",
          "message": "ci(l1): set --docker.output for running hive tests in ci (#4626)\n\n**Motivation**\n\nHive test _Invalid Missing Ancestor Syncing ReOrg, Transaction Nonce,\nEmptyTxs=False, CanonicalReOrg=True, Invalid P9 (Cancun)_ has been\ndetected as flaky in different prs\n([here](https://github.com/lambdaclass/ethrex/actions/runs/17778855183/job/50533720000?pr=4402)\nand\n[here](https://github.com/lambdaclass/ethrex/actions/runs/17919605582/job/50953659676?pr=4576))\nbut logs aren't specific on why the test failed. In this\n[pr](https://github.com/lambdaclass/ethrex/pull/4528) I had the test in\nquestion run several times but it never failed, so there was no way to\nfigure out why it is flaky. Having the ci show more specific logs should\nbe useful to have more information on flaky tests for any pr and any\ntest.\n\n**Description**\n\nSet `--docker.output` for running the hive tests on the ci.\n\nCloses no issue but it's related to #3105",
          "timestamp": "2025-09-24T21:48:06Z",
          "tree_id": "a10cd7c5740e0e77e59cdf8b0b0a4c34a7c5b18c",
          "url": "https://github.com/lambdaclass/ethrex/commit/a454c4762f733b495b65025764f7c518dd850f32"
        },
        "date": 1758753443742,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 90719776812,
            "range": "± 446608091",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "65c96855242a0ec0d9c89b30b5a04034fd5b23d4",
          "message": "fix(replay): use get block by number instead of get raw block (#4634)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nIf the node that we are using as an RPC doesn't expose debug endpoints\nethrex replayer won't work because it asks for the raw block. The\nprogram got stuck and we didn't know why, we now know.\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-24T22:05:33Z",
          "tree_id": "e118cd07ef7ad1d169ba13c8e957c0ddd3fbc62e",
          "url": "https://github.com/lambdaclass/ethrex/commit/65c96855242a0ec0d9c89b30b5a04034fd5b23d4"
        },
        "date": 1758754419002,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 90550591740,
            "range": "± 1100329463",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "68beb0c114f2d43299e2264ec8c77f7ca6ac8710",
          "message": "ci(l1,l2): free unused packages on github runners (#4647)\n\n**Motivation**\n\nThe CI is broken due to not having space left to run the jobs\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-25T14:40:33Z",
          "tree_id": "119c291dd045aef130339565b28a1cab6dce7bb4",
          "url": "https://github.com/lambdaclass/ethrex/commit/68beb0c114f2d43299e2264ec8c77f7ca6ac8710"
        },
        "date": 1758814241749,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 87481088505,
            "range": "± 174999943",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49622509+jrchatruc@users.noreply.github.com",
            "name": "Javier Rodríguez Chatruc",
            "username": "jrchatruc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "44d5c6c16db91d84cb2c201287eea6dfb53f3fa3",
          "message": "chore(l1, l2): install protoc as a dependency for release workflows (#4646)\n\n**Motivation**\n\nOur last attempt at making a release failed because protobuf is now a\ndependency for building (see [this\naction](https://github.com/lambdaclass/ethrex/actions/runs/17991396735/job/51181982770)).\nThis should fix it.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-25T15:35:28Z",
          "tree_id": "31737115014a18a85d0401a63f2ae83c9b22eea4",
          "url": "https://github.com/lambdaclass/ethrex/commit/44d5c6c16db91d84cb2c201287eea6dfb53f3fa3"
        },
        "date": 1758817541346,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 88676063423,
            "range": "± 1041105222",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "316b9f3c5b16554299e7538b3bc9a50de4276b4c",
          "message": "fix(replay): fix execution with eth_getProof (#4616)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nExecution with eth_getProof had some caveats regarding the trie. For\nmaking it work we need to do 2 things:\n1. Pre-inject possible nodes to the trie\n2. Make a modification to the MPT in case we don't find a missing node.\n\nThe `1` was already done in the code but wasn't working properly, the\nproblem was just that the root node wasn't being inserted into the nodes\nthat were used for building the trie that's used for getting potential\nchild nodes.\n\nThe 2 is a modification that we don't want in our MPT so we didn't carry\nalong [with that](https://github.com/lambdaclass/ethrex/pull/2952).\nHowever, in execution without zkVM we have the possibility of inserting\narbitrary nodes with the hashes that we want and RLP content that\ndoesn't necessarily match to that hash, so we can \"deceive\" the trie\ninto thinking it has some nodes when in fact they are just dummy nodes.\nHow can we use it to our advantage? We insert dummy branch nodes in\nevery single place where a storage node is being referenced but it's\nmissing. This way, if we want to do a trie restructuring we will find\nthe node that otherwise we wouldn't have found, and the good thing is\nthat we don't care about the contents of this node because they won't\nchange, in this particular case the node will be referenced by a one\nnibble extension node. For more info read\nhttps://github.com/kkrt-labs/zk-pig/blob/main/docs/modified-mpt.md#modified-mpt-implementation\n\n\n\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-25T15:53:32Z",
          "tree_id": "4f24652e33e88f4d7e6f60cd39ec87d6f2a3c1ca",
          "url": "https://github.com/lambdaclass/ethrex/commit/316b9f3c5b16554299e7538b3bc9a50de4276b4c"
        },
        "date": 1758818579469,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 89560117426,
            "range": "± 259275840",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "158164b90f9831be742e44cb5392c0008b7d2828",
          "message": "fix(l1): parse storage slots as numbers in `eth_getStorageAt` (#4644)\n\n**Motivation**\n\nStorage slot keys are numbers, and the JSON-RPC API treats them as such.\n\n**Description**\n\nThis PR changes the way the storage slot is deserialized in\n`eth_getStorageAt`, so numbers with less than 32 bytes, like \"1\" and\n\"0x1\", are accepted.",
          "timestamp": "2025-09-25T17:06:48Z",
          "tree_id": "90783729c98a7e679e9dc144c764dce91eec25cc",
          "url": "https://github.com/lambdaclass/ethrex/commit/158164b90f9831be742e44cb5392c0008b7d2828"
        },
        "date": 1758823115294,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 88328545687,
            "range": "± 203515036",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0daee437c4730a9dc313e90153f472aaea8af039",
          "message": "fix(replay): improve rate limit when using eth_getProofs (#4632)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nWith the previous rate limit we were so slow that we couldn't even\nexecute replay with eth_getProof with a geth full node because it took\nso long that the state was pruned (after 25min).\nThis new rate limit logic is a sweet spot, I had to make some changes to\noriginal logic because it had some flaws.\n\nResults: Execution can go from more than an hour to a few minutes\nbecause of this",
          "timestamp": "2025-09-25T17:41:50Z",
          "tree_id": "bf9133bfbfb2a0d560b9c0167b6fc74ed4d26ce0",
          "url": "https://github.com/lambdaclass/ethrex/commit/0daee437c4730a9dc313e90153f472aaea8af039"
        },
        "date": 1758825091489,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 89914459493,
            "range": "± 163093176",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bc1d7814eb8453c7eade02967aa9d46c97520340",
          "message": "chore(l1): format elapsed time in snap sync slack message (#4649)\n\n**Examples**\n\n<img width=\"1166\" height=\"920\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/45d7cc13-2338-4bb3-a3ad-64035e336570\"\n/>\n\n<img width=\"516\" height=\"168\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/6fa0f3a9-d885-488f-b1d3-bdd6532355d7\"\n/>",
          "timestamp": "2025-09-25T17:59:16Z",
          "tree_id": "af2408c5a95252ea099016b46b79ba63cc899c9c",
          "url": "https://github.com/lambdaclass/ethrex/commit/bc1d7814eb8453c7eade02967aa9d46c97520340"
        },
        "date": 1758826366427,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 88950232449,
            "range": "± 694406396",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "dfb8902f6d3e0f7ed3970daa9cf08e42dc18eb44",
          "message": "refactor(l1,l2): remove keccak-hash crate (#4542)\n\n**Motivation**\nWe want to stop using the keccak-hash crate and implement it with sha3.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nRemoved the keccak-hash crate and implemented it with sha3\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses https://github.com/lambdaclass/ethrex/issues/4535\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-09-25T18:25:15Z",
          "tree_id": "d4234e14e79894bad891038d88820a624d0a3b36",
          "url": "https://github.com/lambdaclass/ethrex/commit/dfb8902f6d3e0f7ed3970daa9cf08e42dc18eb44"
        },
        "date": 1758827905877,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 91964212751,
            "range": "± 322688299",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7c5315cf07ca1745fbb6666ff53db889a8c4bde3",
          "message": "fix(l1): use transactional database with RocksDB (#4599)\n\nRocksDB is non-transactional by default, meaning writes logically\ninterleave rather than behaving as a unit, which is prone to errors.\nThe optimistic transaction mode implements ACID behavior, with conflict\nresolution at commit time to improve parallelism.",
          "timestamp": "2025-09-25T18:41:51Z",
          "tree_id": "d2697ed3a6f7f3094ed4350852e9bb042f1aebff",
          "url": "https://github.com/lambdaclass/ethrex/commit/7c5315cf07ca1745fbb6666ff53db889a8c4bde3"
        },
        "date": 1758828843197,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 91027765048,
            "range": "± 929015461",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dc20e3ef3bdfa5768a2e71cc5bacca35bec0da56",
          "message": "perf(l1): filter empty storages from snapshots (#4590)\n\nDuring snap sync, specifically when downloading storages, we were\naccidentally dumping all account addresses in every file, even when that\nfile had no storages for most of them.\nBy filtering, we reduce from 40GiB to 27GiB the auxiliary files in\nSepolia, and the sync goes from 3h10' to 3h2' in `ethrex-sync-3`, and\nfor mainnet in `ethrex-sync-2` we got from 185GiB to 40GiB and from 8h6'\nto 7h7'.",
          "timestamp": "2025-09-25T19:19:18Z",
          "tree_id": "e33e89bca3098675f390f89d54efe13ae707e021",
          "url": "https://github.com/lambdaclass/ethrex/commit/dc20e3ef3bdfa5768a2e71cc5bacca35bec0da56"
        },
        "date": 1758831063014,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 89563151401,
            "range": "± 274937069",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estebandh@gmail.com",
            "name": "ElFantasma",
            "username": "ElFantasma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "252093b6229318ac257cd68b99f69b2ac301dba5",
          "message": "fix(l1): preventing \"Address family not supported by protocol\" errors on discv4 (#4655)\n\n**Motivation**\n\nUsing `UdpFramed` to send messages was causing a problem when a message\nsend failed: A singe error was causing every other message send to fail.\n(See https://github.com/tokio-rs/tokio/issues/7648)\nIt was causing the log spam issue described in #4232 \n\n**Description**\n\nMoved back to use `UdpSocket` directly to send messages. It prevents the\n\"Address family not supported by protocol\" propagation of errors.\n\nAlso fixes some of the issues in #4232 (but still full IPv6 needs to be\nimplemented):\n- Comparing canonical IP addresses\n- Removes a custom implementation of `to_canonical()`",
          "timestamp": "2025-09-25T20:54:18Z",
          "tree_id": "0a69b44915d6b17c227d12213d19fb2ae424f1b5",
          "url": "https://github.com/lambdaclass/ethrex/commit/252093b6229318ac257cd68b99f69b2ac301dba5"
        },
        "date": 1758836878721,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 90267691555,
            "range": "± 166774649",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "35aa069e0d24eb4e697eb718e628aeccb8e17099",
          "message": "feat(l1): handle non-canonical headers by hash in `GetBlockHeaders` (#4576)\n\n**Motivation**\n\nWe're currently returning empty header responses when we receive a\n`GetBlockHeaders` request specifying the start with the block's hash,\nand the hash isn't part of our canonical view of the chain.\n\n**Description**\n\nThis PR adds support for this case by simply looking for the starting\nblock in the DB and returning it. This stays simple enough and, though\nsuboptimal, should make the simple case of a peer asking for a sidechain\nto work.\n\nIt could be further extended by looking for the block's parent through\nthe parent hash, which should allow us to support cases where `reverse`\nis `true`.",
          "timestamp": "2025-09-26T13:50:13Z",
          "tree_id": "ff254059158793315a6ddae93136e344f13f40a0",
          "url": "https://github.com/lambdaclass/ethrex/commit/35aa069e0d24eb4e697eb718e628aeccb8e17099"
        },
        "date": 1758897772966,
        "tool": "cargo",
        "benches": [
          {
            "name": "Block import/Block import ERC20 transfers",
            "value": 92470825239,
            "range": "± 451344976",
            "unit": "ns/iter"
          }
        ]
      }
    ],
    "L1 block proving benchmark": [
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8880fb4c7fc2fcbb5b802a22f430e2ccaeba418c",
          "message": "fix(l2): fix rpc job (#3244)\n\n#3180 happened again\n\nCo-authored-by: LeanSerra <46695152+LeanSerra@users.noreply.github.com>\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>",
          "timestamp": "2025-06-24T01:21:41Z",
          "tree_id": "f1f12afdac43f08caae758cff6ac25325e41c4d0",
          "url": "https://github.com/lambdaclass/ethrex/commit/8880fb4c7fc2fcbb5b802a22f430e2ccaeba418c"
        },
        "date": 1750731092217,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.008671909190974133,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46385380+tomasdema@users.noreply.github.com",
            "name": "Tomás Agustín De Mattey",
            "username": "tomasdema"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c141419d06626fc84a3bbe7d0ce80a0ae4e074ac",
          "message": "docs(core): update roadmap (#3279)\n\n**Motivation**\n\nRoadmap was hard to follow through in a fast read. \n\n**Description**\n\nRearranged the roadmap items to group \"In Progress\" and \"Planned\" tasks\nproperly.",
          "timestamp": "2025-06-24T10:41:47Z",
          "tree_id": "0030a34385742ebeec6505973f379334631f470c",
          "url": "https://github.com/lambdaclass/ethrex/commit/c141419d06626fc84a3bbe7d0ce80a0ae4e074ac"
        },
        "date": 1750765876712,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.008648111416026345,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "37ab4d38fd6d942baa1bc7a0cc88b8746f2c15f5",
          "message": "refactor(l2): use L1Messages for withdrawals (#3187)\n\n**Motivation**\n\nIn preparation to support more complex bridging (such as of ERC20\nassets), we want to use generic L2->L1 messaging primitives that can be\neasily extended and reused.\n\n**Description**\n\nThis replaces withdrawals with a new type L1Message, and has the bridge\nmake use of them.\n\n- Allows for multiple messages per transaction\n- Allows for arbitrary data to be sent. Hashed for easier handling.\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>",
          "timestamp": "2025-06-24T13:40:13Z",
          "tree_id": "b5b47bf0beed5ae19cabb4b1ee8cec5c277c50d9",
          "url": "https://github.com/lambdaclass/ethrex/commit/37ab4d38fd6d942baa1bc7a0cc88b8746f2c15f5"
        },
        "date": 1750775695394,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.008681465013774104,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "fe1e166d133f48ea01fca2a0a5c2764f269e7383",
          "message": "fix(l1,l2): improve metrics (#3160)\n\n**Motivation**\n\nOur `transaction_tracker` metric is reset every time the node is\nrestarted.\n\n**Description**\n\n- Uses the `increase()` function in Grafana to avoid resetting the\ncounter on node restarts.\n- Initializes each possible value to 0 when starting the metrics to\nproperly calculate increments.\n- Splits the Transaction panel into two: `Transactions` and `Transaction\nErrors`.\n- Inverts the colors in `Gas Limit Usage` and `Blob Gas Usage`.\n- Pushes transaction metrics only after closing the block in L2, since\ntransactions may be added or removed depending on the state diff size.\n\n**Last Blob Usage**:  Before | After\n\n\n\n<img width=\"312\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/cd8e5471-3fa9-491b-93c0-10cf24da663c\"\n/>\n\n\n<img width=\"324\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/1fe9b992-1d05-4269-86dd-78ec1f885be0\"\n/>\n\n\n**Transactions**\n\n<img width=\"700\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/ff785f62-fc07-406f-8e8e-4d0f2b4d9aa1\"\n/>\n\n**Transaction Errors**\n\n<img width=\"694\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/146d46b0-c22b-4ff4-969d-a57acdc7916b\"\n/>\n\n\n### How to test\n\n1. Start an L2 node with metrics enabled:\n\n```bash\ncd ethrex/crates/l2\nmake init\n```\n2. Go to `http://localhost:3802/` to watch the Grafana dashboard.\n\n3. Restart the node and check that the `Transactions` panel is not\nreset.\n\n```bash\ncrtl + c\nmake init-l2-no-metrics\n```\n\n4. Modify `apply_plain_transactions` in\n`ethrex/crates/blockchain/payload.rs:543` to generate some errors:\n\n```Rust\npub fn apply_plain_transaction(\nhead: &HeadTransaction,\ncontext: &mut PayloadBuildContext,\n) -> Result<Receipt, ChainError> {\n \n      use std::time::{SystemTime, UNIX_EPOCH};\n      \n      let now = SystemTime::now().duration_since(UNIX_EPOCH).unwrap();\n      let seed = (now.as_secs() ^ now.subsec_nanos() as u64) as usize;\n\n      match seed % 5 {\n            1 => Err(ChainError::ParentNotFound),\n            2 => Err(ChainError::ParentStateNotFound),\n            3 => Err(ChainError::InvalidTransaction(\"tx error\".into())),\n            4 => Err(ChainError::WitnessGeneration(\"witness failure\".into())),\n            _ => Err(ChainError::Custom(\"custom error\".into())),\n      }\n\n}\n```\n\n5. Restart the node and send some transactions:\n\n```bash\ncd ethrex\ncargo run --release --manifest-path ./tooling/load_test/Cargo.toml -- -k ./test_data/private_keys.txt -t eth-transfers -n http://localhost:1729\n```\n\nif necessary run `ulimit -n 65536` before the command.\n\nCloses None",
          "timestamp": "2025-06-24T13:45:49Z",
          "tree_id": "02f89869e2c9ab3e0094dd4337ca7d0decbde7e6",
          "url": "https://github.com/lambdaclass/ethrex/commit/fe1e166d133f48ea01fca2a0a5c2764f269e7383"
        },
        "date": 1750777906012,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.008797799553322166,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "18153834+klaus993@users.noreply.github.com",
            "name": "Klaus @ LambdaClass",
            "username": "klaus993"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "34c588c5a3cbf71c2ba00796c2d1eef5395ce61e",
          "message": "fix(l1,l2): swap back to standard GitHub runners (#3285)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-06-24T13:55:22Z",
          "tree_id": "82a861ba44af75941fc4adde3a0f107c1c0d8e24",
          "url": "https://github.com/lambdaclass/ethrex/commit/34c588c5a3cbf71c2ba00796c2d1eef5395ce61e"
        },
        "date": 1750780926287,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00871025925925926,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "56402156+fkrause98@users.noreply.github.com",
            "name": "Francisco Krause Arnim",
            "username": "fkrause98"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b135bebfc1e6d74c3324376def79cffc315a121d",
          "message": "ci(l1,l2): add 'build block' benchmark to PR checks (#2827)\n\n**Motivation**\n\nMake the \"build block\" benchmark run in the CI.\n\n---------\n\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-06-24T14:11:42Z",
          "tree_id": "bf2ab404844a1d0bff5492a42a82bc2839f98c8d",
          "url": "https://github.com/lambdaclass/ethrex/commit/b135bebfc1e6d74c3324376def79cffc315a121d"
        },
        "date": 1750784806791,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00878308751393534,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "47d56b55960a27de0f9587a0d38c850b64e1611c",
          "message": "fix(l2): use aligned sdk latest release (#3200)\n\n**Motivation**\n\nWe are using a specific `aligned-sdk` commit. Now that we've bumped the\nSP1 version to `v5.0.0`, we can use the latest release.\n\n**Description**\n\n- Uses the latest release of the `aligned-sdk`.\n- Refactors `estimate_gas` since some clients don't allow empty\n`blobVersionedHashes`, and our deployer doesn't work with\n`ethereum-package`.\n- Adds a guide on how to run an Aligned dev environment.\n\n## How to test\n\nRead the new section `How to Run Using an Aligned Dev Environment` in\n`docs/l2/aligned_mode.md`.\n\nCloses #3169",
          "timestamp": "2025-06-24T14:57:38Z",
          "tree_id": "9f2f1ebe1326e01c794f2f4c11d86b9eeb8b11d0",
          "url": "https://github.com/lambdaclass/ethrex/commit/47d56b55960a27de0f9587a0d38c850b64e1611c"
        },
        "date": 1750787886382,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00871989983397897,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bda9db7998463a96786587f71e73a5a0415e7d02",
          "message": "refactor(l2): implement Metrics Gatherer using spawned library  (#3037)\n\n**Motivation**\n\n[spawned](https://github.com/lambdaclass/spawned) goal is to simplify\nconcurrency implementations and decouple any runtime implementation from\nthe code.\nOn this PR we aim to replace the Metrics Gatherer with a spawned\nimplementation to learn if this approach is beneficial.\n\n**Description**\n\nReplaces Metrics Gatherer task spawn with a series of spawned gen_server\nimplementation.\n\n---------\n\nCo-authored-by: Esteban Dimitroff Hodi <esteban.dimitroff@lambdaclass.com>\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-06-24T16:30:04Z",
          "tree_id": "e250d6362a643f862666a67ea40b2118218cb1af",
          "url": "https://github.com/lambdaclass/ethrex/commit/bda9db7998463a96786587f71e73a5a0415e7d02"
        },
        "date": 1750790092150,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.008773306792873052,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "79ed215def989e62e92653c9d0226cc93d941878",
          "message": "ci(l2): check if the sp1 `Cargo.lock` is modified but not committed (#3302)\n\n**Motivation**\n\nRPC prover ci is constantly breaking because Cargo.lock is modified but\nnot committed in PRs\n\n**Description**\n\n- Add a check in the Lint job that executes `git diff --exit-code --\ncrates/l2/prover/zkvm/interface/sp1/Cargo.lock` and fails if there is a\ndiff\n- Update `Cargo.lock` to fix currently broken ci\n- Example of a failed run:\n-\nhttps://github.com/lambdaclass/ethrex/actions/runs/15863233694/job/44724951989",
          "timestamp": "2025-06-25T13:45:24Z",
          "tree_id": "9bf943d70d37d3e05cdab7bce5d099e5632017a0",
          "url": "https://github.com/lambdaclass/ethrex/commit/79ed215def989e62e92653c9d0226cc93d941878"
        },
        "date": 1750863304219,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.008758676486937187,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e84f61faddbd32288af58db8ca3c56aa4f3541d7",
          "message": "test(l1): check if vm state reverts correctly on error (#3198)\n\n**Motivation**\n\nPer the instructions of the [ethereum state test\ndocs](https://eest.ethereum.org/v3.0.0/consuming_tests/state_test/), we\nshould be reverting to the pre-state when the execution throws an\nexception. Levm does this, but it's not asserted in the test runner in\nthe case an exception is expected.\n\n**Description**\n\nThis pr introduces a new error to check if the state was reverted\ncorrectly in the case an exception must occur, or throw error otherwise.\nTo check if the state was correctly reverted I'm using the post state\nhash from the tests and comparing it with the hash of the account's\nlatest state recorded in the db.\n\nCloses #2604",
          "timestamp": "2025-06-25T14:02:28Z",
          "tree_id": "45788c1aac7394b905b3c9f02a81cefdd1b332e6",
          "url": "https://github.com/lambdaclass/ethrex/commit/e84f61faddbd32288af58db8ca3c56aa4f3541d7"
        },
        "date": 1750866764638,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.008802714525139666,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3a18678adbe6be41af3e05ba0f089d40d9618aed",
          "message": "perf(levm): refactor `gas_used` to `gas_remaining` (#3256)\n\n**Motivation**\n\nBy using `gas_used` there have to be multiple operations for each gas\ncheck. Replacing it with `gas_remaining`, the same overflow check can be\nused to determine whether there was enough gas or not.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-06-25T16:36:49Z",
          "tree_id": "a2ca8debd174ceddfe5037692d47e3855436a185",
          "url": "https://github.com/lambdaclass/ethrex/commit/3a18678adbe6be41af3e05ba0f089d40d9618aed"
        },
        "date": 1750873696210,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00881256096196868,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "leanrafa@gmail.com",
            "name": "Leandro Ferrigno",
            "username": "lferrigno"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f673b693b3fcdc1fe4b87fa2abcce8b660cce0a6",
          "message": "docs(l1,l2): move readme components to documentation in mdbook (#3295)\n\n**Motivation**\n\nThe main idea is to only have a quick introduction to ethrex in the\nreadme, with a quick way to set up a local L1+L2 stack from scratch\n(without even having the repo). The rest should be links to the book.\nThe current readme documentation should be moved to the book.\n\n\nCloses #3289\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-06-25T20:41:54Z",
          "tree_id": "75b09dedeeaaf00b66d40241c96d6e79b6920788",
          "url": "https://github.com/lambdaclass/ethrex/commit/f673b693b3fcdc1fe4b87fa2abcce8b660cce0a6"
        },
        "date": 1750888299555,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00877819442896936,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3eee599280855b30cfd023ecce4a706ebe69d3a5",
          "message": "docs(l2): update image and add suggestions (#3328)\n\nCo-authored-by: Javier Chatruc <jrchatruc@gmail.com>",
          "timestamp": "2025-06-25T23:11:27Z",
          "tree_id": "e83b3b37045190a2d8c8a3425969a1e070a94eb0",
          "url": "https://github.com/lambdaclass/ethrex/commit/3eee599280855b30cfd023ecce4a706ebe69d3a5"
        },
        "date": 1750898966299,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.008773306792873052,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "217ad13acdaa6d7219ec4a5ad16fce5164749ae8",
          "message": "perf(levm): refactor `Stack` to have a fixed size and grow downwards (#3266)\n\n**Motivation**\n\nThe stack is currently implemented using a `Vec<U256>` that grows\nupwards. Since the stack is limited to a reasonable amount by design\n(1024 entries, or 32KiB) it can be converted to a static array along\nwith an offset and made to grow downwards.\n\n**Description**\n\nThis PR:\n- Removes stack allocation (and its associated runtime checks) from the\nruntime costs.\n- Makes the stack grow downwards: better integration with stack\noperations.\n- Changes the API so that multiple items can be inserted and removed\nfrom the stack at the same time, which is especially useful for opcodes\nthat handle multiple arguments or return values.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>",
          "timestamp": "2025-06-26T12:02:50Z",
          "tree_id": "5ac3d6fb4b5de3b973e523181a199aa9ab11338c",
          "url": "https://github.com/lambdaclass/ethrex/commit/217ad13acdaa6d7219ec4a5ad16fce5164749ae8"
        },
        "date": 1750943683885,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.008643367526055951,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f630e1c0f4fce2264b2991b3d743172e1514b196",
          "message": "test(l1): run all blockchain tests and refactor logic (#3280)\n\n**Motivation**\n\n- We weren't running all tests that we needed to. We ran tests from\nfolders prague, cancun and shanghai but folders that have names of older\nforks have \"old\" tests but they perform checks for current forks too. So\nwe should run them too!\n\n**Description**\n\n- Deletes `cancun.rs`, `shanghai.rs` and `prague.rs`. Doesn't make sense\nto run tests based on that. For example, when running cancun.rs you\ncould find tests which post state was Prague or Shanghai, so that\ndistinction we were making was kinda useless. Now we just have `all.rs`\nand I simplified it so that it is more clean.\n- Adds all networks to Network enum\n- Refactor `test_runner` so that parsing is better (now it's recursive)\nand also now when a test fails it doesn't stop executing the rest of the\ntests, which was pretty annoying.\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-06-26T14:36:53Z",
          "tree_id": "70a14b6e94d5840a1ac56f6960b54ff93de31be3",
          "url": "https://github.com/lambdaclass/ethrex/commit/f630e1c0f4fce2264b2991b3d743172e1514b196"
        },
        "date": 1750951626875,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.008596213311511183,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3741a2ad5647ad1945907dfe6f1ac02d65054bc4",
          "message": "fix(l1, levm): fix remaining blockchain test (#3293)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n- Fix last blockchain test, it was failing for both LEVM and REVM\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- The test destroyed an account that had non-empty storage and then\nre-created it with CREATE2. When getting the AccountUpdates we just said\nthat the account had no added storage (which is true) but we don't have\na way to directly communicate that the account was destroyed and then\ncreated again, so even though it exists its old storage should be\ncleared.\n- For this I implemented an ugly solution. For both LEVM and REVM in\nget_account_updates if I see that an account was Destroyed but now\nexists what I'll do is I'll push 2 Account Updates, one that removes the\naccount and another one with the new state of the account, so that the\nwhole account is removed (and therefore, its storage) and then we write\nto the database the new state of the account with it's new storage. I\nthink a cleaner solution would be to have an attribute `removed_storage`\n(or similar) in `AccountUpdate` that will tell the client to remove the\nstorage of the existing account without removing all the account and\nthen we don't have to do messy things like the one I implemented. The\ndownside that I see on this new approach is that we'll have an attribute\nthat we'll hardly ever use, because it's an edge case.\n- Then, for LEVM I had to implement a `destroyed_accounts` in\n`GeneralizedDatabase` so that in `get_state_transitions()` we can check\nwhich accounts were destroyed and now exist so that we do the procedure\nthat I described above. This and many other things would be way nicer if\nwe used in LEVM our own Account struct instead of reusing the one in\nEthrex. I'm seriously considering making that change because it seems\nworth doing so, there are other reasons to pull the trigger on that.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nQuestions:\n1. Should we add a `removed_storage` to `AccountUpdate` instead? Or this\nway of implementing it (removing account and then writing it) is good\nenough? Created #3321\n2. Should we use our own Account type in LEVM so that we don't rely on\nexternal HashSets and HashMaps for some things? For this I opened #3298\n\nCloses #3283\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-06-26T15:18:38Z",
          "tree_id": "73dcb8916d9e6a46cc1f6b47ab5c31c7b2ba2616",
          "url": "https://github.com/lambdaclass/ethrex/commit/3741a2ad5647ad1945907dfe6f1ac02d65054bc4"
        },
        "date": 1750955291352,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00865286051619989,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "89949621+ricomateo@users.noreply.github.com",
            "name": "Mateo Rico",
            "username": "ricomateo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "09cac25ff1b390c5a03ab1846a46ef82283e8e2e",
          "message": "fix(l1): flaky test `test_peer_scoring_system ` (#3301)\n\n**Motivation**\nThe test executes a function that selects peers randomly but\nprioritizing those with high score, and checks that the number of\nselections for each peer is proportional to its score. However given\nthat the selection is somehow random, this is not always the case.\n\n**Description**\nIntroduces the following changes in the test\n* Increments the number of selections, which should reduce the\nprobability of failure.\n* Initializes a different `KademliaTable` for working with multiple\npeers.\nNote that the table used for multiple-peer scoring checks was the same\nas the one used for single-peer scoring tests. The problem is that a\nhigh-scoring peer from the initial phase remains in the table but is\nincorrectly omitted from subsequent multi-peer selection calculations,\nthus impacting the final outcome.\n\nThe following bash script can be used to get a sense of the failure rate\nof the test. It loops running the test and printing the total and failed\nruns.\n\nWith these changes, the failure rate dropped from (approximately) 4% to\n0.025%.\n\n```bash\n#!/bin/bash\n\nCOMMAND=(cargo test --package=ethrex-p2p --lib -- --exact kademlia::tests::test_peer_scoring_system --nocapture)\n\ntotal=0\nfailed=0\n\nwhile true; do\n    \"${COMMAND[@]}\" >/dev/null 2>&1\n    exit_code=$?\n\n    if [ $exit_code -ne 0 ]; then\n        failed=$((failed + 1))\n        echo \"❌ failed\"\n    else\n        echo \"✅ ok\"\n    fi\n\n    total=$((total + 1))\n    echo \"Total = $total, Failed = $failed\"\n    echo \"---\"\ndone\n\n```\n\n\n\nCloses #3191",
          "timestamp": "2025-06-26T16:03:58Z",
          "tree_id": "0b5e1ee9b62d541aa34180f07b73361f632a71be",
          "url": "https://github.com/lambdaclass/ethrex/commit/09cac25ff1b390c5a03ab1846a46ef82283e8e2e"
        },
        "date": 1750958849926,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.008671909190974133,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e12f615f1a6e67c1fb719f6693d6627d8e2a2e70",
          "message": "docs(l1): fix readme links and improve L1 documentation (#3340)\n\n**Motivation**\n\nThe current readme links to the unrendered documentation instead of our\nhosted book. Also, the general landing page doesn't have any links or\npointers on where to go next, while the L1 landing page is empty.\n\n**Description**\n\nThis PR addresses the previous issues, adding some content to the L1\nlanding page and generally cleaning up the docs. It also merges the two\ndocumentation sections in the readme and updates links to point to\ndocs.ethrex.xyz",
          "timestamp": "2025-06-26T18:13:10Z",
          "tree_id": "9da9d65d7fc47ea4423505e1996ffbbca8421bcc",
          "url": "https://github.com/lambdaclass/ethrex/commit/e12f615f1a6e67c1fb719f6693d6627d8e2a2e70"
        },
        "date": 1750965915365,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00861501312192455,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a0eebfa256edaaf3ffc35676fc3b3ad021dccde8",
          "message": "ci(l2): build docker images for all l2 tests (#3342)\n\n**Motivation**\n\nAfter #3338 state reconstruct test and based tests started failing\n**Description**\n\n- build the docker image for those steps too",
          "timestamp": "2025-06-26T18:13:36Z",
          "tree_id": "3f597839d3d2dc64484734cb7189722eede96728",
          "url": "https://github.com/lambdaclass/ethrex/commit/a0eebfa256edaaf3ffc35676fc3b3ad021dccde8"
        },
        "date": 1750968676207,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00865286051619989,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8675fe8bc44977275db954cc4730a79c382cc15a",
          "message": "perf(levm): refactor levm jump opcodes (#3275)\n\n**Motivation**\n\nThe `JUMP` and `JUMPI` opcodes need to check the target address's\nvalidity. This is currently done with a `HashSet` of valid target\naddresses, which caused the hashing to become a significant part of the\nprofiling time when checking for address validity.\n\n**Description**\n\nThis PR rewrites the `JUMPDEST` checks so that instead of having a\nwhitelist, we do the following:\n- Check the program bytecode directly. The jump target's value should be\na `JUMPDEST`.\n- Check a blacklist of values 0x5B (`JUMPDEST`) that are NOT opcodes\n(they are part of push literals).\n\nThe blacklist is not a `HashMap`, but rather a sorted slice that can be\nchecked efficiently using the binary search algorithm, which should\nterminate on average after the first or second step.\n\nRational: After extracting stats of the first 10k hoodi blocks, I found\nout that...\n- There are almost 60 times more `JUMPDEST` than values 0x5B in push\nliterals.\n- On average, there are less than 2 values in the blacklist. If we were\nto use a whitelist as before, there would be about 70 entries on\naverage.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nRelated to #3305",
          "timestamp": "2025-06-26T20:36:36Z",
          "tree_id": "d839a849cc638da9fe2743a8f65a578f6579a8bd",
          "url": "https://github.com/lambdaclass/ethrex/commit/8675fe8bc44977275db954cc4730a79c382cc15a"
        },
        "date": 1750972968203,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.009792951522684898,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f6b0ba4a352725e762dc0420b84ef9198a20d640",
          "message": "chore(l2): change default chain ID (#3337)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nCurrent chain ID (1729) is causing some problems with wallets like\nMetamask as the chain ID is registered for another network.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nChanged default chain ID to 65536999 following our new naming method:\n- `65536XYY`\n- Being `X` the stage (0 for mainnet, 1 for testnet, 2 for staging,\netc.).\n- Being `YY` each specific rollup.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3312",
          "timestamp": "2025-06-26T21:35:10Z",
          "tree_id": "5c0e989bf8fcfec78d3f3aca85cd30d7ff18d6c0",
          "url": "https://github.com/lambdaclass/ethrex/commit/f6b0ba4a352725e762dc0420b84ef9198a20d640"
        },
        "date": 1750976433657,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.009854195747342089,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "19cfb4e1874c35f32ff78602093f1305c17b6f4d",
          "message": "chore(core): add install script (#3273)\n\n**Description**\n\nThis PR adds an installation script with readme instructions on how to\nquickly set up a local L1 with `ethrex`, without having to clone the\nrepo.\n\nThe idea is to extend this script once the L2 can be more easily\ndeployed. Right now, it requires installing two more binaries and\ndownloading multiple contracts (either the source or compiled\nartifacts), which makes this more complex than it needs to be.\n\n---------\n\nCo-authored-by: Javier Chatruc <jrchatruc@gmail.com>",
          "timestamp": "2025-06-26T21:40:31Z",
          "tree_id": "cfb5520d0c3f5cac05f111e8f19749137c261c90",
          "url": "https://github.com/lambdaclass/ethrex/commit/19cfb4e1874c35f32ff78602093f1305c17b6f4d"
        },
        "date": 1750978457260,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.009829606363069246,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b584bcc7e51507e5c943305e8d63dfc9f6f7ec68",
          "message": "refactor(l1, l2): remove `l2` feature flag from `rpc` crate (first proposal) [RFC] (#3330)\n\n**Motivation**\n\nThe main goal is to decouple L2 logic from the crate `rpc`. \n\nThis PR proposes an initial solution to this.\n\n**Description**\n\nThis solution extends `ethrex-rpc` by wrapping it where needed, and\nadding new data structures. I think a better solution can be achieved\nfrom this one.\n\n- Adds `ethrex-l2-rpc` crate in `crates/l2/networking/rpc`.\n- Moves L2 logic from `ethrex-rpc` to `ethrex-l2-rpc`.\n- Refactors some functions in `ethrex-rpx` to be reusable in\n`ethrex-l2-rpc`.\n- Exposes some functions and types from `ethrex-rpc`.\n- Updates `cmd/ethrex` with this changes and moves L2 initializers from\n`cmd/ethrex/initializers.rs` to `cmd/ethrex/l2/initializers.rs`.\n\n**Pros and Cons**\n\n| Pros | Cons|\n| --- | --- |\n| L2 logic is decoupled from `ethrex-rpc` | L2 logic is decoupled from\n`ethrex-rpc` by wrapping `ethrex-rpc` functions and duplicating some\ntypes to extend them |\n| `ethrex-rpc` logic is reused by `ethrex-l2-rpc` | Some types and\nfunctions were exposed in `ethrex-rpc` public API |\n\nDespite the cons, this could be an acceptable first iteration to a\nproper solution as this implementation highlights somehow which parts of\nthe rpc crate need to be abstracted.\n\n**Next Steps**\n\n- Remove `l2` feature flag from `cmd/ethrex`.\n- Move `crates/networking/rpc/clients` module.\n- Cleanup `ethrex-rpc` public API.\n- The next iteration should include an more general abstraction of the\nRPC API implementation so it can be extended organically instead of by\nwrapping it.",
          "timestamp": "2025-06-27T15:44:41Z",
          "tree_id": "b6aa69359a73072b97acca21d9c2daa7abe8b880",
          "url": "https://github.com/lambdaclass/ethrex/commit/b584bcc7e51507e5c943305e8d63dfc9f6f7ec68"
        },
        "date": 1751043831514,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.009750531559405941,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2e4bc87ddb14b2e5215d40bada54dad384741747",
          "message": "perf(core): improve u256 handling, improving PUSH and other opcodes (#3332)\n\n**Motivation**\n\nThe function `u265::from_big_endian(slice)` which is widely used in the\ncodebase can be made faster through more compile time information.\n\nWith this change, i could add a constant generic op_push\n\nBenchmarks:\n\nSeems like our current benchmarks don't measure this part of the code,\nthere is no difference in the levm bench, however external opcode\nbenchmarks show a 2-2.5x improvement on PUSH and MSTORE based benches\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3358",
          "timestamp": "2025-06-27T15:46:44Z",
          "tree_id": "ceac0361630c7d3402664dc9569e183fdae03ccb",
          "url": "https://github.com/lambdaclass/ethrex/commit/2e4bc87ddb14b2e5215d40bada54dad384741747"
        },
        "date": 1751046825998,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.009841885696439725,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f57dd24e3a4b142f6de1f80bc2d9ee98692bb08f",
          "message": "chore(levm): improve levm vs revm bench (#3255)\n\n**Motivation**\n\nCurrently the benchmark comparisson shown for levm is not very useful\nsince there is a lot of information distributed along different tables\nand it's not easy to see the change.\n\n**Description**\n\nThis pr introduces the following changes:\n\n- Instead of having the tables compare levm and revm, now they compare\nbetween pr's obtained mean time and main' obtained mean time for both\nvms. To do this we modify the `run_benchmark_ci` function that the\ntarget runned by the ci calls to have the benchmark comparison run for\nall cases.\n\n- If nothing changed between pr and main, no message is printed, using\nas a margin of error a porcentual difference higher than 10%.\n\n- If something changed, only output the tests where there was a change,\nnothing is printed if the test that stayed the same.\n\nThe tables always show the obtained metrics in the same order despite\nthe fact one of them is not shown:\n\n| Command | \n|--------|\n|`main_revm_`|\n|`main_levm_`|\n|`pr_revm_`|\n|`pr_levm_`|\n\nFor example, in the case you do an optimization in levm that improves\nfactorial but does nothing for revm, the table would look like this:\n| Command | Mean [ms] | Min [ms] | Max [ms] | Relative |\n|--------|--------|--------|--------|--------|\n| `main_revm_Factorial` | 138.1 ± 0.5 | 137.4 | 139.2 | 1.00 |\n| `main_levm_Factorial` | 326.4 ± 6.3 | 321.4 | 340.2 | 2.36 ± 0.05 |\n| `pr_levm_Factorial` | 223.8 ± 6.3 | 216.4 | 234.1 | 2.04 ± 0.05 |\n\nCloses #3254\n\n---------\n\nCo-authored-by: cdiielsi <49721261+cdiielsi@users.noreply.github.com>\nCo-authored-by: Camila Di Ielsi <camila.diielsi@lambdaclass.com>",
          "timestamp": "2025-06-27T16:03:04Z",
          "tree_id": "e340415a97b05069af05234e55becf17585d535c",
          "url": "https://github.com/lambdaclass/ethrex/commit/f57dd24e3a4b142f6de1f80bc2d9ee98692bb08f"
        },
        "date": 1751049030908,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0097686664600124,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "30327624+mechanix97@users.noreply.github.com",
            "name": "Mechardo",
            "username": "mechanix97"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "6d64350d80b39e755a771917f8fbd79e16db627b",
          "message": "docs(l2): based docs outdated contract addresses (#3348)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nThe contract addresses in the docs were outdated. \n\n**Description**\n\nTo avoid having to update the addresses of the contracts every time a\ncontract changes, placeholder were introduced.\n\nAlso removed the pico verifier from the contract deployment as it is no\nlonger needed.\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-06-27T19:49:45Z",
          "tree_id": "b0720e7467d3a80f93b7e9fea335bca7e7bf7c31",
          "url": "https://github.com/lambdaclass/ethrex/commit/6d64350d80b39e755a771917f8fbd79e16db627b"
        },
        "date": 1751057724511,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.009841885696439725,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "510856b92b5aa4b9da070824ea10e28a7e5ec44c",
          "message": "fix(l2): serde skip attributes incompatible with bincode (#3370)\n\n**Motivation**\n\nsame old problem which we brute fix by serializing into JSON first, was\nreintroduced with the addition of `ExecutionWitnessResult` (which has\ntwo fields that use `#[serde(skip)]`)",
          "timestamp": "2025-06-27T20:38:17Z",
          "tree_id": "80b73f14440435541056a670f63a1e8f6e4f8173",
          "url": "https://github.com/lambdaclass/ethrex/commit/510856b92b5aa4b9da070824ea10e28a7e5ec44c"
        },
        "date": 1751060011879,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.009257849001175088,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c9c750d8b1c2b0ab8cba89a3657f123dabe6f3fc",
          "message": "perf(levm): reduce handle_debug runtime cost (#3356)\n\n**Motivation**\n\nWith this handle_debug disappears from samplies on push/memory heavy\nbenches.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3355",
          "timestamp": "2025-06-27T20:44:26Z",
          "tree_id": "6ddd2bd3f702e9b92bede8dab5e830166d6e8827",
          "url": "https://github.com/lambdaclass/ethrex/commit/c9c750d8b1c2b0ab8cba89a3657f123dabe6f3fc"
        },
        "date": 1751063214953,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.009323585207100592,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2dd0e7b4e73f1578fbd2c43e2845bcfb2fd46e8c",
          "message": "chore(levm): add push/mstore based bench (#3354)\n\n**Motivation**\n\nAdds a benchmark that mainly tests PUSH and MSTORE\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3364\n\n---------\n\nCo-authored-by: Javier Chatruc <jrchatruc@gmail.com>\nCo-authored-by: ilitteri <ilitteri@fi.uba.ar>",
          "timestamp": "2025-06-27T20:49:14Z",
          "tree_id": "92222d56d1d8b08b0d73e056fee5f4f6efcab91f",
          "url": "https://github.com/lambdaclass/ethrex/commit/2dd0e7b4e73f1578fbd2c43e2845bcfb2fd46e8c"
        },
        "date": 1751068837352,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.009318071555292726,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7b626fddc2a1556db2c61af9b76ce0e26dd352eb",
          "message": "refactor(l2): remove blobs logic from payload_builder (#3326)\n\n**Motivation**\n\nRemoves unnecessary logic for handling blob transactions in\n`L2::payload_builder`, since these transactions are discarded just a few\nlines below.\n\n\nCloses None",
          "timestamp": "2025-06-27T21:03:02Z",
          "tree_id": "5d209dd66d6568c111588f3f7624f8553a67c85f",
          "url": "https://github.com/lambdaclass/ethrex/commit/7b626fddc2a1556db2c61af9b76ce0e26dd352eb"
        },
        "date": 1751071114199,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.009274195997645673,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4d6cbf6db95cff5b0fe11af74dd4c629a3e1be71",
          "message": "feat(l1): embed genesis of public networks in binary (#3372)\n\n**Motivation**\n\nCurrently, users need to download the genesis to be able to run a\nnetwork without being in the repo's root.\n\n**Description**\n\nThis PR embeds the genesis file of known public networks inside the\ncompiled binary. It has the downside of increasing binary size from 23.6\nMb to 24.7 Mb.\n\nFurther code simplifications are left for other PRs.\n\nIn the future, a possible improvement could be to parse each genesis\nfile before embedding it in the binary. Now we just embed the plain\nJSON.\n\nRelated #3292",
          "timestamp": "2025-06-27T21:16:21Z",
          "tree_id": "22bbe2194dc8cf877b504540879f04fd9ffd8b9e",
          "url": "https://github.com/lambdaclass/ethrex/commit/4d6cbf6db95cff5b0fe11af74dd4c629a3e1be71"
        },
        "date": 1751074306317,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.009296082005899705,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "25432a8606f153031410173b56c7a283fd08cc9e",
          "message": "chore(l2): remove save state module (#3119)\n\n**Motivation**\n\nThe save state module was unnecessarily complex for what it achieved\n(storing incoming batch proofs). This PR replaces it with the rollup\nstore.\n\n**Description**\n\n- adds tables for storing batch proofs indexed by batch number and proof\ntype to the rollup store\n- removes the save state module\n- all places that used the save state module now use the rollup storage\n- had to move the prover interface into `ethex-l2-common` because\n`ethrex-storage-rollup` can't depend on the prover because of cyclic\ndependencies\n- because of the previous point had to move the `Value` type into\n`ethrex-l2-common` because `ethrex-l2-common` can't depend on\n`ethrex-sdk`\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>",
          "timestamp": "2025-06-27T21:32:19Z",
          "tree_id": "c551144c82bed4a41367a84ded8abb3732a39e43",
          "url": "https://github.com/lambdaclass/ethrex/commit/25432a8606f153031410173b56c7a283fd08cc9e"
        },
        "date": 1751078032301,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00935680463182898,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3f65132f7fb6d206f189754ace88340184811e7d",
          "message": "fix(l2): update rpc job cache file (#3377)\n\n**Motivation**\n\nin #3370 i didn't update it after changing how the program input is\nserialized",
          "timestamp": "2025-06-27T22:22:17Z",
          "tree_id": "cdf056c0a40fbe670409308b79b3f0b9f5f937ba",
          "url": "https://github.com/lambdaclass/ethrex/commit/3f65132f7fb6d206f189754ace88340184811e7d"
        },
        "date": 1751079782054,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006880061855670103,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a51ad76d5dc1ca9ad6bb371037c9894a01af356a",
          "message": "chore(core): update Rust version to 1.88 (#3382)",
          "timestamp": "2025-06-30T13:04:49Z",
          "tree_id": "7b9134c67f0cd8bbceeb6285c954f84e85063274",
          "url": "https://github.com/lambdaclass/ethrex/commit/a51ad76d5dc1ca9ad6bb371037c9894a01af356a"
        },
        "date": 1751290377502,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006809857142857143,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "98512676ba767d6c635633da9b70932af1a2c483",
          "message": "docs(l1): fix broken links in sync doc (#3369)\n\n**Motivation**\nSome links in the sync documentation do not point to the correct files\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Fix broken links to diagrams in sync documentation\n* Remove link and mention of no longer existing diagram\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-06-30T13:15:09Z",
          "tree_id": "c1ab3a358155856f42742f8819e4ba0c51fb07cf",
          "url": "https://github.com/lambdaclass/ethrex/commit/98512676ba767d6c635633da9b70932af1a2c483"
        },
        "date": 1751292314912,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006880061855670103,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4b6318fb291bc731b4123fd88e9398c5aacb4b30",
          "message": "feat(l2): value sending in privileged transactions (#3320)\n\n**Motivation**\n\nWe want to be able to send (\"deposit\") value-carrying privileged\ntransactions, for example to do forced withdrawals.\n\n**Description**\n\nThis PR allows users to specify the transaction value while sending\nprivileged transactions.\n\nFor regular deposits, the bridge calls it's L2 version and relies on the\nL2 hook allowing the bridge address to send without having funds. It\ncalls it's own L2 version, which handles failed transfers by making a\nwithdrawal.\n\nFor transactions, since they can't fail they are instead made to revert\nwhen there aren't enough funds to cover the operation.\n\nCloses #3290, closes #3291\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>",
          "timestamp": "2025-06-30T13:28:49Z",
          "tree_id": "0e7d86f866aa0e1081ab669a2f064c76a1c0eb95",
          "url": "https://github.com/lambdaclass/ethrex/commit/4b6318fb291bc731b4123fd88e9398c5aacb4b30"
        },
        "date": 1751294265710,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006988125654450262,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "11384d62135ed354397c0a02b57adbe8d8392a8b",
          "message": "ci(l2): use build-push-action to build L1 dev docker image (#3357)\n\n**Motivation**\n\nuse official\n[build-push-action](https://github.com/docker/build-push-action)",
          "timestamp": "2025-06-30T14:03:04Z",
          "tree_id": "34ce27d88d8e5c5e41e2acbbd24f840ad8e44840",
          "url": "https://github.com/lambdaclass/ethrex/commit/11384d62135ed354397c0a02b57adbe8d8392a8b"
        },
        "date": 1751300426436,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006775289340101523,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "57b2a2b26933eebf3e878a05d1c46aa7a898fd0c",
          "message": "fix(l2): remove requests processing in build_payload (#3300)\n\n**Motivation**\n\nWhen producing a block in L2 mode, we unnecessarily call\n`blockchain::extract_requests`, even though no requests are being\ngenerated.\n\n**Description**\n\n- Refactors `PayloadBuildContext` to store `requests:\nOption<Vec<EncodedRequests>>` and calculates the `request_hash` directly\nin `finalize_payload`.\n- Removes the `blockchain::extract_requests` call from\n`payload_builder`.\n\n\nCloses None",
          "timestamp": "2025-06-30T14:18:21Z",
          "tree_id": "bac5bdc1fbd5ae7e0f729563d2de21a7df9e4ff5",
          "url": "https://github.com/lambdaclass/ethrex/commit/57b2a2b26933eebf3e878a05d1c46aa7a898fd0c"
        },
        "date": 1751303793407,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006809857142857143,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "128638963+santiago-MV@users.noreply.github.com",
            "name": "santiago-MV",
            "username": "santiago-MV"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2ebb67cf51f137c75f26bdfa66540f5ea8835d6e",
          "message": "chore(l1,l2): reorder fixtures (#3155)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nThe `tests_data` folder was unorganized \n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nCreated a `fixtures` folder inside of test data with a folder for each\ntype of file.\nThe current structure looks like this:\n```\nfixtures/\n├── genesis/                    # All genesis files\n│   └── *.json\n│   \n├── network/                    # Network configuration\n│   ├── params.yaml\n│   └── hive_clients\n|       └── *.yml\n|\n├── contracts/                  # Smart contracts for testing\n│   ├── ERC20/\n│   │   ├── ERC20.sol\n│   │   ├── ERC20.bin\n│   │   |   └── TestToken.bin\n│   │   └── deps.sol\n│   ├── load-test/\n│   |   └── IOHeavyContract.sol\n|   └──levm_print\n|        └── Print.sol\n|\n├── blockchain/                 # Blockchain data files\n│   └── *.rlp\n|\n├── blobs/                      # BLOB files\n│   └── *.blob\n|\n├── keys/                       # Private keys for testing\n│   ├── private_keys.txt\n│   └── private_keys_l1.txt\n|\n├── cache/                      # Cached data\n│   └── rpc_prover/\n│       └── cache_3990967.json\n|\n└── rsp/                       \n    └── input/\n        └── 1/\n             └── 21272632.bin\n ```\nAll references were updated to avoid breaking the code\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3006\n\n---------\n\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-06-30T15:33:31Z",
          "tree_id": "d4cc7189a817b84df69f40c674589bbf9ad8a4d8",
          "url": "https://github.com/lambdaclass/ethrex/commit/2ebb67cf51f137c75f26bdfa66540f5ea8835d6e"
        },
        "date": 1751304367669,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006809857142857143,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bc56f4764a782fd952a56308dd8e28c41a190a83",
          "message": "feat(l2): verify batches in chunks with aligned (#3242)\n\n**Motivation**\n\nAligned verifies proofs in batches, so it's possible to have an array of\nproofs ready to be verified at once.\n\n**Description**\n\n- Modifies `l1_proof_verifier` to check all already aggregated proofs\nand build a single verify transaction for them.\n- Updates `verifyBatchAligned()` in the `OnChainProposer` contract to\naccept an array of proofs.\n\n> [!WARNING]\n> #3276 was accidentally merged into this PR, so the diff includes\nchanges from both.\n\nCloses #3168\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-06-30T15:34:32Z",
          "tree_id": "8a028358cc3b77a2e6c4a4e70df7faef6669dded",
          "url": "https://github.com/lambdaclass/ethrex/commit/bc56f4764a782fd952a56308dd8e28c41a190a83"
        },
        "date": 1751304939047,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0066736600000000005,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b8dffc6936af6669927bb1657f19fb6756dabf13",
          "message": "fix(l2): parse default value correctly (#3317)\n\n**Description**\n\nThis PR fixes a panic we had when the user didn't specify any of the\n`proof-coordinator.*` flags. It seems clap called the `Default::default`\nimplementation, which panicked because of the parsing not having support\nfor leading `0x`.\n\nCloses #3309",
          "timestamp": "2025-06-30T17:01:49Z",
          "tree_id": "a1dd4d6768884e79ec22aa6bf5dc3a80898432a5",
          "url": "https://github.com/lambdaclass/ethrex/commit/b8dffc6936af6669927bb1657f19fb6756dabf13"
        },
        "date": 1751305519630,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006809857142857143,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6e15e05062457168e668c3bd58f9c7cc4017f3f4",
          "message": "docs(l2): document ETH and ERC20 deposits/withdrawals (#3223)\n\n**Description**\n\nThis PR updates the withdrawals documentation with native ERC20\nwithdrawals and adds documentation for L2 deposits.\n\n---------\n\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-06-30T17:06:43Z",
          "tree_id": "55ba012f1c1de7304da9e0753767a034e0176a79",
          "url": "https://github.com/lambdaclass/ethrex/commit/6e15e05062457168e668c3bd58f9c7cc4017f3f4"
        },
        "date": 1751314491935,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006775289340101523,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "damian.ramirez@lambdaclass.com",
            "name": "Damian Ramirez",
            "username": "damiramirez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f32b20294993af9eb01f152ff1861ce17bad180e",
          "message": "docs(core): add LaTex support (#3398)\n\n**Motivation**\n\nhttps://docs.ethrex.xyz/, isn't rendering LaTex expression \n\n**Description**\n\nThis PR adds the [mdbook-katex](https://github.com/lzanini/mdbook-katex)\npreprocessor to `book.toml` to enable LaTeX rendering.\n\nRun the following command to check how the documentation looks\n\n```bash\nmake docs-deps && make docs-serve\n```\n\n**Before**\n\n![image](https://github.com/user-attachments/assets/393cf3f8-bd4a-455a-bba0-4e46cc4e42f0)\n\n**After**\n\n![image](https://github.com/user-attachments/assets/8e6954ad-9050-4161-ada2-2f3d0e13a804)",
          "timestamp": "2025-06-30T18:04:46Z",
          "tree_id": "f67ea03499eb83538e48885b04d35ce1c113c2a4",
          "url": "https://github.com/lambdaclass/ethrex/commit/f32b20294993af9eb01f152ff1861ce17bad180e"
        },
        "date": 1751315111768,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006741070707070708,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8795e325f112d967cee60b965d64a6945dec068f",
          "message": "fix(l2): based CI (#3404)\n\n**Motivation**\n\nIn #3242, `verifyBatchesAligned()` was updated in the based\n`OnChainProposer` to be consistent with the non-based one, but the\n`onlySequencer` identifier was added by mistake.\n\n**Description**\n\nRemoves the `onlySequencer` identifier.\n\nCloses None",
          "timestamp": "2025-06-30T18:11:54Z",
          "tree_id": "7c28ebcd53dded82020376b2a62d37f3caba2597",
          "url": "https://github.com/lambdaclass/ethrex/commit/8795e325f112d967cee60b965d64a6945dec068f"
        },
        "date": 1751324073238,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006741070707070708,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3d375136a47d1e74bfe5db3ad5e21fd3481c3e55",
          "message": "feat(l2): implement ERC20 bridge (#3241)\n\n**Motivation**\n\nWe want to be able to bridge ERC20 tokens.\n\n**Description**\n\nThe inner workings are explained on #3223\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Manuel Iñaki Bilbao <manuel.bilbao@lambdaclass.com>",
          "timestamp": "2025-06-30T19:19:40Z",
          "tree_id": "7b4fb4915fb461d10b28a55ed7755a3c5f692e1d",
          "url": "https://github.com/lambdaclass/ethrex/commit/3d375136a47d1e74bfe5db3ad5e21fd3481c3e55"
        },
        "date": 1751324654884,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006809857142857143,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0cae5580655068ccad5aa3e5d1fdf357a459c384",
          "message": "feat(l2): add instance info to Grafana alerts (#3333)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nWe need to easily differentiate between environments when alerts come up\n(staging-1, staging-2, etc.).\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nAdd an \"$INSTANCE\" variable in the Slack contact point so it's\nover-ridden with an env var.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-06-30T19:52:03Z",
          "tree_id": "b2e3209043911fd5929de4a4ebf5af80232542d8",
          "url": "https://github.com/lambdaclass/ethrex/commit/0cae5580655068ccad5aa3e5d1fdf357a459c384"
        },
        "date": 1751328015594,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006844779487179487,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "68f360fc345e8064a67f266c68c00e7439db961b",
          "message": "feat(l2): exchange commit hash in node-prover communication (#3339)\n\n**Motivation**\n\nWe want to prevent a divergence between the code that is running in the\nL2 node and the prover.\n\n**Description**\n\n- Updates the client version to use `GIT_BRANCH` and `GIT_SHA` instead\nof `RUSTC_COMMIT_HASH`.\n- Adds a `build.rs` script for both the node and prover, using\n`vergen_git2` to export the git env vars.\n- Adds a `code_version` field to the `BatchRequest` message.\n- Introduces a new `ProofData` message: `InvalidCodeVersion`.\n\n## How to test\n\nYou can create an empty commit with:\n\n```bash\ngit commit --allow-empty -m \"empty commit\"\n```\n\nThen run the node and the prover using different commits.\n\n> [!WARNING]\n> Remember to run `make build-prover` whenever you change the commit\n\nCloses #3311",
          "timestamp": "2025-06-30T20:59:41Z",
          "tree_id": "d5078c5b0bbbe506fab9ce26a087572ff05c0971",
          "url": "https://github.com/lambdaclass/ethrex/commit/68f360fc345e8064a67f266c68c00e7439db961b"
        },
        "date": 1751334341230,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0067071959798994975,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8940f50dcac4ff9ca7b22a86ff2534450c50097e",
          "message": "refactor(l1, l2, levm): remove `l2` feature flag from crates `ethrex-vm` and `ethrex-levm` (#3367)\n\n**Motivation**\n\nMy primary goal was to remove the `l2` feature flag from `cmd/ethrex`\nbut to do this, we first need to remove it from:\n- `ethrex-vm`.\n- `ethrex-levm`.\n- `ethrex-blockchain`.\n\n**Description**\n\nThis PR removes the feature flag `l2` from crates `ethrex-vm` and\n`ethrex-levm`.\n\n> *TL;DR:*\n> - In `ethrex-vm` the l2 precompiles logic was moved to a separate\nmodule, `l2_precompiles`.\n> - A new `VMType` enum was introduced in `ethrex-levm` as a field of\n`VM` (main LEVM's struct). It is used by LEVM to behave differently\nwhere needed (this is specifically, when executing precompiles, and when\nexecuting hooks).\n> - A new `BlockchainType` enum was introduced in `ethrex-blockchain` as\na field of the struct `Blockchain` to differentiate when nodes are\nstarted as L1 or L2 nodes (this is later used in the code to instantiate\nthe VM properly, matching the `BlockchainType` variants with `VMType`\nones).\n\nThe `l2` feature flag exists in `ethrex-vm` only because of\n`ethrex-levm`, so to remove it I needed to remove it from `ethrex-levm`\nfirst. The following commits do that:\n- [Move l2 precompiles logic to new\nmodule](https://github.com/lambdaclass/ethrex/commit/28843a6b7b7bee0cacc95589e66190bdae510f94)\n- [Remove feature flag from hooks public\nAPI](https://github.com/lambdaclass/ethrex/commit/39a509fc7046dd2ffb34c405db89e1f38aead490)\n- [Use the correct\nfunctions](https://github.com/lambdaclass/ethrex/commit/3023b88d96455337f6b1fb6d34ea2c6d087b3518)\n- [Replace\nget_hooks](https://github.com/lambdaclass/ethrex/commit/88bc9a25691b06663600e4afe75f30332517f039)\n- [Remove l2 feature flag from\nlevm](https://github.com/lambdaclass/ethrex/commit/8b098836b23fcdee1c85294d33090cd30f77c689)\n\nAfter that, it was almost safe to remove it from `ethrex-vm`:\n- [Remove l2 feature flag from vm\ncrate](https://github.com/lambdaclass/ethrex/commit/fd971bec15d0934ccde5f6d25b16a4d16d0693df)\n\nThis brought some compilation errors that were solved in:\n- [Implement BlockchainType and fix\ncompilation](https://github.com/lambdaclass/ethrex/commit/32557eb7cabcefc935f2d525354ab981870af45f)\n\n**Next Steps**\n\n- Remove feature flag `l2` from `ethrex-blockchain` crate.\n- Remove feature flag `l2` from `cmd/ethrex`.\n\n---------\n\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>",
          "timestamp": "2025-06-30T21:11:30Z",
          "tree_id": "ca1641496a92408cdb3c69075de725cb3d1d00f2",
          "url": "https://github.com/lambdaclass/ethrex/commit/8940f50dcac4ff9ca7b22a86ff2534450c50097e"
        },
        "date": 1751335013598,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006775289340101523,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "cdc0bb8c2fb459bf62deb25bdc82e3d9418e6281",
          "message": "fix(core): more accurate throughput (#3412)\n\nThroughput in the logged metrics was computed over a truncated number of\nseconds, which meant the same block taking 1999ms or 1000ms reports the\nsame throughput, when one is indeed twice as slow as the other.\nThis fixes it by asking for the `as_secs_f64` directly rather than\ntaking an integer number of millis, dividing (with integer semantics) by\n1000 and then casting.",
          "timestamp": "2025-06-30T21:29:01Z",
          "tree_id": "0aac684e2a008af2325ffa0d11310c21428d1aed",
          "url": "https://github.com/lambdaclass/ethrex/commit/cdc0bb8c2fb459bf62deb25bdc82e3d9418e6281"
        },
        "date": 1751340473458,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006809857142857143,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d62fcc5accaaa13b9909af04071379219dc6a0b1",
          "message": "perf(levm): refactor `CacheDB` to use more efficient APIs (#3259)\n\n**Motivation**\n\nThe cache db is a bunch of functions that accept a state object as an\nargument. This is confusing since those are not methods, but functions,\nwhich also do stuff that the state object already supports natively (not\nto mention the duplicated function).\n\n**Description**\n\nRemove the `cache.rs` file and use the state object directly. Move stuff\nto more relevant places to fix borrow issues.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-01T11:14:17Z",
          "tree_id": "56071286cc95f7df094c33217f324109aa83f6c2",
          "url": "https://github.com/lambdaclass/ethrex/commit/d62fcc5accaaa13b9909af04071379219dc6a0b1"
        },
        "date": 1751372272286,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006915709844559585,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d6d79a4d1781a6aa39dd9dfb3cc6e79cfe7350e6",
          "message": "perf(levm): add fib recursive bench (#3391)\n\n**Motivation**\nThe fibonacci recursive can show perfomance results of stack reuse that\nthe factorial recursive one can't because factorial will never be able\nto \"reuse\" the stack.\n\nSee also https://github.com/lambdaclass/ethrex/pull/3386\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-01T13:47:40Z",
          "tree_id": "c9c109f9a6cf0890e08cf3280f85eda9dd076a88",
          "url": "https://github.com/lambdaclass/ethrex/commit/d6d79a4d1781a6aa39dd9dfb3cc6e79cfe7350e6"
        },
        "date": 1751381475003,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006844779487179487,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "cffc84b07c17135c5a87cebbae4c1bbaae61c202",
          "message": "feat(l2): replace custom merkle tree with `OpenZeppelin` + `lambdaworks` (#3344)\n\n**Motivation**\n\nWe are using an unsafe (not audited) custom merkle tree implementation\nfor the L1messaging system\n\n**Description**\n\n- Replace the merkle tree verify function in the CommonBridge contract\nto use OppenZeppelin's `MerkleProof.sol` contract\n- Replace our custom merkle tree implementation with lambdaworks' for\nthis:\n- We implement the trait `IsMerkleTreeBackend` for H256 to build a tree\nthat is compliant with\n- https://docs.openzeppelin.com/contracts/5.x/api/utils#MerkleProof\n - The implementation is taken from \n-\nhttps://github.com/yetanotherco/aligned_layer/blob/8a3a6448c974d09c645f3b74d4c9ff9d2dd27249/batcher/aligned-sdk/src/aggregation_layer/types.rs",
          "timestamp": "2025-07-01T15:16:50Z",
          "tree_id": "fa2255e61c907a119f01fe63cb1e5cdcd6160904",
          "url": "https://github.com/lambdaclass/ethrex/commit/cffc84b07c17135c5a87cebbae4c1bbaae61c202"
        },
        "date": 1751384443753,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006844779487179487,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "416581dc8833dccf10121a116b1fd462b2bb1644",
          "message": "feat(l2): burn gas when sending privileged transactions (#3407)\n\n**Motivation**\n\nTo prevent users from sending L2 transactions for free, we must charge\nthem for the gas sent.\n\n**Description**\n\nOne way to do this is to burn the gas limit specified at L1 prices.\n\nCloses #3402, closes #2156",
          "timestamp": "2025-07-01T15:24:31Z",
          "tree_id": "2abf5e9f8515e6822bfdb5d83421a77346f61133",
          "url": "https://github.com/lambdaclass/ethrex/commit/416581dc8833dccf10121a116b1fd462b2bb1644"
        },
        "date": 1751387476733,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006844779487179487,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8c1812c8b0a657ac11392bda47bc88034bd10c67",
          "message": "feat(l2): implement batch endpoint (#3374)\n\n**Motivation**\n\nFor debugging purposes, it's useful to have an `ethrex_getBatchByNumber`\nendpoint that returns a `Batch` struct:\n\n```Rust\npub struct Batch {\n    pub number: u64,\n    pub first_block: u64,\n    pub last_block: u64,\n    pub state_root: H256,\n    pub deposit_logs_hash: H256,\n    pub message_hashes: Vec<H256>,\n    pub blobs_bundle: BlobsBundle,\n    pub commit_tx: Option<H256>,\n    pub verify_tx: Option<H256>,\n}\n```\n\n**Description**\n\n- Modifies the `Batch` struct to incude `commit_tx` and `verify_tx`.\n- Updates `block_fetcher` to process verify tx logs and extract the\nverify tx hashes as well.\n- Fixes a bug found during development: the `rollup_storage::getBatch()`\nfunction incorrectly treated batches without `L1Messages` as an error.\n\n## How to test\n\nYou can run:\n```bash\ncurl -X POST http://localhost:1729 \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"jsonrpc\":\"2.0\",\n    \"method\":\"ethrex_getBatchByNumber\",\n    \"params\": [\"0x1\", true],\n    \"id\":1\n  }'\n  ```\n\nCloses None\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>\nCo-authored-by: Damian Ramirez <damian.ramirez@lambdaclass.com>",
          "timestamp": "2025-07-01T22:08:29Z",
          "tree_id": "c5741d911edff60bcb50e7172cf6f59a11d5246d",
          "url": "https://github.com/lambdaclass/ethrex/commit/8c1812c8b0a657ac11392bda47bc88034bd10c67"
        },
        "date": 1751411525424,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006775289340101523,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e46e4cbbfe3a6e95d16d3541086eddf7d55546b1",
          "message": "fix(l2): force JSON format for ProgramInput (#3397)\n\n**Motivation**\n\nThis is to avoid the old #3370 bug\n\n**Description**\n\n- creates newtype JSONProgramInput which is always serialized into JSON\nfirst\n- uses it for sp1 instead of the original ProgramInput",
          "timestamp": "2025-07-02T13:59:06Z",
          "tree_id": "e9d161bfb8333300d8756afb087e18955dad9b0c",
          "url": "https://github.com/lambdaclass/ethrex/commit/e46e4cbbfe3a6e95d16d3541086eddf7d55546b1"
        },
        "date": 1751470676721,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006479281553398058,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "94380962+sofiazcoaga@users.noreply.github.com",
            "name": "sofiazcoaga",
            "username": "sofiazcoaga"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aa317274b1dbcc14b88823839e7525cafa3524e8",
          "message": "refactor(levm): consider all forks after Prague and not just Osaka (#3423)\n\n**Motivation**\n\nThis PR addresses issue #2773. \n\nFunctions `max_blobs_per_block()`,\n`get_blob_base_fee_update_fraction_value()` and\n`get_target_blob_gas_per_block_()` in `environment.rs` consider three\noptions: Prague fork, Osaka fork and other forks, where the first two\nhave the same course of action. The idea is to consider two points:\nprevious or posterior to Prague fork.\n\n**Description**\n\nChanges pattern matching to an `if` statement that checks whether we are\nprevious to Prague fork or past that.\n\nCloses #2773",
          "timestamp": "2025-07-02T17:34:08Z",
          "tree_id": "536fa64c7a8b0286fe9fe9b0cee6b64e667fd2db",
          "url": "https://github.com/lambdaclass/ethrex/commit/aa317274b1dbcc14b88823839e7525cafa3524e8"
        },
        "date": 1751479087265,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006386277511961722,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ef121af47cb619ad8d617fd96f469e06526ef55c",
          "message": "refactor(l1, l2): decouple L2 metrics logic from L1's & remove l2 feature flag from `ethrex-blockchain` (#3371)\n\n> [!WARNING]\n> Merge after https://github.com/lambdaclass/ethrex/pull/3367\n\n**Motivation**\n\nTo completely remove the `l2` feature flag from `cmd/ethrex` in favor of\nhaving a single binary for running ethrex (L1 and L2), there are some\nlocal dependencies from which to remove this feature first. These are:\n\n1. `ethrex-vm`.\n2. `ethrex-levm`.\n3. `ethrex-blockchain`. \n\n1 and 2 are removed in https://github.com/lambdaclass/ethrex/pull/3367,\nand 3 is meant to be removed in this PR.\n\n**Description**\n\nDecouples the L2 metrics logic from the L1's, allowing to remove the use\nof the `l2` feature flag from the crate `ethrex-blockchain`.\n\n- Creates a `crates/blockchain/metrics/l2` module with `metrics.rs` and\n`api.rs` submodules.\n- Makes use of this new module in `cmd/ethrex`.\n- Removes `l2` feature flag from `ethrex-blockchain` crate.\n- Removes the import of `ethrex-blockchain/l2` where needed.",
          "timestamp": "2025-07-02T17:52:19Z",
          "tree_id": "053cd741ce7397434b883f78d3c8dc20d8bc06db",
          "url": "https://github.com/lambdaclass/ethrex/commit/ef121af47cb619ad8d617fd96f469e06526ef55c"
        },
        "date": 1751480200131,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006844779487179487,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "94380962+sofiazcoaga@users.noreply.github.com",
            "name": "sofiazcoaga",
            "username": "sofiazcoaga"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2983a9baead8000a97075bc1c683917db91f3f59",
          "message": "refactor(levm): obtain gas calculation params from auxiliar function (#3420)\n\n**Motivation** \n\nThis PR addresses\n[issue](https://github.com/lambdaclass/ethrex/issues/3095).\n\n**Description**\n\nOpcodes CALL, CALLCODE, DELEGATECALL and STATICCALL had each a custom\ngas calculation function but used the same input arguments and obtained\nthem with the same process.\n\nNow a new method called `get_call_gas_params()` includes these common\ncalculations and gets invoked by all opcodes handlers.",
          "timestamp": "2025-07-02T18:24:45Z",
          "tree_id": "a016c67fe51999cd1800a796edb74494eecd7fc7",
          "url": "https://github.com/lambdaclass/ethrex/commit/2983a9baead8000a97075bc1c683917db91f3f59"
        },
        "date": 1751482059850,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006775289340101523,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1189f2f34bde1205ac7d3a1568ec28f536ea45df",
          "message": "chore(l2): re-enable risc0 (#3172)\n\n**Motivation**\n\nrisc0 support was temporarily deprecated because of incompatible\nversions between some required ethrex's dependencies and the risc0\ntoolchain.\n\nNow the toolchain uses a newer version so this problem should be solved,\nbut the backend needs some maintenance to get it working again.\n\n**Description**\n\n- update risc0 to latest version\n- update risc0's build script for the new version\n- refactor kzg verification into ethrex-common\n- support kzg verification with both kzg-rs and c-kzg (sp1 is only\ncompatible with kzg-rs, risc0 only with c-kzg)\n- fix wrong public inputs encoding\n- fix wrong image id encoding\n- add risc0 verification key (also called image id) as a contract\nvariable\n- add risc0 lint job and refactor jobs for other backends\n- add docs for local testing (deployment of risc0 contracts)\n\nCloses #2145",
          "timestamp": "2025-07-02T18:59:01Z",
          "tree_id": "26a8a49c495eb83e22a7b0df4c708bc87119278b",
          "url": "https://github.com/lambdaclass/ethrex/commit/1189f2f34bde1205ac7d3a1568ec28f536ea45df"
        },
        "date": 1751484268086,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0067071959798994975,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "eee2e9d5bd2c218e710c42b873e174332d21693a",
          "message": "refactor(l2): refactor privileged transactions (#3365)\n\n**Motivation**\n\nWe want to unify the terminology used to refer to sending privileged\ntransactions to the L2, since they are not just deposits.\n\nAlso, the `DepositInitiated` (now `PrivilegedTxSent`) event must be\ncleaned up: `l2MintTxHash` is irrelevant since it can be recomputed, and\nit doesn't make sense to index `amount` but not `from`.\n\nSome clean up (for example, removing `recipient`) was already done in\n#3320.\n\n**Description**\n\n* Removes the l2 transaction from the deposit event\n* Adds `indexed` to `from` and removes it from `address`\n* Renames deposit to 'privileged transactions' where more appropriate\n\nCloses #3233\n\n---------\n\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>",
          "timestamp": "2025-07-02T19:56:25Z",
          "tree_id": "4b8a36c061ca344254acf3e14d89d0b515efed4c",
          "url": "https://github.com/lambdaclass/ethrex/commit/eee2e9d5bd2c218e710c42b873e174332d21693a"
        },
        "date": 1751488804852,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006510887804878049,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "95a28c6887bf8fa788044dd0d4b744f261409e52",
          "message": "fix(l2): risc0 replay job (#3448)",
          "timestamp": "2025-07-02T20:31:55Z",
          "tree_id": "d0205853ef4b83bdbd04fc69bd6d15b2a57abe9b",
          "url": "https://github.com/lambdaclass/ethrex/commit/95a28c6887bf8fa788044dd0d4b744f261409e52"
        },
        "date": 1751491173248,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006542803921568628,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44068466+SDartayet@users.noreply.github.com",
            "name": "SDartayet",
            "username": "SDartayet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "40a7deacf016a3856e432928b5a86d45234b602e",
          "message": "chore(l1): sync tooling fixes (#3064)\n\n**Motivation**\n\nAdding some minor fixes to the recently merged sync tooling.\n\n**Description**\n\nAdded some stuff to the tooling that was recently merged related to\nflamegraphs, also fixed one of the logs added which we noticed\nintroduced some noise to the info logs.\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-07-02T21:06:40Z",
          "tree_id": "97307fd199489700ebc9e19323f6f8325c49c9a1",
          "url": "https://github.com/lambdaclass/ethrex/commit/40a7deacf016a3856e432928b5a86d45234b602e"
        },
        "date": 1751492577491,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0067071959798994975,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "89949621+ricomateo@users.noreply.github.com",
            "name": "Mateo Rico",
            "username": "ricomateo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4f66425fae9d872e4d75fb3e6a1c52058247b8d4",
          "message": "fix(l1): incorrect tx size check causing peers to be rejected (#3450)\n\n**Motivation**\nA bug currently causes peers' pooled transactions to be incorrectly\nrejected due to a mismatch in transaction size validation.\n\n**Description**\nWhen a `PooledTransactions` message is received, the implementation\nvalidates that the transactions match the originally requested ones\n(which are requested by sending `GetPooledTransactions`).\n\nOne of these validations checks that the size of each received\ntransaction matches the expected size. However, the transaction size was\nbeing computed incorrectly, leading to false rejections.\n\nThis PR fixes the error by computing the transaction size in the right\nway. Now, the transaction size is computed according to the\n[specification](https://github.com/ethereum/devp2p/blob/master/caps/eth.md#newpooledtransactionhashes-0x08):\n\n> `txsizeₙ` refers to the length of the 'consensus encoding' of a typed\ntransaction, i.e. the byte size of `tx-type || tx-data` for typed\ntransactions, and the size of the RLP-encoded `legacy-tx` for non-typed\nlegacy transactions.\n\nTo achieve this, we now use the `encode_canonical_to_vec()` method,\nwhich returns the appropriate encoding for both typed and legacy\ntransactions. The length of this encoding is then used as the\ntransaction size.\n\nThis can be tested by setting up a localnet with `make localnet`,\nwaiting around 2 minutes and checking that there are no logs like the\nfollowing\n\n```bash\n\n2025-07-02T19:56:51.324981Z  WARN ethrex_p2p::rlpx::utils: [0x03dd…06fa(172.16.0.11:30303)]: disconnected from peer. Reason: Invalid pooled transaction size, differs from expected\n```\n\nCloses #3251",
          "timestamp": "2025-07-02T21:25:16Z",
          "tree_id": "d9b129f2aa29ec48b32138b2111a4f8ca7df5d64",
          "url": "https://github.com/lambdaclass/ethrex/commit/4f66425fae9d872e4d75fb3e6a1c52058247b8d4"
        },
        "date": 1751493251277,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006809857142857143,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7ff4eeaf53f72e6cdc141e60ff98263eea80494a",
          "message": "perf(levm): use a stack pool (#3386)\n\n**Motivation**\n\nFixes #3385\n\nhttps://share.firefox.dev/44uRnnn\n\nThe perfomance gain from this pr cannot be seen with the factorial\nrecursive bench, because it doesn't reuse the stack, it always goes full\ndeep and then up.\n\nWith a fibonacci recursive bench it can be seen:\n\nMain\n\n![image](https://github.com/user-attachments/assets/e2fae3b0-1839-4105-afa1-8bbde4c216ae)\n\nPR\n\n![image](https://github.com/user-attachments/assets/1a12cf4b-66cf-45ce-a9dd-8079804bfb48)\n\nNeeds https://github.com/lambdaclass/ethrex/pull/3391 to show the perf\ngains in benches",
          "timestamp": "2025-07-03T11:06:14Z",
          "tree_id": "9a613b17e3e3e752a434ceb4136f474db26615b4",
          "url": "https://github.com/lambdaclass/ethrex/commit/7ff4eeaf53f72e6cdc141e60ff98263eea80494a"
        },
        "date": 1751542816183,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007062074074074074,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ef3422302e9d726c275257580a81af67aa38e9f4",
          "message": "ci(l2): fix prover workflow (#3445)\n\n**Motivation**\n\nThe Integration Test Prover Sp1 workflow was broken due to several\nissues:\n- It was using outdated `contract_deployer` and `ethrex_l2` images.\n- There were permission issues on the `_work` directory.\n- `solc` was not installed.\n\nHere is a successful run of the workflow:\nhttps://github.com/lambdaclass/ethrex/actions/runs/16037084316/job/45251233852?pr=3445\n\nCloses: None",
          "timestamp": "2025-07-03T13:06:45Z",
          "tree_id": "80bf236de9f084bbabdc96c8a3809662ebb0ca77",
          "url": "https://github.com/lambdaclass/ethrex/commit/ef3422302e9d726c275257580a81af67aa38e9f4"
        },
        "date": 1751549389715,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0070249052631578945,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estebandh@gmail.com",
            "name": "ElFantasma",
            "username": "ElFantasma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c6ad97cfc44c3f020aad5903523460ea0ed77d71",
          "message": "refactor(l1): spawned p2p (#3164)\n\nP2p connection processes are complex and error prone. Using `spawned` to\nclean it up and properly separate concurrency logic from business logic.\n\n**Description**\n\nReplaces the main_loop from `RLPxConnection` with a `spawned` process\nthat handles all the messages from and to the remote peer, as well as\nthe backend.\n\n---------\n\nCo-authored-by: Lucas Fiegl <iovoid@users.noreply.github.com>\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Manuel Iñaki Bilbao <manuel.bilbao@lambdaclass.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>\nCo-authored-by: Mario Rugiero <mrugiero@gmail.com>\nCo-authored-by: MrAzteca <azteca1998@users.noreply.github.com>\nCo-authored-by: Edgar <git@edgl.dev>\nCo-authored-by: LeanSerra <46695152+LeanSerra@users.noreply.github.com>",
          "timestamp": "2025-07-03T13:14:32Z",
          "tree_id": "c65b59388161b372d09b873e05057699ee1b2c00",
          "url": "https://github.com/lambdaclass/ethrex/commit/c6ad97cfc44c3f020aad5903523460ea0ed77d71"
        },
        "date": 1751556410275,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006809857142857143,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "ca7e0a245c6e59d5b5d0bba2bce67b8e744b0243",
          "message": "ci(l2): ethrex replay risc0",
          "timestamp": "2025-07-03T16:01:52Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3464/commits/ca7e0a245c6e59d5b5d0bba2bce67b8e744b0243"
        },
        "date": 1751563708045,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006809857142857143,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "0c59b9954b1d183103e317d551f0bcb66e4810ca",
          "message": "ci(l2): ethrex replay risc0",
          "timestamp": "2025-07-03T21:16:59Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3464/commits/0c59b9954b1d183103e317d551f0bcb66e4810ca"
        },
        "date": 1751588203362,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006951729166666667,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "0c59b9954b1d183103e317d551f0bcb66e4810ca",
          "message": "ci(l2): ethrex replay risc0",
          "timestamp": "2025-07-03T21:16:59Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3464/commits/0c59b9954b1d183103e317d551f0bcb66e4810ca"
        },
        "date": 1751590634914,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012089963768115942,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8f16da17176a34c5dec3a0284f064382430c5bfc",
          "message": "ci(l2): ethrex replay risc0 (#3464)\n\n**Motivation**\n\nRisc0 was failing to compile in our self hosted runner because the $PATH\ndidn't have nvcc\n\n\n**Description**\n\n- Add nvcc \n- Use `JSONProgramInput` for risc0 to solve bincode issue\n- Add `prove-risc0-gpu-ci` target to `cmd/ethrex_replay/Makefile` \n- Successful run\n[here](https://github.com/lambdaclass/ethrex/actions/runs/16062825245/job/45331954610)",
          "timestamp": "2025-07-04T13:34:18Z",
          "tree_id": "e733b726c2525d6f5af1377a6c8b2593ad851ce7",
          "url": "https://github.com/lambdaclass/ethrex/commit/8f16da17176a34c5dec3a0284f064382430c5bfc"
        },
        "date": 1751641585581,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012627549668874172,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8f16da17176a34c5dec3a0284f064382430c5bfc",
          "message": "ci(l2): ethrex replay risc0 (#3464)\n\n**Motivation**\n\nRisc0 was failing to compile in our self hosted runner because the $PATH\ndidn't have nvcc\n\n\n**Description**\n\n- Add nvcc \n- Use `JSONProgramInput` for risc0 to solve bincode issue\n- Add `prove-risc0-gpu-ci` target to `cmd/ethrex_replay/Makefile` \n- Successful run\n[here](https://github.com/lambdaclass/ethrex/actions/runs/16062825245/job/45331954610)",
          "timestamp": "2025-07-04T13:34:18Z",
          "tree_id": "e733b726c2525d6f5af1377a6c8b2593ad851ce7",
          "url": "https://github.com/lambdaclass/ethrex/commit/8f16da17176a34c5dec3a0284f064382430c5bfc"
        },
        "date": 1751642259894,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006355866666666667,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4acb6a78bf85f53b36db8cf4197a765f753ad6b7",
          "message": "test(l1): fix EEST RLP tests (#3415)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- Execute `.rlp` files (each represent a block in execution-spec-tests)\nin the correct order\n- Set the canonical block right after executing it, so that if one of\nthe executed block fails then the canonical block is the previous of the\nfailed block. Before we only set the canonical block if all blocks\nexecuted succeeded.\n\n[Example\nRun](https://github.com/lambdaclass/ethrex/actions/runs/15984844429)\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3405",
          "timestamp": "2025-07-04T14:27:38Z",
          "tree_id": "75d33b5c23ab5e51fec7f6172510e3c112a21bf1",
          "url": "https://github.com/lambdaclass/ethrex/commit/4acb6a78bf85f53b36db8cf4197a765f753ad6b7"
        },
        "date": 1751649614674,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006607584158415842,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4acb6a78bf85f53b36db8cf4197a765f753ad6b7",
          "message": "test(l1): fix EEST RLP tests (#3415)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- Execute `.rlp` files (each represent a block in execution-spec-tests)\nin the correct order\n- Set the canonical block right after executing it, so that if one of\nthe executed block fails then the canonical block is the previous of the\nfailed block. Before we only set the canonical block if all blocks\nexecuted succeeded.\n\n[Example\nRun](https://github.com/lambdaclass/ethrex/actions/runs/15984844429)\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3405",
          "timestamp": "2025-07-04T14:27:38Z",
          "tree_id": "75d33b5c23ab5e51fec7f6172510e3c112a21bf1",
          "url": "https://github.com/lambdaclass/ethrex/commit/4acb6a78bf85f53b36db8cf4197a765f753ad6b7"
        },
        "date": 1751652236061,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012450858208955225,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ccfc231b5756c045b2d55febbb796ea63877d56a",
          "message": "ci(core): fix block benchmark ci (#3484)\n\n**Motivation**\n\nIts broken :(\n\n**Description**\n\n- The file `genesis-perf-ci.json` was moved and the reference was not\nupdated. This PR updates the reference\n- Here is a failing run in main\nhttps://github.com/lambdaclass/ethrex/actions/runs/16075239686/job/45368784296\n- Here is a test run in this pr that didn't panic when reading the file\nhttps://github.com/lambdaclass/ethrex/actions/runs/16075285386/job/45368928205.\n   - The run was cut short because it takes 40+ minutes to run",
          "timestamp": "2025-07-04T14:33:11Z",
          "tree_id": "98ae5f4311797a75c27363ff9b6ddb9d43b49a04",
          "url": "https://github.com/lambdaclass/ethrex/commit/ccfc231b5756c045b2d55febbb796ea63877d56a"
        },
        "date": 1751652934799,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006607584158415842,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ccfc231b5756c045b2d55febbb796ea63877d56a",
          "message": "ci(core): fix block benchmark ci (#3484)\n\n**Motivation**\n\nIts broken :(\n\n**Description**\n\n- The file `genesis-perf-ci.json` was moved and the reference was not\nupdated. This PR updates the reference\n- Here is a failing run in main\nhttps://github.com/lambdaclass/ethrex/actions/runs/16075239686/job/45368784296\n- Here is a test run in this pr that didn't panic when reading the file\nhttps://github.com/lambdaclass/ethrex/actions/runs/16075285386/job/45368928205.\n   - The run was cut short because it takes 40+ minutes to run",
          "timestamp": "2025-07-04T14:33:11Z",
          "tree_id": "98ae5f4311797a75c27363ff9b6ddb9d43b49a04",
          "url": "https://github.com/lambdaclass/ethrex/commit/ccfc231b5756c045b2d55febbb796ea63877d56a"
        },
        "date": 1751655486620,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001256809792843691,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5abf85df328b22d2674a321d30a89dae033b01f6",
          "message": "fix(l2): gas used in replay block range (#3483)\n\n**Motivation**\n\nThe `gas_used` value in block range execution/proving was incorrect. We\nwere returning the gas used by only the first block.\n\n**Description**\n\n- Returns the total gas used across all blocks.\n- Also moves the `or_latest` function, as it doesn’t belong in `fetcher`\nanymore.\n\nCloses: None",
          "timestamp": "2025-07-04T14:57:07Z",
          "tree_id": "4fa8efbdb3ce22caed01d05826918a163151f9b5",
          "url": "https://github.com/lambdaclass/ethrex/commit/5abf85df328b22d2674a321d30a89dae033b01f6"
        },
        "date": 1751662334930,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012335785582255083,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5abf85df328b22d2674a321d30a89dae033b01f6",
          "message": "fix(l2): gas used in replay block range (#3483)\n\n**Motivation**\n\nThe `gas_used` value in block range execution/proving was incorrect. We\nwere returning the gas used by only the first block.\n\n**Description**\n\n- Returns the total gas used across all blocks.\n- Also moves the `or_latest` function, as it doesn’t belong in `fetcher`\nanymore.\n\nCloses: None",
          "timestamp": "2025-07-04T14:57:07Z",
          "tree_id": "4fa8efbdb3ce22caed01d05826918a163151f9b5",
          "url": "https://github.com/lambdaclass/ethrex/commit/5abf85df328b22d2674a321d30a89dae033b01f6"
        },
        "date": 1751663063924,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006479281553398058,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f6a839d10689bbf0c016dc7c486d73d485850b21",
          "message": "fix(l1): `RpcBlock` `uncles` field should have the hashes and not the block headers (#3245)\n\n**Motivation**\nFix inconsistencies between our RPC outputs and the spec.\nAccording to the spec endpoints such as `eth_getBlockByNumber` return a\nblock where the `uncles` field contains the hashes of the uncle blocks,\nwhile we return the full headers.\nThis has not been a problem for us as we have been mainly using\npost-merge blocks without uncles, but it will become a problem if we\nneed to export/import older blocks via rpc\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Change `uncles` field of `RpcBlock` from `Vec<BlockHeader>` to\n`Vec<H256`\n* (Bonus) Allow deserializing blocks without `base_fee_per_gas`\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None",
          "timestamp": "2025-07-04T15:10:19Z",
          "tree_id": "4ece4b3ae184c29396de8151f4b8a22ab0a95a0b",
          "url": "https://github.com/lambdaclass/ethrex/commit/f6a839d10689bbf0c016dc7c486d73d485850b21"
        },
        "date": 1751666321077,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006575034482758621,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0f0e27084645dc8fa4675a61ecfc2fe602cdcaf0",
          "message": "feat(l1): embed dev-mode genesis in binary (#3413)\n\n**Motivation**\n\nGiving the user a default dev-mode genesis block makes starting out with\n`ethrex` easy.\n\n**Description**\n\nThis PR:\n\n- Adds a new network option (`Network::LocalDevnet`).\n- Default to the new network when `--dev` is specified but no custom\nnetwork was specified.\n- Remove the genesis downloading step from install script.\n- Update the readme to reflect that no genesis file needs to be\nspecified; ethrex comes with batteries included 🦖\n\nCloses #3378",
          "timestamp": "2025-07-04T16:00:11Z",
          "tree_id": "2185d63d0fde7445a38117dbcc9e0c2398c6e0d1",
          "url": "https://github.com/lambdaclass/ethrex/commit/0f0e27084645dc8fa4675a61ecfc2fe602cdcaf0"
        },
        "date": 1751668153252,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006575034482758621,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0f0e27084645dc8fa4675a61ecfc2fe602cdcaf0",
          "message": "feat(l1): embed dev-mode genesis in binary (#3413)\n\n**Motivation**\n\nGiving the user a default dev-mode genesis block makes starting out with\n`ethrex` easy.\n\n**Description**\n\nThis PR:\n\n- Adds a new network option (`Network::LocalDevnet`).\n- Default to the new network when `--dev` is specified but no custom\nnetwork was specified.\n- Remove the genesis downloading step from install script.\n- Update the readme to reflect that no genesis file needs to be\nspecified; ethrex comes with batteries included 🦖\n\nCloses #3378",
          "timestamp": "2025-07-04T16:00:11Z",
          "tree_id": "2185d63d0fde7445a38117dbcc9e0c2398c6e0d1",
          "url": "https://github.com/lambdaclass/ethrex/commit/0f0e27084645dc8fa4675a61ecfc2fe602cdcaf0"
        },
        "date": 1751670784521,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001216711030082042,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b08fa01cfcefc97428d5d9872aca7a7637dab6c3",
          "message": "fix(l2): revert to rust 1.87 (#3506)\n\n**Motivation**\n\nThe SP1 and RISC0 workflows are broken because they don't yet support\nRust 1.88.\n\n**Description**\n\nReverts the Rust version to 1.87.\n\n\nCloses None",
          "timestamp": "2025-07-07T16:02:04Z",
          "tree_id": "8ec748de442339ffc840eb543717650bdc405e65",
          "url": "https://github.com/lambdaclass/ethrex/commit/b08fa01cfcefc97428d5d9872aca7a7637dab6c3"
        },
        "date": 1751908116786,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012544473684210527,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b08fa01cfcefc97428d5d9872aca7a7637dab6c3",
          "message": "fix(l2): revert to rust 1.87 (#3506)\n\n**Motivation**\n\nThe SP1 and RISC0 workflows are broken because they don't yet support\nRust 1.88.\n\n**Description**\n\nReverts the Rust version to 1.87.\n\n\nCloses None",
          "timestamp": "2025-07-07T16:02:04Z",
          "tree_id": "8ec748de442339ffc840eb543717650bdc405e65",
          "url": "https://github.com/lambdaclass/ethrex/commit/b08fa01cfcefc97428d5d9872aca7a7637dab6c3"
        },
        "date": 1751911368042,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006575034482758621,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c63bbd7db56b60c495b03a675261db440d1ad7a2",
          "message": "feat(l1): archive sync (#3161)\n\n**Motivation**\nDownload the full state of a given block from an archive node. This will\nenable us to do full sync on mainnet starting from a post-merge block\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3115",
          "timestamp": "2025-07-07T16:37:29Z",
          "tree_id": "6e5c1ac8be1f20fd8a6f87389ab2d52287ed7e2f",
          "url": "https://github.com/lambdaclass/ethrex/commit/c63bbd7db56b60c495b03a675261db440d1ad7a2"
        },
        "date": 1751915002331,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006640457711442786,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c63bbd7db56b60c495b03a675261db440d1ad7a2",
          "message": "feat(l1): archive sync (#3161)\n\n**Motivation**\nDownload the full state of a given block from an archive node. This will\nenable us to do full sync on mainnet starting from a post-merge block\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3115",
          "timestamp": "2025-07-07T16:37:29Z",
          "tree_id": "6e5c1ac8be1f20fd8a6f87389ab2d52287ed7e2f",
          "url": "https://github.com/lambdaclass/ethrex/commit/c63bbd7db56b60c495b03a675261db440d1ad7a2"
        },
        "date": 1751916510494,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012474130841121495,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49622509+jrchatruc@users.noreply.github.com",
            "name": "Javier Rodríguez Chatruc",
            "username": "jrchatruc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0637f3734e69a5c0fcdf1d972f7cebc0e55c04d5",
          "message": "ci(l2): make pr-main_l2_prover a required workflow (#3517)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-07T19:38:19Z",
          "tree_id": "2c235cd71be64af005ff264c24fdb0e2066757ff",
          "url": "https://github.com/lambdaclass/ethrex/commit/0637f3734e69a5c0fcdf1d972f7cebc0e55c04d5"
        },
        "date": 1751918731738,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006510887804878049,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49622509+jrchatruc@users.noreply.github.com",
            "name": "Javier Rodríguez Chatruc",
            "username": "jrchatruc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0637f3734e69a5c0fcdf1d972f7cebc0e55c04d5",
          "message": "ci(l2): make pr-main_l2_prover a required workflow (#3517)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-07T19:38:19Z",
          "tree_id": "2c235cd71be64af005ff264c24fdb0e2066757ff",
          "url": "https://github.com/lambdaclass/ethrex/commit/0637f3734e69a5c0fcdf1d972f7cebc0e55c04d5"
        },
        "date": 1751922602603,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012450858208955225,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ed8e61f04e5bed2f3b496da710b6c4524f1b661d",
          "message": "fix(l1): metrics exporter dashboard total peer count panel (#3470)\n\n**Motivation**\n\nEthereum Metrics Exporter dashboard is showing no peers when running a\nsync, as described in the issue #3104.\n\n**Description**\n\nThis pr fixes the rpc call handler for net_peerCount as described\n[here](https://ethereum.org/en/developers/docs/apis/json-rpc/#net_peercount).\n\nIt also introduces a new function for `PeerHandler` to access the\nconnected peers so the rpc call handler can get the amount.\n\nHere you can see how the panel looks like now:\n<img width=\"1425\" alt=\"Screenshot 2025-07-03 at 13 29 57\"\nsrc=\"https://github.com/user-attachments/assets/89c699a8-72bb-4a42-918a-c9e3ea6d3036\"\n/>\n\nTo run this you can go to tooling/sync and run make\nstart_hoodi_metrics_docker, then go to http://localhost:3001/ to see the\npanels.\n\nCloses #3468\n\n---------\n\nCo-authored-by: fmoletta <99273364+fmoletta@users.noreply.github.com>",
          "timestamp": "2025-07-07T19:39:22Z",
          "tree_id": "2664be10e47fd8ab522ad28be25f8e3c412498a1",
          "url": "https://github.com/lambdaclass/ethrex/commit/ed8e61f04e5bed2f3b496da710b6c4524f1b661d"
        },
        "date": 1751925963308,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006575034482758621,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ed8e61f04e5bed2f3b496da710b6c4524f1b661d",
          "message": "fix(l1): metrics exporter dashboard total peer count panel (#3470)\n\n**Motivation**\n\nEthereum Metrics Exporter dashboard is showing no peers when running a\nsync, as described in the issue #3104.\n\n**Description**\n\nThis pr fixes the rpc call handler for net_peerCount as described\n[here](https://ethereum.org/en/developers/docs/apis/json-rpc/#net_peercount).\n\nIt also introduces a new function for `PeerHandler` to access the\nconnected peers so the rpc call handler can get the amount.\n\nHere you can see how the panel looks like now:\n<img width=\"1425\" alt=\"Screenshot 2025-07-03 at 13 29 57\"\nsrc=\"https://github.com/user-attachments/assets/89c699a8-72bb-4a42-918a-c9e3ea6d3036\"\n/>\n\nTo run this you can go to tooling/sync and run make\nstart_hoodi_metrics_docker, then go to http://localhost:3001/ to see the\npanels.\n\nCloses #3468\n\n---------\n\nCo-authored-by: fmoletta <99273364+fmoletta@users.noreply.github.com>",
          "timestamp": "2025-07-07T19:39:22Z",
          "tree_id": "2664be10e47fd8ab522ad28be25f8e3c412498a1",
          "url": "https://github.com/lambdaclass/ethrex/commit/ed8e61f04e5bed2f3b496da710b6c4524f1b661d"
        },
        "date": 1751927411731,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012627549668874172,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e141e1004a011bffd5d2f754c8d64c9efd770c8d",
          "message": "chore(l2): add ERC20 failed deposit integration test (#3547)\n\n**Motivation**\n\nWe want to ensure if a deposit fails, the funds won't be lost.\n\n**Description**\n\nAdds an integration test for ERC20 failed deposit turning into a\nwithdrawal.\n\nCloses #3990",
          "timestamp": "2025-07-08T15:28:54Z",
          "tree_id": "268aed2a136e9b2adf6d415b9a552fbcc01491bd",
          "url": "https://github.com/lambdaclass/ethrex/commit/e141e1004a011bffd5d2f754c8d64c9efd770c8d"
        },
        "date": 1751990183801,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006575034482758621,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e141e1004a011bffd5d2f754c8d64c9efd770c8d",
          "message": "chore(l2): add ERC20 failed deposit integration test (#3547)\n\n**Motivation**\n\nWe want to ensure if a deposit fails, the funds won't be lost.\n\n**Description**\n\nAdds an integration test for ERC20 failed deposit turning into a\nwithdrawal.\n\nCloses #3990",
          "timestamp": "2025-07-08T15:28:54Z",
          "tree_id": "268aed2a136e9b2adf6d415b9a552fbcc01491bd",
          "url": "https://github.com/lambdaclass/ethrex/commit/e141e1004a011bffd5d2f754c8d64c9efd770c8d"
        },
        "date": 1751994546349,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012532694835680751,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "752c20b5552cceab1ed2959488929639a96a8661",
          "message": "fix(l1,l2): eth client send blobs when calling eth_estimateGas  (#3540)\n\n**Motivation**\n\nWhen calling eth_estimateGas to estimate the gas for the L2 commitment\nthe call was reverting because the blob was not included in the call\n\n**Description**\n\n- Add a function to add the blobs to a GenericTransaction\n- Add the field \"blobs\" to the request if the blobs field is not empty\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>",
          "timestamp": "2025-07-08T16:32:38Z",
          "tree_id": "ca06e38d7ee9df3793f6335ef93231ecdfdd30c3",
          "url": "https://github.com/lambdaclass/ethrex/commit/752c20b5552cceab1ed2959488929639a96a8661"
        },
        "date": 1752000558696,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006542803921568628,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "752c20b5552cceab1ed2959488929639a96a8661",
          "message": "fix(l1,l2): eth client send blobs when calling eth_estimateGas  (#3540)\n\n**Motivation**\n\nWhen calling eth_estimateGas to estimate the gas for the L2 commitment\nthe call was reverting because the blob was not included in the call\n\n**Description**\n\n- Add a function to add the blobs to a GenericTransaction\n- Add the field \"blobs\" to the request if the blobs field is not empty\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>",
          "timestamp": "2025-07-08T16:32:38Z",
          "tree_id": "ca06e38d7ee9df3793f6335ef93231ecdfdd30c3",
          "url": "https://github.com/lambdaclass/ethrex/commit/752c20b5552cceab1ed2959488929639a96a8661"
        },
        "date": 1752009228021,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012335785582255083,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d1ceb86cb32f8949ecd3fc279084f6921c3e757f",
          "message": "fix(l1): ignore unknown protocols in capability exchange (#3543)\n\n**Motivation**\n\nFailing due to a peer having extra capabilities can make us lose\nexceptional peers. Hence, we want to ignore any extra capabilities they\nhave.\n\n**Description**\n\nThis PR changes `Capability.protocol` to be an 8-byte array instead of a\nstring, allowing us to store any string we receive.",
          "timestamp": "2025-07-08T17:12:21Z",
          "tree_id": "b73d081e492be3f36630c76381bba95066e5b585",
          "url": "https://github.com/lambdaclass/ethrex/commit/d1ceb86cb32f8949ecd3fc279084f6921c3e757f"
        },
        "date": 1752011731352,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012639507575757576,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d1ceb86cb32f8949ecd3fc279084f6921c3e757f",
          "message": "fix(l1): ignore unknown protocols in capability exchange (#3543)\n\n**Motivation**\n\nFailing due to a peer having extra capabilities can make us lose\nexceptional peers. Hence, we want to ignore any extra capabilities they\nhave.\n\n**Description**\n\nThis PR changes `Capability.protocol` to be an 8-byte array instead of a\nstring, allowing us to store any string we receive.",
          "timestamp": "2025-07-08T17:12:21Z",
          "tree_id": "b73d081e492be3f36630c76381bba95066e5b585",
          "url": "https://github.com/lambdaclass/ethrex/commit/d1ceb86cb32f8949ecd3fc279084f6921c3e757f"
        },
        "date": 1752012569899,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006479281553398058,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "89949621+ricomateo@users.noreply.github.com",
            "name": "Mateo Rico",
            "username": "ricomateo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "715c2bbe2c6d139bb938ea87c6aa1a07ade060d6",
          "message": "refactor(levm): change returned error types to `InternalError` (#3322)\n\n**Motivation**\nFrom [#3063](https://github.com/lambdaclass/ethrex/issues/3063)\n\n> There are various cases in which we return an error with the\nExceptionalHalt type but they actually are InternalErrors, things that\nshouldn't ever happen and if they happen they should break.\nThis is not a critical issue since if the VM is working fine then it\nwon't ever enter to those cases, but it would be more precise if we\ncatalogued those errors as internals instead of saying that they revert\nexecution when they don't.\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\nIntroduces the following changes:\n* Replaces `PrecompileError` with `InternalError` in those cases in\nwhich an error is returned even though is not possible for the\ninstruction to fail, typically when slicing bytes whose size have been\nalready checked.\n* Removes the error types `EvaluationError` and `DefaultError` (which\nwere quite generic) from `PrecompileError` and adds specific and more\ndescriptive error types instead (`InvalidPoint`, `PointNotInTheCurve`,\netc).\n* Removes the `PrecompileError::GasConsumedOverflow` error type.\n\n\n\nCloses #3063\n\n---------\n\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-07-08T17:26:31Z",
          "tree_id": "6b8f7bd82899863be607fc39c39df00c6ebac941",
          "url": "https://github.com/lambdaclass/ethrex/commit/715c2bbe2c6d139bb938ea87c6aa1a07ade060d6"
        },
        "date": 1752013414280,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006479281553398058,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "89949621+ricomateo@users.noreply.github.com",
            "name": "Mateo Rico",
            "username": "ricomateo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "715c2bbe2c6d139bb938ea87c6aa1a07ade060d6",
          "message": "refactor(levm): change returned error types to `InternalError` (#3322)\n\n**Motivation**\nFrom [#3063](https://github.com/lambdaclass/ethrex/issues/3063)\n\n> There are various cases in which we return an error with the\nExceptionalHalt type but they actually are InternalErrors, things that\nshouldn't ever happen and if they happen they should break.\nThis is not a critical issue since if the VM is working fine then it\nwon't ever enter to those cases, but it would be more precise if we\ncatalogued those errors as internals instead of saying that they revert\nexecution when they don't.\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\nIntroduces the following changes:\n* Replaces `PrecompileError` with `InternalError` in those cases in\nwhich an error is returned even though is not possible for the\ninstruction to fail, typically when slicing bytes whose size have been\nalready checked.\n* Removes the error types `EvaluationError` and `DefaultError` (which\nwere quite generic) from `PrecompileError` and adds specific and more\ndescriptive error types instead (`InvalidPoint`, `PointNotInTheCurve`,\netc).\n* Removes the `PrecompileError::GasConsumedOverflow` error type.\n\n\n\nCloses #3063\n\n---------\n\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-07-08T17:26:31Z",
          "tree_id": "6b8f7bd82899863be607fc39c39df00c6ebac941",
          "url": "https://github.com/lambdaclass/ethrex/commit/715c2bbe2c6d139bb938ea87c6aa1a07ade060d6"
        },
        "date": 1752018324519,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012556274694261525,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "53546f4e280e333ad80df31355bd1fc887991d10",
          "message": "fix(l1): abort `show_state_sync_progress` task  (#3406)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nThe `show_state_sync_progress` task used to run until all\n`state_sync_segment` tasks had signaled their conclusion via\n`end_segment` method. This could cause the task to hand indeterminately\nif one of the tasks failed. This PR aims to fix this by removing the\nresponsibility of signaling their end from `state_sync_segment` and\ninstead have `state_sync` method (the one that launched both\n`show_state_sync_progress` & the `state_sync_segment` tasks) be the one\nto end the `show_state_sync_progress` task via an abort\n**Description**\n* Remove method `StateSyncProgress::end_segment` & associated field\n* `show_state_sync_progress` is now an endless task\n* `state_sync` now aborts `show_state_sync_progress` when no longer\nneeded instead of waiting for it to finish\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-07-08T18:11:03Z",
          "tree_id": "db56a77d681fdf0503b3de056d2867e86bc95061",
          "url": "https://github.com/lambdaclass/ethrex/commit/53546f4e280e333ad80df31355bd1fc887991d10"
        },
        "date": 1752021796597,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006542803921568628,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "53546f4e280e333ad80df31355bd1fc887991d10",
          "message": "fix(l1): abort `show_state_sync_progress` task  (#3406)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nThe `show_state_sync_progress` task used to run until all\n`state_sync_segment` tasks had signaled their conclusion via\n`end_segment` method. This could cause the task to hand indeterminately\nif one of the tasks failed. This PR aims to fix this by removing the\nresponsibility of signaling their end from `state_sync_segment` and\ninstead have `state_sync` method (the one that launched both\n`show_state_sync_progress` & the `state_sync_segment` tasks) be the one\nto end the `show_state_sync_progress` task via an abort\n**Description**\n* Remove method `StateSyncProgress::end_segment` & associated field\n* `show_state_sync_progress` is now an endless task\n* `state_sync` now aborts `show_state_sync_progress` when no longer\nneeded instead of waiting for it to finish\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-07-08T18:11:03Z",
          "tree_id": "db56a77d681fdf0503b3de056d2867e86bc95061",
          "url": "https://github.com/lambdaclass/ethrex/commit/53546f4e280e333ad80df31355bd1fc887991d10"
        },
        "date": 1752026914291,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012532694835680751,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c15c01ae92a2f736614192f65d1884539d9e6ed5",
          "message": "ci(l1,l2): remove `core` scope and improve PR labeling workflow (#3561)\n\n**Motivation**\n\n- Declutter `ethrex_l1` project and remove ambiguous `core` scope in\ntitle.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- Remove core scope because it is ambiguous. Replace it with `l1,l2`\n- Merge `pr_author.yaml` and `pr_label.yaml` into one file\n`pr_github_metadata.yaml`\n- Change rules of labeling because of preferences in our projects:\n- `ethrex_performance`: Will have PRs that have `perf` at the beginning\nof the title.\n  - `ethrex_l2`: Will have any PR that has in the title scope `l2`\n- `ethrex_l1`: Will have PRs that haven't been assigned to\n`ethrex_performance` or `ethrex_l2` that have `l1` or `levm` in their\ntitle.\n\nThe decisions were made according to the preferences of each team.\n`ethrex_l2` project will have anything that has to do with the L2\n`ethrex_l1` project will have things that touch only l1 stuff and\nnothing else so that we assure they truly belong to this project. Some\nPRs will be filtered out and will have to be added manually, but we\nprefer that rather over the clutter of having more PRs than necessary.\n\nCloses #3565",
          "timestamp": "2025-07-08T18:18:32Z",
          "tree_id": "40bae128432e6ab09b6688b548bf5e4f8870f8aa",
          "url": "https://github.com/lambdaclass/ethrex/commit/c15c01ae92a2f736614192f65d1884539d9e6ed5"
        },
        "date": 1752027750227,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006640457711442786,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c15c01ae92a2f736614192f65d1884539d9e6ed5",
          "message": "ci(l1,l2): remove `core` scope and improve PR labeling workflow (#3561)\n\n**Motivation**\n\n- Declutter `ethrex_l1` project and remove ambiguous `core` scope in\ntitle.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- Remove core scope because it is ambiguous. Replace it with `l1,l2`\n- Merge `pr_author.yaml` and `pr_label.yaml` into one file\n`pr_github_metadata.yaml`\n- Change rules of labeling because of preferences in our projects:\n- `ethrex_performance`: Will have PRs that have `perf` at the beginning\nof the title.\n  - `ethrex_l2`: Will have any PR that has in the title scope `l2`\n- `ethrex_l1`: Will have PRs that haven't been assigned to\n`ethrex_performance` or `ethrex_l2` that have `l1` or `levm` in their\ntitle.\n\nThe decisions were made according to the preferences of each team.\n`ethrex_l2` project will have anything that has to do with the L2\n`ethrex_l1` project will have things that touch only l1 stuff and\nnothing else so that we assure they truly belong to this project. Some\nPRs will be filtered out and will have to be added manually, but we\nprefer that rather over the clutter of having more PRs than necessary.\n\nCloses #3565",
          "timestamp": "2025-07-08T18:18:32Z",
          "tree_id": "40bae128432e6ab09b6688b548bf5e4f8870f8aa",
          "url": "https://github.com/lambdaclass/ethrex/commit/c15c01ae92a2f736614192f65d1884539d9e6ed5"
        },
        "date": 1752032621800,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012651488151658769,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5a14d806d0c84aef0266de503cbd451cab599d8b",
          "message": "feat(l2): add L1From field to privileged transaction events (#3477)\n\n**Motivation**\n\nAs described on #3452, it is convenient for client applications to be\nable to search their sent privileged transactions.\n\n**Description**\n\nThis PR drops indexing from all PrivilegedTxSent fields and adds an\nindexed L1From member.\n \nCloses #3452\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-07-08T19:04:41Z",
          "tree_id": "54d832d221764ef90884589a6bd5db81bd0fed13",
          "url": "https://github.com/lambdaclass/ethrex/commit/5a14d806d0c84aef0266de503cbd451cab599d8b"
        },
        "date": 1752033449239,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006542803921568628,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5a14d806d0c84aef0266de503cbd451cab599d8b",
          "message": "feat(l2): add L1From field to privileged transaction events (#3477)\n\n**Motivation**\n\nAs described on #3452, it is convenient for client applications to be\nable to search their sent privileged transactions.\n\n**Description**\n\nThis PR drops indexing from all PrivilegedTxSent fields and adds an\nindexed L1From member.\n \nCloses #3452\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-07-08T19:04:41Z",
          "tree_id": "54d832d221764ef90884589a6bd5db81bd0fed13",
          "url": "https://github.com/lambdaclass/ethrex/commit/5a14d806d0c84aef0266de503cbd451cab599d8b"
        },
        "date": 1752035911012,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012603701605288008,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f07af68346980f2762f0a71cf0de7ba87c49642b",
          "message": "fix(l2): use github token to avoid rate limit (#3570)\n\n**Motivation**\n\nOur CI is failing at the `Install solc` step in almost all jobs due to a\n`rate limit` error.\n\n**Description**\n\nAuthenticates using a GitHub token to bypass the rate limit.\n\nCloses None",
          "timestamp": "2025-07-08T21:31:57Z",
          "tree_id": "9d743d53d18ef3e1cedc95540f53d0513e1d1176",
          "url": "https://github.com/lambdaclass/ethrex/commit/f07af68346980f2762f0a71cf0de7ba87c49642b"
        },
        "date": 1752038381463,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001256809792843691,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f07af68346980f2762f0a71cf0de7ba87c49642b",
          "message": "fix(l2): use github token to avoid rate limit (#3570)\n\n**Motivation**\n\nOur CI is failing at the `Install solc` step in almost all jobs due to a\n`rate limit` error.\n\n**Description**\n\nAuthenticates using a GitHub token to bypass the rate limit.\n\nCloses None",
          "timestamp": "2025-07-08T21:31:57Z",
          "tree_id": "9d743d53d18ef3e1cedc95540f53d0513e1d1176",
          "url": "https://github.com/lambdaclass/ethrex/commit/f07af68346980f2762f0a71cf0de7ba87c49642b"
        },
        "date": 1752039192707,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006607584158415842,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8aa44c11650df469a2a89d215c9791da67403a4b",
          "message": "ci(l1): comment flaky devp2p test BasicFindnode (#3542)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nThis test fails very occasionally, here are a few runs in which it\nhappened:\n-\nhttps://github.com/lambdaclass/ethrex/actions/runs/16125250426/job/45501078767\n-\nhttps://github.com/lambdaclass/ethrex/actions/runs/16126040468/job/45503603345\n-\nhttps://github.com/lambdaclass/ethrex/actions/runs/16120603086/job/45485976155\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3549",
          "timestamp": "2025-07-08T23:18:40Z",
          "tree_id": "61b413b67618e34b836f1dc72f2729db6fd4c0da",
          "url": "https://github.com/lambdaclass/ethrex/commit/8aa44c11650df469a2a89d215c9791da67403a4b"
        },
        "date": 1752041668897,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012544473684210527,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8aa44c11650df469a2a89d215c9791da67403a4b",
          "message": "ci(l1): comment flaky devp2p test BasicFindnode (#3542)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nThis test fails very occasionally, here are a few runs in which it\nhappened:\n-\nhttps://github.com/lambdaclass/ethrex/actions/runs/16125250426/job/45501078767\n-\nhttps://github.com/lambdaclass/ethrex/actions/runs/16126040468/job/45503603345\n-\nhttps://github.com/lambdaclass/ethrex/actions/runs/16120603086/job/45485976155\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3549",
          "timestamp": "2025-07-08T23:18:40Z",
          "tree_id": "61b413b67618e34b836f1dc72f2729db6fd4c0da",
          "url": "https://github.com/lambdaclass/ethrex/commit/8aa44c11650df469a2a89d215c9791da67403a4b"
        },
        "date": 1752042496628,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006510887804878049,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "09dd2a27634849d96d500da4042781d1d4596a12",
          "message": "fix(l1): metrics exporter sync status, percent, distance and rate panels (#3456)\n\n**Motivation**\n\nEthereum Metrics Exporter is showing incorrect data for the sync status,\nsync percent, sync distance and sync rate panels when running a sync, as\ndescribed in the issue #3104.\n\n**Description**\n\nThis pr fixes the rpc call handler for eth_syncing as described\n[here](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_syncing).\n\nHere you can see how the panels look like up to now:\n<img width=\"1429\" alt=\"Screenshot 2025-07-03 at 11 25 57\"\nsrc=\"https://github.com/user-attachments/assets/22646c5d-1ab8-4687-be66-56d2d8eb3fc3\"\n/>\n\nTo run this you can go to tooling/sync and run `make\nstart_hoodi_metrics_docker`, then go to http://localhost:3001/ to see\nthe panels.\n\nCloses #3325 and closes #3455",
          "timestamp": "2025-07-09T11:19:46Z",
          "tree_id": "4ca1ad3f11fa2a52a207afc9fa3c31e230ff2891",
          "url": "https://github.com/lambdaclass/ethrex/commit/09dd2a27634849d96d500da4042781d1d4596a12"
        },
        "date": 1752061642710,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006510887804878049,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "09dd2a27634849d96d500da4042781d1d4596a12",
          "message": "fix(l1): metrics exporter sync status, percent, distance and rate panels (#3456)\n\n**Motivation**\n\nEthereum Metrics Exporter is showing incorrect data for the sync status,\nsync percent, sync distance and sync rate panels when running a sync, as\ndescribed in the issue #3104.\n\n**Description**\n\nThis pr fixes the rpc call handler for eth_syncing as described\n[here](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_syncing).\n\nHere you can see how the panels look like up to now:\n<img width=\"1429\" alt=\"Screenshot 2025-07-03 at 11 25 57\"\nsrc=\"https://github.com/user-attachments/assets/22646c5d-1ab8-4687-be66-56d2d8eb3fc3\"\n/>\n\nTo run this you can go to tooling/sync and run `make\nstart_hoodi_metrics_docker`, then go to http://localhost:3001/ to see\nthe panels.\n\nCloses #3325 and closes #3455",
          "timestamp": "2025-07-09T11:19:46Z",
          "tree_id": "4ca1ad3f11fa2a52a207afc9fa3c31e230ff2891",
          "url": "https://github.com/lambdaclass/ethrex/commit/09dd2a27634849d96d500da4042781d1d4596a12"
        },
        "date": 1752064149502,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012485799812909262,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d454a1b2940492bb4d43e1643f2ec8c97f276e46",
          "message": "perf(levm): improve sstore (#3555)\n\n**Motivation**\n\nLocally the sstore bench from\nhttps://github.com/lambdaclass/ethrex/pull/3552 goes from 2x worse to a\nbit better than revm\n\nGas benchmarks improve 2x\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-09T16:25:59Z",
          "tree_id": "36ea0d7b6740d61c8fd225e9f8c4abb054ad1e83",
          "url": "https://github.com/lambdaclass/ethrex/commit/d454a1b2940492bb4d43e1643f2ec8c97f276e46"
        },
        "date": 1752082860574,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006607584158415842,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d454a1b2940492bb4d43e1643f2ec8c97f276e46",
          "message": "perf(levm): improve sstore (#3555)\n\n**Motivation**\n\nLocally the sstore bench from\nhttps://github.com/lambdaclass/ethrex/pull/3552 goes from 2x worse to a\nbit better than revm\n\nGas benchmarks improve 2x\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-09T16:25:59Z",
          "tree_id": "36ea0d7b6740d61c8fd225e9f8c4abb054ad1e83",
          "url": "https://github.com/lambdaclass/ethrex/commit/d454a1b2940492bb4d43e1643f2ec8c97f276e46"
        },
        "date": 1752085363649,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001240457249070632,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "398a10878145cbb6e1657e2360dc24a0518fbee6",
          "message": "ci(l2): use correct toolchain in nix build (#3507)\n\n**Motivation**\n\nCurrently the rust version is the one in nixpkgs, which might not follow\nour upgrades.\n\n**Description**\n\nChange the build to rely on the toolchain file on the project root.\n\n---------\n\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>\nCo-authored-by: avilagaston9 <gaston.avila@lambdaclass.com>",
          "timestamp": "2025-07-10T13:50:44Z",
          "tree_id": "f5011011b112a406ce0326b0800a05603db9ca48",
          "url": "https://github.com/lambdaclass/ethrex/commit/398a10878145cbb6e1657e2360dc24a0518fbee6"
        },
        "date": 1752160208327,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006640457711442786,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "398a10878145cbb6e1657e2360dc24a0518fbee6",
          "message": "ci(l2): use correct toolchain in nix build (#3507)\n\n**Motivation**\n\nCurrently the rust version is the one in nixpkgs, which might not follow\nour upgrades.\n\n**Description**\n\nChange the build to rely on the toolchain file on the project root.\n\n---------\n\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>\nCo-authored-by: avilagaston9 <gaston.avila@lambdaclass.com>",
          "timestamp": "2025-07-10T13:50:44Z",
          "tree_id": "f5011011b112a406ce0326b0800a05603db9ca48",
          "url": "https://github.com/lambdaclass/ethrex/commit/398a10878145cbb6e1657e2360dc24a0518fbee6"
        },
        "date": 1752162714847,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012347197039777984,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d396ca4b52b5ea3c69fd62a1887ada672c6930ef",
          "message": "fix(l2): avoid proving already proved batch (#3588)\n\n**Motivation**\nAvoid this situation:\n- Prover finishes proving batch n\n- Prover asks for batch to prove gets batch n again because:\n`let batch_to_verify = 1 + get_latest_sent_batch()` is still n because\nthe proof_sender dind't send the verification tx yet.\n- Verifier verifies batch n + 1\n- Prover is still proving batch n when it could start proving batch n +\n1\n\n\n**Description**\n\n- Before sending a new batch to prove check if we already have all\nneeded proofs for that batch stored in the DB in case we do send and\nempty response\n\nCloses #3545",
          "timestamp": "2025-07-10T15:51:44Z",
          "tree_id": "f17356b28dc850006c1b9694ba271d6e1128893c",
          "url": "https://github.com/lambdaclass/ethrex/commit/d396ca4b52b5ea3c69fd62a1887ada672c6930ef"
        },
        "date": 1752166020997,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012416111627906977,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d396ca4b52b5ea3c69fd62a1887ada672c6930ef",
          "message": "fix(l2): avoid proving already proved batch (#3588)\n\n**Motivation**\nAvoid this situation:\n- Prover finishes proving batch n\n- Prover asks for batch to prove gets batch n again because:\n`let batch_to_verify = 1 + get_latest_sent_batch()` is still n because\nthe proof_sender dind't send the verification tx yet.\n- Verifier verifies batch n + 1\n- Prover is still proving batch n when it could start proving batch n +\n1\n\n\n**Description**\n\n- Before sending a new batch to prove check if we already have all\nneeded proofs for that batch stored in the DB in case we do send and\nempty response\n\nCloses #3545",
          "timestamp": "2025-07-10T15:51:44Z",
          "tree_id": "f17356b28dc850006c1b9694ba271d6e1128893c",
          "url": "https://github.com/lambdaclass/ethrex/commit/d396ca4b52b5ea3c69fd62a1887ada672c6930ef"
        },
        "date": 1752166870330,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006575034482758621,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8dac7cb1d7d71ccff299f6c9888444bc56846fdd",
          "message": "fix(l2): seal a batch in a single DB transaction  (#3554)\n\n**Motivation**\n\nWhen deploying ethrex L2 some errors came up that are related to the\nseal_batch process not being done in a single DB transaction.\n\n**Description**\n\n- Move seal_batch to the `StoreEngineRollup` trait\n- For sql rollup store engine\n- Wrap all the DB write functions from the trait with a <name>_in_tx\nthat gets as an input an Option<Transaction> in case the transaction is\nSome then it uses the existing transaction, and does not commit. If its\nNone it creates a new transaction and commits at the end of the\nfunction.\n- Modify the `SQLStore` struct to hold two instances of `Connection` one\nfor reads and one for writes, the write connection is protected by a\nMutex to enforce a maximum of 1 to prevent this error:\n      ```\nfailed because of a rollup store error: Limbo Query error: SQLite\nfailure: `cannot start a transaction within a transaction`\n      ``` \n- Use `PRAGMA journal_mode=WAL` for [better\nconcurrency](https://sqlite.org/wal.html#concurrency)\n- For `libmdbx` , `redb` and `in-memory`\n   - Implement the `seal_batch` function \n- Refactor: remove all the functions that were exposed by `store.rs` and\nwere only part of seal_batch to prevent its usage outside of batch\nsealing.\n\n\nCloses #3546",
          "timestamp": "2025-07-10T16:09:07Z",
          "tree_id": "b7b1d653a7447a46b3c6a30eae3762bc6c4962d7",
          "url": "https://github.com/lambdaclass/ethrex/commit/8dac7cb1d7d71ccff299f6c9888444bc56846fdd"
        },
        "date": 1752174912717,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012591811320754717,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8dac7cb1d7d71ccff299f6c9888444bc56846fdd",
          "message": "fix(l2): seal a batch in a single DB transaction  (#3554)\n\n**Motivation**\n\nWhen deploying ethrex L2 some errors came up that are related to the\nseal_batch process not being done in a single DB transaction.\n\n**Description**\n\n- Move seal_batch to the `StoreEngineRollup` trait\n- For sql rollup store engine\n- Wrap all the DB write functions from the trait with a <name>_in_tx\nthat gets as an input an Option<Transaction> in case the transaction is\nSome then it uses the existing transaction, and does not commit. If its\nNone it creates a new transaction and commits at the end of the\nfunction.\n- Modify the `SQLStore` struct to hold two instances of `Connection` one\nfor reads and one for writes, the write connection is protected by a\nMutex to enforce a maximum of 1 to prevent this error:\n      ```\nfailed because of a rollup store error: Limbo Query error: SQLite\nfailure: `cannot start a transaction within a transaction`\n      ``` \n- Use `PRAGMA journal_mode=WAL` for [better\nconcurrency](https://sqlite.org/wal.html#concurrency)\n- For `libmdbx` , `redb` and `in-memory`\n   - Implement the `seal_batch` function \n- Refactor: remove all the functions that were exposed by `store.rs` and\nwere only part of seal_batch to prevent its usage outside of batch\nsealing.\n\n\nCloses #3546",
          "timestamp": "2025-07-10T16:09:07Z",
          "tree_id": "b7b1d653a7447a46b3c6a30eae3762bc6c4962d7",
          "url": "https://github.com/lambdaclass/ethrex/commit/8dac7cb1d7d71ccff299f6c9888444bc56846fdd"
        },
        "date": 1752175753096,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006575034482758621,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "dcb3c9cf5cc3072eddc35f1f2640d1a66baad894",
          "message": "perf(levm): improve blake2f  (#3503)\n\n**Motivation**\n\nCleaner code and better perfomance\n\n<!-- Why does this pull request exist? What are its goals? -->\n\nMain\n\n![image](https://github.com/user-attachments/assets/1112c9dc-7257-4c7f-a8ae-b26cc1190894)\n\npr\n\n![image](https://github.com/user-attachments/assets/7cbdbe56-98d6-41ce-bc6a-11ad18a31208)\n\n\nImproves blake2f 1 round mgas\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-10T16:31:46Z",
          "tree_id": "e34318e84d26a13bd37d346390e93cc12cae7640",
          "url": "https://github.com/lambdaclass/ethrex/commit/dcb3c9cf5cc3072eddc35f1f2640d1a66baad894"
        },
        "date": 1752176591310,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006479281553398058,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "dcb3c9cf5cc3072eddc35f1f2640d1a66baad894",
          "message": "perf(levm): improve blake2f  (#3503)\n\n**Motivation**\n\nCleaner code and better perfomance\n\n<!-- Why does this pull request exist? What are its goals? -->\n\nMain\n\n![image](https://github.com/user-attachments/assets/1112c9dc-7257-4c7f-a8ae-b26cc1190894)\n\npr\n\n![image](https://github.com/user-attachments/assets/7cbdbe56-98d6-41ce-bc6a-11ad18a31208)\n\n\nImproves blake2f 1 round mgas\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-10T16:31:46Z",
          "tree_id": "e34318e84d26a13bd37d346390e93cc12cae7640",
          "url": "https://github.com/lambdaclass/ethrex/commit/dcb3c9cf5cc3072eddc35f1f2640d1a66baad894"
        },
        "date": 1752181840686,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012627549668874172,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "187e8c27f9b9a22948cd82b0b3f79866c16ac489",
          "message": "chore(l2): add forced withdrawal integration test (#3541)\n\n**Motivation**\n\nWe want an integration test for forced withdrawals\n\n**Description**\n\nWithdraws through a privileged transaction.\n\nCloses #3394",
          "timestamp": "2025-07-10T18:10:57Z",
          "tree_id": "486f18735fda83de70f48ba4f654780e8515f3d9",
          "url": "https://github.com/lambdaclass/ethrex/commit/187e8c27f9b9a22948cd82b0b3f79866c16ac489"
        },
        "date": 1752187118347,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012544473684210527,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "187e8c27f9b9a22948cd82b0b3f79866c16ac489",
          "message": "chore(l2): add forced withdrawal integration test (#3541)\n\n**Motivation**\n\nWe want an integration test for forced withdrawals\n\n**Description**\n\nWithdraws through a privileged transaction.\n\nCloses #3394",
          "timestamp": "2025-07-10T18:10:57Z",
          "tree_id": "486f18735fda83de70f48ba4f654780e8515f3d9",
          "url": "https://github.com/lambdaclass/ethrex/commit/187e8c27f9b9a22948cd82b0b3f79866c16ac489"
        },
        "date": 1752187948364,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006575034482758621,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9dab7c08cb8dbc86a5ae90d38faf2fc2d2c98064",
          "message": "feat(l2): monitor for ethrex L2 (#3410)\n\n**Description**\n\nThis PR introduces de ethrex monitor. A currently optional tool for node\noperators to monitor the L2 state.\n\nThe node can be monitored in two different tabs, the Overview tab and\nthe Logs tab. Both tabs have a help text line at the bottom to let know\nthe user how to interact with the current tab.\n\nThe Overview tab is composed of:\n- An ASCII ethrex logo.\n- A node status widget\n- A general chain status widget, which lists:\n    - Current batch (the batch being built by the Sequencer).\n    - Current block (the block being built by the Sequencer).\n    - Last committed batch.\n    - Last committed block.\n    - Last verified batch.\n    - Last verified block.\n- An L2 batches widget, which lists the last 50 L2 batches and their\ncurrent status, highlighting:\n    - L2 batch number.\n    - Number of blocks in the batch.\n    - Number of L2 to L1 messages in the batch.\n    - Commit tx hash (if committed).\n    - Verify tx hash (if verified).\n- An L2 blocks widget, which lists the last 50 L2 blocks, highlighting:\n    - L2 block number.\n    - Number of txs in the block.\n    - L2 block hash.\n    - L2 block coinbase (probably more relevant in based rollups).\n    - Gas consumed.\n    - Blob gas consumed.\n    - Size of the block. \n- A mempool widget, which lists the current 50 txs in the memool,\nhighlighting:\n    - Tx type (e.g. EIP1559, Privilege, etc).\n    - Tx hash.\n    - Tx sender.\n    - Tx nonce.\n- An L1 to L2 messages widget, which lists the last 50 L1 to L2 msgs and\ntheir status, highlighting:\n    - Message kind (e.g. deposit, message, etc).\n    - Message status (e.g. Processed on L2, etc).\n    - Message L1 tx hash.\n    - Message L2 tx hash\n    - Value\n- An L2 to L1 messages widget, which lists the last 50 L2 to L1 msgs and\ntheir status, highlighting:\n    - Message kind (e.g. withdrawal, message, etc).\n    - Message status (e.g. initiated, claimed, sent, delivered).\n    - Receiver on L1.\n    - Token L1 (if ERC20 withdrawal).\n    - Token L2 (if ERC20 withdrawal).\n    - L2 tx hash\n    - Value\n\nThe Logs tab shows the logs altogether or by crate. The log level could\nalso be adjusted in runtime.\n\n> [!NOTE]\n> 1. This feature is introduced as optional for now given its initial\nstate. Once mature enough, it will be default for operators.\n> 2. This initial version has some minor known flaws, but they were\nskipped in this PR on purpose:\n>     - #3512 .\n>     - #3513.\n>     - #3514.\n>     - #3515.\n>     - #3516.\n>     - No optimizations were done.\n\n**How to test**\n\n1. Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n2. Run a Sequencer (I suggest `make restart` in `crates/l2`).\n3. Run the prover with `make init-prover` in `crates/l2`.\n4. Run `make test` in `crates/l2`.\n\n**Showcase**\n\n*Overview*\n\n<img width=\"1512\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/0431b1f3-1a8f-49cf-9519-413ea3d3ed1a\"\n/>\n\n*Logs*\n\n<img width=\"1512\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/e0e6cdd7-1f8d-4278-8619-475cfaa14d4b\"\n/>",
          "timestamp": "2025-07-10T18:51:42Z",
          "tree_id": "e9c5ec2c406ad35b66a6b0943014497ccfe76e3b",
          "url": "https://github.com/lambdaclass/ethrex/commit/9dab7c08cb8dbc86a5ae90d38faf2fc2d2c98064"
        },
        "date": 1752189844294,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006295905660377359,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9dab7c08cb8dbc86a5ae90d38faf2fc2d2c98064",
          "message": "feat(l2): monitor for ethrex L2 (#3410)\n\n**Description**\n\nThis PR introduces de ethrex monitor. A currently optional tool for node\noperators to monitor the L2 state.\n\nThe node can be monitored in two different tabs, the Overview tab and\nthe Logs tab. Both tabs have a help text line at the bottom to let know\nthe user how to interact with the current tab.\n\nThe Overview tab is composed of:\n- An ASCII ethrex logo.\n- A node status widget\n- A general chain status widget, which lists:\n    - Current batch (the batch being built by the Sequencer).\n    - Current block (the block being built by the Sequencer).\n    - Last committed batch.\n    - Last committed block.\n    - Last verified batch.\n    - Last verified block.\n- An L2 batches widget, which lists the last 50 L2 batches and their\ncurrent status, highlighting:\n    - L2 batch number.\n    - Number of blocks in the batch.\n    - Number of L2 to L1 messages in the batch.\n    - Commit tx hash (if committed).\n    - Verify tx hash (if verified).\n- An L2 blocks widget, which lists the last 50 L2 blocks, highlighting:\n    - L2 block number.\n    - Number of txs in the block.\n    - L2 block hash.\n    - L2 block coinbase (probably more relevant in based rollups).\n    - Gas consumed.\n    - Blob gas consumed.\n    - Size of the block. \n- A mempool widget, which lists the current 50 txs in the memool,\nhighlighting:\n    - Tx type (e.g. EIP1559, Privilege, etc).\n    - Tx hash.\n    - Tx sender.\n    - Tx nonce.\n- An L1 to L2 messages widget, which lists the last 50 L1 to L2 msgs and\ntheir status, highlighting:\n    - Message kind (e.g. deposit, message, etc).\n    - Message status (e.g. Processed on L2, etc).\n    - Message L1 tx hash.\n    - Message L2 tx hash\n    - Value\n- An L2 to L1 messages widget, which lists the last 50 L2 to L1 msgs and\ntheir status, highlighting:\n    - Message kind (e.g. withdrawal, message, etc).\n    - Message status (e.g. initiated, claimed, sent, delivered).\n    - Receiver on L1.\n    - Token L1 (if ERC20 withdrawal).\n    - Token L2 (if ERC20 withdrawal).\n    - L2 tx hash\n    - Value\n\nThe Logs tab shows the logs altogether or by crate. The log level could\nalso be adjusted in runtime.\n\n> [!NOTE]\n> 1. This feature is introduced as optional for now given its initial\nstate. Once mature enough, it will be default for operators.\n> 2. This initial version has some minor known flaws, but they were\nskipped in this PR on purpose:\n>     - #3512 .\n>     - #3513.\n>     - #3514.\n>     - #3515.\n>     - #3516.\n>     - No optimizations were done.\n\n**How to test**\n\n1. Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n2. Run a Sequencer (I suggest `make restart` in `crates/l2`).\n3. Run the prover with `make init-prover` in `crates/l2`.\n4. Run `make test` in `crates/l2`.\n\n**Showcase**\n\n*Overview*\n\n<img width=\"1512\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/0431b1f3-1a8f-49cf-9519-413ea3d3ed1a\"\n/>\n\n*Logs*\n\n<img width=\"1512\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/e0e6cdd7-1f8d-4278-8619-475cfaa14d4b\"\n/>",
          "timestamp": "2025-07-10T18:51:42Z",
          "tree_id": "e9c5ec2c406ad35b66a6b0943014497ccfe76e3b",
          "url": "https://github.com/lambdaclass/ethrex/commit/9dab7c08cb8dbc86a5ae90d38faf2fc2d2c98064"
        },
        "date": 1752192334614,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012450858208955225,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f466fb8216f85442d763a8ed6a10a36f05e8c93f",
          "message": "feat(l2): proxied l2 system contracts (#3421)\n\n**Motivation**\n\nWe want to be able to upgrade L2 system contracts.\n\n**Description**\n\nThis makes it so that the L2 contracts themselves are proxies. Their\ninitial implementations are kept in the genesis for ease of deployment\nand to avoid keeping them empty in the first blocks.\n\nSince the proxies need to be embedded in the genesis, they can't be\ndeployed with a constructor, so their\n[ERC-1967](https://eips.ethereum.org/EIPS/eip-1967) slots are set\ndirectly.\n\nA function is added to the L1 CommonBridge to allow upgrading the L2\ncontracts. A special address (0xf000) is used to authenticate the\nupgrade.\n\nCloses #3345",
          "timestamp": "2025-07-11T12:27:27Z",
          "tree_id": "5da2a6cdd7e6ca4748dd0f07fac5768e8cfe3540",
          "url": "https://github.com/lambdaclass/ethrex/commit/f466fb8216f85442d763a8ed6a10a36f05e8c93f"
        },
        "date": 1752238570404,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006386277511961722,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f466fb8216f85442d763a8ed6a10a36f05e8c93f",
          "message": "feat(l2): proxied l2 system contracts (#3421)\n\n**Motivation**\n\nWe want to be able to upgrade L2 system contracts.\n\n**Description**\n\nThis makes it so that the L2 contracts themselves are proxies. Their\ninitial implementations are kept in the genesis for ease of deployment\nand to avoid keeping them empty in the first blocks.\n\nSince the proxies need to be embedded in the genesis, they can't be\ndeployed with a constructor, so their\n[ERC-1967](https://eips.ethereum.org/EIPS/eip-1967) slots are set\ndirectly.\n\nA function is added to the L1 CommonBridge to allow upgrading the L2\ncontracts. A special address (0xf000) is used to authenticate the\nupgrade.\n\nCloses #3345",
          "timestamp": "2025-07-11T12:27:27Z",
          "tree_id": "5da2a6cdd7e6ca4748dd0f07fac5768e8cfe3540",
          "url": "https://github.com/lambdaclass/ethrex/commit/f466fb8216f85442d763a8ed6a10a36f05e8c93f"
        },
        "date": 1752241129775,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012324395198522623,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "05d3c1290649b1f3949d7376178be78fbb1cecbf",
          "message": "fix(levm): fix benchmark block execution ci (#3619)\n\n**Motivation**\n\nsee\nhttps://github.com/lambdaclass/ethrex/actions/runs/16266441472/job/45923106459?pr=3564\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-14T17:53:13Z",
          "tree_id": "7b8fbc2f30df44acf9fc51a9312de9411c4b9c87",
          "url": "https://github.com/lambdaclass/ethrex/commit/05d3c1290649b1f3949d7376178be78fbb1cecbf"
        },
        "date": 1752522238273,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012089963768115942,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "05d3c1290649b1f3949d7376178be78fbb1cecbf",
          "message": "fix(levm): fix benchmark block execution ci (#3619)\n\n**Motivation**\n\nsee\nhttps://github.com/lambdaclass/ethrex/actions/runs/16266441472/job/45923106459?pr=3564\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-14T17:53:13Z",
          "tree_id": "7b8fbc2f30df44acf9fc51a9312de9411c4b9c87",
          "url": "https://github.com/lambdaclass/ethrex/commit/05d3c1290649b1f3949d7376178be78fbb1cecbf"
        },
        "date": 1752528903941,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0061793148148148146,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sfroment42@gmail.com",
            "name": "Sacha Froment",
            "username": "sfroment"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "053237663e3be3dd9eb02dbacba88d6e0ce54610",
          "message": "feat(l1): add From for Transaction -> GenericTransaction (#3227)\n\n**Motivation**\n\nAdding an easy way to get a GenericTransaction from any Transaction\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nAdding the 2 missing From and one for the enum\nThis will allow people who use the ethClient to make estimate_gas and\neth_call request, more easily and maybe other request in the future\nmight benefit from it\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n\nBTW I don't know which scope I shall use\n\nSigned-off-by: Sacha Froment <sfroment42@gmail.com>\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-07-14T18:08:45Z",
          "tree_id": "b0c6b8443312ff2002a0844abe8e0d7579e19ce8",
          "url": "https://github.com/lambdaclass/ethrex/commit/053237663e3be3dd9eb02dbacba88d6e0ce54610"
        },
        "date": 1752531604560,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012347197039777984,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "sfroment42@gmail.com",
            "name": "Sacha Froment",
            "username": "sfroment"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "053237663e3be3dd9eb02dbacba88d6e0ce54610",
          "message": "feat(l1): add From for Transaction -> GenericTransaction (#3227)\n\n**Motivation**\n\nAdding an easy way to get a GenericTransaction from any Transaction\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nAdding the 2 missing From and one for the enum\nThis will allow people who use the ethClient to make estimate_gas and\neth_call request, more easily and maybe other request in the future\nmight benefit from it\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n\nBTW I don't know which scope I shall use\n\nSigned-off-by: Sacha Froment <sfroment42@gmail.com>\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-07-14T18:08:45Z",
          "tree_id": "b0c6b8443312ff2002a0844abe8e0d7579e19ce8",
          "url": "https://github.com/lambdaclass/ethrex/commit/053237663e3be3dd9eb02dbacba88d6e0ce54610"
        },
        "date": 1752536782573,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006039511312217195,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44068466+SDartayet@users.noreply.github.com",
            "name": "SDartayet",
            "username": "SDartayet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "318d68b1ad651c4df08ba03a8b65b27fe50adbff",
          "message": "fix(l1, l2): logs not appearing on subcommands (#3631)\n\n**Motivation**\n\nQuick bug fix that makes logs not appear\n\n**Description**\n\nThe function ```init_tracing(&opts)``` was being called after any\nsubcommands (import, export, etc) were read, causing these (specially\nthe import) not to output logs. This PR fixes that.",
          "timestamp": "2025-07-14T19:43:28Z",
          "tree_id": "21db8e93a6ae21ed8dea0b94c61966566a2010d4",
          "url": "https://github.com/lambdaclass/ethrex/commit/318d68b1ad651c4df08ba03a8b65b27fe50adbff"
        },
        "date": 1752562209598,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001216711030082042,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44068466+SDartayet@users.noreply.github.com",
            "name": "SDartayet",
            "username": "SDartayet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "318d68b1ad651c4df08ba03a8b65b27fe50adbff",
          "message": "fix(l1, l2): logs not appearing on subcommands (#3631)\n\n**Motivation**\n\nQuick bug fix that makes logs not appear\n\n**Description**\n\nThe function ```init_tracing(&opts)``` was being called after any\nsubcommands (import, export, etc) were read, causing these (specially\nthe import) not to output logs. This PR fixes that.",
          "timestamp": "2025-07-14T19:43:28Z",
          "tree_id": "21db8e93a6ae21ed8dea0b94c61966566a2010d4",
          "url": "https://github.com/lambdaclass/ethrex/commit/318d68b1ad651c4df08ba03a8b65b27fe50adbff"
        },
        "date": 1752563189271,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.005778060606060606,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7e97d4a42213231038801327a5485b720f3dcbde",
          "message": "docs(l1): add documentation on ethereum metrics exporter use (#3538)\n\n**Motivation**\n\nWe don't have proper documentation on running the metrics introduced for\nL1 in #3061\n\n**Description**\n\nThis pr includes a quick start on how to use the new targets to display\nmetrics for running a sync on holesky or hoodi, and a more detailed\ndescription in case you want to display metrics when syncing on another\nnetwork.\n\nCloses #3207",
          "timestamp": "2025-07-14T19:58:28Z",
          "tree_id": "302f57a1d2cecd1d75639aa68bc81c9f627bc936",
          "url": "https://github.com/lambdaclass/ethrex/commit/7e97d4a42213231038801327a5485b720f3dcbde"
        },
        "date": 1752565685924,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0057531551724137936,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7e97d4a42213231038801327a5485b720f3dcbde",
          "message": "docs(l1): add documentation on ethereum metrics exporter use (#3538)\n\n**Motivation**\n\nWe don't have proper documentation on running the metrics introduced for\nL1 in #3061\n\n**Description**\n\nThis pr includes a quick start on how to use the new targets to display\nmetrics for running a sync on holesky or hoodi, and a more detailed\ndescription in case you want to display metrics when syncing on another\nnetwork.\n\nCloses #3207",
          "timestamp": "2025-07-14T19:58:28Z",
          "tree_id": "302f57a1d2cecd1d75639aa68bc81c9f627bc936",
          "url": "https://github.com/lambdaclass/ethrex/commit/7e97d4a42213231038801327a5485b720f3dcbde"
        },
        "date": 1752568423702,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012089963768115942,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d874b90c05456847c4b0d50657916434b4600840",
          "message": "fix(levm): ignore DB storage values for destroyed accounts (#3617)\n\n**Motivation**\nWhen executing blocks in batches an account may be destroyed and created\nagain within the same batch. This can lead to errors as we might try to\nload a storage value from the DB (such as in an `SLOAD`) that doesn't\nexist in the newly created account but that used to be part of the now\ndestroyed account, leading to the incorrect value being loaded.\nThis was detected on sepolia testnet block range 3302786-3302799 where a\nan account was destructed via `SELFDESTRUCT` and then created 6 blocks\nlater via `CREATE`. The same transaction that created it then performed\nan `SSTORE` which was charged the default fee (100 gas) as the stored\nkey and value matched the ones in the previously destroyed storage\ninstead of charging the storage creation fee (2000 gas). The value was\npreviously fetched from the DB by an `SLOAD` operation.\nThis PR solves this issue by first checking if the account was destroyed\nbefore looking up a storage value in the DB (The `Store`). If an account\nwas destroyed then whatever was stored in the DB is no longer valid, so\nwe return the default value (as we would do if the key doesn't exist)\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* (`levm` crate)`GeneralizedDatabase::get_value_from_database`: check if\nthe account was destroyed before querying the DB. If the account was\ndestroyed return default value\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-14T21:39:10Z",
          "tree_id": "23f2aaec44dced688b3ec27ba5b502a6f41983e4",
          "url": "https://github.com/lambdaclass/ethrex/commit/d874b90c05456847c4b0d50657916434b4600840"
        },
        "date": 1752571116568,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012301677419354839,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d874b90c05456847c4b0d50657916434b4600840",
          "message": "fix(levm): ignore DB storage values for destroyed accounts (#3617)\n\n**Motivation**\nWhen executing blocks in batches an account may be destroyed and created\nagain within the same batch. This can lead to errors as we might try to\nload a storage value from the DB (such as in an `SLOAD`) that doesn't\nexist in the newly created account but that used to be part of the now\ndestroyed account, leading to the incorrect value being loaded.\nThis was detected on sepolia testnet block range 3302786-3302799 where a\nan account was destructed via `SELFDESTRUCT` and then created 6 blocks\nlater via `CREATE`. The same transaction that created it then performed\nan `SSTORE` which was charged the default fee (100 gas) as the stored\nkey and value matched the ones in the previously destroyed storage\ninstead of charging the storage creation fee (2000 gas). The value was\npreviously fetched from the DB by an `SLOAD` operation.\nThis PR solves this issue by first checking if the account was destroyed\nbefore looking up a storage value in the DB (The `Store`). If an account\nwas destroyed then whatever was stored in the DB is no longer valid, so\nwe return the default value (as we would do if the key doesn't exist)\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* (`levm` crate)`GeneralizedDatabase::get_value_from_database`: check if\nthe account was destroyed before querying the DB. If the account was\ndestroyed return default value\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-14T21:39:10Z",
          "tree_id": "23f2aaec44dced688b3ec27ba5b502a6f41983e4",
          "url": "https://github.com/lambdaclass/ethrex/commit/d874b90c05456847c4b0d50657916434b4600840"
        },
        "date": 1752572026604,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.005985345291479821,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6de7196718fcf89781c20a190872011cabc85c99",
          "message": "fix(l2): panic because of double init tracing (#3637)\n\n**Motivation**\n\nInit L2 was panicking because of a double call to init_tracing\n\n**Description**\n\n- Move back the init tracing call to after the subcommand execution\n- Inside the subcommands call init_tracing only if the subcommand is not\n`Subcommand::L2`",
          "timestamp": "2025-07-15T13:09:19Z",
          "tree_id": "367eb56892cd70c2b727e9330f073a618c389e94",
          "url": "https://github.com/lambdaclass/ethrex/commit/6de7196718fcf89781c20a190872011cabc85c99"
        },
        "date": 1752589741612,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0062080558139534885,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6de7196718fcf89781c20a190872011cabc85c99",
          "message": "fix(l2): panic because of double init tracing (#3637)\n\n**Motivation**\n\nInit L2 was panicking because of a double call to init_tracing\n\n**Description**\n\n- Move back the init tracing call to after the subcommand execution\n- Inside the subcommands call init_tracing only if the subcommand is not\n`Subcommand::L2`",
          "timestamp": "2025-07-15T13:09:19Z",
          "tree_id": "367eb56892cd70c2b727e9330f073a618c389e94",
          "url": "https://github.com/lambdaclass/ethrex/commit/6de7196718fcf89781c20a190872011cabc85c99"
        },
        "date": 1752596802412,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012211637694419031,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "906de695154909601de4c10a883cc822509dc270",
          "message": "feat(l2): monitor add delay to scroll (#3616)\n\n**Motivation**\nMonitor scroll goes too fast\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nAdded a delay for the log scroll\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n**How to Test**\n\n- Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n- Run a Sequencer (I suggest `make restart` in `crates/l2`).\n- Run the prover with `make init-prover` in `crates/l2`.\n- Run `make test` in `crates/l2`.\n- Press Tab to change the Tab\n- Scroll Up and Down to test the scroll\n\nCloses\nhttps://github.com/orgs/lambdaclass/projects/37/views/10?pane=issue&itemId=118809801&issue=lambdaclass%7Cethrex%7C3514",
          "timestamp": "2025-07-15T14:01:38Z",
          "tree_id": "ad406a83542279b38ac48a3d0e98b93574f00c0d",
          "url": "https://github.com/lambdaclass/ethrex/commit/906de695154909601de4c10a883cc822509dc270"
        },
        "date": 1752597716136,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006094666666666667,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "906de695154909601de4c10a883cc822509dc270",
          "message": "feat(l2): monitor add delay to scroll (#3616)\n\n**Motivation**\nMonitor scroll goes too fast\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nAdded a delay for the log scroll\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n**How to Test**\n\n- Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n- Run a Sequencer (I suggest `make restart` in `crates/l2`).\n- Run the prover with `make init-prover` in `crates/l2`.\n- Run `make test` in `crates/l2`.\n- Press Tab to change the Tab\n- Scroll Up and Down to test the scroll\n\nCloses\nhttps://github.com/orgs/lambdaclass/projects/37/views/10?pane=issue&itemId=118809801&issue=lambdaclass%7Cethrex%7C3514",
          "timestamp": "2025-07-15T14:01:38Z",
          "tree_id": "ad406a83542279b38ac48a3d0e98b93574f00c0d",
          "url": "https://github.com/lambdaclass/ethrex/commit/906de695154909601de4c10a883cc822509dc270"
        },
        "date": 1752600492063,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012222820512820514,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b0a5da487e8a2ffc4f174a3d5629bdb1e581e7a0",
          "message": "ci(l1): try running hive tests in CI with levm (#3566)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- Run most recent hive tests in CI with LEVM.\n- I had to comment out 2 of them because they don't pass, it was\nexpected since we were running tests that were 6 months old so things\nhave changed.\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-07-15T14:25:58Z",
          "tree_id": "aa7582b6c137ea6e00b405c391832b9f826d9898",
          "url": "https://github.com/lambdaclass/ethrex/commit/b0a5da487e8a2ffc4f174a3d5629bdb1e581e7a0"
        },
        "date": 1752611379744,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006094666666666667,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b0a5da487e8a2ffc4f174a3d5629bdb1e581e7a0",
          "message": "ci(l1): try running hive tests in CI with levm (#3566)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- Run most recent hive tests in CI with LEVM.\n- I had to comment out 2 of them because they don't pass, it was\nexpected since we were running tests that were 6 months old so things\nhave changed.\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-07-15T14:25:58Z",
          "tree_id": "aa7582b6c137ea6e00b405c391832b9f826d9898",
          "url": "https://github.com/lambdaclass/ethrex/commit/b0a5da487e8a2ffc4f174a3d5629bdb1e581e7a0"
        },
        "date": 1752612900904,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012122906448683015,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f8a6168341db73d3a593b94e0e0f0a50c1044168",
          "message": "feat(l1): peer scoring for snap requests (#3334)\n\n**Motivation**\nIntegrate and adapt the peer scoring introduced by #2115 for snap\nrequests.\nFor eth requests, we consider failure to return requested data as a peer\nfailure, but with snap the data we request is not guaranteed to be\navailable (as it might have become stale during the sync cycle) so we\ncannot asume that an empty response is a bad response that should be\npenalized. For snap requests this PR collects the ids of the peers we\nattempted to request data from, and once we get a successful peer\nresponse we confirm that the data was indeed available and reward the\nresponsive peer while penalizing the previous unresponsive peers\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Collect ids of peers on each snap request retry and penalize and\nreward peers accordingly upon a successful peer response\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3118",
          "timestamp": "2025-07-15T14:29:34Z",
          "tree_id": "98d4bd1b3523d36f75886638eca8394cb47f9400",
          "url": "https://github.com/lambdaclass/ethrex/commit/f8a6168341db73d3a593b94e0e0f0a50c1044168"
        },
        "date": 1752622497848,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0061793148148148146,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f8a6168341db73d3a593b94e0e0f0a50c1044168",
          "message": "feat(l1): peer scoring for snap requests (#3334)\n\n**Motivation**\nIntegrate and adapt the peer scoring introduced by #2115 for snap\nrequests.\nFor eth requests, we consider failure to return requested data as a peer\nfailure, but with snap the data we request is not guaranteed to be\navailable (as it might have become stale during the sync cycle) so we\ncannot asume that an empty response is a bad response that should be\npenalized. For snap requests this PR collects the ids of the peers we\nattempted to request data from, and once we get a successful peer\nresponse we confirm that the data was indeed available and reward the\nresponsive peer while penalizing the previous unresponsive peers\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Collect ids of peers on each snap request retry and penalize and\nreward peers accordingly upon a successful peer response\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3118",
          "timestamp": "2025-07-15T14:29:34Z",
          "tree_id": "98d4bd1b3523d36f75886638eca8394cb47f9400",
          "url": "https://github.com/lambdaclass/ethrex/commit/f8a6168341db73d3a593b94e0e0f0a50c1044168"
        },
        "date": 1752645662112,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012200475319926875,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "448b778d849a2e08472c4cbbf3cac6da353ffd9e",
          "message": "feat(l2): embed proxy contract in the SDK (#3443)\n\n**Description**\n\nThis PR adds a `build.rs` build script to the SDK to embed the\n`ERC1967Proxy` contract as a constant. As part of this, it also moves\nthe functions for downloading dependencies and compiling contracts to\nanother crate, since we need to use them inside the build script.\n\nChange list:\n\n- [x] Added build script\n- [x] Added installation of `solc` for compiling in the CI\n- [x] Updated dockerfiles to install solc before compiling\n- [x] Updated `service.nix` to clone dependencies before building.\n- [x] Removed `ERC1967Proxy` compilation steps from the Deployer.\n\nRelated to #3380\n\n---------\n\nCo-authored-by: avilagaston9 <gaston.avila@lambdaclass.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>",
          "timestamp": "2025-07-15T18:33:33Z",
          "tree_id": "bac1601d0b41721457f72a0f73e2693873ccdba1",
          "url": "https://github.com/lambdaclass/ethrex/commit/448b778d849a2e08472c4cbbf3cac6da353ffd9e"
        },
        "date": 1752647214276,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012290349907918968,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "448b778d849a2e08472c4cbbf3cac6da353ffd9e",
          "message": "feat(l2): embed proxy contract in the SDK (#3443)\n\n**Description**\n\nThis PR adds a `build.rs` build script to the SDK to embed the\n`ERC1967Proxy` contract as a constant. As part of this, it also moves\nthe functions for downloading dependencies and compiling contracts to\nanother crate, since we need to use them inside the build script.\n\nChange list:\n\n- [x] Added build script\n- [x] Added installation of `solc` for compiling in the CI\n- [x] Updated dockerfiles to install solc before compiling\n- [x] Updated `service.nix` to clone dependencies before building.\n- [x] Removed `ERC1967Proxy` compilation steps from the Deployer.\n\nRelated to #3380\n\n---------\n\nCo-authored-by: avilagaston9 <gaston.avila@lambdaclass.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>",
          "timestamp": "2025-07-15T18:33:33Z",
          "tree_id": "bac1601d0b41721457f72a0f73e2693873ccdba1",
          "url": "https://github.com/lambdaclass/ethrex/commit/448b778d849a2e08472c4cbbf3cac6da353ffd9e"
        },
        "date": 1752648134491,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0057531551724137936,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fd98ef02d3634246651f8879e9d70feb1dd0653a",
          "message": "fix(l2): install solc in missing workflows (#3649)\n\n**Motivation**\n\nIn #3443, we missed installing solc in some workflows.\n\nCloses None",
          "timestamp": "2025-07-15T21:20:05Z",
          "tree_id": "66735758ea212d38ae32deee8ccf38901cad506a",
          "url": "https://github.com/lambdaclass/ethrex/commit/fd98ef02d3634246651f8879e9d70feb1dd0653a"
        },
        "date": 1752649702624,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001203545536519387,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fd98ef02d3634246651f8879e9d70feb1dd0653a",
          "message": "fix(l2): install solc in missing workflows (#3649)\n\n**Motivation**\n\nIn #3443, we missed installing solc in some workflows.\n\nCloses None",
          "timestamp": "2025-07-15T21:20:05Z",
          "tree_id": "66735758ea212d38ae32deee8ccf38901cad506a",
          "url": "https://github.com/lambdaclass/ethrex/commit/fd98ef02d3634246651f8879e9d70feb1dd0653a"
        },
        "date": 1752650721112,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.005854087719298246,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5c7a30485164c7db8ed43304a4577a0d0451cc54",
          "message": "feat(l2): add support for web3signer (#2714)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nMany operators will want to use a remote signer instead of having the\nprivate keys on the same server as the sequencer.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nReplace all uses of a private key with a new `Signer` enum. This signer\ncan be either `Local` or `Remote` and can be lately extended. This aims\nto standardise the way all kind of messages are signed across the L2 and\nfacilitate the setup via flags or environment\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>\nCo-authored-by: fedacking <francisco.gauna@lambdaclass.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>",
          "timestamp": "2025-07-15T23:34:22Z",
          "tree_id": "166bed55b2d252034634dd4fb89fe704a900bb8e",
          "url": "https://github.com/lambdaclass/ethrex/commit/5c7a30485164c7db8ed43304a4577a0d0451cc54"
        },
        "date": 1752658236868,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012144968152866243,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5c7a30485164c7db8ed43304a4577a0d0451cc54",
          "message": "feat(l2): add support for web3signer (#2714)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nMany operators will want to use a remote signer instead of having the\nprivate keys on the same server as the sequencer.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nReplace all uses of a private key with a new `Signer` enum. This signer\ncan be either `Local` or `Remote` and can be lately extended. This aims\nto standardise the way all kind of messages are signed across the L2 and\nfacilitate the setup via flags or environment\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>\nCo-authored-by: fedacking <francisco.gauna@lambdaclass.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>",
          "timestamp": "2025-07-15T23:34:22Z",
          "tree_id": "166bed55b2d252034634dd4fb89fe704a900bb8e",
          "url": "https://github.com/lambdaclass/ethrex/commit/5c7a30485164c7db8ed43304a4577a0d0451cc54"
        },
        "date": 1752659152006,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0061793148148148146,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ea331e09542d0ffd819d81af32d7a192a3b80f6a",
          "message": "perf(levm): add sstore bench, allow unoptimized bench contracts and improve bench makefile (#3552)\n\n**Motivation**\n\n- Adds a sstore benchmark, however we need to disable solc optimizations\nfor this contract otherwise it removes most code.\n- Improved the makefile adding a command to samply an individual\nbenchmark\n\nhttps://share.firefox.dev/44MVD2V",
          "timestamp": "2025-07-16T06:07:39Z",
          "tree_id": "05d165ee245374bc2320e881bc6c28a6c30b1895",
          "url": "https://github.com/lambdaclass/ethrex/commit/ea331e09542d0ffd819d81af32d7a192a3b80f6a"
        },
        "date": 1752660057053,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006094666666666667,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ea331e09542d0ffd819d81af32d7a192a3b80f6a",
          "message": "perf(levm): add sstore bench, allow unoptimized bench contracts and improve bench makefile (#3552)\n\n**Motivation**\n\n- Adds a sstore benchmark, however we need to disable solc optimizations\nfor this contract otherwise it removes most code.\n- Improved the makefile adding a command to samply an individual\nbenchmark\n\nhttps://share.firefox.dev/44MVD2V",
          "timestamp": "2025-07-16T06:07:39Z",
          "tree_id": "05d165ee245374bc2320e881bc6c28a6c30b1895",
          "url": "https://github.com/lambdaclass/ethrex/commit/ea331e09542d0ffd819d81af32d7a192a3b80f6a"
        },
        "date": 1752664702261,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012122906448683015,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8a568cabc9875a7667dd4bf5ce881ec6f26f1e82",
          "message": "refactor(l2): remove expects in L2 monitor (#3615)\n\n**Motivation**\n\nWe want to handle errors gracefully.\n\n**Description**\n\nRemoves usage of .expect\n\n**How to test**\n\n- Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n- Run a Sequencer (I suggest `make restart` in `crates/l2`).\n- Run the prover with `make init-prover` in `crates/l2`.\n- Run `make test` in `crates/l2`.\n\nCloses #3535\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>",
          "timestamp": "2025-07-16T15:02:36Z",
          "tree_id": "5803a4e78ee60df8c6ab4713467b393e4d4cfac4",
          "url": "https://github.com/lambdaclass/ethrex/commit/8a568cabc9875a7667dd4bf5ce881ec6f26f1e82"
        },
        "date": 1752682273883,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006039511312217195,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8a568cabc9875a7667dd4bf5ce881ec6f26f1e82",
          "message": "refactor(l2): remove expects in L2 monitor (#3615)\n\n**Motivation**\n\nWe want to handle errors gracefully.\n\n**Description**\n\nRemoves usage of .expect\n\n**How to test**\n\n- Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n- Run a Sequencer (I suggest `make restart` in `crates/l2`).\n- Run the prover with `make init-prover` in `crates/l2`.\n- Run `make test` in `crates/l2`.\n\nCloses #3535\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>",
          "timestamp": "2025-07-16T15:02:36Z",
          "tree_id": "5803a4e78ee60df8c6ab4713467b393e4d4cfac4",
          "url": "https://github.com/lambdaclass/ethrex/commit/8a568cabc9875a7667dd4bf5ce881ec6f26f1e82"
        },
        "date": 1752686766799,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001227904323827047,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "faa3dec1f9358872ac18b09e9bd994a80cb1231b",
          "message": "feat(l1): decouple size of execution batch from header request size during full-sync (#3074)\n\n**Motivation**\nAllow us to configure the amount of blocks to execute in a single batch\nduring full sync. Currently, the only way to do this is by changing the\namount of block headers we ask for in each request.\nIn order to achieve this, this PR proposes adding the enum\n`BlockSyncState` with variants for Full and Snap sync so we can separate\nbehaviors between each mode and also allow each mode to keep its\nseparate state. This is key as we will need to persist headers and\nbodies through various fetch requests so we can build custom-sized\nexecution batches.\nIt also replaces the previous configurable env var `BlOCK_HEADER_LIMIT`\nwith `EXECUTE_BLOCK_BATCH`\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Add `BlockSyncState` enum as a way to differentiate between each sync\nmode's state during block syncing phase.\n* Refactor `request_and_validate_block_bodies`: it now receives a slice\nof headers and returns the requested block bodies instead of the full\nblocks. This allowed us to completely get rid of header cloning.\n* `validate_block_body` now receives a reference to the head & body\ninstead of the full block (as a result of refactoring its only user)\n* `Store::add_block_headers` now only receives the headers (This lets us\nsimplify caller code)\n* Removed `search_head` variable as having both current & search head\nserves no purpose.\n* Abtract current_head selection into `BlockSyncState::get_current_head`\n* Fix bug in condition used to decide wether to switch from snap to full\nsync\n* `start_sync` no longer receives `current_head`\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #2894\n\n---------\n\nCo-authored-by: SDartayet <44068466+SDartayet@users.noreply.github.com>\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-07-16T15:55:06Z",
          "tree_id": "32e65b17e7d3493c84eea672f20281cf2df62aaa",
          "url": "https://github.com/lambdaclass/ethrex/commit/faa3dec1f9358872ac18b09e9bd994a80cb1231b"
        },
        "date": 1752690442126,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0061793148148148146,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f61eecdc5b15f3b35a14edc1ddab871c8ed64468",
          "message": "feat(l2): monitor handle index slicing (#3611)\n\n**Motivation**\nMonitor had unhandled index slicing in its code.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nAdded new variants for `MonitorError` and used them to remove the index\nslicing in the monitor\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n**How to test**\n\n- Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n- Run a Sequencer (I suggest `make restart` in `crates/l2`).\n- Run the prover with `make init-prover` in `crates/l2`.\n- Run `make test` in `crates/l2`.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses\nhttps://github.com/orgs/lambdaclass/projects/37/views/10?pane=issue&itemId=118823704&issue=lambdaclass%7Cethrex%7C3537",
          "timestamp": "2025-07-16T18:41:49Z",
          "tree_id": "e64b43c58d56f1187206e6b98a9a253805277cfb",
          "url": "https://github.com/lambdaclass/ethrex/commit/f61eecdc5b15f3b35a14edc1ddab871c8ed64468"
        },
        "date": 1752693099511,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006066963636363636,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3cf9507c3b63fe81929bb8ae2fd32de3fa049078",
          "message": "feat(l2): make monitor quit (#3622)\n\n**Motivation**\nWhen the monitor is quitted with `Shift + Q` it closes the monitor but\ndoes not end the process\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nChanged the L2 task initialization to use `JoinSet` instead of a\n`TaskTracker`, so it can be joined and end the process if it ended.\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n**How to test**\n\n- Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n- Run a Sequencer (I suggest `make restart` in `crates/l2`).\n- Run the prover with `make init-prover` in `crates/l2`.\n- Run `make test` in `crates/l2`.\n- Press `Shift + Q` to close the monitor\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses\nhttps://github.com/orgs/lambdaclass/projects/37/views/10?pane=issue&itemId=118808771&issue=lambdaclass%7Cethrex%7C3512",
          "timestamp": "2025-07-16T20:07:24Z",
          "tree_id": "b08bdd2932e3c056a571269355a21b4a1bbfb496",
          "url": "https://github.com/lambdaclass/ethrex/commit/3cf9507c3b63fe81929bb8ae2fd32de3fa049078"
        },
        "date": 1752703186304,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0011927899910634495,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3cf9507c3b63fe81929bb8ae2fd32de3fa049078",
          "message": "feat(l2): make monitor quit (#3622)\n\n**Motivation**\nWhen the monitor is quitted with `Shift + Q` it closes the monitor but\ndoes not end the process\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nChanged the L2 task initialization to use `JoinSet` instead of a\n`TaskTracker`, so it can be joined and end the process if it ended.\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n**How to test**\n\n- Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n- Run a Sequencer (I suggest `make restart` in `crates/l2`).\n- Run the prover with `make init-prover` in `crates/l2`.\n- Run `make test` in `crates/l2`.\n- Press `Shift + Q` to close the monitor\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses\nhttps://github.com/orgs/lambdaclass/projects/37/views/10?pane=issue&itemId=118808771&issue=lambdaclass%7Cethrex%7C3512",
          "timestamp": "2025-07-16T20:07:24Z",
          "tree_id": "b08bdd2932e3c056a571269355a21b4a1bbfb496",
          "url": "https://github.com/lambdaclass/ethrex/commit/3cf9507c3b63fe81929bb8ae2fd32de3fa049078"
        },
        "date": 1752704110514,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.005985345291479821,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c7c89a4fb4109c85f04babfd1fad805c7c40fb09",
          "message": "feat(l2): make contract compilation in the SDK optional (#3665)\n\n**Motivation**\n\n#3443, caused `solc` to be a compile-time dependency of the client.\nSince the proxy bytecode is only needed in `deploy_with_proxy`, which is\nonly used by the `deployer`, this PR makes contract compilation\noptional, via an env var.\n\n**Description**\n\n- Modifies `sdk/build.rs` to check whether `COMPILE_CONTRACTS` env var\nis set before trying to compile the proxy.\n- Creates a new error `ProxyBytecodeNotFound`, which is returned if\n`deploy_with_proxy` is called without compiling the contract.\n- Removes the installation of `solc` from workflows and Dockerfiles\nwhere it is no longer needed\n\nCloses #3654",
          "timestamp": "2025-07-16T22:08:17Z",
          "tree_id": "b795bcc727701a80c595d0e5f08cab0c95f414fc",
          "url": "https://github.com/lambdaclass/ethrex/commit/c7c89a4fb4109c85f04babfd1fad805c7c40fb09"
        },
        "date": 1752713214554,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012144968152866243,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c7c89a4fb4109c85f04babfd1fad805c7c40fb09",
          "message": "feat(l2): make contract compilation in the SDK optional (#3665)\n\n**Motivation**\n\n#3443, caused `solc` to be a compile-time dependency of the client.\nSince the proxy bytecode is only needed in `deploy_with_proxy`, which is\nonly used by the `deployer`, this PR makes contract compilation\noptional, via an env var.\n\n**Description**\n\n- Modifies `sdk/build.rs` to check whether `COMPILE_CONTRACTS` env var\nis set before trying to compile the proxy.\n- Creates a new error `ProxyBytecodeNotFound`, which is returned if\n`deploy_with_proxy` is called without compiling the contract.\n- Removes the installation of `solc` from workflows and Dockerfiles\nwhere it is no longer needed\n\nCloses #3654",
          "timestamp": "2025-07-16T22:08:17Z",
          "tree_id": "b795bcc727701a80c595d0e5f08cab0c95f414fc",
          "url": "https://github.com/lambdaclass/ethrex/commit/c7c89a4fb4109c85f04babfd1fad805c7c40fb09"
        },
        "date": 1752714185205,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006039511312217195,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d8aaed209910719f7f482fd6e3b2f33aefb1aba3",
          "message": "chore(l1, l2): add claude/gemini files to .gitignore (#3653)",
          "timestamp": "2025-07-17T11:04:04Z",
          "tree_id": "c29a6ea2921f69d1cc96417821b0fc03dd1163cb",
          "url": "https://github.com/lambdaclass/ethrex/commit/d8aaed209910719f7f482fd6e3b2f33aefb1aba3"
        },
        "date": 1752752245657,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.005932142222222222,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d8aaed209910719f7f482fd6e3b2f33aefb1aba3",
          "message": "chore(l1, l2): add claude/gemini files to .gitignore (#3653)",
          "timestamp": "2025-07-17T11:04:04Z",
          "tree_id": "c29a6ea2921f69d1cc96417821b0fc03dd1163cb",
          "url": "https://github.com/lambdaclass/ethrex/commit/d8aaed209910719f7f482fd6e3b2f33aefb1aba3"
        },
        "date": 1752758456531,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.00118327304964539,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "tomas.arjovsky@lambdaclass.com",
            "name": "Tomás Arjovsky",
            "username": "Arkenan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bc82ed12aee8e7d627a0ac52cbbd8287084b51b2",
          "message": "ci(l1): disable block builcing bench until it's fixed (#3670)\n\n**Motivation**\n\nThe benchmark doesn't work and it's blocking all prs",
          "timestamp": "2025-07-17T11:06:00Z",
          "tree_id": "f6f3fbc8ccbaec48aef841363a5d8a271f0b2e0f",
          "url": "https://github.com/lambdaclass/ethrex/commit/bc82ed12aee8e7d627a0ac52cbbd8287084b51b2"
        },
        "date": 1752764554042,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012200475319926875,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "tomas.arjovsky@lambdaclass.com",
            "name": "Tomás Arjovsky",
            "username": "Arkenan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bc82ed12aee8e7d627a0ac52cbbd8287084b51b2",
          "message": "ci(l1): disable block builcing bench until it's fixed (#3670)\n\n**Motivation**\n\nThe benchmark doesn't work and it's blocking all prs",
          "timestamp": "2025-07-17T11:06:00Z",
          "tree_id": "f6f3fbc8ccbaec48aef841363a5d8a271f0b2e0f",
          "url": "https://github.com/lambdaclass/ethrex/commit/bc82ed12aee8e7d627a0ac52cbbd8287084b51b2"
        },
        "date": 1752765273479,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006237065420560748,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f21fe24bf2e2c2fc62aa9be3db6e0da0f491bcc9",
          "message": "fix(l1): fix double tracer initialization in block execution benchmark (#3671)\n\n**Motivation**\n\nCurrently the block execution benchmark is\n[broken](https://github.com/lambdaclass/ethrex/actions/runs/16344656297/job/46175367153?pr=3590)\nas a result of calling `init_tracing` twice.\n\n**Description**\n\nThis happens because, when the `--removedb` flag is used, RemoveDB is\ncalled as a command, which initializes the logger again.\n\nThis PR calls removedb directly instead.",
          "timestamp": "2025-07-17T13:11:53Z",
          "tree_id": "ebdc1d6f14e1bfb5b07a3a65e9449bb2dc729dd3",
          "url": "https://github.com/lambdaclass/ethrex/commit/f21fe24bf2e2c2fc62aa9be3db6e0da0f491bcc9"
        },
        "date": 1752769396868,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006355866666666667,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f21fe24bf2e2c2fc62aa9be3db6e0da0f491bcc9",
          "message": "fix(l1): fix double tracer initialization in block execution benchmark (#3671)\n\n**Motivation**\n\nCurrently the block execution benchmark is\n[broken](https://github.com/lambdaclass/ethrex/actions/runs/16344656297/job/46175367153?pr=3590)\nas a result of calling `init_tracing` twice.\n\n**Description**\n\nThis happens because, when the `--removedb` flag is used, RemoveDB is\ncalled as a command, which initializes the logger again.\n\nThis PR calls removedb directly instead.",
          "timestamp": "2025-07-17T13:11:53Z",
          "tree_id": "ebdc1d6f14e1bfb5b07a3a65e9449bb2dc729dd3",
          "url": "https://github.com/lambdaclass/ethrex/commit/f21fe24bf2e2c2fc62aa9be3db6e0da0f491bcc9"
        },
        "date": 1752775536591,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012089963768115942,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c0e0ce2933c1c72d943771abd58563355081c09f",
          "message": "ci(l1): support multiple hive versions depending on simulation. (#3661)\n\n**Motivation**\nWe want to get rid of our hive fork and use the upstream. Unfortunately,\nwe can't completely rely on it yet because it would break.\n\n**Description**\n- While we fix the upstream, lets rely on two versions of Hive, our fork\none and the upstream",
          "timestamp": "2025-07-17T13:31:45Z",
          "tree_id": "3365e4d99a9a881624b7f54dfd3e3d7e9295904a",
          "url": "https://github.com/lambdaclass/ethrex/commit/c0e0ce2933c1c72d943771abd58563355081c09f"
        },
        "date": 1752778569825,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006094666666666667,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c0e0ce2933c1c72d943771abd58563355081c09f",
          "message": "ci(l1): support multiple hive versions depending on simulation. (#3661)\n\n**Motivation**\nWe want to get rid of our hive fork and use the upstream. Unfortunately,\nwe can't completely rely on it yet because it would break.\n\n**Description**\n- While we fix the upstream, lets rely on two versions of Hive, our fork\none and the upstream",
          "timestamp": "2025-07-17T13:31:45Z",
          "tree_id": "3365e4d99a9a881624b7f54dfd3e3d7e9295904a",
          "url": "https://github.com/lambdaclass/ethrex/commit/c0e0ce2933c1c72d943771abd58563355081c09f"
        },
        "date": 1752781276765,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012267757352941177,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "22b64308b7b0badb3e78279b12f8b36f69bd0642",
          "message": "perf(levm): new memory model (#3564)\n\n**Motivation**\n\nGas benchmarks show an 23% improvement on opcode based timings and 12%\non end to end.\n30% improvement in mgas for mstore (before unsafe)\n\nAfter adding unsafe we see a 30% improvement on top of the mstore\nimprovements and overall general improvements on other opcodes.",
          "timestamp": "2025-07-17T14:04:33Z",
          "tree_id": "eeb024c2f8db6140858e55a60a1250ff8fa4cd1b",
          "url": "https://github.com/lambdaclass/ethrex/commit/22b64308b7b0badb3e78279b12f8b36f69bd0642"
        },
        "date": 1752799605874,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012111905626134302,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "22b64308b7b0badb3e78279b12f8b36f69bd0642",
          "message": "perf(levm): new memory model (#3564)\n\n**Motivation**\n\nGas benchmarks show an 23% improvement on opcode based timings and 12%\non end to end.\n30% improvement in mgas for mstore (before unsafe)\n\nAfter adding unsafe we see a 30% improvement on top of the mstore\nimprovements and overall general improvements on other opcodes.",
          "timestamp": "2025-07-17T14:04:33Z",
          "tree_id": "eeb024c2f8db6140858e55a60a1250ff8fa4cd1b",
          "url": "https://github.com/lambdaclass/ethrex/commit/22b64308b7b0badb3e78279b12f8b36f69bd0642"
        },
        "date": 1752808838038,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006237065420560748,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "165b94c9a2069d2a4bb9c320f26554b0190c4e30",
          "message": "perf(levm): add AVX256 implementation of BLAKE2 (#3590)\n\n**Motivation**\n\nTo improve BLAKE2 performance.\n\n**Description**\n\nWhy AVX256 instead of AVX512? Mainly that\n[AVX512](https://github.com/rust-lang/rust/issues/111137) intrinsics are\nstill experimental.\n\nCreates a common/crypto module to house blake2. We should consider\nmoving here other cryptographic operations currently inside\nprecompiles.rs.\n\nIf avx2 is available, a permute-with-gather implementation is used.\n\nUsage of unsafe is required for SIMD loads and stores. It should be\nreviewed that alignment requirements are satisfied and that no\nout-of-bounds operations are possible.\n\nNote that aside from the obvious ones with \"load\" or \"store\" in the\nname, gather also represents a series of memory loads.\n\nUnsafe is also required to call the first avx2-enabled function, since\nwe must first ensure avx2 is actually available on the target CPU.\n\n** Benchmarks **\n\n### PR\n\n|Title|Max (MGas/s)|p50 (MGas/s)|p95 (MGas/s)|p99 (MGas/s)|Min (MGas/s)|\n\n|----|--------------|--------------|-------------|--------------|--------------|\nBlake1MRounds|120.19|93.97|93.38|99.85|91.54\nBlake1Round|226.42|175.09|170.08|166.83|166.82\nBlake1KRounds|122.36|97.28|96.09|100.90|95.87\nBlake10MRounds|174.36|110.78|104.15|124.33|103.89\n\n### Main\n\n|Title|Max (MGas/s)|p50 (MGas/s)|p95 (MGas/s)|p99 (MGas/s)|Min (MGas/s)|\n\n|----|--------------|--------------|-------------|--------------|--------------|\nBlake1MRounds|80.79|63.04|62.57|67.80|62.50\nBlake1Round|223.59|174.93|168.21|159.38|159.33\nBlake1KRounds|83.75|66.59|65.88|68.37|64.76\nBlake10MRounds|117.79|77.21|69.63|83.19|69.05",
          "timestamp": "2025-07-17T14:34:10Z",
          "tree_id": "065dfa16f0769f1776aae5132e7f7e58e22fde93",
          "url": "https://github.com/lambdaclass/ethrex/commit/165b94c9a2069d2a4bb9c320f26554b0190c4e30"
        },
        "date": 1752809503175,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0062080558139534885,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "14ef9bfde463af72598fe43a515c334fea6aedfb",
          "message": "fix(l2): `get_batch` failing if in validium mode (#3680)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nRollup store's`get_batch` fails when in validium mode as it's not\nfinding any blob (currently in validium mode we don't generate blobs).\nThis makes features like `ethrex_getBatchByNumber` unusable in validium\nmode.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nAccept empty blobs bundle when retrieving batches from rollup store.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-07-17T15:25:15Z",
          "tree_id": "585d1a479356a69e449df5a5763ea36b8a040686",
          "url": "https://github.com/lambdaclass/ethrex/commit/14ef9bfde463af72598fe43a515c334fea6aedfb"
        },
        "date": 1752816956612,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012324395198522623,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "14ef9bfde463af72598fe43a515c334fea6aedfb",
          "message": "fix(l2): `get_batch` failing if in validium mode (#3680)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nRollup store's`get_batch` fails when in validium mode as it's not\nfinding any blob (currently in validium mode we don't generate blobs).\nThis makes features like `ethrex_getBatchByNumber` unusable in validium\nmode.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nAccept empty blobs bundle when retrieving batches from rollup store.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-07-17T15:25:15Z",
          "tree_id": "585d1a479356a69e449df5a5763ea36b8a040686",
          "url": "https://github.com/lambdaclass/ethrex/commit/14ef9bfde463af72598fe43a515c334fea6aedfb"
        },
        "date": 1752822863901,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.005778060606060606,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "df3710b203a0214e243a157f46147d48b2d9d38a",
          "message": "ci(l1,l2): remove ethrex replay from releases  (#3663)\n\n**Motivation**\n\nWe don't want to make releases for ethrex replay\n\n**Description**\n\n- Remove matrix.binary from ci and only build ethrex and prover binaries\n- Update docs on how to run ethrex-replay\n- Successful run\n[here](https://github.com/lambdaclass/ethrex/actions/runs/16346228196/job/46180528866)",
          "timestamp": "2025-07-17T15:36:58Z",
          "tree_id": "e74c7e272ffd46bdc24eae77eb489c4cc5e1e7a2",
          "url": "https://github.com/lambdaclass/ethrex/commit/df3710b203a0214e243a157f46147d48b2d9d38a"
        },
        "date": 1752828377466,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012122906448683015,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "df3710b203a0214e243a157f46147d48b2d9d38a",
          "message": "ci(l1,l2): remove ethrex replay from releases  (#3663)\n\n**Motivation**\n\nWe don't want to make releases for ethrex replay\n\n**Description**\n\n- Remove matrix.binary from ci and only build ethrex and prover binaries\n- Update docs on how to run ethrex-replay\n- Successful run\n[here](https://github.com/lambdaclass/ethrex/actions/runs/16346228196/job/46180528866)",
          "timestamp": "2025-07-17T15:36:58Z",
          "tree_id": "e74c7e272ffd46bdc24eae77eb489c4cc5e1e7a2",
          "url": "https://github.com/lambdaclass/ethrex/commit/df3710b203a0214e243a157f46147d48b2d9d38a"
        },
        "date": 1752834799037,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0061793148148148146,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "128638963+santiago-MV@users.noreply.github.com",
            "name": "santiago-MV",
            "username": "santiago-MV"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "229b791477f203dde019f36d5d62be182139d63a",
          "message": "refactor(l1): make ethrex-only github actions faster (#3648)\n\n**Motivation**\n\nRunning the ethrex_only github actions job seems to be slower than those\nthat use other execution clients as well\n\n**Description**\n\nThere were 2 main reasons why this job was slower compared to the others\n- The ethrex_only job includes the EOA and BLOB transactions assertoor\nplaybooks, which are the ones being run in the other two github jobs\n- The slot time of 12 sec was making the test take to long\n\nThe slot time was modified and now the tests take 10 minutes instead of\nthe original 18\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3628",
          "timestamp": "2025-07-17T16:21:11Z",
          "tree_id": "41a3b691e05e3ff267354c99a2f50f9b45e9edc7",
          "url": "https://github.com/lambdaclass/ethrex/commit/229b791477f203dde019f36d5d62be182139d63a"
        },
        "date": 1752835490177,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0062080558139534885,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "128638963+santiago-MV@users.noreply.github.com",
            "name": "santiago-MV",
            "username": "santiago-MV"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "229b791477f203dde019f36d5d62be182139d63a",
          "message": "refactor(l1): make ethrex-only github actions faster (#3648)\n\n**Motivation**\n\nRunning the ethrex_only github actions job seems to be slower than those\nthat use other execution clients as well\n\n**Description**\n\nThere were 2 main reasons why this job was slower compared to the others\n- The ethrex_only job includes the EOA and BLOB transactions assertoor\nplaybooks, which are the ones being run in the other two github jobs\n- The slot time of 12 sec was making the test take to long\n\nThe slot time was modified and now the tests take 10 minutes instead of\nthe original 18\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3628",
          "timestamp": "2025-07-17T16:21:11Z",
          "tree_id": "41a3b691e05e3ff267354c99a2f50f9b45e9edc7",
          "url": "https://github.com/lambdaclass/ethrex/commit/229b791477f203dde019f36d5d62be182139d63a"
        },
        "date": 1752838167290,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012324395198522623,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "23191af7468828cb68d161143b460a6f25c96181",
          "message": "perf(levm): improve sstore perfomance  further (#3657)\n\n**Motivation**\nImproves sstore perfomance\n\nRequires #3564\n\nFrom 1100 to over 2200\n\n<img width=\"1896\" height=\"281\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/7f5697a3-048c-4554-91bb-22839bb91d95\"\n/>\n\nThe main change is going from Hashmaps to BTreeMaps.\n\nThey are more efficient for the type of storages we use, for small\ndatasets (1k~100k i would say) they overperform hashmaps due to avoiding\nentirely the hashing cost, which seemed to be the biggest factor.\n\nThis changes comes with 2 other minor changes, like a more efficient\nu256 to big endian and a change to backup_storage_slot.",
          "timestamp": "2025-07-17T17:29:21Z",
          "tree_id": "ad97fe646e7b6d407f1bfc5a7afa50ca64c47427",
          "url": "https://github.com/lambdaclass/ethrex/commit/23191af7468828cb68d161143b460a6f25c96181"
        },
        "date": 1752840863632,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012509203373945643,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "23191af7468828cb68d161143b460a6f25c96181",
          "message": "perf(levm): improve sstore perfomance  further (#3657)\n\n**Motivation**\nImproves sstore perfomance\n\nRequires #3564\n\nFrom 1100 to over 2200\n\n<img width=\"1896\" height=\"281\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/7f5697a3-048c-4554-91bb-22839bb91d95\"\n/>\n\nThe main change is going from Hashmaps to BTreeMaps.\n\nThey are more efficient for the type of storages we use, for small\ndatasets (1k~100k i would say) they overperform hashmaps due to avoiding\nentirely the hashing cost, which seemed to be the biggest factor.\n\nThis changes comes with 2 other minor changes, like a more efficient\nu256 to big endian and a change to backup_storage_slot.",
          "timestamp": "2025-07-17T17:29:21Z",
          "tree_id": "ad97fe646e7b6d407f1bfc5a7afa50ca64c47427",
          "url": "https://github.com/lambdaclass/ethrex/commit/23191af7468828cb68d161143b460a6f25c96181"
        },
        "date": 1752841550102,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006066963636363636,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me+git@droak.sh",
            "name": "Oak",
            "username": "d-roak"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8272969a64958abfed0f7085cb7c4d684f2202df",
          "message": "docs(l2, levm): move crates docs to root docs (#3303)\n\n**Motivation**\nDocs are sparsed across the repo. This PR puts everything in the same\nplace\n\n**Description**\n- Added the docs that lived under `/crates/*` in the root `/docs`. Used\nthe same file structure\n- Deleted all instances of docs under `/crates/*`\n\n\nCloses: none\n\nSigned-off-by: droak <me+git@droak.sh>",
          "timestamp": "2025-07-17T18:10:12Z",
          "tree_id": "17e6af6a4ed0b436216ded6e99f2ed41de21d5c1",
          "url": "https://github.com/lambdaclass/ethrex/commit/8272969a64958abfed0f7085cb7c4d684f2202df"
        },
        "date": 1752844241214,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012370083410565339,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me+git@droak.sh",
            "name": "Oak",
            "username": "d-roak"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8272969a64958abfed0f7085cb7c4d684f2202df",
          "message": "docs(l2, levm): move crates docs to root docs (#3303)\n\n**Motivation**\nDocs are sparsed across the repo. This PR puts everything in the same\nplace\n\n**Description**\n- Added the docs that lived under `/crates/*` in the root `/docs`. Used\nthe same file structure\n- Deleted all instances of docs under `/crates/*`\n\n\nCloses: none\n\nSigned-off-by: droak <me+git@droak.sh>",
          "timestamp": "2025-07-17T18:10:12Z",
          "tree_id": "17e6af6a4ed0b436216ded6e99f2ed41de21d5c1",
          "url": "https://github.com/lambdaclass/ethrex/commit/8272969a64958abfed0f7085cb7c4d684f2202df"
        },
        "date": 1752859360726,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006237065420560748,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "me+git@droak.sh",
            "name": "Oak",
            "username": "d-roak"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "96c7eeeabfc03ea6b8a20b92f5310cb59d7a63c8",
          "message": "docs(l2): add quotes on init-prover command (#3304)\n\n**Motivation**\nCopy paste on the command provided in the docs doesn't work\n\n**Description**\n- Added quotes to the command mentioned\n\nCloses: none",
          "timestamp": "2025-07-17T18:18:56Z",
          "tree_id": "f41598ce40f7d42ba9c46c352b21d5f3ea010eed",
          "url": "https://github.com/lambdaclass/ethrex/commit/96c7eeeabfc03ea6b8a20b92f5310cb59d7a63c8"
        },
        "date": 1752862063024,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001235862962962963,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6876c91b7f93ebbf65124410582e6f89513f9768",
          "message": "perf(levm): codecopy perf improvement (#3675)\n\n**Motivation**\n\nImproves from 200 mgas to 790, this bench was made with this pr along\nmemory, sstore and opcodes ones.\n\nA 295% increase in perf.\n\nRequires the pr #3564 \n\n**Description**",
          "timestamp": "2025-07-18T05:06:43Z",
          "tree_id": "295ee8748a84fa9fc38dc54a27f6f57ac03c6626",
          "url": "https://github.com/lambdaclass/ethrex/commit/6876c91b7f93ebbf65124410582e6f89513f9768"
        },
        "date": 1752872109751,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006266347417840375,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6876c91b7f93ebbf65124410582e6f89513f9768",
          "message": "perf(levm): codecopy perf improvement (#3675)\n\n**Motivation**\n\nImproves from 200 mgas to 790, this bench was made with this pr along\nmemory, sstore and opcodes ones.\n\nA 295% increase in perf.\n\nRequires the pr #3564 \n\n**Description**",
          "timestamp": "2025-07-18T05:06:43Z",
          "tree_id": "295ee8748a84fa9fc38dc54a27f6f57ac03c6626",
          "url": "https://github.com/lambdaclass/ethrex/commit/6876c91b7f93ebbf65124410582e6f89513f9768"
        },
        "date": 1752874844600,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012211637694419031,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b9f189573533b771f82ba45ef7bd65daefd02a55",
          "message": "refactor(l2): remove blockByNumber (#3752)\n\n**Motivation**\n\nWhile reviewing areas for simplification, I found that `BlockByNumber`\nis not being used.\n\n**Description**\n\nRemoves `BlockByNumber`\n\nCloses #3748",
          "timestamp": "2025-07-21T19:08:00Z",
          "tree_id": "030f712bb4c97a9bb320513b3614f976638c92cd",
          "url": "https://github.com/lambdaclass/ethrex/commit/b9f189573533b771f82ba45ef7bd65daefd02a55"
        },
        "date": 1753126401858,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0075408587570621475,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b9f189573533b771f82ba45ef7bd65daefd02a55",
          "message": "refactor(l2): remove blockByNumber (#3752)\n\n**Motivation**\n\nWhile reviewing areas for simplification, I found that `BlockByNumber`\nis not being used.\n\n**Description**\n\nRemoves `BlockByNumber`\n\nCloses #3748",
          "timestamp": "2025-07-21T19:08:00Z",
          "tree_id": "030f712bb4c97a9bb320513b3614f976638c92cd",
          "url": "https://github.com/lambdaclass/ethrex/commit/b9f189573533b771f82ba45ef7bd65daefd02a55"
        },
        "date": 1753130776179,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013441409869083586,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93a885595f00e092fd597e03270b214da85114a2",
          "message": "fix(levm): preemptively resize memory before executing call (#3592)\n\n**Motivation**\nWhen executing a `CALL` opcode, a transfer might take place. In this\ncase the instruction does contain a return data offset and a return data\nsize but as we don't have return data to write into memory we don't\nexpand the memory.\nThis can cause problems with other opcodes later on (such as MSTORE,\nMLOAD, etc) which calculate their gas cost based on the difference\nbetween the current size of the memory and the new size, making them\nmore expensive as the memory will be smaller due to return data from\ntransfers not being accounted for.\nThis PR aims to solve this by preemptively resizing the memory before\nexecuting the call, so that the memory gets expanded even if no return\ndata is written to it.\nThis bug was found on Sepolia transaction:\nhttps://sepolia.etherscan.io/tx/0xa1765d420522a40d59d15f8dee1bf095499be687d6e1a7c978fc87eb85bce948\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Preemptively resize memory before executing a call in opcode `CALL`\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n**Questions**\nShould this behaviour also apply to other call types?\nCloses #issue_number",
          "timestamp": "2025-07-21T21:12:15Z",
          "tree_id": "4e31ff7d7cf6aea3a6a0e6f216926845008e439f",
          "url": "https://github.com/lambdaclass/ethrex/commit/93a885595f00e092fd597e03270b214da85114a2"
        },
        "date": 1753140601507,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001334732,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93a885595f00e092fd597e03270b214da85114a2",
          "message": "fix(levm): preemptively resize memory before executing call (#3592)\n\n**Motivation**\nWhen executing a `CALL` opcode, a transfer might take place. In this\ncase the instruction does contain a return data offset and a return data\nsize but as we don't have return data to write into memory we don't\nexpand the memory.\nThis can cause problems with other opcodes later on (such as MSTORE,\nMLOAD, etc) which calculate their gas cost based on the difference\nbetween the current size of the memory and the new size, making them\nmore expensive as the memory will be smaller due to return data from\ntransfers not being accounted for.\nThis PR aims to solve this by preemptively resizing the memory before\nexecuting the call, so that the memory gets expanded even if no return\ndata is written to it.\nThis bug was found on Sepolia transaction:\nhttps://sepolia.etherscan.io/tx/0xa1765d420522a40d59d15f8dee1bf095499be687d6e1a7c978fc87eb85bce948\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Preemptively resize memory before executing a call in opcode `CALL`\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n**Questions**\nShould this behaviour also apply to other call types?\nCloses #issue_number",
          "timestamp": "2025-07-21T21:12:15Z",
          "tree_id": "4e31ff7d7cf6aea3a6a0e6f216926845008e439f",
          "url": "https://github.com/lambdaclass/ethrex/commit/93a885595f00e092fd597e03270b214da85114a2"
        },
        "date": 1753141158295,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007670873563218391,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ec0a3eb6b536dda5668dff993369e9067f8709dd",
          "message": "chore(levm): parallelize parsing ef state tests (#3722)\n\n**Motivation**\n\nEf test parsing is slow, this parallelizes it making it faster\n\n\nRan in 2m0.225s",
          "timestamp": "2025-07-22T09:08:06Z",
          "tree_id": "791d9a8fffafcc8a4268db6202ce229dac132476",
          "url": "https://github.com/lambdaclass/ethrex/commit/ec0a3eb6b536dda5668dff993369e9067f8709dd"
        },
        "date": 1753176533309,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007293617486338798,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ec0a3eb6b536dda5668dff993369e9067f8709dd",
          "message": "chore(levm): parallelize parsing ef state tests (#3722)\n\n**Motivation**\n\nEf test parsing is slow, this parallelizes it making it faster\n\n\nRan in 2m0.225s",
          "timestamp": "2025-07-22T09:08:06Z",
          "tree_id": "791d9a8fffafcc8a4268db6202ce229dac132476",
          "url": "https://github.com/lambdaclass/ethrex/commit/ec0a3eb6b536dda5668dff993369e9067f8709dd"
        },
        "date": 1753178703108,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001334732,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e283db20a41622318fda4869992e08591911625e",
          "message": "feat(levm): execute arbitrary bytecode (#3626)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\nHave a runner for LEVM that expects some **inputs** like Transaction,\nFork, etc. in an `json` file and **bytecode in mnemonics** in another\nfile. Stack and memory can be preloaded within the `json`.\nMore info in the `README.md`\n\nSidenote: I had to do a refactor in LEVM setup because for me to be able\nto alter the stack and memory before executing these have to be\ninitialized in the `new()`, thing that we weren't doing. So we now\ninitialize the first callframe there and not in `execute()`.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3583\n\n---------\n\nCo-authored-by: fmoletta <99273364+fmoletta@users.noreply.github.com>\nCo-authored-by: Edgar <git@edgl.dev>",
          "timestamp": "2025-07-22T13:16:10Z",
          "tree_id": "f5786f587ea0b2b549d9262913b775de1a103a34",
          "url": "https://github.com/lambdaclass/ethrex/commit/e283db20a41622318fda4869992e08591911625e"
        },
        "date": 1753192177852,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00771521387283237,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e283db20a41622318fda4869992e08591911625e",
          "message": "feat(levm): execute arbitrary bytecode (#3626)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\nHave a runner for LEVM that expects some **inputs** like Transaction,\nFork, etc. in an `json` file and **bytecode in mnemonics** in another\nfile. Stack and memory can be preloaded within the `json`.\nMore info in the `README.md`\n\nSidenote: I had to do a refactor in LEVM setup because for me to be able\nto alter the stack and memory before executing these have to be\ninitialized in the `new()`, thing that we weren't doing. So we now\ninitialize the first callframe there and not in `execute()`.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3583\n\n---------\n\nCo-authored-by: fmoletta <99273364+fmoletta@users.noreply.github.com>\nCo-authored-by: Edgar <git@edgl.dev>",
          "timestamp": "2025-07-22T13:16:10Z",
          "tree_id": "f5786f587ea0b2b549d9262913b775de1a103a34",
          "url": "https://github.com/lambdaclass/ethrex/commit/e283db20a41622318fda4869992e08591911625e"
        },
        "date": 1753194329463,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013675532786885246,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "94380962+sofiazcoaga@users.noreply.github.com",
            "name": "sofiazcoaga",
            "username": "sofiazcoaga"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2ce46bf32443be74f0d2ee8b0d5759f9c04219cb",
          "message": "refactor(levm): rewrite of state EF tests runner first iteration (#3642)\n\n**Motivation**\n\nRelated issue: #3496. \n\nThe idea is to incrementally develop a new EF Test runner (for state\ntests) that can eventually replace the current one. The main goal of the\nnew runner is to be easy to understand and as straightforward as\npossible, also making it possible to easily add any new requirement.\n\n**How to run** \nA target in the makefile was included. You can, then, from\n`ethrex/cmd/ef_tests/state/` run `make run-new-runner`. If no specific\npath is passed, it will parse anything in the `./vectors` folder.\nOtherwise you can do, for example:\n`make run-new-runner TESTS_PATH=./vectors/GeneralStateTests/Cancun` to\nspecify a path.\n\nThis command assumes you have the `vectors` directory downloaded, if not\nrun `make download-evm-ef-tests` previously.\n\n**Considerations**\n\nThe main changes are: \n- The new `Test` and `TestCase` structures in types. \n- The runner and parser simplified flows. \n\nFiles that should not be reviewed as they are full or partial copies of\nthe original files:\n- `runner_v2/deserialize.rs`\n- `runner_v2/utils.rs`\n\nThis iteration excludes report-related code, option flags and other\npossible test case errors to be considered that will be included later.\nChecks are performed only on exceptions and root hash.",
          "timestamp": "2025-07-22T18:32:15Z",
          "tree_id": "1364dd940e94383958d73b23545152bd053470bf",
          "url": "https://github.com/lambdaclass/ethrex/commit/2ce46bf32443be74f0d2ee8b0d5759f9c04219cb"
        },
        "date": 1753211884362,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013215168316831683,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "94380962+sofiazcoaga@users.noreply.github.com",
            "name": "sofiazcoaga",
            "username": "sofiazcoaga"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2ce46bf32443be74f0d2ee8b0d5759f9c04219cb",
          "message": "refactor(levm): rewrite of state EF tests runner first iteration (#3642)\n\n**Motivation**\n\nRelated issue: #3496. \n\nThe idea is to incrementally develop a new EF Test runner (for state\ntests) that can eventually replace the current one. The main goal of the\nnew runner is to be easy to understand and as straightforward as\npossible, also making it possible to easily add any new requirement.\n\n**How to run** \nA target in the makefile was included. You can, then, from\n`ethrex/cmd/ef_tests/state/` run `make run-new-runner`. If no specific\npath is passed, it will parse anything in the `./vectors` folder.\nOtherwise you can do, for example:\n`make run-new-runner TESTS_PATH=./vectors/GeneralStateTests/Cancun` to\nspecify a path.\n\nThis command assumes you have the `vectors` directory downloaded, if not\nrun `make download-evm-ef-tests` previously.\n\n**Considerations**\n\nThe main changes are: \n- The new `Test` and `TestCase` structures in types. \n- The runner and parser simplified flows. \n\nFiles that should not be reviewed as they are full or partial copies of\nthe original files:\n- `runner_v2/deserialize.rs`\n- `runner_v2/utils.rs`\n\nThis iteration excludes report-related code, option flags and other\npossible test case errors to be considered that will be included later.\nChecks are performed only on exceptions and root hash.",
          "timestamp": "2025-07-22T18:32:15Z",
          "tree_id": "1364dd940e94383958d73b23545152bd053470bf",
          "url": "https://github.com/lambdaclass/ethrex/commit/2ce46bf32443be74f0d2ee8b0d5759f9c04219cb"
        },
        "date": 1753217196576,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007805450292397661,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b41d878a318aeaf8dcbd7c2292569fa697282a76",
          "message": "fix(l2): fix L1 proof sender's wallet/signer (#3747)\n\n**Motivation**\n\nThe L1 proof sender was broken in #2714 by creating an invalid ethers'\n`Wallet`\n[here](github.com/lambdaclass/ethrex/pull/2714/files#r2216602944). This\nPR fixes it but only allows running the proof sender with a local\nsigner.\n\nTo support a remote signer we must investigate if there's a way to\ncreate an ethers' signer that uses web3signer.\n\nThanks @avilagaston9 for noticing the bug!",
          "timestamp": "2025-07-22T19:31:59Z",
          "tree_id": "20136d8c01aeca6066b9529a2e69154d4cacc679",
          "url": "https://github.com/lambdaclass/ethrex/commit/b41d878a318aeaf8dcbd7c2292569fa697282a76"
        },
        "date": 1753224520621,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00771521387283237,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b41d878a318aeaf8dcbd7c2292569fa697282a76",
          "message": "fix(l2): fix L1 proof sender's wallet/signer (#3747)\n\n**Motivation**\n\nThe L1 proof sender was broken in #2714 by creating an invalid ethers'\n`Wallet`\n[here](github.com/lambdaclass/ethrex/pull/2714/files#r2216602944). This\nPR fixes it but only allows running the proof sender with a local\nsigner.\n\nTo support a remote signer we must investigate if there's a way to\ncreate an ethers' signer that uses web3signer.\n\nThanks @avilagaston9 for noticing the bug!",
          "timestamp": "2025-07-22T19:31:59Z",
          "tree_id": "20136d8c01aeca6066b9529a2e69154d4cacc679",
          "url": "https://github.com/lambdaclass/ethrex/commit/b41d878a318aeaf8dcbd7c2292569fa697282a76"
        },
        "date": 1753225804399,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013675532786885246,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cfe00d33bd3464bd5cd625978d92a0f1f8068f63",
          "message": "fix(l2): enable bls12_381,k256 & ecdsa sp1 precompiles (#3691)\n\n**Motivation**\n\nThe patch for bls12_381 precompile is not being applied because we are\nimporting the crate from our fork.\nAlso two other patches that were previously not compiling after #3689 is\nmerged can now be reenabled\n\n**Description**\n\n-\n[Forked](https://github.com/lambdaclass/bls12_381-patch/tree/expose-fp-struct)\nthe patch from sp1 and updated it with the same changes we have on the\nmain crate fork\n- Uncommented the previously commented patches\n\n**How to check**\n\n```\ncd crates/l2/prover/zkvm/interface/sp1\n```\nbls12_381\n```\ncargo tree -p bls12_381\n```\nreturns `bls12_381 v0.8.0\n(https://github.com/lambdaclass/bls12_381-patch/?branch=expose-fp-struct#f2242f78)`\n\necdsa\n```\ncargo tree -p ecdsa\n```\nreturns `ecdsa v0.16.9\n(https://github.com/sp1-patches/signatures?tag=patch-16.9-sp1-4.1.0#1880299a)`\n\nk256\n```\ncargo tree -p k256\n```\nreturns `k256 v0.13.4\n(https://github.com/sp1-patches/elliptic-curves?tag=patch-k256-13.4-sp1-5.0.0#f7d8998e)`\n\nComparing this to main that it either returns no patch or errors out",
          "timestamp": "2025-07-22T19:50:33Z",
          "tree_id": "556520e376bd9a93a8bfb4cc139da53a6e4531d0",
          "url": "https://github.com/lambdaclass/ethrex/commit/cfe00d33bd3464bd5cd625978d92a0f1f8068f63"
        },
        "date": 1753226293307,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00771521387283237,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cfe00d33bd3464bd5cd625978d92a0f1f8068f63",
          "message": "fix(l2): enable bls12_381,k256 & ecdsa sp1 precompiles (#3691)\n\n**Motivation**\n\nThe patch for bls12_381 precompile is not being applied because we are\nimporting the crate from our fork.\nAlso two other patches that were previously not compiling after #3689 is\nmerged can now be reenabled\n\n**Description**\n\n-\n[Forked](https://github.com/lambdaclass/bls12_381-patch/tree/expose-fp-struct)\nthe patch from sp1 and updated it with the same changes we have on the\nmain crate fork\n- Uncommented the previously commented patches\n\n**How to check**\n\n```\ncd crates/l2/prover/zkvm/interface/sp1\n```\nbls12_381\n```\ncargo tree -p bls12_381\n```\nreturns `bls12_381 v0.8.0\n(https://github.com/lambdaclass/bls12_381-patch/?branch=expose-fp-struct#f2242f78)`\n\necdsa\n```\ncargo tree -p ecdsa\n```\nreturns `ecdsa v0.16.9\n(https://github.com/sp1-patches/signatures?tag=patch-16.9-sp1-4.1.0#1880299a)`\n\nk256\n```\ncargo tree -p k256\n```\nreturns `k256 v0.13.4\n(https://github.com/sp1-patches/elliptic-curves?tag=patch-k256-13.4-sp1-5.0.0#f7d8998e)`\n\nComparing this to main that it either returns no patch or errors out",
          "timestamp": "2025-07-22T19:50:33Z",
          "tree_id": "556520e376bd9a93a8bfb4cc139da53a6e4531d0",
          "url": "https://github.com/lambdaclass/ethrex/commit/cfe00d33bd3464bd5cd625978d92a0f1f8068f63"
        },
        "date": 1753230064675,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013661535312180144,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c36b343d8508b62b7de0a7d87bc58a026278704a",
          "message": "fix(levm): memory bug when storing data (#3774)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nWe didn't realize that #3564 introduced a bug when storing data of\nlength zero. This aims to fix it.\nI also delete a resize check that's completely unnecessary\n\nTested the fix and it works. I now am able to execute the blocks\nmentioned in the issue of this PR without any problems at all.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3775",
          "timestamp": "2025-07-22T20:11:38Z",
          "tree_id": "db0e155e11ab6e5d6808c62ec2e43bfed8834f9a",
          "url": "https://github.com/lambdaclass/ethrex/commit/c36b343d8508b62b7de0a7d87bc58a026278704a"
        },
        "date": 1753231351110,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013427887323943662,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c36b343d8508b62b7de0a7d87bc58a026278704a",
          "message": "fix(levm): memory bug when storing data (#3774)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nWe didn't realize that #3564 introduced a bug when storing data of\nlength zero. This aims to fix it.\nI also delete a resize check that's completely unnecessary\n\nTested the fix and it works. I now am able to execute the blocks\nmentioned in the issue of this PR without any problems at all.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3775",
          "timestamp": "2025-07-22T20:11:38Z",
          "tree_id": "db0e155e11ab6e5d6808c62ec2e43bfed8834f9a",
          "url": "https://github.com/lambdaclass/ethrex/commit/c36b343d8508b62b7de0a7d87bc58a026278704a"
        },
        "date": 1753231865786,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007760069767441861,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4a3a5aec56e6b6a96942ad161b32fd2f50ccd5c7",
          "message": "refactor(l2): apply fcu only on the last block of the batch for the block fetcher (#3782)\n\n**Motivation**\n\nWith the actual implementation of the block fetcher, we apply a fork\nchoice update for every block. This is not the optimal way since we can\napply only on the last block.\n\n**Description**\n\n- Move the `apply_fork_choice` call after the loop and only call it with\nthe last block\n- Add new type of error `EmptyBatchError`",
          "timestamp": "2025-07-22T21:03:49Z",
          "tree_id": "710ac64388c952a5a69f10f5b9a1eda132ef6c9a",
          "url": "https://github.com/lambdaclass/ethrex/commit/4a3a5aec56e6b6a96942ad161b32fd2f50ccd5c7"
        },
        "date": 1753232354195,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00771521387283237,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4a3a5aec56e6b6a96942ad161b32fd2f50ccd5c7",
          "message": "refactor(l2): apply fcu only on the last block of the batch for the block fetcher (#3782)\n\n**Motivation**\n\nWith the actual implementation of the block fetcher, we apply a fork\nchoice update for every block. This is not the optimal way since we can\napply only on the last block.\n\n**Description**\n\n- Move the `apply_fork_choice` call after the loop and only call it with\nthe last block\n- Add new type of error `EmptyBatchError`",
          "timestamp": "2025-07-22T21:03:49Z",
          "tree_id": "710ac64388c952a5a69f10f5b9a1eda132ef6c9a",
          "url": "https://github.com/lambdaclass/ethrex/commit/4a3a5aec56e6b6a96942ad161b32fd2f50ccd5c7"
        },
        "date": 1753233625569,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013523120567375886,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3f60642861576555f50dd330410eb75c49188447",
          "message": "feat(l2): based P2P (#2999)\n\n**Motivation**\n\nThis PR follows #2931 . We implement some basic functionality to\ncommunicate L2 based nodes via P2P.\n\n**Description**\n\n- Add new capability to the RLPx called `Based`.\n- Add new Message `NewBlock`.\n  - Behaves similar to the message `Transactions`.\n- Every interval we look to the new blocks produced and send them to the\npeer.\n- Add this message to the allowed ones to be broadcasted via the P2P\nnetwork.\n- When receiving this message we implemented a queue to be able to\nreceive them in disorder. Once a continuos interval of blocks is in the\nqueue we store them in order.\n- Add new message `BatchSealed`\n- Every interval we look in the `store_rollup` if a new batch has been\nsealed and then we send it to the peer.\n- Add this message to the allowed ones to be broadcasted via the P2P\nnetwork.\n- This two new messages are signed by the lead sequencer who proposed\nthe blocks and the batches. Every node must verify this signature\ncorrespond to the lead sequencer\n- Change `BlockFetcher` to not add a block received via the L1 if it\nalready has been received via P2P, and vice versa.\n- Add a new `SequencingStatus`: `Syncing`. It is for nodes that are not\nup to date to the last committed batch.\n\n**How to test**\n\nRead the `Run Locally` section from `crates/l2/based/README.md` to run 3\nnodes and register 2 of them as Sequencers. It is important that you\nassign different values in the nodes:\n- `--http.port <PORT>`\n- `--committer.l1-private-key <PRIVATE_KEY>`\n- `--proof-coordinator.port <PORT>`\n- `--p2p.port <P2P_PORT>`\n- `--discovery.port <PORT>`\n\n> [!TIP]\n> To enrich the review, I strongly suggest you read the documentation in\n`crates/l2/based/docs`.\n\n---------\n\nCo-authored-by: Leandro Serra <leandro.serra@lambdaclass.com>\nCo-authored-by: ilitteri <ilitteri@fi.uba.ar>\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: fkrause98 <fkrausear@gmail.com>\nCo-authored-by: Francisco Krause Arnim <56402156+fkrause98@users.noreply.github.com>",
          "timestamp": "2025-07-22T22:04:21Z",
          "tree_id": "2fbb970513ea40b72556f60e771be7c88d6540a4",
          "url": "https://github.com/lambdaclass/ethrex/commit/3f60642861576555f50dd330410eb75c49188447"
        },
        "date": 1753234128206,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00762704,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3f60642861576555f50dd330410eb75c49188447",
          "message": "feat(l2): based P2P (#2999)\n\n**Motivation**\n\nThis PR follows #2931 . We implement some basic functionality to\ncommunicate L2 based nodes via P2P.\n\n**Description**\n\n- Add new capability to the RLPx called `Based`.\n- Add new Message `NewBlock`.\n  - Behaves similar to the message `Transactions`.\n- Every interval we look to the new blocks produced and send them to the\npeer.\n- Add this message to the allowed ones to be broadcasted via the P2P\nnetwork.\n- When receiving this message we implemented a queue to be able to\nreceive them in disorder. Once a continuos interval of blocks is in the\nqueue we store them in order.\n- Add new message `BatchSealed`\n- Every interval we look in the `store_rollup` if a new batch has been\nsealed and then we send it to the peer.\n- Add this message to the allowed ones to be broadcasted via the P2P\nnetwork.\n- This two new messages are signed by the lead sequencer who proposed\nthe blocks and the batches. Every node must verify this signature\ncorrespond to the lead sequencer\n- Change `BlockFetcher` to not add a block received via the L1 if it\nalready has been received via P2P, and vice versa.\n- Add a new `SequencingStatus`: `Syncing`. It is for nodes that are not\nup to date to the last committed batch.\n\n**How to test**\n\nRead the `Run Locally` section from `crates/l2/based/README.md` to run 3\nnodes and register 2 of them as Sequencers. It is important that you\nassign different values in the nodes:\n- `--http.port <PORT>`\n- `--committer.l1-private-key <PRIVATE_KEY>`\n- `--proof-coordinator.port <PORT>`\n- `--p2p.port <P2P_PORT>`\n- `--discovery.port <PORT>`\n\n> [!TIP]\n> To enrich the review, I strongly suggest you read the documentation in\n`crates/l2/based/docs`.\n\n---------\n\nCo-authored-by: Leandro Serra <leandro.serra@lambdaclass.com>\nCo-authored-by: ilitteri <ilitteri@fi.uba.ar>\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: fkrause98 <fkrausear@gmail.com>\nCo-authored-by: Francisco Krause Arnim <56402156+fkrause98@users.noreply.github.com>",
          "timestamp": "2025-07-22T22:04:21Z",
          "tree_id": "2fbb970513ea40b72556f60e771be7c88d6540a4",
          "url": "https://github.com/lambdaclass/ethrex/commit/3f60642861576555f50dd330410eb75c49188447"
        },
        "date": 1753235415840,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013731810699588478,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c1778eadda9854a3824aac5f304204150c14a97b",
          "message": "chore(l1): change logs in hive to info by default (#3767)\n\n**Motivation**\n\nIn the PR #2975 the default value for the `make run-hive` was changed to\nerror. I propose changing this to info (3), as we usually run make hive\nto try to see a problem with the test. For the CI I propose we change it\nto log level error (1), as we can't actually look at those logs.\n\n**Description**\n\n- Changed makefile `SIM_LOG_LEVEL` default value to 3 (info)\n- Added to the ci workflows `--sim.loglevel 1` which corresponds to\nerror.",
          "timestamp": "2025-07-23T13:51:18Z",
          "tree_id": "c226e0a9f7ec2b05e2e4c8136af012522784660a",
          "url": "https://github.com/lambdaclass/ethrex/commit/c1778eadda9854a3824aac5f304204150c14a97b"
        },
        "date": 1753282921165,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013124208456243855,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c1778eadda9854a3824aac5f304204150c14a97b",
          "message": "chore(l1): change logs in hive to info by default (#3767)\n\n**Motivation**\n\nIn the PR #2975 the default value for the `make run-hive` was changed to\nerror. I propose changing this to info (3), as we usually run make hive\nto try to see a problem with the test. For the CI I propose we change it\nto log level error (1), as we can't actually look at those logs.\n\n**Description**\n\n- Changed makefile `SIM_LOG_LEVEL` default value to 3 (info)\n- Added to the ci workflows `--sim.loglevel 1` which corresponds to\nerror.",
          "timestamp": "2025-07-23T13:51:18Z",
          "tree_id": "c226e0a9f7ec2b05e2e4c8136af012522784660a",
          "url": "https://github.com/lambdaclass/ethrex/commit/c1778eadda9854a3824aac5f304204150c14a97b"
        },
        "date": 1753283448129,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00771521387283237,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4edd454bf4df8dad51b2c32a810a89cd2a9479a6",
          "message": "chore(l1): avoid running EF blockchain tests on `make test` (#3772)\n\n**Motivation**\nThey take a some time and `make test` should be more of a healthcheck\nimo. They run in the CI anyway.",
          "timestamp": "2025-07-23T15:25:54Z",
          "tree_id": "bc9f06de3dbdad519a7d50581577dea43afb1fa8",
          "url": "https://github.com/lambdaclass/ethrex/commit/4edd454bf4df8dad51b2c32a810a89cd2a9479a6"
        },
        "date": 1753287509110,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00771521387283237,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4edd454bf4df8dad51b2c32a810a89cd2a9479a6",
          "message": "chore(l1): avoid running EF blockchain tests on `make test` (#3772)\n\n**Motivation**\nThey take a some time and `make test` should be more of a healthcheck\nimo. They run in the CI anyway.",
          "timestamp": "2025-07-23T15:25:54Z",
          "tree_id": "bc9f06de3dbdad519a7d50581577dea43afb1fa8",
          "url": "https://github.com/lambdaclass/ethrex/commit/4edd454bf4df8dad51b2c32a810a89cd2a9479a6"
        },
        "date": 1753288890477,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001349577350859454,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e2cb314efc88038727816005e66b3ee99def5c8c",
          "message": "feat(levm): subcommand for converting mnemonics into bytecode and accepting both kinds as arguments (#3786)\n\n**Motivation**\n\n- Add code related features to levm runner\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- Accept both raw bytecode and mnemonics as arguments for the `--code`\nflag in the `.txt` file\n- Add `--emit-bytes` for converting mnemonics into a new bytecode file\nthat can then be used for running the transaction without parsing the\nvalues.\n\nCloses #3788",
          "timestamp": "2025-07-23T15:42:14Z",
          "tree_id": "fcad77c30da72b4e4322322f55b3bc04ba4e1bd9",
          "url": "https://github.com/lambdaclass/ethrex/commit/e2cb314efc88038727816005e66b3ee99def5c8c"
        },
        "date": 1753291546221,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007415177777777778,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e2cb314efc88038727816005e66b3ee99def5c8c",
          "message": "feat(levm): subcommand for converting mnemonics into bytecode and accepting both kinds as arguments (#3786)\n\n**Motivation**\n\n- Add code related features to levm runner\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- Accept both raw bytecode and mnemonics as arguments for the `--code`\nflag in the `.txt` file\n- Add `--emit-bytes` for converting mnemonics into a new bytecode file\nthat can then be used for running the transaction without parsing the\nvalues.\n\nCloses #3788",
          "timestamp": "2025-07-23T15:42:14Z",
          "tree_id": "fcad77c30da72b4e4322322f55b3bc04ba4e1bd9",
          "url": "https://github.com/lambdaclass/ethrex/commit/e2cb314efc88038727816005e66b3ee99def5c8c"
        },
        "date": 1753297165491,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013294143426294822,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "56092489+ColoCarletti@users.noreply.github.com",
            "name": "Joaquin Carletti",
            "username": "ColoCarletti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8408fe0854a66e0a510b0a6bf474dda20edd38de",
          "message": "perf(levm): migrate EcAdd and EcMul to Arkworks (#3719)\n\nThis PR improves the performance of the precompiles by switching to\nArkworks.\nIn particular, scalar multiplication on the BN254 curve is significantly\nfaster in Arkworks compared to Lambdaworks.\n\ncloses #3726\n\n---------\n\nCo-authored-by: Leandro Serra <leandro.serra@lambdaclass.com>",
          "timestamp": "2025-07-23T16:04:55Z",
          "tree_id": "780cbcf4c7f07b65b63ff07011ea6247e03377cc",
          "url": "https://github.com/lambdaclass/ethrex/commit/8408fe0854a66e0a510b0a6bf474dda20edd38de"
        },
        "date": 1753297711539,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007456603351955308,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "56092489+ColoCarletti@users.noreply.github.com",
            "name": "Joaquin Carletti",
            "username": "ColoCarletti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8408fe0854a66e0a510b0a6bf474dda20edd38de",
          "message": "perf(levm): migrate EcAdd and EcMul to Arkworks (#3719)\n\nThis PR improves the performance of the precompiles by switching to\nArkworks.\nIn particular, scalar multiplication on the BN254 curve is significantly\nfaster in Arkworks compared to Lambdaworks.\n\ncloses #3726\n\n---------\n\nCo-authored-by: Leandro Serra <leandro.serra@lambdaclass.com>",
          "timestamp": "2025-07-23T16:04:55Z",
          "tree_id": "780cbcf4c7f07b65b63ff07011ea6247e03377cc",
          "url": "https://github.com/lambdaclass/ethrex/commit/8408fe0854a66e0a510b0a6bf474dda20edd38de"
        },
        "date": 1753301442598,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013124208456243855,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1802f66ed21aff9ca45056ad9a0a6a81b6a4a2b0",
          "message": "feat(l1): notebook for high-level profiling (#3633)\n\nIntroduce a new notebook to analyze contribution of eaxh part of the\nblock production process to its overall time, producing graphs for\nvisual clarity.\nInstructions included in the README.\n\nBased on #3274\nCoauthored-by: @Arkenan\n\nPart of: #3331",
          "timestamp": "2025-07-23T17:15:17Z",
          "tree_id": "90f55d482f41009e1f0aab974c2f11afaaef03e1",
          "url": "https://github.com/lambdaclass/ethrex/commit/1802f66ed21aff9ca45056ad9a0a6a81b6a4a2b0"
        },
        "date": 1753301985645,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007415177777777778,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1802f66ed21aff9ca45056ad9a0a6a81b6a4a2b0",
          "message": "feat(l1): notebook for high-level profiling (#3633)\n\nIntroduce a new notebook to analyze contribution of eaxh part of the\nblock production process to its overall time, producing graphs for\nvisual clarity.\nInstructions included in the README.\n\nBased on #3274\nCoauthored-by: @Arkenan\n\nPart of: #3331",
          "timestamp": "2025-07-23T17:15:17Z",
          "tree_id": "90f55d482f41009e1f0aab974c2f11afaaef03e1",
          "url": "https://github.com/lambdaclass/ethrex/commit/1802f66ed21aff9ca45056ad9a0a6a81b6a4a2b0"
        },
        "date": 1753303320368,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001320209693372898,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "62400508+juan518munoz@users.noreply.github.com",
            "name": "juan518munoz",
            "username": "juan518munoz"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "31808c9e890a3af68e659735c63dcbb47df85a56",
          "message": "chore(l1,l2): bump spawned version to `0.2.1` (#3780)\n\n**Motivation**\n\nUpdate Spawned to accomodate new Actor interface.\n\n**Description**\n\nSince [spawned `0.2.0`](https://github.com/lambdaclass/spawned/pull/35)\nthe state and GenServer is \"the same\".",
          "timestamp": "2025-07-23T18:10:26Z",
          "tree_id": "1e3122f81bfb5a1e4cfcd914eae36c824d663bfc",
          "url": "https://github.com/lambdaclass/ethrex/commit/31808c9e890a3af68e659735c63dcbb47df85a56"
        },
        "date": 1753303838030,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007415177777777778,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "62400508+juan518munoz@users.noreply.github.com",
            "name": "juan518munoz",
            "username": "juan518munoz"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "31808c9e890a3af68e659735c63dcbb47df85a56",
          "message": "chore(l1,l2): bump spawned version to `0.2.1` (#3780)\n\n**Motivation**\n\nUpdate Spawned to accomodate new Actor interface.\n\n**Description**\n\nSince [spawned `0.2.0`](https://github.com/lambdaclass/spawned/pull/35)\nthe state and GenServer is \"the same\".",
          "timestamp": "2025-07-23T18:10:26Z",
          "tree_id": "1e3122f81bfb5a1e4cfcd914eae36c824d663bfc",
          "url": "https://github.com/lambdaclass/ethrex/commit/31808c9e890a3af68e659735c63dcbb47df85a56"
        },
        "date": 1753305158294,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001334732,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "614cc6d0300718b727304672d93a2ddf6adaf21d",
          "message": "docs(l1): move install instructions to new section and embed script one-liner (#3505)\n\n**Motivation**\n\nSince the install script just builds from source using a `cargo install`\none-liner, it's preferable to show that instead of having to download\nand run an install script.\n\n**Description**\n\nThis PR removes the install script, embedding the one-liner inside the\ndocs. It also moves the installation instructions to the book, linking\nto it in the readme, and expands them with instructions on how to build\nfrom source or download the pre-built binaries.\n\n---------\n\nCo-authored-by: Manuel Iñaki Bilbao <manuel.bilbao@lambdaclass.com>",
          "timestamp": "2025-07-23T21:47:54Z",
          "tree_id": "0b46ef2d7f648cf19cf1c02cfa8af0c4501391a5",
          "url": "https://github.com/lambdaclass/ethrex/commit/614cc6d0300718b727304672d93a2ddf6adaf21d"
        },
        "date": 1753309043175,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007374209944751382,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "614cc6d0300718b727304672d93a2ddf6adaf21d",
          "message": "docs(l1): move install instructions to new section and embed script one-liner (#3505)\n\n**Motivation**\n\nSince the install script just builds from source using a `cargo install`\none-liner, it's preferable to show that instead of having to download\nand run an install script.\n\n**Description**\n\nThis PR removes the install script, embedding the one-liner inside the\ndocs. It also moves the installation instructions to the book, linking\nto it in the readme, and expands them with instructions on how to build\nfrom source or download the pre-built binaries.\n\n---------\n\nCo-authored-by: Manuel Iñaki Bilbao <manuel.bilbao@lambdaclass.com>",
          "timestamp": "2025-07-23T21:47:54Z",
          "tree_id": "0b46ef2d7f648cf19cf1c02cfa8af0c4501391a5",
          "url": "https://github.com/lambdaclass/ethrex/commit/614cc6d0300718b727304672d93a2ddf6adaf21d"
        },
        "date": 1753310351548,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001334732,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "67cd8bea1ce06c8a875599f420a1ca05f528aa07",
          "message": "feat(l2): embed contracts in deployer and system_contracts_updater (#3604)\n\n**Motivation**\n\nThis PR embeds the bytecode of the contracts used in the `deployer` and\n`system_contracts_updater` as constants within the resulting binaries.\n\n**Description**\n\n- Adds a `build.rs` script under `crates/l2/contracts/bin/build.rs` that\ndownloads all necessary dependencies and compiles all required\ncontracts.\n- Modifies `deployer` and `system_contracts_updater` to import the\nresulting bytecodes as constants using `include_bytes!`, instead of\ncompiling them at runtime.\n- Removes the `download_contract_deps` function from the SDK, as it was\nonly cloning the same two repositories and was used even when only one\nwas needed.\n- Updates the `compile_contract` function in the SDK to accept a list of\n`remappings`.\n- Adds `deploy_contract_from_bytecode` and\n`deploy_with_proxy_from_bytecode` functions to the SDK.\n- Updates tests to work with the new SDK API.\n\n> [!NOTE]\n> The new `build.rs` script checks if `COMPILE_CONTRACTS` is set to\ndecide whether to compile the contracts.\n> This prevents `cargo check --workspace` from requiring `solc` as a\ndependency.\n\nCloses #3380",
          "timestamp": "2025-07-24T12:52:01Z",
          "tree_id": "181b3933b4e4d0214fffc3f5448d06d614709de8",
          "url": "https://github.com/lambdaclass/ethrex/commit/67cd8bea1ce06c8a875599f420a1ca05f528aa07"
        },
        "date": 1753365810703,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001306,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "67cd8bea1ce06c8a875599f420a1ca05f528aa07",
          "message": "feat(l2): embed contracts in deployer and system_contracts_updater (#3604)\n\n**Motivation**\n\nThis PR embeds the bytecode of the contracts used in the `deployer` and\n`system_contracts_updater` as constants within the resulting binaries.\n\n**Description**\n\n- Adds a `build.rs` script under `crates/l2/contracts/bin/build.rs` that\ndownloads all necessary dependencies and compiles all required\ncontracts.\n- Modifies `deployer` and `system_contracts_updater` to import the\nresulting bytecodes as constants using `include_bytes!`, instead of\ncompiling them at runtime.\n- Removes the `download_contract_deps` function from the SDK, as it was\nonly cloning the same two repositories and was used even when only one\nwas needed.\n- Updates the `compile_contract` function in the SDK to accept a list of\n`remappings`.\n- Adds `deploy_contract_from_bytecode` and\n`deploy_with_proxy_from_bytecode` functions to the SDK.\n- Updates tests to work with the new SDK API.\n\n> [!NOTE]\n> The new `build.rs` script checks if `COMPILE_CONTRACTS` is set to\ndecide whether to compile the contracts.\n> This prevents `cargo check --workspace` from requiring `solc` as a\ndependency.\n\nCloses #3380",
          "timestamp": "2025-07-24T12:52:01Z",
          "tree_id": "181b3933b4e4d0214fffc3f5448d06d614709de8",
          "url": "https://github.com/lambdaclass/ethrex/commit/67cd8bea1ce06c8a875599f420a1ca05f528aa07"
        },
        "date": 1753366341785,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007670873563218391,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "df3a9bd81724520f527cc837775419629eebcfec",
          "message": "feat(l2): enhance monitor performance (#3757)\n\n**Motivation**\nIf a sequencer runs for a long time, it stops, and we run it again\nactivating the monitor, it takes a long time to start and is slow.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nMakes the monitor load and work faster by simplifying the batches\nprocessing.\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n**How to Test**\n\n- Run a Sequencer (I suggest `make restart` in `crates/l2`).\n- Run the prover with `make init-prover` in `crates/l2`.\n- Let the sequencer ran for some time (at least 60 batches)\n- Kill the sequencer\n- Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n- Run `make init-l2-no-metrics`\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-07-24T14:16:59Z",
          "tree_id": "aea4bef1fd38b28adda61ffe55e827444f640da9",
          "url": "https://github.com/lambdaclass/ethrex/commit/df3a9bd81724520f527cc837775419629eebcfec"
        },
        "date": 1753367763566,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007670873563218391,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "df3a9bd81724520f527cc837775419629eebcfec",
          "message": "feat(l2): enhance monitor performance (#3757)\n\n**Motivation**\nIf a sequencer runs for a long time, it stops, and we run it again\nactivating the monitor, it takes a long time to start and is slow.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nMakes the monitor load and work faster by simplifying the batches\nprocessing.\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n**How to Test**\n\n- Run a Sequencer (I suggest `make restart` in `crates/l2`).\n- Run the prover with `make init-prover` in `crates/l2`.\n- Let the sequencer ran for some time (at least 60 batches)\n- Kill the sequencer\n- Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n- Run `make init-l2-no-metrics`\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-07-24T14:16:59Z",
          "tree_id": "aea4bef1fd38b28adda61ffe55e827444f640da9",
          "url": "https://github.com/lambdaclass/ethrex/commit/df3a9bd81724520f527cc837775419629eebcfec"
        },
        "date": 1753370978954,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001330739780658026,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8d7a9096401de0e6ff01c6e66e19513e0c522264",
          "message": "refactor(l2): improve naming and standardize arguments in l2 tests (#3790)\n\n**Motivation**\n\nCurrently the L2 tests:\n* use unintuitive names (eth_client vs proposer_client, meaning l1 and\nl2)\n* do not have a consistent ordering of parameters\n* are inconsistent on when things (bridge address and rich private key)\nare given as parameter vs obtained from a function\n\n**Description**\n\nThis PR improves that, and gets the \"noisy\" changes out of the way for\nfurther improvements.\n\nThe rich private key was kept as a parameter to allow giving different\nones (in the future, this would allow parallelizing the tests). The\nbridge address now always uses the function, since it won't change in\nthe middle of the test.",
          "timestamp": "2025-07-24T14:31:19Z",
          "tree_id": "1923a7ff48eef83a37502db6250daa76a844c694",
          "url": "https://github.com/lambdaclass/ethrex/commit/8d7a9096401de0e6ff01c6e66e19513e0c522264"
        },
        "date": 1753374231752,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013509433198380567,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8d7a9096401de0e6ff01c6e66e19513e0c522264",
          "message": "refactor(l2): improve naming and standardize arguments in l2 tests (#3790)\n\n**Motivation**\n\nCurrently the L2 tests:\n* use unintuitive names (eth_client vs proposer_client, meaning l1 and\nl2)\n* do not have a consistent ordering of parameters\n* are inconsistent on when things (bridge address and rich private key)\nare given as parameter vs obtained from a function\n\n**Description**\n\nThis PR improves that, and gets the \"noisy\" changes out of the way for\nfurther improvements.\n\nThe rich private key was kept as a parameter to allow giving different\nones (in the future, this would allow parallelizing the tests). The\nbridge address now always uses the function, since it won't change in\nthe middle of the test.",
          "timestamp": "2025-07-24T14:31:19Z",
          "tree_id": "1923a7ff48eef83a37502db6250daa76a844c694",
          "url": "https://github.com/lambdaclass/ethrex/commit/8d7a9096401de0e6ff01c6e66e19513e0c522264"
        },
        "date": 1753374760141,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00762704,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7c3fffcd507ef0deb49e61a45535d6e6db0366be",
          "message": "chore(l2): bump sp1 version to 5.0.8 (#3737)\n\n**Motivation**\n\nSome PRs that updated the Cargo.lock and bumped sp1 to 5.0.8 were\nfailing because sp1up was installing version 5.0.0.\n\n**Description**\n\n- Bump and lock all versions of sp1 to 5.0.8",
          "timestamp": "2025-07-24T14:58:11Z",
          "tree_id": "61796f6914bb141eccf48801f6433f68534c9961",
          "url": "https://github.com/lambdaclass/ethrex/commit/7c3fffcd507ef0deb49e61a45535d6e6db0366be"
        },
        "date": 1753375353136,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007670873563218391,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7c3fffcd507ef0deb49e61a45535d6e6db0366be",
          "message": "chore(l2): bump sp1 version to 5.0.8 (#3737)\n\n**Motivation**\n\nSome PRs that updated the Cargo.lock and bumped sp1 to 5.0.8 were\nfailing because sp1up was installing version 5.0.0.\n\n**Description**\n\n- Bump and lock all versions of sp1 to 5.0.8",
          "timestamp": "2025-07-24T14:58:11Z",
          "tree_id": "61796f6914bb141eccf48801f6433f68534c9961",
          "url": "https://github.com/lambdaclass/ethrex/commit/7c3fffcd507ef0deb49e61a45535d6e6db0366be"
        },
        "date": 1753376665543,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013888990634755463,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7e6185d658f7b4f4871f56f044e39aa26528ab11",
          "message": "perf(levm): add shortcut for precompile calls (#3802)\n\n**Motivation**\n\nCurrently, calls to precompiles generate a callframe (including a stack\nand a new memory).\n\n**Description**\n\nAvoid creating call frames for precompiles.",
          "timestamp": "2025-07-24T15:36:42Z",
          "tree_id": "c1f806a73e4a7f1e7ef1c030fd1caee99ffb8a2c",
          "url": "https://github.com/lambdaclass/ethrex/commit/7e6185d658f7b4f4871f56f044e39aa26528ab11"
        },
        "date": 1753377954467,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001346853683148335,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7e6185d658f7b4f4871f56f044e39aa26528ab11",
          "message": "perf(levm): add shortcut for precompile calls (#3802)\n\n**Motivation**\n\nCurrently, calls to precompiles generate a callframe (including a stack\nand a new memory).\n\n**Description**\n\nAvoid creating call frames for precompiles.",
          "timestamp": "2025-07-24T15:36:42Z",
          "tree_id": "c1f806a73e4a7f1e7ef1c030fd1caee99ffb8a2c",
          "url": "https://github.com/lambdaclass/ethrex/commit/7e6185d658f7b4f4871f56f044e39aa26528ab11"
        },
        "date": 1753382864540,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00771521387283237,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3a786b384cbbc2ffd66c613d2ae613cfc16c277c",
          "message": "perf(l2): avoid cloning all fields from ExecutionWitnessResult  (#3765)\n\n**Motivation**\n\nWhen proving a large batch performance was being affected because we\nwere cloning the entire ExecutionWitnessResult struct, this meant\ncloning all the BlockHeaders, Code and ChainConfig for every block.\n\n**Description**\n\n- Wrap ExecutionWitnessResult in a struct that has an inner field\nArc<Mutex<ExecutionWitnessResult>> that implements VmDatabase trait,\nwhich can be cheaply cloned\n- Remove all the Arc<Mutex<>> from ExecutionWitnessResult, remove the\nVmDatabase trait implementation, remove the derive Clone.\n\n**Perf Metrics**\n\ncommand:\n\n```\nTRACE_FILE=output.json TRACE_SAMPLE_RATE=100 RUST_BACKTRACE=full cargo run --release --features \"sp1,l2\" -- execute batch --rpc-url RPC_URL --network 65536300 13\n```\n\nspecs:\n```\nModel Identifier: MacBookAir10,1\nChip: Apple M1\nTotal Number of Cores: 8 (4 performance and 4 efficiency)\nMemory: 16 GB\nSystem Firmware Version: 11881.121.1\nOS Loader Version: 11881.121.1\n```\n\ncommits:\nThis branch (commit 16420ed)\nMain (commit ce5c47df7)\n\n- Time:\n    Main:    `Elapsed: 147.28s`\n    This branch:    `Elapsed: 67.07s`\n- Samply\n    Main: https://share.firefox.dev/3H2Hd5A\n    This branch: https://share.firefox.dev/40yeDzP",
          "timestamp": "2025-07-24T15:46:20Z",
          "tree_id": "0b98b16f157af9b0d0328bff1eea0720401c6c6e",
          "url": "https://github.com/lambdaclass/ethrex/commit/3a786b384cbbc2ffd66c613d2ae613cfc16c277c"
        },
        "date": 1753385575744,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007760069767441861,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3a786b384cbbc2ffd66c613d2ae613cfc16c277c",
          "message": "perf(l2): avoid cloning all fields from ExecutionWitnessResult  (#3765)\n\n**Motivation**\n\nWhen proving a large batch performance was being affected because we\nwere cloning the entire ExecutionWitnessResult struct, this meant\ncloning all the BlockHeaders, Code and ChainConfig for every block.\n\n**Description**\n\n- Wrap ExecutionWitnessResult in a struct that has an inner field\nArc<Mutex<ExecutionWitnessResult>> that implements VmDatabase trait,\nwhich can be cheaply cloned\n- Remove all the Arc<Mutex<>> from ExecutionWitnessResult, remove the\nVmDatabase trait implementation, remove the derive Clone.\n\n**Perf Metrics**\n\ncommand:\n\n```\nTRACE_FILE=output.json TRACE_SAMPLE_RATE=100 RUST_BACKTRACE=full cargo run --release --features \"sp1,l2\" -- execute batch --rpc-url RPC_URL --network 65536300 13\n```\n\nspecs:\n```\nModel Identifier: MacBookAir10,1\nChip: Apple M1\nTotal Number of Cores: 8 (4 performance and 4 efficiency)\nMemory: 16 GB\nSystem Firmware Version: 11881.121.1\nOS Loader Version: 11881.121.1\n```\n\ncommits:\nThis branch (commit 16420ed)\nMain (commit ce5c47df7)\n\n- Time:\n    Main:    `Elapsed: 147.28s`\n    This branch:    `Elapsed: 67.07s`\n- Samply\n    Main: https://share.firefox.dev/3H2Hd5A\n    This branch: https://share.firefox.dev/40yeDzP",
          "timestamp": "2025-07-24T15:46:20Z",
          "tree_id": "0b98b16f157af9b0d0328bff1eea0720401c6c6e",
          "url": "https://github.com/lambdaclass/ethrex/commit/3a786b384cbbc2ffd66c613d2ae613cfc16c277c"
        },
        "date": 1753386899603,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013254538232373386,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aa04d3fcef2f047b1f3eaebc0ad6324ae17d6626",
          "message": "chore(l2): remove save_state file (#3817)\n\n**Motivation**\n\nThe `save_state.rs` file was accidentally re-added during merge conflict\nresolution.\n\n**Description**\n\nRemoves the `save_state.rs` file.\n\n\nCloses None",
          "timestamp": "2025-07-24T18:52:52Z",
          "tree_id": "95f96905edb0c54c466b4f83590765fee62e92a7",
          "url": "https://github.com/lambdaclass/ethrex/commit/aa04d3fcef2f047b1f3eaebc0ad6324ae17d6626"
        },
        "date": 1753387402510,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00771521387283237,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aa04d3fcef2f047b1f3eaebc0ad6324ae17d6626",
          "message": "chore(l2): remove save_state file (#3817)\n\n**Motivation**\n\nThe `save_state.rs` file was accidentally re-added during merge conflict\nresolution.\n\n**Description**\n\nRemoves the `save_state.rs` file.\n\n\nCloses None",
          "timestamp": "2025-07-24T18:52:52Z",
          "tree_id": "95f96905edb0c54c466b4f83590765fee62e92a7",
          "url": "https://github.com/lambdaclass/ethrex/commit/aa04d3fcef2f047b1f3eaebc0ad6324ae17d6626"
        },
        "date": 1753388696152,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013400923694779118,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0c7d7e5cb72f8dab903a27d77db25c2b7479687f",
          "message": "fix(l1): fix metrics path (#3814)\n\n**Motivation**\n\nWe moved the metrics folder, but it wasn't updated here.\n\n**Description**\n\nFixes the path.",
          "timestamp": "2025-07-24T19:04:00Z",
          "tree_id": "c475e55d6f74b27e59053ae15e93bac2677af9c7",
          "url": "https://github.com/lambdaclass/ethrex/commit/0c7d7e5cb72f8dab903a27d77db25c2b7479687f"
        },
        "date": 1753389201548,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00771521387283237,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0c7d7e5cb72f8dab903a27d77db25c2b7479687f",
          "message": "fix(l1): fix metrics path (#3814)\n\n**Motivation**\n\nWe moved the metrics folder, but it wasn't updated here.\n\n**Description**\n\nFixes the path.",
          "timestamp": "2025-07-24T19:04:00Z",
          "tree_id": "c475e55d6f74b27e59053ae15e93bac2677af9c7",
          "url": "https://github.com/lambdaclass/ethrex/commit/0c7d7e5cb72f8dab903a27d77db25c2b7479687f"
        },
        "date": 1753394720123,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001334732,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a21b5dfe15ad4a75919550ecdd1cb97f395511a1",
          "message": "ci(l2): integration test flaky not required for now (#3827)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n- l2 integration test is flaky and it is a required check, so we change\nits name so that it's not required anymore until it is fixed.",
          "timestamp": "2025-07-25T11:43:21Z",
          "tree_id": "bfba08d78c9d9bd7d38e3d9c83491e4e29aa501a",
          "url": "https://github.com/lambdaclass/ethrex/commit/a21b5dfe15ad4a75919550ecdd1cb97f395511a1"
        },
        "date": 1753447809740,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013280915422885572,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a21b5dfe15ad4a75919550ecdd1cb97f395511a1",
          "message": "ci(l2): integration test flaky not required for now (#3827)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n- l2 integration test is flaky and it is a required check, so we change\nits name so that it's not required anymore until it is fixed.",
          "timestamp": "2025-07-25T11:43:21Z",
          "tree_id": "bfba08d78c9d9bd7d38e3d9c83491e4e29aa501a",
          "url": "https://github.com/lambdaclass/ethrex/commit/a21b5dfe15ad4a75919550ecdd1cb97f395511a1"
        },
        "date": 1753448340227,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0075408587570621475,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "13a9fa3324df9df34aeaf00958f9a58c5f84da83",
          "message": "perf(levm): refactor current callframe (#3816)\n\n**Motivation**\n\nKeeps current call frame as a field, avoiding calling a function call\nthat requires error handling.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3777 \n\nCloses #3778\n\nCloses #3779\n\n<img width=\"2560\" height=\"2235\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/5f1914b5-ce0e-44ee-8f24-d4ab0aeee48e\"\n/>",
          "timestamp": "2025-07-25T11:50:25Z",
          "tree_id": "3c8ea16a83438e4ceab73856bd1236eb727447fa",
          "url": "https://github.com/lambdaclass/ethrex/commit/13a9fa3324df9df34aeaf00958f9a58c5f84da83"
        },
        "date": 1753448858553,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007670873563218391,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "b3f7b44dee4979e5decdf8bd2cfac5067c7a372a",
          "message": "perf(l2): use rkyv instead of bincode for sp1",
          "timestamp": "2025-07-25T12:35:44Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3831/commits/b3f7b44dee4979e5decdf8bd2cfac5067c7a372a"
        },
        "date": 1753451367069,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.01011160606060606,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "b3f7b44dee4979e5decdf8bd2cfac5067c7a372a",
          "message": "perf(l2): use rkyv instead of bincode for sp1",
          "timestamp": "2025-07-25T12:35:44Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3831/commits/b3f7b44dee4979e5decdf8bd2cfac5067c7a372a"
        },
        "date": 1753452713608,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013427887323943662,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "13b01aeac65771054b39515a770a702ceb33874f",
          "message": "perf(l2): use rkyv instead of bincode for sp1",
          "timestamp": "2025-07-25T13:52:03Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3831/commits/13b01aeac65771054b39515a770a702ceb33874f"
        },
        "date": 1753459157695,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.01034675968992248,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "13a9fa3324df9df34aeaf00958f9a58c5f84da83",
          "message": "perf(levm): refactor current callframe (#3816)\n\n**Motivation**\n\nKeeps current call frame as a field, avoiding calling a function call\nthat requires error handling.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3777 \n\nCloses #3778\n\nCloses #3779\n\n<img width=\"2560\" height=\"2235\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/5f1914b5-ce0e-44ee-8f24-d4ab0aeee48e\"\n/>",
          "timestamp": "2025-07-25T11:50:25Z",
          "tree_id": "3c8ea16a83438e4ceab73856bd1236eb727447fa",
          "url": "https://github.com/lambdaclass/ethrex/commit/13a9fa3324df9df34aeaf00958f9a58c5f84da83"
        },
        "date": 1753460457723,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013523120567375886,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7925e990be7673a9fe442e8edd3f96638250cfe1",
          "message": "refactor(l2): remove clippy expects from monitor (#3664)\n\n**Motivation**\n\nWe want to clean up the monitor code.\n\n**Description**\n\nRemoves clippy expects.\n\nCloses #3534",
          "timestamp": "2025-07-25T12:24:54Z",
          "tree_id": "671984fc5f3fb740e45318e2eb54dfbc06e0ffec",
          "url": "https://github.com/lambdaclass/ethrex/commit/7925e990be7673a9fe442e8edd3f96638250cfe1"
        },
        "date": 1753467299238,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007760069767441861,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7925e990be7673a9fe442e8edd3f96638250cfe1",
          "message": "refactor(l2): remove clippy expects from monitor (#3664)\n\n**Motivation**\n\nWe want to clean up the monitor code.\n\n**Description**\n\nRemoves clippy expects.\n\nCloses #3534",
          "timestamp": "2025-07-25T12:24:54Z",
          "tree_id": "671984fc5f3fb740e45318e2eb54dfbc06e0ffec",
          "url": "https://github.com/lambdaclass/ethrex/commit/7925e990be7673a9fe442e8edd3f96638250cfe1"
        },
        "date": 1753469419191,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013523120567375886,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b64af9e7d0abc97d21a9dbe57e76408627641c2a",
          "message": "fix(levm): fix custom bytecode runner (#3834)\n\n**Motivation**\n\nDue to the callframe change the runner stopped working, because it tries\nto pop the callframe when it should just use current_callframe\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-25T13:40:43Z",
          "tree_id": "25a7a77f039529ea162f06c505a8fc16fca0cf63",
          "url": "https://github.com/lambdaclass/ethrex/commit/b64af9e7d0abc97d21a9dbe57e76408627641c2a"
        },
        "date": 1753473686073,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013647566462167689,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "b66fcce943b3ffd0f34c19622b1f5092091faa8b",
          "message": "perf(l2): use rkyv instead of bincode for sp1",
          "timestamp": "2025-07-25T19:53:18Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3831/commits/b66fcce943b3ffd0f34c19622b1f5092091faa8b"
        },
        "date": 1753496089374,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00996068656716418,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b64af9e7d0abc97d21a9dbe57e76408627641c2a",
          "message": "fix(levm): fix custom bytecode runner (#3834)\n\n**Motivation**\n\nDue to the callframe change the runner stopped working, because it tries\nto pop the callframe when it should just use current_callframe\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-25T13:40:43Z",
          "tree_id": "25a7a77f039529ea162f06c505a8fc16fca0cf63",
          "url": "https://github.com/lambdaclass/ethrex/commit/b64af9e7d0abc97d21a9dbe57e76408627641c2a"
        },
        "date": 1753513958898,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007099638297872341,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f354ef47725ad540484be224ffc2a63eb50d19c9",
          "message": "feat(l2): correctly monitor withdrawal status (#3627)\n\n**Motivation**\n\nWe want to correctly track the status of withdrawals.\n\n**Description**\n\nFetches the message id associated with the withdrawal by looking at the\nreceipts of the transaction.\n\n**How to test**\n\n- Add `--monitor` to the `init-l2-no-metrics` target in\n`crates/l2/Makefile`.\n- Run a Sequencer (I suggest `make restart` in `crates/l2`).\n- Run the prover with `make init-prover` in `crates/l2`.\n- Run `make test` in `crates/l2`.\n\nCloses #3513",
          "timestamp": "2025-07-25T15:10:29Z",
          "tree_id": "56d3b5ad545aa27b47e3a644190c63832d0a5e76",
          "url": "https://github.com/lambdaclass/ethrex/commit/f354ef47725ad540484be224ffc2a63eb50d19c9"
        },
        "date": 1753544937155,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013441409869083586,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "62400508+juan518munoz@users.noreply.github.com",
            "name": "juan518munoz",
            "username": "juan518munoz"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1cf713fbe242f4fc54398423d450a93eafc54e07",
          "message": "refactor(l1, l2): handle spawned errors (#3803)\n\n**Motivation**\n\nCurrent implementation does not handle errors, this PR aims to add\nlogging on failure and peer disconnection in the case of a broken pipe.\n\n**Description**\n\nNote: testing of broken pipe handling was done by running [three nodes\nat\nonce](https://github.com/lambdaclass/ethrex/blob/main/crates/networking/docs/Network.md#an-example-of-how-you-might-build-a-network),\nand regression by running hive devp2p tests.\n\nCloses #3375\n\nReplaces #3600\n\n---------\n\nCo-authored-by: ElFantasma <estebandh@gmail.com>",
          "timestamp": "2025-07-25T15:44:46Z",
          "tree_id": "372edc338b9e3d4fafd40ec39c74a41eeaf13c54",
          "url": "https://github.com/lambdaclass/ethrex/commit/1cf713fbe242f4fc54398423d450a93eafc54e07"
        },
        "date": 1753545603260,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007253978260869565,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "62400508+juan518munoz@users.noreply.github.com",
            "name": "juan518munoz",
            "username": "juan518munoz"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1cf713fbe242f4fc54398423d450a93eafc54e07",
          "message": "refactor(l1, l2): handle spawned errors (#3803)\n\n**Motivation**\n\nCurrent implementation does not handle errors, this PR aims to add\nlogging on failure and peer disconnection in the case of a broken pipe.\n\n**Description**\n\nNote: testing of broken pipe handling was done by running [three nodes\nat\nonce](https://github.com/lambdaclass/ethrex/blob/main/crates/networking/docs/Network.md#an-example-of-how-you-might-build-a-network),\nand regression by running hive devp2p tests.\n\nCloses #3375\n\nReplaces #3600\n\n---------\n\nCo-authored-by: ElFantasma <estebandh@gmail.com>",
          "timestamp": "2025-07-25T15:44:46Z",
          "tree_id": "372edc338b9e3d4fafd40ec39c74a41eeaf13c54",
          "url": "https://github.com/lambdaclass/ethrex/commit/1cf713fbe242f4fc54398423d450a93eafc54e07"
        },
        "date": 1753547690114,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013717697841726618,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "b66fcce943b3ffd0f34c19622b1f5092091faa8b",
          "message": "perf(l2): use rkyv instead of bincode for sp1",
          "timestamp": "2025-07-25T19:53:18Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3831/commits/b66fcce943b3ffd0f34c19622b1f5092091faa8b"
        },
        "date": 1753553627198,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013633626149131767,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "633e5346bf7ec7e39f4dd42620572cc52b4e5ced",
          "message": "perf(levm): enable lto codegen (#3830)\n\n**Motivation**\n\nLto seems to improve perfomance in some benches without regressions.\n\nA question would be, do we add it as another profile that we use\nexplicitly for releases or keep it as default for --release. I ask this\nquestion because the --release flag is used in lot of testing code and\nit would slow compile times of those\n\n<img width=\"2560\" height=\"2235\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/e79fbb09-237f-4e91-a843-5f91e9d4ecbb\"\n/>",
          "timestamp": "2025-07-25T18:22:41Z",
          "tree_id": "0666b30b7eaad4e54f37a5c82bbbda4dd1c7fc12",
          "url": "https://github.com/lambdaclass/ethrex/commit/633e5346bf7ec7e39f4dd42620572cc52b4e5ced"
        },
        "date": 1753554382336,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007415177777777778,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "633e5346bf7ec7e39f4dd42620572cc52b4e5ced",
          "message": "perf(levm): enable lto codegen (#3830)\n\n**Motivation**\n\nLto seems to improve perfomance in some benches without regressions.\n\nA question would be, do we add it as another profile that we use\nexplicitly for releases or keep it as default for --release. I ask this\nquestion because the --release flag is used in lot of testing code and\nit would slow compile times of those\n\n<img width=\"2560\" height=\"2235\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/e79fbb09-237f-4e91-a843-5f91e9d4ecbb\"\n/>",
          "timestamp": "2025-07-25T18:22:41Z",
          "tree_id": "0666b30b7eaad4e54f37a5c82bbbda4dd1c7fc12",
          "url": "https://github.com/lambdaclass/ethrex/commit/633e5346bf7ec7e39f4dd42620572cc52b4e5ced"
        },
        "date": 1753556507376,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013888990634755463,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "330571a4f818dc6a997b6cf034ac2ee3690b6492",
          "message": "fix(l2): use new rex send and call interface for ci (#3832)\n\n**Motivation**\n\nWith the changes made\n[here](https://github.com/lambdaclass/rex/pull/179) the CI failed\n\n**Description**\n\n- Use new rex cli interface\n- Pin `rex` version",
          "timestamp": "2025-07-25T19:38:25Z",
          "tree_id": "f54a3c4cc1f150ede2cf3e3bcfb4b1514a27fa5d",
          "url": "https://github.com/lambdaclass/ethrex/commit/330571a4f818dc6a997b6cf034ac2ee3690b6492"
        },
        "date": 1753558654645,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013874553014553016,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "330571a4f818dc6a997b6cf034ac2ee3690b6492",
          "message": "fix(l2): use new rex send and call interface for ci (#3832)\n\n**Motivation**\n\nWith the changes made\n[here](https://github.com/lambdaclass/rex/pull/179) the CI failed\n\n**Description**\n\n- Use new rex cli interface\n- Pin `rex` version",
          "timestamp": "2025-07-25T19:38:25Z",
          "tree_id": "f54a3c4cc1f150ede2cf3e3bcfb4b1514a27fa5d",
          "url": "https://github.com/lambdaclass/ethrex/commit/330571a4f818dc6a997b6cf034ac2ee3690b6492"
        },
        "date": 1753559400318,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007456603351955308,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a3d334732590b8aa886f4dfe10aa1654e3db7ee6",
          "message": "fix(l1): change `ethrex/tooling/sync/readme.MD` to `README.md` (#3841)\n\n**Motivation**\nThe readme file at ethrex/tooling/sync is called `readme.MD` instead of\nthe usual `README.md`\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Change `readme.MD` filename to `README.md`\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-28T09:50:13Z",
          "tree_id": "8c6dfd8ebc41611bf92e907fd3ed52662717b1d9",
          "url": "https://github.com/lambdaclass/ethrex/commit/a3d334732590b8aa886f4dfe10aa1654e3db7ee6"
        },
        "date": 1753699354664,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001332067864271457,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2bfdc178d25b7f78078e4b99ec279c308a180ae4",
          "message": "feat(l2): prioritize privileged transactions (#3784)\n\n**Motivation**\n\nWe want to prioritize privileged transactions, to prevent the sequencer\nfrom exceeding it's inclusion deadline.\n\n**Description**\n\nAlso ensures privileged transactions are sorted by their nonce, to\nensure (the other case that may cause out-of-order insertion is handled\nin #3776) they're inserted in-order.\n\nCloses #3730",
          "timestamp": "2025-07-28T14:44:26Z",
          "tree_id": "c1630d705f79497e51a7c0b645e918cbb6c88f67",
          "url": "https://github.com/lambdaclass/ethrex/commit/2bfdc178d25b7f78078e4b99ec279c308a180ae4"
        },
        "date": 1753765182172,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006988125654450262,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "993120aa119e8af4d8c433873f1929a4c127a8e5",
          "message": "perf(l2): use rkyv instead of bincode for sp1",
          "timestamp": "2025-07-28T10:06:20Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3831/commits/993120aa119e8af4d8c433873f1929a4c127a8e5"
        },
        "date": 1753773222093,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.008781131578947369,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "993120aa119e8af4d8c433873f1929a4c127a8e5",
          "message": "perf(l2): use rkyv instead of bincode for sp1",
          "timestamp": "2025-07-28T10:06:20Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3831/commits/993120aa119e8af4d8c433873f1929a4c127a8e5"
        },
        "date": 1753774651109,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013137125984251968,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "67700abf73d48ea46a1f37e1e989cb7aad813d19",
          "message": "feat(l2): allow setting height of the batch widget (#3690)\n\n**Motivation**\n\nUser might want to customize the UI\n\n**Description**\n\nAdds a CLI flag to set the height of the batch widget.\n\nCloses #3528\n\n---------\n\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>",
          "timestamp": "2025-07-28T16:32:20Z",
          "tree_id": "5233f78f5d9ec352bb06cd4e33bf96c9088426e0",
          "url": "https://github.com/lambdaclass/ethrex/commit/67700abf73d48ea46a1f37e1e989cb7aad813d19"
        },
        "date": 1753775587965,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007374209944751382,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "67700abf73d48ea46a1f37e1e989cb7aad813d19",
          "message": "feat(l2): allow setting height of the batch widget (#3690)\n\n**Motivation**\n\nUser might want to customize the UI\n\n**Description**\n\nAdds a CLI flag to set the height of the batch widget.\n\nCloses #3528\n\n---------\n\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>",
          "timestamp": "2025-07-28T16:32:20Z",
          "tree_id": "5233f78f5d9ec352bb06cd4e33bf96c9088426e0",
          "url": "https://github.com/lambdaclass/ethrex/commit/67700abf73d48ea46a1f37e1e989cb7aad813d19"
        },
        "date": 1753776915527,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001346853683148335,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ce81363367e07da317033189cb6079eb66d2cfed",
          "message": "fix(l1,l2): add git commit version to docker image build (#3848)\n\n**Motivation**\n\nThe .git directory was being ignored in the .dockerignore\n\n**Description**\n\n- Remove .git from .dockerignore\n\n\n[Here](https://github.com/lambdaclass/ethrex/actions/runs/16574039300/job/46873667439?pr=3848)\nis a successful run of L2 integration test",
          "timestamp": "2025-07-28T17:32:04Z",
          "tree_id": "87abf2d3404eb707e40c3a7af6f14f467fa512bf",
          "url": "https://github.com/lambdaclass/ethrex/commit/ce81363367e07da317033189cb6079eb66d2cfed"
        },
        "date": 1753802993165,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001346853683148335,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ce81363367e07da317033189cb6079eb66d2cfed",
          "message": "fix(l1,l2): add git commit version to docker image build (#3848)\n\n**Motivation**\n\nThe .git directory was being ignored in the .dockerignore\n\n**Description**\n\n- Remove .git from .dockerignore\n\n\n[Here](https://github.com/lambdaclass/ethrex/actions/runs/16574039300/job/46873667439?pr=3848)\nis a successful run of L2 integration test",
          "timestamp": "2025-07-28T17:32:04Z",
          "tree_id": "87abf2d3404eb707e40c3a7af6f14f467fa512bf",
          "url": "https://github.com/lambdaclass/ethrex/commit/ce81363367e07da317033189cb6079eb66d2cfed"
        },
        "date": 1753803724957,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007583704545454545,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "94380962+sofiazcoaga@users.noreply.github.com",
            "name": "sofiazcoaga",
            "username": "sofiazcoaga"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ebbb7e3de1fecac5a8d3c5e8a8ab061a80cf4668",
          "message": "refactor(levm): use common functions to deserialize in EF tests runner (#3806)\n\n**Description**\n\nThe current EF state tests runner has its own implementation for\ndeserializing every value that comes from the tests JSONs. The idea is\nto use already implemented common functions in `common/serde_utils.rs`\nor to update the existing functions to satisfy the runner's requirements\nas well.\n\nCloses #3793",
          "timestamp": "2025-07-28T18:23:54Z",
          "tree_id": "e9052f818cf73bf60786a14d73fbee3f7bde7218",
          "url": "https://github.com/lambdaclass/ethrex/commit/ebbb7e3de1fecac5a8d3c5e8a8ab061a80cf4668"
        },
        "date": 1753808218376,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013509433198380567,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "94380962+sofiazcoaga@users.noreply.github.com",
            "name": "sofiazcoaga",
            "username": "sofiazcoaga"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ebbb7e3de1fecac5a8d3c5e8a8ab061a80cf4668",
          "message": "refactor(levm): use common functions to deserialize in EF tests runner (#3806)\n\n**Description**\n\nThe current EF state tests runner has its own implementation for\ndeserializing every value that comes from the tests JSONs. The idea is\nto use already implemented common functions in `common/serde_utils.rs`\nor to update the existing functions to satisfy the runner's requirements\nas well.\n\nCloses #3793",
          "timestamp": "2025-07-28T18:23:54Z",
          "tree_id": "e9052f818cf73bf60786a14d73fbee3f7bde7218",
          "url": "https://github.com/lambdaclass/ethrex/commit/ebbb7e3de1fecac5a8d3c5e8a8ab061a80cf4668"
        },
        "date": 1753809042899,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007253978260869565,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c12cd30278592ba93f6a2df33bee57e5486d6c7b",
          "message": "feat(l2): show peer count in monitor when in based mode (#3668)\n\n**Motivation**\n\nCurrently peer count is a placeholder ('NaN') so we want an actual\nimplementations.\n\nThe peer count of the L2 should only be shown in based bode, because in\nother (non-based) modes peers aren't _needed_ and having more isn't\nnecessarily better.\n\n**Description**\n\nAdds a EthClient method to query net_peerCount, and uses it to get the\npeer count from the local node. Only displays the value if based mode is\nenabled.\n\nCloses #3516\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-07-29T14:51:01Z",
          "tree_id": "64c0045938e3bd46fda7dbaa08589a9c72205512",
          "url": "https://github.com/lambdaclass/ethrex/commit/c12cd30278592ba93f6a2df33bee57e5486d6c7b"
        },
        "date": 1753809789202,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007498494382022472,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c12cd30278592ba93f6a2df33bee57e5486d6c7b",
          "message": "feat(l2): show peer count in monitor when in based mode (#3668)\n\n**Motivation**\n\nCurrently peer count is a placeholder ('NaN') so we want an actual\nimplementations.\n\nThe peer count of the L2 should only be shown in based bode, because in\nother (non-based) modes peers aren't _needed_ and having more isn't\nnecessarily better.\n\n**Description**\n\nAdds a EthClient method to query net_peerCount, and uses it to get the\npeer count from the local node. Only displays the value if based mode is\nenabled.\n\nCloses #3516\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-07-29T14:51:01Z",
          "tree_id": "64c0045938e3bd46fda7dbaa08589a9c72205512",
          "url": "https://github.com/lambdaclass/ethrex/commit/c12cd30278592ba93f6a2df33bee57e5486d6c7b"
        },
        "date": 1753811999586,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013454959677419356,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "94380962+sofiazcoaga@users.noreply.github.com",
            "name": "sofiazcoaga",
            "username": "sofiazcoaga"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8e0d04d6d1a78e04deadb99664f237592cd25336",
          "message": "refactor(levm): add execution flags to EF tests runner (#3843)\n\n**Description**\n\nThis PR adds three types of execution flags to the runner of the EF\ntests:\n- a flag to run the tests in a specific path (could be either a `.json`\nfile or a directory).\n- a flag to skip certain `.json` files from execution. \n- a flag to indicate specific `.json` files to be executed. \n\nThese flags could be improved in a later iteration. \n\nCloses #3792",
          "timestamp": "2025-07-30T12:59:09Z",
          "tree_id": "a7d98230efa9a5cc7525e6306ab90a4c9b76d634",
          "url": "https://github.com/lambdaclass/ethrex/commit/8e0d04d6d1a78e04deadb99664f237592cd25336"
        },
        "date": 1753883554405,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012871089681774348,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "94380962+sofiazcoaga@users.noreply.github.com",
            "name": "sofiazcoaga",
            "username": "sofiazcoaga"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8e0d04d6d1a78e04deadb99664f237592cd25336",
          "message": "refactor(levm): add execution flags to EF tests runner (#3843)\n\n**Description**\n\nThis PR adds three types of execution flags to the runner of the EF\ntests:\n- a flag to run the tests in a specific path (could be either a `.json`\nfile or a directory).\n- a flag to skip certain `.json` files from execution. \n- a flag to indicate specific `.json` files to be executed. \n\nThese flags could be improved in a later iteration. \n\nCloses #3792",
          "timestamp": "2025-07-30T12:59:09Z",
          "tree_id": "a7d98230efa9a5cc7525e6306ab90a4c9b76d634",
          "url": "https://github.com/lambdaclass/ethrex/commit/8e0d04d6d1a78e04deadb99664f237592cd25336"
        },
        "date": 1753884454964,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006640457711442786,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "94380962+sofiazcoaga@users.noreply.github.com",
            "name": "sofiazcoaga",
            "username": "sofiazcoaga"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "104798dbc3c3e5f33940ceb736066fa7604cc9f4",
          "message": "docs(levm): add README and other docs for new EF tests runner (#3863)\n\n**Description**\n\nThis PR includes missing explanatory comments in the code of the new EF\nstate tests runner and a `README.md` that explains the purpose of the\nmodule and how to run the tests.",
          "timestamp": "2025-07-30T14:27:44Z",
          "tree_id": "0aa339dc369766ec8511ceac0b44721f93308358",
          "url": "https://github.com/lambdaclass/ethrex/commit/104798dbc3c3e5f33940ceb736066fa7604cc9f4"
        },
        "date": 1753890950990,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001349577350859454,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "94380962+sofiazcoaga@users.noreply.github.com",
            "name": "sofiazcoaga",
            "username": "sofiazcoaga"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "104798dbc3c3e5f33940ceb736066fa7604cc9f4",
          "message": "docs(levm): add README and other docs for new EF tests runner (#3863)\n\n**Description**\n\nThis PR includes missing explanatory comments in the code of the new EF\nstate tests runner and a `README.md` that explains the purpose of the\nmodule and how to run the tests.",
          "timestamp": "2025-07-30T14:27:44Z",
          "tree_id": "0aa339dc369766ec8511ceac0b44721f93308358",
          "url": "https://github.com/lambdaclass/ethrex/commit/104798dbc3c3e5f33940ceb736066fa7604cc9f4"
        },
        "date": 1753891772276,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007374209944751382,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ed7fc008565f5f986b36a4dc84bd5c8956db4d3d",
          "message": "fix(l2): integration tests (#3851)\n\n**Motivation**\n\nTransactions revert sometimes because of exceeding the estimated gas\nlimit.\n\nThe estimation is done by executing the transaction with different gas\nlimits, binary searching the smallest value to which the tx does not\nrevert. We think this algorithm doesn't work properly when there's a big\nvariance in the execution gas, resulting in a too low estimation.\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n- adds logs to tests\n- doubles the gas limit estimation of test calls\n- changes the \"not an Integration Test\" name to make them required again\n- asserts transactions succeeded (receipt.status == true)\n\n\ncloses #3828\n\n---------\n\nCo-authored-by: avilagaston9 <gaston.avila@lambdaclass.com>",
          "timestamp": "2025-07-30T15:56:34Z",
          "tree_id": "26372ffb2743b22be247dc054a691ff9642888b5",
          "url": "https://github.com/lambdaclass/ethrex/commit/ed7fc008565f5f986b36a4dc84bd5c8956db4d3d"
        },
        "date": 1753896859915,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013774324045407638,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ed7fc008565f5f986b36a4dc84bd5c8956db4d3d",
          "message": "fix(l2): integration tests (#3851)\n\n**Motivation**\n\nTransactions revert sometimes because of exceeding the estimated gas\nlimit.\n\nThe estimation is done by executing the transaction with different gas\nlimits, binary searching the smallest value to which the tx does not\nrevert. We think this algorithm doesn't work properly when there's a big\nvariance in the execution gas, resulting in a too low estimation.\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n- adds logs to tests\n- doubles the gas limit estimation of test calls\n- changes the \"not an Integration Test\" name to make them required again\n- asserts transactions succeeded (receipt.status == true)\n\n\ncloses #3828\n\n---------\n\nCo-authored-by: avilagaston9 <gaston.avila@lambdaclass.com>",
          "timestamp": "2025-07-30T15:56:34Z",
          "tree_id": "26372ffb2743b22be247dc054a691ff9642888b5",
          "url": "https://github.com/lambdaclass/ethrex/commit/ed7fc008565f5f986b36a4dc84bd5c8956db4d3d"
        },
        "date": 1753897643316,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00762704,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6967cf487bf8b4c261f7cdc2a33097e74c64f4ac",
          "message": "feat(l2): add privileged transaction cap (#3776)\n\n**Motivation**\n\nIf the l2 batches include too many privileged transactions, it may\nhappen that the gas cost of `getPendingTransactionsVersionedHash(uint16\nn)` becomes so high it's impossible to commit batches.\n\n**Description**\n\nTo prevent this, we record the privileged transaction count of the batch\nbeing built and ensure no more than a fixed amount (300 for now) is\nadded.\n\nWe add a spammer (that makes 1800 privileged transactions) as a\nregression test.\n\nAdditionally, this allows enforcing intra-batch ordering of privileged\ntransactions. This prevents the following scenario from happening:\n* A sends two deposits with gas values 1 (deposit 1) and 10M (deposit 2)\n* B then sends a deposit with gas value 1 (deposit 3)\n* The sequencer includes A's first deposit, but not the second because\nit's too big for the block. Deposit 3 is included because it's small.\n* The resulting inclusion order is 1, 3. This out-of-order and therefore\nthe batch is invalid.",
          "timestamp": "2025-07-30T16:17:44Z",
          "tree_id": "383642db8f5f7fa6e5c3bd21f0025ea3e141148f",
          "url": "https://github.com/lambdaclass/ethrex/commit/6967cf487bf8b4c261f7cdc2a33097e74c64f4ac"
        },
        "date": 1753898959891,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013441409869083586,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6967cf487bf8b4c261f7cdc2a33097e74c64f4ac",
          "message": "feat(l2): add privileged transaction cap (#3776)\n\n**Motivation**\n\nIf the l2 batches include too many privileged transactions, it may\nhappen that the gas cost of `getPendingTransactionsVersionedHash(uint16\nn)` becomes so high it's impossible to commit batches.\n\n**Description**\n\nTo prevent this, we record the privileged transaction count of the batch\nbeing built and ensure no more than a fixed amount (300 for now) is\nadded.\n\nWe add a spammer (that makes 1800 privileged transactions) as a\nregression test.\n\nAdditionally, this allows enforcing intra-batch ordering of privileged\ntransactions. This prevents the following scenario from happening:\n* A sends two deposits with gas values 1 (deposit 1) and 10M (deposit 2)\n* B then sends a deposit with gas value 1 (deposit 3)\n* The sequencer includes A's first deposit, but not the second because\nit's too big for the block. Deposit 3 is included because it's small.\n* The resulting inclusion order is 1, 3. This out-of-order and therefore\nthe batch is invalid.",
          "timestamp": "2025-07-30T16:17:44Z",
          "tree_id": "383642db8f5f7fa6e5c3bd21f0025ea3e141148f",
          "url": "https://github.com/lambdaclass/ethrex/commit/6967cf487bf8b4c261f7cdc2a33097e74c64f4ac"
        },
        "date": 1753899689980,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007583704545454545,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e7014ac919c88c6da9664070d8b1ec9d3c7ec3de",
          "message": "test(l2): monitor withdrawal widget integration tests (#3681)\n\n**Motivation**\n\nWe want to test the logic of the withdrawal widget, which is the only\none with significant logic behind it.\n\nAs for the other widgets:\n\n* NodeStatus/Batch are hard to test because they depend on\nout-of-control events, and don't to much beyond calling RPCs.\n* Mempool is hard to test, because we don't have much control (aside\nfrom \"tricks\" such as setting high nonces) over when tranactions are\npulled from the mempool. Also it doesn't have much logic inside. It also\nrelies on being part of the sequencer.\n* Deposits do have a little bit more logic, and can be somewhat\ncontrolled (deposits shouldn't magically disappear if nothing else is\nsending transactions). However, it relies on having access to the\nsequencer store so it's deferred.\n\n**Description**\n\nBoth ETH and ERC20 withdrawals are tested, as part of other integration\ntests.\n\nSome changes are made to make testing easier, and a bug (incorrect topic\nindex) is fixed.\n\nCloses #3526\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-07-30T16:54:54Z",
          "tree_id": "e99ab800a0060c8fc90f819c5e13f2dddde1eaa8",
          "url": "https://github.com/lambdaclass/ethrex/commit/e7014ac919c88c6da9664070d8b1ec9d3c7ec3de"
        },
        "date": 1753902261585,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013774324045407638,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e7014ac919c88c6da9664070d8b1ec9d3c7ec3de",
          "message": "test(l2): monitor withdrawal widget integration tests (#3681)\n\n**Motivation**\n\nWe want to test the logic of the withdrawal widget, which is the only\none with significant logic behind it.\n\nAs for the other widgets:\n\n* NodeStatus/Batch are hard to test because they depend on\nout-of-control events, and don't to much beyond calling RPCs.\n* Mempool is hard to test, because we don't have much control (aside\nfrom \"tricks\" such as setting high nonces) over when tranactions are\npulled from the mempool. Also it doesn't have much logic inside. It also\nrelies on being part of the sequencer.\n* Deposits do have a little bit more logic, and can be somewhat\ncontrolled (deposits shouldn't magically disappear if nothing else is\nsending transactions). However, it relies on having access to the\nsequencer store so it's deferred.\n\n**Description**\n\nBoth ETH and ERC20 withdrawals are tested, as part of other integration\ntests.\n\nSome changes are made to make testing easier, and a bug (incorrect topic\nindex) is fixed.\n\nCloses #3526\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-07-30T16:54:54Z",
          "tree_id": "e99ab800a0060c8fc90f819c5e13f2dddde1eaa8",
          "url": "https://github.com/lambdaclass/ethrex/commit/e7014ac919c88c6da9664070d8b1ec9d3c7ec3de"
        },
        "date": 1753902970943,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007415177777777778,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "30327624+Mechanix97@users.noreply.github.com",
            "name": "Mechardo",
            "username": "Mechanix97"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2f9a876e6e2fe51c53bc646680b838b8e124a847",
          "message": "feat(l2): store sp1 & risc0 vk encoded (#3807)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nThe vk stored in the interface wasn't encoded, so it couldn't be read by\na human\n\n**Description**\n\nAdded encoding when saving vk in file. You can test this by running from\n`crates/l2`\n```bash\n make build-prover PROVER=risc0\n make build-prover PROVER=sp1\n PROVER_CLIENT_ALIGNED=true make build-prover PROVER=sp1\n```\n\nchanged the way the file is read in the contract deployment process.\n\nYou can test it using\n```bash\n COMPILE_CONTRACTS=true cargo run --release --bin ethrex_l2_l1_deployer --manifest-path contracts/Cargo.toml -- \\\n  --eth-rpc-url http://localhost:8545 \\\n  --private-key 0x385c546456b6a603a1cfcaa9ec9494ba4832da08dd6bcf4de9a71e4a01b74924 \\\n  --genesis-l1-path ../../fixtures/genesis/l1-dev.json \\\n  --genesis-l2-path ../../fixtures/genesis/l2.json \\\n  --contracts-path contracts \\\n  --sp1.verifier-address 0x00000000000000000000000000000000000000aa \\\n  --risc0.verifier-address 0x00000000000000000000000000000000000000aa \\\n  --tdx.verifier-address 0x00000000000000000000000000000000000000aa \\\n  --aligned.aggregator-address 0x00000000000000000000000000000000000000aa \\\n  --bridge-owner 0xacb3bb54d7c5295c158184044bdeedd9aa426607 \\\n  --on-chain-proposer-owner 0xacb3bb54d7c5295c158184044bdeedd9aa426607 \\\n  --deposit-rich \\\n  --private-keys-file-path ../../fixtures/keys/private_keys_l1.txt \\\n  --deploy-based-contracts \\\n  --sequencer-registry-owner 0xacb3bb54d7c5295c158184044bdeedd9aa426607\n```\n\n(you need to have a l1 running)\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-30T20:10:49Z",
          "tree_id": "f6144b9fde822d5fbe97b5e37800d120de2f7ca2",
          "url": "https://github.com/lambdaclass/ethrex/commit/2f9a876e6e2fe51c53bc646680b838b8e124a847"
        },
        "date": 1753908514346,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013591975560081466,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "30327624+Mechanix97@users.noreply.github.com",
            "name": "Mechardo",
            "username": "Mechanix97"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2f9a876e6e2fe51c53bc646680b838b8e124a847",
          "message": "feat(l2): store sp1 & risc0 vk encoded (#3807)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nThe vk stored in the interface wasn't encoded, so it couldn't be read by\na human\n\n**Description**\n\nAdded encoding when saving vk in file. You can test this by running from\n`crates/l2`\n```bash\n make build-prover PROVER=risc0\n make build-prover PROVER=sp1\n PROVER_CLIENT_ALIGNED=true make build-prover PROVER=sp1\n```\n\nchanged the way the file is read in the contract deployment process.\n\nYou can test it using\n```bash\n COMPILE_CONTRACTS=true cargo run --release --bin ethrex_l2_l1_deployer --manifest-path contracts/Cargo.toml -- \\\n  --eth-rpc-url http://localhost:8545 \\\n  --private-key 0x385c546456b6a603a1cfcaa9ec9494ba4832da08dd6bcf4de9a71e4a01b74924 \\\n  --genesis-l1-path ../../fixtures/genesis/l1-dev.json \\\n  --genesis-l2-path ../../fixtures/genesis/l2.json \\\n  --contracts-path contracts \\\n  --sp1.verifier-address 0x00000000000000000000000000000000000000aa \\\n  --risc0.verifier-address 0x00000000000000000000000000000000000000aa \\\n  --tdx.verifier-address 0x00000000000000000000000000000000000000aa \\\n  --aligned.aggregator-address 0x00000000000000000000000000000000000000aa \\\n  --bridge-owner 0xacb3bb54d7c5295c158184044bdeedd9aa426607 \\\n  --on-chain-proposer-owner 0xacb3bb54d7c5295c158184044bdeedd9aa426607 \\\n  --deposit-rich \\\n  --private-keys-file-path ../../fixtures/keys/private_keys_l1.txt \\\n  --deploy-based-contracts \\\n  --sequencer-registry-owner 0xacb3bb54d7c5295c158184044bdeedd9aa426607\n```\n\n(you need to have a l1 running)\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-30T20:10:49Z",
          "tree_id": "f6144b9fde822d5fbe97b5e37800d120de2f7ca2",
          "url": "https://github.com/lambdaclass/ethrex/commit/2f9a876e6e2fe51c53bc646680b838b8e124a847"
        },
        "date": 1753909344161,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007498494382022472,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d5a49278a85ec3e7d663b403e53c23d6f1b5cd0",
          "message": "fix(l2): integration tests hotfix (#3892)\n\n**Motivation**\n\nafter merging #3776 a test was added that spams the bridge with big gas\nlimit transactions. In #3851 we upped the gas limit of all transactions\nby x2 because the estimation was too low. These two contributed to\nexceed the block gas limit.\n\nThis PR lowers the amount of spam txs\n\nthanks @iovoid !",
          "timestamp": "2025-07-30T21:01:48Z",
          "tree_id": "26a5877ab68e3eac5b1d233323d327de12e0e04e",
          "url": "https://github.com/lambdaclass/ethrex/commit/0d5a49278a85ec3e7d663b403e53c23d6f1b5cd0"
        },
        "date": 1753914344645,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007760069767441861,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d5a49278a85ec3e7d663b403e53c23d6f1b5cd0",
          "message": "fix(l2): integration tests hotfix (#3892)\n\n**Motivation**\n\nafter merging #3776 a test was added that spams the bridge with big gas\nlimit transactions. In #3851 we upped the gas limit of all transactions\nby x2 because the estimation was too low. These two contributed to\nexceed the block gas limit.\n\nThis PR lowers the amount of spam txs\n\nthanks @iovoid !",
          "timestamp": "2025-07-30T21:01:48Z",
          "tree_id": "26a5877ab68e3eac5b1d233323d327de12e0e04e",
          "url": "https://github.com/lambdaclass/ethrex/commit/0d5a49278a85ec3e7d663b403e53c23d6f1b5cd0"
        },
        "date": 1753915670735,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013605830784913355,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "26416053148bc54d441aa85e529c474c8d8ef820",
          "message": "perf(l1): add (sender,nonce)=>tx_hash mapping (#3865)\n\nSome mempool operations need to query transactions by their sender and\nnonce. One of those cases is to know which transaction to replace when\nsender and nonce match.\nUntil now, we did that by iterating the whole mempool. This became a\nbottleneck for the mempool, given it's quadratic to the number of txs\nyou want to add.\nThis adds an auxiliary BTreeMap from the (sender, nonce) to the\ntransaction's hash.\nThis also helps for querying the current nonce of an address.\n\nTesting with a load test on ethrex-sync-3 (AMD Ryzen 5 3600 6-Core\nProcessor, 2 threads-per-core, 64GB RAM):\n- Reported time went down from 84\" to 71\";\n- Contribution of `find_tx_to_replace` to `add_transaction_to_pool` went\n  down from 80% to 1.6% according to samply;\n- Max throughput slightly improved, from 0.292Ggas/s to 0.362Ggas/s.\n\nFixes #3867\n\n---------\n\nCo-authored-by: Edgar <git@edgl.dev>",
          "timestamp": "2025-07-31T12:23:48Z",
          "tree_id": "24cc4208d8e7be7d98a7f1ea6dae36f54536b5f6",
          "url": "https://github.com/lambdaclass/ethrex/commit/26416053148bc54d441aa85e529c474c8d8ef820"
        },
        "date": 1753966940949,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013163037475345167,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "26416053148bc54d441aa85e529c474c8d8ef820",
          "message": "perf(l1): add (sender,nonce)=>tx_hash mapping (#3865)\n\nSome mempool operations need to query transactions by their sender and\nnonce. One of those cases is to know which transaction to replace when\nsender and nonce match.\nUntil now, we did that by iterating the whole mempool. This became a\nbottleneck for the mempool, given it's quadratic to the number of txs\nyou want to add.\nThis adds an auxiliary BTreeMap from the (sender, nonce) to the\ntransaction's hash.\nThis also helps for querying the current nonce of an address.\n\nTesting with a load test on ethrex-sync-3 (AMD Ryzen 5 3600 6-Core\nProcessor, 2 threads-per-core, 64GB RAM):\n- Reported time went down from 84\" to 71\";\n- Contribution of `find_tx_to_replace` to `add_transaction_to_pool` went\n  down from 80% to 1.6% according to samply;\n- Max throughput slightly improved, from 0.292Ggas/s to 0.362Ggas/s.\n\nFixes #3867\n\n---------\n\nCo-authored-by: Edgar <git@edgl.dev>",
          "timestamp": "2025-07-31T12:23:48Z",
          "tree_id": "24cc4208d8e7be7d98a7f1ea6dae36f54536b5f6",
          "url": "https://github.com/lambdaclass/ethrex/commit/26416053148bc54d441aa85e529c474c8d8ef820"
        },
        "date": 1753970609016,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007760069767441861,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e02a846f11d5ca1b06099a8129b6a08d014bf786",
          "message": "fix(l1):  use p2p's `sync-test` feature in crate's `sync-test` feature (#3889)\n\n**Motivation**\n`ethrex-p2p` crate has code gated behind a `sync-test` feature, but this\nfeature is not enabled within the crate's `sync-test` feature, causing\nthis code not to be enabled when running ethrex with `sync-test`\nfeature.\nThis causes issues such as the one reported by #3594 where\n`EXECUTE_BATCH_SIZE` env var is not used.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Include p2p's `sync-test` feature in crate's `sync-test` feature\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3594",
          "timestamp": "2025-07-31T13:08:05Z",
          "tree_id": "ac8fea6e38c6d1f0d4acc4a431ae8df16b1bb9d0",
          "url": "https://github.com/lambdaclass/ethrex/commit/e02a846f11d5ca1b06099a8129b6a08d014bf786"
        },
        "date": 1753971391761,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007670873563218391,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e02a846f11d5ca1b06099a8129b6a08d014bf786",
          "message": "fix(l1):  use p2p's `sync-test` feature in crate's `sync-test` feature (#3889)\n\n**Motivation**\n`ethrex-p2p` crate has code gated behind a `sync-test` feature, but this\nfeature is not enabled within the crate's `sync-test` feature, causing\nthis code not to be enabled when running ethrex with `sync-test`\nfeature.\nThis causes issues such as the one reported by #3594 where\n`EXECUTE_BATCH_SIZE` env var is not used.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Include p2p's `sync-test` feature in crate's `sync-test` feature\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3594",
          "timestamp": "2025-07-31T13:08:05Z",
          "tree_id": "ac8fea6e38c6d1f0d4acc4a431ae8df16b1bb9d0",
          "url": "https://github.com/lambdaclass/ethrex/commit/e02a846f11d5ca1b06099a8129b6a08d014bf786"
        },
        "date": 1753972782026,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013774324045407638,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cd6a57df800dba6645709518be653286e2c9b41c",
          "message": "fix(l1): yield in-between blocks during batch execution (#3873)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nRecently, while running full sync on sepolia network it has become a\ncommon occurrence to suddenly lose all connected peers due to a `Broken\nPipe` error. Upon further investigation this seems to be due to block\nexecution being too intensive and leaving p2p unresponsive.\nA quick fix for this was to add yields in-between block executions when\nexecuting blocks in batches. This has solved the problem for sepolia\ntestnet (Over 1 Day without incidents).\nThis could also be improved by further integrating `spawned` into the\nfull sync process.\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n* Add yields inbetween each block execution when executing blocks in\nbatches\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-31T13:09:45Z",
          "tree_id": "eda29b170beb98147e071897bf35bd473532c6d7",
          "url": "https://github.com/lambdaclass/ethrex/commit/cd6a57df800dba6645709518be653286e2c9b41c"
        },
        "date": 1753976999305,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013550578680203045,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cd6a57df800dba6645709518be653286e2c9b41c",
          "message": "fix(l1): yield in-between blocks during batch execution (#3873)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nRecently, while running full sync on sepolia network it has become a\ncommon occurrence to suddenly lose all connected peers due to a `Broken\nPipe` error. Upon further investigation this seems to be due to block\nexecution being too intensive and leaving p2p unresponsive.\nA quick fix for this was to add yields in-between block executions when\nexecuting blocks in batches. This has solved the problem for sepolia\ntestnet (Over 1 Day without incidents).\nThis could also be improved by further integrating `spawned` into the\nfull sync process.\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n* Add yields inbetween each block execution when executing blocks in\nbatches\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-07-31T13:09:45Z",
          "tree_id": "eda29b170beb98147e071897bf35bd473532c6d7",
          "url": "https://github.com/lambdaclass/ethrex/commit/cd6a57df800dba6645709518be653286e2c9b41c"
        },
        "date": 1753980510585,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007670873563218391,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "dcf04b3ca9c18a11d62b68073ebe5f05ccaac8f5",
          "message": "feat(l1): add specific error message when import is used with the wrong network (#3893)\n\n**Motivation**\nWhen using `import` subcommand with a chain.rlp file that doesn't match\nthe network, we issue the regular `Parent Block Not Found` error. We are\nable to distinguish this specific case as it will mean that the parent\nblock of block number 1 (aka the genesis block) is not found. This PR\ntakes advantage of this to issue a specific, more informative warning\nmessage for this specific case\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Add a separate warning message when the imported chain file is not\ncompatible with the genesis\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3813",
          "timestamp": "2025-07-31T13:28:37Z",
          "tree_id": "6f9eacf993b3d4486ebb70ed0a0a1bc78d1b002a",
          "url": "https://github.com/lambdaclass/ethrex/commit/dcf04b3ca9c18a11d62b68073ebe5f05ccaac8f5"
        },
        "date": 1753981177341,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00771521387283237,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "dcf04b3ca9c18a11d62b68073ebe5f05ccaac8f5",
          "message": "feat(l1): add specific error message when import is used with the wrong network (#3893)\n\n**Motivation**\nWhen using `import` subcommand with a chain.rlp file that doesn't match\nthe network, we issue the regular `Parent Block Not Found` error. We are\nable to distinguish this specific case as it will mean that the parent\nblock of block number 1 (aka the genesis block) is not found. This PR\ntakes advantage of this to issue a specific, more informative warning\nmessage for this specific case\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Add a separate warning message when the imported chain file is not\ncompatible with the genesis\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3813",
          "timestamp": "2025-07-31T13:28:37Z",
          "tree_id": "6f9eacf993b3d4486ebb70ed0a0a1bc78d1b002a",
          "url": "https://github.com/lambdaclass/ethrex/commit/dcf04b3ca9c18a11d62b68073ebe5f05ccaac8f5"
        },
        "date": 1753982492235,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013647566462167689,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8c89f522390ea3d47e334b78f582ab7181ef6a85",
          "message": "perf(levm): refactor `JUMPDEST` blacklist into a lazyly generated one (#3812)\n\n**Motivation**\n\nRight now we're generating the full jump target blacklist for each\nprogram.\n\n**Description**\n\n- Avoid generating the full blacklist for the entire program before\nrunning it.\n- Generate only up until the last checked address.\n- Generate only when requested.\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Edgar <git@edgl.dev>\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>",
          "timestamp": "2025-07-31T13:53:37Z",
          "tree_id": "a1b01711def3979e1d3045b51351e013e23de9a1",
          "url": "https://github.com/lambdaclass/ethrex/commit/8c89f522390ea3d47e334b78f582ab7181ef6a85"
        },
        "date": 1753983855189,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001324138888888889,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8c89f522390ea3d47e334b78f582ab7181ef6a85",
          "message": "perf(levm): refactor `JUMPDEST` blacklist into a lazyly generated one (#3812)\n\n**Motivation**\n\nRight now we're generating the full jump target blacklist for each\nprogram.\n\n**Description**\n\n- Avoid generating the full blacklist for the entire program before\nrunning it.\n- Generate only up until the last checked address.\n- Generate only when requested.\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Edgar <git@edgl.dev>\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>",
          "timestamp": "2025-07-31T13:53:37Z",
          "tree_id": "a1b01711def3979e1d3045b51351e013e23de9a1",
          "url": "https://github.com/lambdaclass/ethrex/commit/8c89f522390ea3d47e334b78f582ab7181ef6a85"
        },
        "date": 1753985576108,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007293617486338798,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "df57b3f3e1669d33370ca8c7689fcf83078f678f",
          "message": "feat(l2): always use monitor (#3759)\n\n**Motivation**\nOnce all monitor issues are resolved, it should be used by default\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nChange the `--monitor` flag for the `--no-monitor` one, which turns off\nthe monitor\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nIt should only be merged after all other issues are resolved\nhttps://github.com/lambdaclass/ethrex/issues/3513,\nhttps://github.com/lambdaclass/ethrex/issues/3526,\nhttps://github.com/lambdaclass/ethrex/issues/3534,\nhttps://github.com/lambdaclass/ethrex/issues/3516,\nhttps://github.com/lambdaclass/ethrex/issues/3520,\nhttps://github.com/lambdaclass/ethrex/issues/3521,\nhttps://github.com/lambdaclass/ethrex/issues/3522,\nhttps://github.com/lambdaclass/ethrex/issues/3523,\nhttps://github.com/lambdaclass/ethrex/issues/3524,\nhttps://github.com/lambdaclass/ethrex/issues/3525,\nhttps://github.com/lambdaclass/ethrex/issues/3527,\nhttps://github.com/lambdaclass/ethrex/issues/3528,\nhttps://github.com/lambdaclass/ethrex/issues/3529,\nhttps://github.com/lambdaclass/ethrex/issues/3530,\nhttps://github.com/lambdaclass/ethrex/issues/3531,\nhttps://github.com/lambdaclass/ethrex/issues/3532,\nhttps://github.com/lambdaclass/ethrex/issues/3695,\nhttps://github.com/lambdaclass/ethrex/pull/3757,\nhttps://github.com/lambdaclass/ethrex/pull/3736",
          "timestamp": "2025-07-31T14:19:16Z",
          "tree_id": "ffac00547d4e94650bcde9ecd21f80c8e2ef06cc",
          "url": "https://github.com/lambdaclass/ethrex/commit/df57b3f3e1669d33370ca8c7689fcf83078f678f"
        },
        "date": 1753986201300,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.007583704545454545,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "df57b3f3e1669d33370ca8c7689fcf83078f678f",
          "message": "feat(l2): always use monitor (#3759)\n\n**Motivation**\nOnce all monitor issues are resolved, it should be used by default\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nChange the `--monitor` flag for the `--no-monitor` one, which turns off\nthe monitor\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nIt should only be merged after all other issues are resolved\nhttps://github.com/lambdaclass/ethrex/issues/3513,\nhttps://github.com/lambdaclass/ethrex/issues/3526,\nhttps://github.com/lambdaclass/ethrex/issues/3534,\nhttps://github.com/lambdaclass/ethrex/issues/3516,\nhttps://github.com/lambdaclass/ethrex/issues/3520,\nhttps://github.com/lambdaclass/ethrex/issues/3521,\nhttps://github.com/lambdaclass/ethrex/issues/3522,\nhttps://github.com/lambdaclass/ethrex/issues/3523,\nhttps://github.com/lambdaclass/ethrex/issues/3524,\nhttps://github.com/lambdaclass/ethrex/issues/3525,\nhttps://github.com/lambdaclass/ethrex/issues/3527,\nhttps://github.com/lambdaclass/ethrex/issues/3528,\nhttps://github.com/lambdaclass/ethrex/issues/3529,\nhttps://github.com/lambdaclass/ethrex/issues/3530,\nhttps://github.com/lambdaclass/ethrex/issues/3531,\nhttps://github.com/lambdaclass/ethrex/issues/3532,\nhttps://github.com/lambdaclass/ethrex/issues/3695,\nhttps://github.com/lambdaclass/ethrex/pull/3757,\nhttps://github.com/lambdaclass/ethrex/pull/3736",
          "timestamp": "2025-07-31T14:19:16Z",
          "tree_id": "ffac00547d4e94650bcde9ecd21f80c8e2ef06cc",
          "url": "https://github.com/lambdaclass/ethrex/commit/df57b3f3e1669d33370ca8c7689fcf83078f678f"
        },
        "date": 1754001335596,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013150068965517242,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f628ff01996eb99075425720055ae16a88953127",
          "message": "chore(l1): add snooper for ethrex on ethereum package network params (#3693)\n\n**Motivation**\n\nWe want to see the JSON-RPC requests while running a local net.\n\n**Description**\n\nThis pr sets the snooper flag as true in the ethrex client configuration\nand a target to see the JSON-RPC messages on the console output.\n\nTo test it you can run:\n```bash\nmake localnet-snooper  \n```\n\n---------\n\nCo-authored-by: JereSalo <jeresalo17@gmail.com>",
          "timestamp": "2025-07-31T22:06:50Z",
          "tree_id": "68820da3d70bd99df0f7949438b643f451aab51f",
          "url": "https://github.com/lambdaclass/ethrex/commit/f628ff01996eb99075425720055ae16a88953127"
        },
        "date": 1754032420379,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006447980676328503,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f628ff01996eb99075425720055ae16a88953127",
          "message": "chore(l1): add snooper for ethrex on ethereum package network params (#3693)\n\n**Motivation**\n\nWe want to see the JSON-RPC requests while running a local net.\n\n**Description**\n\nThis pr sets the snooper flag as true in the ethrex client configuration\nand a target to see the JSON-RPC messages on the console output.\n\nTo test it you can run:\n```bash\nmake localnet-snooper  \n```\n\n---------\n\nCo-authored-by: JereSalo <jeresalo17@gmail.com>",
          "timestamp": "2025-07-31T22:06:50Z",
          "tree_id": "68820da3d70bd99df0f7949438b643f451aab51f",
          "url": "https://github.com/lambdaclass/ethrex/commit/f628ff01996eb99075425720055ae16a88953127"
        },
        "date": 1754034049117,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001249749063670412,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7914b6f359cd68da76c84868648cdbc18695374c",
          "message": "chore(l2): bump risc0 to 2.3.1 enable risc0 precompiles  (#3741)\n\n**Motivation**\n\nEnable risc0 precompiles to improve performance\n\n**Description**\n- bump risc0 to 2.3.1\n- Tested all patches from https://dev.risczero.com/api/zkvm/precompiles\nto see which ones compile\n- Added\n  - k256\n  - ed25519-dalek\n  - rsa\n  - crypto-bigint\n- Can be tested by running\n```Shell\ncd crates/l2/prover/zkvm/interface/risc0\ncargo tree -p <crate-name>\n```\nreplacing \\<crate-name\\> with one of the above added precompiles\n\n[Here](https://github.com/lambdaclass/ethrex/actions/runs/16422230774/job/46403548180)\nis a run of ethrex replay with the new precompiles",
          "timestamp": "2025-08-01T13:53:13Z",
          "tree_id": "9985dc376c358ccb464f2379aafd51cef965b549",
          "url": "https://github.com/lambdaclass/ethrex/commit/7914b6f359cd68da76c84868648cdbc18695374c"
        },
        "date": 1754062619109,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.00123930547818013,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7914b6f359cd68da76c84868648cdbc18695374c",
          "message": "chore(l2): bump risc0 to 2.3.1 enable risc0 precompiles  (#3741)\n\n**Motivation**\n\nEnable risc0 precompiles to improve performance\n\n**Description**\n- bump risc0 to 2.3.1\n- Tested all patches from https://dev.risczero.com/api/zkvm/precompiles\nto see which ones compile\n- Added\n  - k256\n  - ed25519-dalek\n  - rsa\n  - crypto-bigint\n- Can be tested by running\n```Shell\ncd crates/l2/prover/zkvm/interface/risc0\ncargo tree -p <crate-name>\n```\nreplacing \\<crate-name\\> with one of the above added precompiles\n\n[Here](https://github.com/lambdaclass/ethrex/actions/runs/16422230774/job/46403548180)\nis a run of ethrex replay with the new precompiles",
          "timestamp": "2025-08-01T13:53:13Z",
          "tree_id": "9985dc376c358ccb464f2379aafd51cef965b549",
          "url": "https://github.com/lambdaclass/ethrex/commit/7914b6f359cd68da76c84868648cdbc18695374c"
        },
        "date": 1754063379186,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0067071959798994975,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4ef8801965cf2895d7896cfb0339fed02413ddf2",
          "message": "ci(l1): update to new ethereum package version. (#3860)\n\n**Motivation**\nStart using the official `ethrereum-package` repo instead of a fork\n\n**Description**\nSee https://github.com/ethpandaops/ethereum-package/pull/1131\n\n- Updated version of ethereum-package to use the lastest one instead of\na fork\n- Improved `checkout-ethereum-package` make task\n- Made sure we're using the local build of ethrex everywhere\n- Downgraded an error to warning\n\nCloses #595",
          "timestamp": "2025-08-01T14:15:41Z",
          "tree_id": "a55302f13ead84c4d7dfe0333cb3e6e6cf503461",
          "url": "https://github.com/lambdaclass/ethrex/commit/4ef8801965cf2895d7896cfb0339fed02413ddf2"
        },
        "date": 1754064108717,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006809857142857143,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4ef8801965cf2895d7896cfb0339fed02413ddf2",
          "message": "ci(l1): update to new ethereum package version. (#3860)\n\n**Motivation**\nStart using the official `ethrereum-package` repo instead of a fork\n\n**Description**\nSee https://github.com/ethpandaops/ethereum-package/pull/1131\n\n- Updated version of ethereum-package to use the lastest one instead of\na fork\n- Improved `checkout-ethereum-package` make task\n- Made sure we're using the local build of ethrex everywhere\n- Downgraded an error to warning\n\nCloses #595",
          "timestamp": "2025-08-01T14:15:41Z",
          "tree_id": "a55302f13ead84c4d7dfe0333cb3e6e6cf503461",
          "url": "https://github.com/lambdaclass/ethrex/commit/4ef8801965cf2895d7896cfb0339fed02413ddf2"
        },
        "date": 1754069340740,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012532694835680751,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a59fc0ba0e2beac421fcb7ce9741e894ad37121c",
          "message": "fix(l2): gas bump logic  (#3904)\n\n**Motivation**\n\nFix some errors related to the `send_tx_bump_gas_exponential_backoff`\nthat appeared while running in testnet scenarios\n\n**Description**\n- when bumping gas += was being used for max_priority_fee_per_gas\ninstead of = so priority_gas was growing much more than expected\n- Some RPCs returned an error when the transaction could not replace an\nexisting one because the gas of the new tx did not exceed the previous\none, now instead of returning that error we bump the gas and continue\n- The parsing of a hex string in `get_max_priority_fee` was wrong\nbecause u64 does not implement the parsing of hex string now it retruns\na U256 the same way the `get_gas_price` function does and its then\ncasted to u64\n- With the fix of `get_max_priority_fee` a new issue appeared where the\ngas_price in the tx receipt was incorrect, this was fixed by using\n`tx.effective_gas_price()` instead of `tx.gas_price()`",
          "timestamp": "2025-08-01T14:53:18Z",
          "tree_id": "d7216c449269ed667df8191f29ac5cfc9fcecce7",
          "url": "https://github.com/lambdaclass/ethrex/commit/a59fc0ba0e2beac421fcb7ce9741e894ad37121c"
        },
        "date": 1754071771715,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012639507575757576,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a59fc0ba0e2beac421fcb7ce9741e894ad37121c",
          "message": "fix(l2): gas bump logic  (#3904)\n\n**Motivation**\n\nFix some errors related to the `send_tx_bump_gas_exponential_backoff`\nthat appeared while running in testnet scenarios\n\n**Description**\n- when bumping gas += was being used for max_priority_fee_per_gas\ninstead of = so priority_gas was growing much more than expected\n- Some RPCs returned an error when the transaction could not replace an\nexisting one because the gas of the new tx did not exceed the previous\none, now instead of returning that error we bump the gas and continue\n- The parsing of a hex string in `get_max_priority_fee` was wrong\nbecause u64 does not implement the parsing of hex string now it retruns\na U256 the same way the `get_gas_price` function does and its then\ncasted to u64\n- With the fix of `get_max_priority_fee` a new issue appeared where the\ngas_price in the tx receipt was incorrect, this was fixed by using\n`tx.effective_gas_price()` instead of `tx.gas_price()`",
          "timestamp": "2025-08-01T14:53:18Z",
          "tree_id": "d7216c449269ed667df8191f29ac5cfc9fcecce7",
          "url": "https://github.com/lambdaclass/ethrex/commit/a59fc0ba0e2beac421fcb7ce9741e894ad37121c"
        },
        "date": 1754072541741,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006915709844559585,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "53660242+samoht9277@users.noreply.github.com",
            "name": "Tomás Casagrande",
            "username": "samoht9277"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5628e4578a9f43e18d4e754149f2dd67e8b7558a",
          "message": "ci(l1): add Docker login to prevent rate limit. (#3919)\n\n**Motivation**\n\nUnauthenticated users have strict rate limiting. We created an DockerHub\naccount to circumvent this.\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\nAdds Docker login and reverts caché removal.\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-08-01T15:11:40Z",
          "tree_id": "b0366bfcabd20a1d3f9f91e69940894b16d60b2a",
          "url": "https://github.com/lambdaclass/ethrex/commit/5628e4578a9f43e18d4e754149f2dd67e8b7558a"
        },
        "date": 1754074908196,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012772555023923444,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "53660242+samoht9277@users.noreply.github.com",
            "name": "Tomás Casagrande",
            "username": "samoht9277"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5628e4578a9f43e18d4e754149f2dd67e8b7558a",
          "message": "ci(l1): add Docker login to prevent rate limit. (#3919)\n\n**Motivation**\n\nUnauthenticated users have strict rate limiting. We created an DockerHub\naccount to circumvent this.\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\nAdds Docker login and reverts caché removal.\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-08-01T15:11:40Z",
          "tree_id": "b0366bfcabd20a1d3f9f91e69940894b16d60b2a",
          "url": "https://github.com/lambdaclass/ethrex/commit/5628e4578a9f43e18d4e754149f2dd67e8b7558a"
        },
        "date": 1754076638623,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006607584158415842,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "54416486e60d080baeaa0857bc861642783dc668",
          "message": "perf(l1): batch new pooled tx hashes (#3912)\n\n**Motivation**\n\nReduce throughput degradation seen in localnet scenarios with more than\none ethrex\n\n**Description**\n\nUp until now we were sending individual messages for each tx we haven't\nshared with the network. We discovered [in this\nbranch](https://github.com/lambdaclass/ethrex/pull/3900) that removing\nthe send of new pooled transactions along with the broadcast of\ntransactions removed the issue.\n\nBatching the new pooled transactions in localnets with two ethrex show\nmetrics similar to previous runs for localnets with only one ethrex.\n\nApart from this a Test have been disable due to being a false positive\npreviously, here is an issue explaining it: #3914",
          "timestamp": "2025-08-01T15:34:22Z",
          "tree_id": "fd122bd091da3e034c4d58cbe2dbf86179483390",
          "url": "https://github.com/lambdaclass/ethrex/commit/54416486e60d080baeaa0857bc861642783dc668"
        },
        "date": 1754077367375,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006741070707070708,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "54416486e60d080baeaa0857bc861642783dc668",
          "message": "perf(l1): batch new pooled tx hashes (#3912)\n\n**Motivation**\n\nReduce throughput degradation seen in localnet scenarios with more than\none ethrex\n\n**Description**\n\nUp until now we were sending individual messages for each tx we haven't\nshared with the network. We discovered [in this\nbranch](https://github.com/lambdaclass/ethrex/pull/3900) that removing\nthe send of new pooled transactions along with the broadcast of\ntransactions removed the issue.\n\nBatching the new pooled transactions in localnets with two ethrex show\nmetrics similar to previous runs for localnets with only one ethrex.\n\nApart from this a Test have been disable due to being a false positive\npreviously, here is an issue explaining it: #3914",
          "timestamp": "2025-08-01T15:34:22Z",
          "tree_id": "fd122bd091da3e034c4d58cbe2dbf86179483390",
          "url": "https://github.com/lambdaclass/ethrex/commit/54416486e60d080baeaa0857bc861642783dc668"
        },
        "date": 1754079693896,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012532694835680751,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce98123c062a50cfb92b45ca8950cab66ffab01c",
          "message": "feat(l1): add max blob count check to `BlobsBundle::validate` (#3888)\n\n**Motivation**\nValidate that the blob count doesn't exceed the maximum amount when\nvalidating blob bundles\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Add max amount check to `BlobsBundle::validate`\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #1201",
          "timestamp": "2025-08-01T18:41:58Z",
          "tree_id": "14a2f69deee1053a8d139f51798e9a8ddf2ec5f7",
          "url": "https://github.com/lambdaclass/ethrex/commit/ce98123c062a50cfb92b45ca8950cab66ffab01c"
        },
        "date": 1754083163278,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00615083870967742,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce98123c062a50cfb92b45ca8950cab66ffab01c",
          "message": "feat(l1): add max blob count check to `BlobsBundle::validate` (#3888)\n\n**Motivation**\nValidate that the blob count doesn't exceed the maximum amount when\nvalidating blob bundles\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Add max amount check to `BlobsBundle::validate`\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #1201",
          "timestamp": "2025-08-01T18:41:58Z",
          "tree_id": "14a2f69deee1053a8d139f51798e9a8ddf2ec5f7",
          "url": "https://github.com/lambdaclass/ethrex/commit/ce98123c062a50cfb92b45ca8950cab66ffab01c"
        },
        "date": 1754085654162,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0011885414069456811,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fb1fd37e64e6bc51ee7bdf0f5491fa401535604d",
          "message": "fix(l1): disable default request body limit on authenticated RPC (#3929)\n\n**Motivation**\n\nConsensus client calls to `engine_newPayload` sometimes failed with `413\npayload too large` HTTP errors (and sometimes `broken pipe`, which might\nbe related).\n\n**Description**\n\nThis PR solves this by disabling the request body limit, since it\ndoesn't make much sense to add a limit to authenticated requests.",
          "timestamp": "2025-08-01T23:30:19Z",
          "tree_id": "73cd781393cb7f53596e34b4ef6a27bc203b2e20",
          "url": "https://github.com/lambdaclass/ethrex/commit/fb1fd37e64e6bc51ee7bdf0f5491fa401535604d"
        },
        "date": 1754094300746,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012675517568850902,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fb1fd37e64e6bc51ee7bdf0f5491fa401535604d",
          "message": "fix(l1): disable default request body limit on authenticated RPC (#3929)\n\n**Motivation**\n\nConsensus client calls to `engine_newPayload` sometimes failed with `413\npayload too large` HTTP errors (and sometimes `broken pipe`, which might\nbe related).\n\n**Description**\n\nThis PR solves this by disabling the request body limit, since it\ndoesn't make much sense to add a limit to authenticated requests.",
          "timestamp": "2025-08-01T23:30:19Z",
          "tree_id": "73cd781393cb7f53596e34b4ef6a27bc203b2e20",
          "url": "https://github.com/lambdaclass/ethrex/commit/fb1fd37e64e6bc51ee7bdf0f5491fa401535604d"
        },
        "date": 1754095142439,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006266347417840375,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2b5f17e54d97e5d29ef77858e67d780a134a77b9",
          "message": "fix(l1): avoid broadcasting duplicate transactions (#3897)\n\n**Motivation**\n\nWire protocol correctness. Crucially, sending a transaction back to its\nsource is punishable by connection drop.\n\n**Description**\n\nAdd an early check for presence in the mempool for received\ntransactions, update the per-peer filters, and use them to avoid sending\nthem transactions they already know about in the `Transactions` relay\nand the `SendNewPooledTransactionHashes` paths.",
          "timestamp": "2025-08-04T14:07:32Z",
          "tree_id": "8d31b85b81f96d69ae44bddc24f467718c3d6c33",
          "url": "https://github.com/lambdaclass/ethrex/commit/2b5f17e54d97e5d29ef77858e67d780a134a77b9"
        },
        "date": 1754319009881,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.005854087719298246,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2b5f17e54d97e5d29ef77858e67d780a134a77b9",
          "message": "fix(l1): avoid broadcasting duplicate transactions (#3897)\n\n**Motivation**\n\nWire protocol correctness. Crucially, sending a transaction back to its\nsource is punishable by connection drop.\n\n**Description**\n\nAdd an early check for presence in the mempool for received\ntransactions, update the per-peer filters, and use them to avoid sending\nthem transactions they already know about in the `Transactions` relay\nand the `SendNewPooledTransactionHashes` paths.",
          "timestamp": "2025-08-04T14:07:32Z",
          "tree_id": "8d31b85b81f96d69ae44bddc24f467718c3d6c33",
          "url": "https://github.com/lambdaclass/ethrex/commit/2b5f17e54d97e5d29ef77858e67d780a134a77b9"
        },
        "date": 1754321671349,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012111905626134302,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e6c47ec5c1d13c7f3a98fd44baf7b928f32c26f8",
          "message": "fix(l1): allow some txs to be missing in GetPooledTransactions (#3921)\n\n**Motivation**\n\nWe're failing to respond `GetPooledTransactions` messages because we\ngive up when we can't find one of the hashes.\nThe spec states it's OK to simply skip that transaction in that case and\nthat it's better to send what we have.\nThis fixes the \"hash not in mempool\" messages, but mostly makes our\nclient more compliant.\n\n**Description**\n\nErrors in `Blockchain::get_p2p_transaction_by_hash` come from missing or\ninvalid transactions only. None of that is fatal for the ends of the\nwire protocol, so ignore those errors and return all valid transactions\nwe have matching the hashes.\n\nCloses #3928\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-08-04T15:02:19Z",
          "tree_id": "46745705810064f56e102a843e411637ebf909d6",
          "url": "https://github.com/lambdaclass/ethrex/commit/e6c47ec5c1d13c7f3a98fd44baf7b928f32c26f8"
        },
        "date": 1754324063763,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006295905660377359,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e6c47ec5c1d13c7f3a98fd44baf7b928f32c26f8",
          "message": "fix(l1): allow some txs to be missing in GetPooledTransactions (#3921)\n\n**Motivation**\n\nWe're failing to respond `GetPooledTransactions` messages because we\ngive up when we can't find one of the hashes.\nThe spec states it's OK to simply skip that transaction in that case and\nthat it's better to send what we have.\nThis fixes the \"hash not in mempool\" messages, but mostly makes our\nclient more compliant.\n\n**Description**\n\nErrors in `Blockchain::get_p2p_transaction_by_hash` come from missing or\ninvalid transactions only. None of that is fatal for the ends of the\nwire protocol, so ignore those errors and return all valid transactions\nwe have matching the hashes.\n\nCloses #3928\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-08-04T15:02:19Z",
          "tree_id": "46745705810064f56e102a843e411637ebf909d6",
          "url": "https://github.com/lambdaclass/ethrex/commit/e6c47ec5c1d13c7f3a98fd44baf7b928f32c26f8"
        },
        "date": 1754326626368,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012591811320754717,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estebandh@gmail.com",
            "name": "ElFantasma",
            "username": "ElFantasma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "49fde90e24ca437c2fbc0caf8ba81d2820faad0b",
          "message": "chore(l1): preventing errors to propagate to spawned (#3840)\n\n**Motivation**\n\nError lines in spawned logs [were\nmuted](https://github.com/lambdaclass/ethrex/pull/3467) because there\nwas a lot of spam regarding failed connections and handshakes. That was\nnot safe as other important problems may get muted too.\n\n**Description**\n\nThis PR handles the connection errors on handshake and initialization\nand logs a lower priority log line (debug) as it is pretty common.\n\nIt also reverts the log directive to mute spawned initialization errors.\n\nit requires [spawned\n0.2.2](https://github.com/lambdaclass/spawned/pull/39).\n\nCloses #3472",
          "timestamp": "2025-08-04T16:25:48Z",
          "tree_id": "36fdd705fd3162a82dd9e4616806878c0705ccec",
          "url": "https://github.com/lambdaclass/ethrex/commit/49fde90e24ca437c2fbc0caf8ba81d2820faad0b"
        },
        "date": 1754330718128,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006510887804878049,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estebandh@gmail.com",
            "name": "ElFantasma",
            "username": "ElFantasma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "49fde90e24ca437c2fbc0caf8ba81d2820faad0b",
          "message": "chore(l1): preventing errors to propagate to spawned (#3840)\n\n**Motivation**\n\nError lines in spawned logs [were\nmuted](https://github.com/lambdaclass/ethrex/pull/3467) because there\nwas a lot of spam regarding failed connections and handshakes. That was\nnot safe as other important problems may get muted too.\n\n**Description**\n\nThis PR handles the connection errors on handshake and initialization\nand logs a lower priority log line (debug) as it is pretty common.\n\nIt also reverts the log directive to mute spawned initialization errors.\n\nit requires [spawned\n0.2.2](https://github.com/lambdaclass/spawned/pull/39).\n\nCloses #3472",
          "timestamp": "2025-08-04T16:25:48Z",
          "tree_id": "36fdd705fd3162a82dd9e4616806878c0705ccec",
          "url": "https://github.com/lambdaclass/ethrex/commit/49fde90e24ca437c2fbc0caf8ba81d2820faad0b"
        },
        "date": 1754333304145,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001256809792843691,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e610d4a9781d216c07289a650a7aa6e334d1fbae",
          "message": "refactor(l2): improve error handling in `EthClient`'s `send_request_to_all` (#3932)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nWhen sending a transaction, the `EthClient` returns the last `Ok()`\nresult, if there is one, but it doesn't take into account\n`Ok(RpcResponse::Error)` cases, resulting in confusing errors.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nImprove the way responses are handled.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-08-04T19:39:07Z",
          "tree_id": "ca9cd4c29fe79a5d44b398d1279bbf7faa7cf5fa",
          "url": "https://github.com/lambdaclass/ethrex/commit/e610d4a9781d216c07289a650a7aa6e334d1fbae"
        },
        "date": 1754340917889,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006640457711442786,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e610d4a9781d216c07289a650a7aa6e334d1fbae",
          "message": "refactor(l2): improve error handling in `EthClient`'s `send_request_to_all` (#3932)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nWhen sending a transaction, the `EthClient` returns the last `Ok()`\nresult, if there is one, but it doesn't take into account\n`Ok(RpcResponse::Error)` cases, resulting in confusing errors.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nImprove the way responses are handled.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-08-04T19:39:07Z",
          "tree_id": "ca9cd4c29fe79a5d44b398d1279bbf7faa7cf5fa",
          "url": "https://github.com/lambdaclass/ethrex/commit/e610d4a9781d216c07289a650a7aa6e334d1fbae"
        },
        "date": 1754343448698,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001240457249070632,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f30ef7bdaeabe07ae43e94631e2668e0f43ebdc6",
          "message": "feat(l2): ethrex l2 --dev (#3836)\n\n**Motivation**\nWe want to be able to initialize the full l2 by running `ethrex l2\n--dev`\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nMove all the logic for initializing the l2 to `cmd/ethrex`\nNow calling `ethrex l2 --dev` does the following\n\n- Remove L1 and L2 DBs\n- Initialize an L1\n- Deploy contracts\n- Initialize an L2\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>\nCo-authored-by: Manuel Iñaki Bilbao <manuel.bilbao@lambdaclass.com>",
          "timestamp": "2025-08-04T20:44:32Z",
          "tree_id": "074c7abef322d7221ee15e42e6f9ef6f534ad8a2",
          "url": "https://github.com/lambdaclass/ethrex/commit/f30ef7bdaeabe07ae43e94631e2668e0f43ebdc6"
        },
        "date": 1754351957458,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001235862962962963,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f30ef7bdaeabe07ae43e94631e2668e0f43ebdc6",
          "message": "feat(l2): ethrex l2 --dev (#3836)\n\n**Motivation**\nWe want to be able to initialize the full l2 by running `ethrex l2\n--dev`\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nMove all the logic for initializing the l2 to `cmd/ethrex`\nNow calling `ethrex l2 --dev` does the following\n\n- Remove L1 and L2 DBs\n- Initialize an L1\n- Deploy contracts\n- Initialize an L2\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>\nCo-authored-by: Manuel Iñaki Bilbao <manuel.bilbao@lambdaclass.com>",
          "timestamp": "2025-08-04T20:44:32Z",
          "tree_id": "074c7abef322d7221ee15e42e6f9ef6f534ad8a2",
          "url": "https://github.com/lambdaclass/ethrex/commit/f30ef7bdaeabe07ae43e94631e2668e0f43ebdc6"
        },
        "date": 1754352781930,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006542803921568628,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2775a126bf5c55f4430287104a19df44c6656d2a",
          "message": "ci(l1): set project status automatically for `ethrex_l1`. (#3567)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nThis affects only PRs and issues of the project `ethrex_l1`. If this PR\ndoesn't belong to that project then it will exit early.\n\n- Automatically change the project status of a PR in cases in which we\ncan determine it with 100% accuracy:\n- `In Progress`: PR is **moved** to **draft** (or opened in draft too).\n  - `In Review`: PR is **opened** for review.\n- `Requested Changes`: Reviewer submitted a **review requesting\nchanges**. (changed: now this puts pr `in Progress`)\n- The `Approved` status is not worth being determined in the CI because\nfor it to know this all the other CI checks must have run, and it\ndefeats the purpose of the status itself, because we only want to use\nthis status for knowing when not to review a PR that has already reached\napproval status, it's just for efficiency. So manual intervention would\nmake much more sense in this case.\n- Sync the status of the issues that the PR closes with the status of\nthe PR. Note that the sync won't be triggered if the status is manually\nchanged, but changing status manually should be reserved for special\noccasions.\n\n\nConcrete example:\nIf I had a PR that was `In Review` and somebody requested changes then\nthe state would change to `Requested Changes`. If I then put the PR in\ndraft it would change to `In Progress` and if I re-open the PR it would\nbe `In Review` once again. Then imagine somebody manually changes the\nstate to `Approved` because the PR is ready to be merged but then comes\nanother person that sees that something is wrong and requests changes,\nthe PR state is going to be `Requested Changes` once again. Remember\nthat in this process the issues linked to the PR mimic its state, so\nthat info is updated in both ends.\n\nEdit: `Requested Changes` state was removed, when changes are requested\nthe PR is put `In Progress`, the rest of the example remains the same.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3585\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-08-04T21:47:22Z",
          "tree_id": "038ca816cf78c86e842121260ddb99cb38eba5d7",
          "url": "https://github.com/lambdaclass/ethrex/commit/2775a126bf5c55f4430287104a19df44c6656d2a"
        },
        "date": 1754353578969,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006640457711442786,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2775a126bf5c55f4430287104a19df44c6656d2a",
          "message": "ci(l1): set project status automatically for `ethrex_l1`. (#3567)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nThis affects only PRs and issues of the project `ethrex_l1`. If this PR\ndoesn't belong to that project then it will exit early.\n\n- Automatically change the project status of a PR in cases in which we\ncan determine it with 100% accuracy:\n- `In Progress`: PR is **moved** to **draft** (or opened in draft too).\n  - `In Review`: PR is **opened** for review.\n- `Requested Changes`: Reviewer submitted a **review requesting\nchanges**. (changed: now this puts pr `in Progress`)\n- The `Approved` status is not worth being determined in the CI because\nfor it to know this all the other CI checks must have run, and it\ndefeats the purpose of the status itself, because we only want to use\nthis status for knowing when not to review a PR that has already reached\napproval status, it's just for efficiency. So manual intervention would\nmake much more sense in this case.\n- Sync the status of the issues that the PR closes with the status of\nthe PR. Note that the sync won't be triggered if the status is manually\nchanged, but changing status manually should be reserved for special\noccasions.\n\n\nConcrete example:\nIf I had a PR that was `In Review` and somebody requested changes then\nthe state would change to `Requested Changes`. If I then put the PR in\ndraft it would change to `In Progress` and if I re-open the PR it would\nbe `In Review` once again. Then imagine somebody manually changes the\nstate to `Approved` because the PR is ready to be merged but then comes\nanother person that sees that something is wrong and requests changes,\nthe PR state is going to be `Requested Changes` once again. Remember\nthat in this process the issues linked to the PR mimic its state, so\nthat info is updated in both ends.\n\nEdit: `Requested Changes` state was removed, when changes are requested\nthe PR is put `In Progress`, the rest of the example remains the same.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3585\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-08-04T21:47:22Z",
          "tree_id": "038ca816cf78c86e842121260ddb99cb38eba5d7",
          "url": "https://github.com/lambdaclass/ethrex/commit/2775a126bf5c55f4430287104a19df44c6656d2a"
        },
        "date": 1754358225462,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012046317689530686,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8f7a3bb6a69f96ec186ff8e698409d287618cff8",
          "message": "chore(l1): downgrade rpc api read requests to debug. (#3923)\n\n**Motivation**\nWe don't want to spam the logs with getters. Only relevant things should\nbe logged with info or above.\n\n**Description**\n- Downgraded read RPC requests to `debug`.\n- Changed some log levels that were inappropriate\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>\nCo-authored-by: fmoletta <99273364+fmoletta@users.noreply.github.com>",
          "timestamp": "2025-08-04T22:00:20Z",
          "tree_id": "530037b1ecc7f4be0a1ee22c97d77368f8b65675",
          "url": "https://github.com/lambdaclass/ethrex/commit/8f7a3bb6a69f96ec186ff8e698409d287618cff8"
        },
        "date": 1754360747979,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012509203373945643,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8f7a3bb6a69f96ec186ff8e698409d287618cff8",
          "message": "chore(l1): downgrade rpc api read requests to debug. (#3923)\n\n**Motivation**\nWe don't want to spam the logs with getters. Only relevant things should\nbe logged with info or above.\n\n**Description**\n- Downgraded read RPC requests to `debug`.\n- Changed some log levels that were inappropriate\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>\nCo-authored-by: fmoletta <99273364+fmoletta@users.noreply.github.com>",
          "timestamp": "2025-08-04T22:00:20Z",
          "tree_id": "530037b1ecc7f4be0a1ee22c97d77368f8b65675",
          "url": "https://github.com/lambdaclass/ethrex/commit/8f7a3bb6a69f96ec186ff8e698409d287618cff8"
        },
        "date": 1754361633348,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0061793148148148146,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5db9cc8dcec16d8831e83669068aa3a9ae0d57f4",
          "message": "fix(l1): remove panics in blockchain tests, re run stateless as separate suite (#3872)\n\n**Motivation**\n\nThe logic that did stateless execution for blockchain tests had panics\nthat stopped the whole suite run instead of failing only that test.\n\n**Description**\n- Remove all panics from `re_run_stateless` function, `return Result<(),\nString>`\n- Modify `parse_and_execute` function to accept a boolean as parameter\nthat when set to true enables stateless execution\n- Add when running with levm, a new function\n`parse_and_execute_stateless_runner` that enables this flag as a second\nsuite of tests.\n\n**Examples**\n\nrunning a single test with levm\n```\ncargo test --release --features levm parse_and_execute_runner::prague/eip7002_el_triggerable_withdrawals/withdrawal_requests_during_fork/withdrawal_requests_during_fork.json\n```\nrunning a single test with levm with stateless execution\n```\ncargo test --release --features levm parse_and_execute_stateless_runner::prague/eip7002_el_triggerable_withdrawals/withdrawal_requests_during_fork/withdrawal_requests_during_fork.json -- --nocapture\n```\n\nCloses #3859",
          "timestamp": "2025-08-05T12:31:33Z",
          "tree_id": "f27b92121155d56708e9f1fd5c1c36216d03e491",
          "url": "https://github.com/lambdaclass/ethrex/commit/5db9cc8dcec16d8831e83669068aa3a9ae0d57f4"
        },
        "date": 1754401726411,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006542803921568628,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5db9cc8dcec16d8831e83669068aa3a9ae0d57f4",
          "message": "fix(l1): remove panics in blockchain tests, re run stateless as separate suite (#3872)\n\n**Motivation**\n\nThe logic that did stateless execution for blockchain tests had panics\nthat stopped the whole suite run instead of failing only that test.\n\n**Description**\n- Remove all panics from `re_run_stateless` function, `return Result<(),\nString>`\n- Modify `parse_and_execute` function to accept a boolean as parameter\nthat when set to true enables stateless execution\n- Add when running with levm, a new function\n`parse_and_execute_stateless_runner` that enables this flag as a second\nsuite of tests.\n\n**Examples**\n\nrunning a single test with levm\n```\ncargo test --release --features levm parse_and_execute_runner::prague/eip7002_el_triggerable_withdrawals/withdrawal_requests_during_fork/withdrawal_requests_during_fork.json\n```\nrunning a single test with levm with stateless execution\n```\ncargo test --release --features levm parse_and_execute_stateless_runner::prague/eip7002_el_triggerable_withdrawals/withdrawal_requests_during_fork/withdrawal_requests_during_fork.json -- --nocapture\n```\n\nCloses #3859",
          "timestamp": "2025-08-05T12:31:33Z",
          "tree_id": "f27b92121155d56708e9f1fd5c1c36216d03e491",
          "url": "https://github.com/lambdaclass/ethrex/commit/5db9cc8dcec16d8831e83669068aa3a9ae0d57f4"
        },
        "date": 1754404327156,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012485799812909262,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "53660242+samoht9277@users.noreply.github.com",
            "name": "Tomás Casagrande",
            "username": "samoht9277"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a4ad768392d29e73376e1eeadfc9901fc49c9237",
          "message": "ci(l1): fix Docker Login CI. (#3935)\n\n**Motivation**\nExternal contributors who forked the repo were experiencing CI failures\nduring Docker Hub login because they didn’t have access to our Docker\ncredentials (stored as repository variables and secrets)\n\nThis PR fixes the issue by adding a conditional step to the GitHub\nAction workflow. It checks if Docker credentials are available, and if\nthey're not set (as in forks), the login step is skipped.",
          "timestamp": "2025-08-05T14:30:48Z",
          "tree_id": "bb68c4c75083700fcc3991f01e5fca3c9da84e21",
          "url": "https://github.com/lambdaclass/ethrex/commit/a4ad768392d29e73376e1eeadfc9901fc49c9237"
        },
        "date": 1754408871851,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006542803921568628,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "53660242+samoht9277@users.noreply.github.com",
            "name": "Tomás Casagrande",
            "username": "samoht9277"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a4ad768392d29e73376e1eeadfc9901fc49c9237",
          "message": "ci(l1): fix Docker Login CI. (#3935)\n\n**Motivation**\nExternal contributors who forked the repo were experiencing CI failures\nduring Docker Hub login because they didn’t have access to our Docker\ncredentials (stored as repository variables and secrets)\n\nThis PR fixes the issue by adding a conditional step to the GitHub\nAction workflow. It checks if Docker credentials are available, and if\nthey're not set (as in forks), the login step is skipped.",
          "timestamp": "2025-08-05T14:30:48Z",
          "tree_id": "bb68c4c75083700fcc3991f01e5fca3c9da84e21",
          "url": "https://github.com/lambdaclass/ethrex/commit/a4ad768392d29e73376e1eeadfc9901fc49c9237"
        },
        "date": 1754411411862,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012439254426840633,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "41284bd7bc077cecb601042269fd99fbf3f86755",
          "message": "refactor(l2): use logs from receipt for the integration tests (#3937)\n\n**Motivation**\n\nWe are currently using the logs of the receipt to get the block number\nto requests again the logs.\n\n**Description**\n\nUse the same logs from the receipts and remove the request to the client\nfor the logs\n\nCloses #3876",
          "timestamp": "2025-08-05T14:34:50Z",
          "tree_id": "ebac3197320cb8240c0403e4faaab0e0c051fef5",
          "url": "https://github.com/lambdaclass/ethrex/commit/41284bd7bc077cecb601042269fd99fbf3f86755"
        },
        "date": 1754417024546,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012520938086303941,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "41284bd7bc077cecb601042269fd99fbf3f86755",
          "message": "refactor(l2): use logs from receipt for the integration tests (#3937)\n\n**Motivation**\n\nWe are currently using the logs of the receipt to get the block number\nto requests again the logs.\n\n**Description**\n\nUse the same logs from the receipts and remove the request to the client\nfor the logs\n\nCloses #3876",
          "timestamp": "2025-08-05T14:34:50Z",
          "tree_id": "ebac3197320cb8240c0403e4faaab0e0c051fef5",
          "url": "https://github.com/lambdaclass/ethrex/commit/41284bd7bc077cecb601042269fd99fbf3f86755"
        },
        "date": 1754417871351,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006510887804878049,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5ec00e544af6f1d39f61a811d279c7be3b137b5f",
          "message": "perf(l1): save chain config in vm,  cache latestblock header (#3878)\n\n**Motivation**\n\nOn samply, most of the work seems to be in validate_tx on the rpc.\n\nInside validate tx, get_block_header took 22% and latest_block_number\nabout 3%.\nThis pr turns those numbers into 0.2%. Now get account info takes 93%. \n\nPR based on #3865\n\nBefore (pr #3865):\n<img width=\"1008\" height=\"188\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/4de19499-aa0c-4a07-84ab-3d6c1403e6ea\"\n/>\n\n\nAfter:\n<img width=\"968\" height=\"194\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/3dba9a15-710d-4e8a-986e-273c23deb587\"\n/>\n\n\nmake load-test\n\nPrev(perf/aux_sender_nonce_mempool) gigas of first 4 blocks:\n0.6, 0.5, 0.4, 0.4, 0.4\n\nPR Gigagas of first 4 blocks:\n0.7, 0.56, 0.43, 0.42,\n\n\nSlightly improves ethrex transfers bench on gas benches (7.82%).\n\n---------\n\nCo-authored-by: Mario Rugiero <mrugiero@gmail.com>",
          "timestamp": "2025-08-05T15:07:41Z",
          "tree_id": "9d45a300c14ddfb48c171b18ff458dce16adf818",
          "url": "https://github.com/lambdaclass/ethrex/commit/5ec00e544af6f1d39f61a811d279c7be3b137b5f"
        },
        "date": 1754418636302,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006607584158415842,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5ec00e544af6f1d39f61a811d279c7be3b137b5f",
          "message": "perf(l1): save chain config in vm,  cache latestblock header (#3878)\n\n**Motivation**\n\nOn samply, most of the work seems to be in validate_tx on the rpc.\n\nInside validate tx, get_block_header took 22% and latest_block_number\nabout 3%.\nThis pr turns those numbers into 0.2%. Now get account info takes 93%. \n\nPR based on #3865\n\nBefore (pr #3865):\n<img width=\"1008\" height=\"188\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/4de19499-aa0c-4a07-84ab-3d6c1403e6ea\"\n/>\n\n\nAfter:\n<img width=\"968\" height=\"194\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/3dba9a15-710d-4e8a-986e-273c23deb587\"\n/>\n\n\nmake load-test\n\nPrev(perf/aux_sender_nonce_mempool) gigas of first 4 blocks:\n0.6, 0.5, 0.4, 0.4, 0.4\n\nPR Gigagas of first 4 blocks:\n0.7, 0.56, 0.43, 0.42,\n\n\nSlightly improves ethrex transfers bench on gas benches (7.82%).\n\n---------\n\nCo-authored-by: Mario Rugiero <mrugiero@gmail.com>",
          "timestamp": "2025-08-05T15:07:41Z",
          "tree_id": "9d45a300c14ddfb48c171b18ff458dce16adf818",
          "url": "https://github.com/lambdaclass/ethrex/commit/5ec00e544af6f1d39f61a811d279c7be3b137b5f"
        },
        "date": 1754421153938,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001238155844155844,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "032dbc9294c579ea18da5097c4cbae46901478cb",
          "message": "fix(levm): fix tracing delegatecall (#3823)\n\n**Motivation**\n\n- The from in the DELEGATECALL trace was wrong.\n\n**Description**\n\nI wanted the trace of a transaction that made use of DELEGATECALL and I\nsaw that ethrex had a weird response, so I tried getting the same trace\nwith geth and the response was what I expected it to be. So that's how I\nrealized that we had a bug :)\n\n[Hoodi\ntransaction](https://hoodi.etherscan.io/tx/0x0bca10d4b752d3c630f4666a226a37d57a08b0b042b18888dbcb34de73679cf0)\n```\ncurl <rpc_hoodi_node> \\\n-X POST \\\n-H \"Content-Type: application/json\" \\\n--data '{\"method\":\"debug_traceTransaction\",\"params\":[\"0x0bca10d4b752d3c630f4666a226a37d57a08b0b042b18888dbcb34de73679cf0\", {\"tracer\": \"callTracer\"}], \"id\":1,\"jsonrpc\":\"2.0\"}'\n```\n\nBasically if our trace was used in a block explorer (be it blockscout or\netherscan) the delegatecall \"From\" field would be the EOA and that is\nwrong! Check the actual tracing in etherscan\n[here](https://hoodi.etherscan.io/tx/0x0bca10d4b752d3c630f4666a226a37d57a08b0b042b18888dbcb34de73679cf0#internal)",
          "timestamp": "2025-08-05T16:44:50Z",
          "tree_id": "926e92b4631cdacfb93533cefbad13e093221ad5",
          "url": "https://github.com/lambdaclass/ethrex/commit/032dbc9294c579ea18da5097c4cbae46901478cb"
        },
        "date": 1754429601404,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012591811320754717,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "032dbc9294c579ea18da5097c4cbae46901478cb",
          "message": "fix(levm): fix tracing delegatecall (#3823)\n\n**Motivation**\n\n- The from in the DELEGATECALL trace was wrong.\n\n**Description**\n\nI wanted the trace of a transaction that made use of DELEGATECALL and I\nsaw that ethrex had a weird response, so I tried getting the same trace\nwith geth and the response was what I expected it to be. So that's how I\nrealized that we had a bug :)\n\n[Hoodi\ntransaction](https://hoodi.etherscan.io/tx/0x0bca10d4b752d3c630f4666a226a37d57a08b0b042b18888dbcb34de73679cf0)\n```\ncurl <rpc_hoodi_node> \\\n-X POST \\\n-H \"Content-Type: application/json\" \\\n--data '{\"method\":\"debug_traceTransaction\",\"params\":[\"0x0bca10d4b752d3c630f4666a226a37d57a08b0b042b18888dbcb34de73679cf0\", {\"tracer\": \"callTracer\"}], \"id\":1,\"jsonrpc\":\"2.0\"}'\n```\n\nBasically if our trace was used in a block explorer (be it blockscout or\netherscan) the delegatecall \"From\" field would be the EOA and that is\nwrong! Check the actual tracing in etherscan\n[here](https://hoodi.etherscan.io/tx/0x0bca10d4b752d3c630f4666a226a37d57a08b0b042b18888dbcb34de73679cf0#internal)",
          "timestamp": "2025-08-05T16:44:50Z",
          "tree_id": "926e92b4631cdacfb93533cefbad13e093221ad5",
          "url": "https://github.com/lambdaclass/ethrex/commit/032dbc9294c579ea18da5097c4cbae46901478cb"
        },
        "date": 1754430384636,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006542803921568628,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "53660242+samoht9277@users.noreply.github.com",
            "name": "Tomás Casagrande",
            "username": "samoht9277"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c9912cce64b46779d621788a737d9053262d92cf",
          "message": "ci(l1): fix typo in Docker Login CI. (#3956)\n\n**Motivation**\nWhen credentials were present, `DOCKER_CREDS_EXISTS` was never set to\ntrue, meaning the Docker login step was always skipped, even when creds\nwere there. This PR fixes this.",
          "timestamp": "2025-08-05T18:48:35Z",
          "tree_id": "d1aaf535e6423409f640ab652c62e17aa26c09d4",
          "url": "https://github.com/lambdaclass/ethrex/commit/c9912cce64b46779d621788a737d9053262d92cf"
        },
        "date": 1754431154274,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006607584158415842,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "53660242+samoht9277@users.noreply.github.com",
            "name": "Tomás Casagrande",
            "username": "samoht9277"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c9912cce64b46779d621788a737d9053262d92cf",
          "message": "ci(l1): fix typo in Docker Login CI. (#3956)\n\n**Motivation**\nWhen credentials were present, `DOCKER_CREDS_EXISTS` was never set to\ntrue, meaning the Docker login step was always skipped, even when creds\nwere there. This PR fixes this.",
          "timestamp": "2025-08-05T18:48:35Z",
          "tree_id": "d1aaf535e6423409f640ab652c62e17aa26c09d4",
          "url": "https://github.com/lambdaclass/ethrex/commit/c9912cce64b46779d621788a737d9053262d92cf"
        },
        "date": 1754436821905,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001249749063670412,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bc75e72075f48a2f8f01c4f63b99e0f3d9b319f8",
          "message": "refactor(l2): reduce lines in eth client (#3957)\n\n**Motivation**\n\nCreating a `RpcRequest` required ~6 lines of duplicated code in each\nmethod.\nWe were also matching on `Result` instead of using the `?` operator.\n\n**Description**\n\n- Adds a `RpcRequest::new()` method.  \n- Improves error handling.\n\n\nCloses None",
          "timestamp": "2025-08-05T21:22:50Z",
          "tree_id": "fdf48d3eaf08edf27f27312eb7b02807027f7801",
          "url": "https://github.com/lambdaclass/ethrex/commit/bc75e72075f48a2f8f01c4f63b99e0f3d9b319f8"
        },
        "date": 1754441028058,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006640457711442786,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bc75e72075f48a2f8f01c4f63b99e0f3d9b319f8",
          "message": "refactor(l2): reduce lines in eth client (#3957)\n\n**Motivation**\n\nCreating a `RpcRequest` required ~6 lines of duplicated code in each\nmethod.\nWe were also matching on `Result` instead of using the `?` operator.\n\n**Description**\n\n- Adds a `RpcRequest::new()` method.  \n- Improves error handling.\n\n\nCloses None",
          "timestamp": "2025-08-05T21:22:50Z",
          "tree_id": "fdf48d3eaf08edf27f27312eb7b02807027f7801",
          "url": "https://github.com/lambdaclass/ethrex/commit/bc75e72075f48a2f8f01c4f63b99e0f3d9b319f8"
        },
        "date": 1754442602813,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012144968152866243,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e2e597008a7d7c40a12d44712566ae9cdef929cf",
          "message": "fix(l1,l2): fix git branch and hash in `ethrex --version` (#3947)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n`ethrex --version` is broken in Docker image right now, displaying\n`VERGEN_IDEMPOTENT_OUTPUT` instead of git branch and hash. This also\nbreaks the commit check between L2 sequencer and prover when running one\nin Docker and another natively.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nCopy `.git` dir into the Docker build stage allowing `cargo build` to\ncalculate the values.\nRelated: #3848 \n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-08-06T17:35:25Z",
          "tree_id": "7ca84148c6d123d520d8a9e59d217f6c7706b33d",
          "url": "https://github.com/lambdaclass/ethrex/commit/e2e597008a7d7c40a12d44712566ae9cdef929cf"
        },
        "date": 1754504235996,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012591811320754717,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e2e597008a7d7c40a12d44712566ae9cdef929cf",
          "message": "fix(l1,l2): fix git branch and hash in `ethrex --version` (#3947)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n`ethrex --version` is broken in Docker image right now, displaying\n`VERGEN_IDEMPOTENT_OUTPUT` instead of git branch and hash. This also\nbreaks the commit check between L2 sequencer and prover when running one\nin Docker and another natively.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nCopy `.git` dir into the Docker build stage allowing `cargo build` to\ncalculate the values.\nRelated: #3848 \n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-08-06T17:35:25Z",
          "tree_id": "7ca84148c6d123d520d8a9e59d217f6c7706b33d",
          "url": "https://github.com/lambdaclass/ethrex/commit/e2e597008a7d7c40a12d44712566ae9cdef929cf"
        },
        "date": 1754505234260,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006266347417840375,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5fd68a2ee5c4e1749605344ad1b586380ae2ce01",
          "message": "fix(levm): ignore offset value when size is zero (#3950)\n\n**Motivation**\nWe recently ran into a gas mismatch when running full sync in sepolia\ntestnet. The problem was that we were reverting earlier due to an\n`ExceptionHalt::VeryLargeNumber`. This happened during a `STATICCALL`\nopcode execution where the `arg_offset` value taken from the stack was a\nvery large number. Upon comparing our implementation with geth we\nrealized that the difference lies in that we do ignore the value of the\noffset when calculating the memory size If the size is zero, but by that\ntime we have already converted the offset into a usize value, and failed\nif we couldn't do so.\nThe transaction where this bug was discovered is\nhttps://sepolia.etherscan.io/tx/0x0495f636d6d69c91e40afc44d3bd12800831d848391666cf23325720fd9ebfd4\nThis PR solves this problem and aims to solve future related problems by\nadding a utility function `size_offset_to_usize` which first converts\nthe size into a size value and if it is not zero then converts the\noffset into a size value, if the size is zero, offset will be ignored\nand given a default value as it won't be used.\nIt also gets rid of some explicit error handling by adding utility\nfunction `u256_to_usize` to checkedly convert U256 to usize. Some tweaks\nhave also been performed while checking against geth handling.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Add util  function `u256_to_usize` which converts a U256 to usize.\n* Add util function `size_offset_to_usize` which converts U256 size and\noffset to usize, ignoring the offset value if size is zero.\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None, but is needed in order to progress through #1676",
          "timestamp": "2025-08-06T17:51:43Z",
          "tree_id": "d3df32822cc1e773677992d5a7cf197b34cb3bc7",
          "url": "https://github.com/lambdaclass/ethrex/commit/5fd68a2ee5c4e1749605344ad1b586380ae2ce01"
        },
        "date": 1754506774347,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012579943449575871,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5fd68a2ee5c4e1749605344ad1b586380ae2ce01",
          "message": "fix(levm): ignore offset value when size is zero (#3950)\n\n**Motivation**\nWe recently ran into a gas mismatch when running full sync in sepolia\ntestnet. The problem was that we were reverting earlier due to an\n`ExceptionHalt::VeryLargeNumber`. This happened during a `STATICCALL`\nopcode execution where the `arg_offset` value taken from the stack was a\nvery large number. Upon comparing our implementation with geth we\nrealized that the difference lies in that we do ignore the value of the\noffset when calculating the memory size If the size is zero, but by that\ntime we have already converted the offset into a usize value, and failed\nif we couldn't do so.\nThe transaction where this bug was discovered is\nhttps://sepolia.etherscan.io/tx/0x0495f636d6d69c91e40afc44d3bd12800831d848391666cf23325720fd9ebfd4\nThis PR solves this problem and aims to solve future related problems by\nadding a utility function `size_offset_to_usize` which first converts\nthe size into a size value and if it is not zero then converts the\noffset into a size value, if the size is zero, offset will be ignored\nand given a default value as it won't be used.\nIt also gets rid of some explicit error handling by adding utility\nfunction `u256_to_usize` to checkedly convert U256 to usize. Some tweaks\nhave also been performed while checking against geth handling.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Add util  function `u256_to_usize` which converts a U256 to usize.\n* Add util function `size_offset_to_usize` which converts U256 size and\noffset to usize, ignoring the offset value if size is zero.\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None, but is needed in order to progress through #1676",
          "timestamp": "2025-08-06T17:51:43Z",
          "tree_id": "d3df32822cc1e773677992d5a7cf197b34cb3bc7",
          "url": "https://github.com/lambdaclass/ethrex/commit/5fd68a2ee5c4e1749605344ad1b586380ae2ce01"
        },
        "date": 1754514101735,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006809857142857143,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "023c3ca51210233318512911ebdbfa804450ae51",
          "message": "fix(l1): allow P2P init with `dev` feature (#3970)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nIf compiled with `dev` feature and not using `--dev`, P2P is not\nenabled, making it impossible to sync with other networks.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nRemove feature dependency on P2P initialization.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>",
          "timestamp": "2025-08-06T17:53:09Z",
          "tree_id": "2c8142756e43fb46b0ce98aa23c8482fc7fee851",
          "url": "https://github.com/lambdaclass/ethrex/commit/023c3ca51210233318512911ebdbfa804450ae51"
        },
        "date": 1754515726060,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001238155844155844,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "023c3ca51210233318512911ebdbfa804450ae51",
          "message": "fix(l1): allow P2P init with `dev` feature (#3970)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nIf compiled with `dev` feature and not using `--dev`, P2P is not\nenabled, making it impossible to sync with other networks.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nRemove feature dependency on P2P initialization.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>",
          "timestamp": "2025-08-06T17:53:09Z",
          "tree_id": "2c8142756e43fb46b0ce98aa23c8482fc7fee851",
          "url": "https://github.com/lambdaclass/ethrex/commit/023c3ca51210233318512911ebdbfa804450ae51"
        },
        "date": 1754516627510,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0066736600000000005,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45134e83fc8d2cc39473f9cb391490f54262d03f",
          "message": "chore(l1): improve load_test readme about samply (#3899)\n\n**Motivation**\n\nAdds a better command snippet for running samply",
          "timestamp": "2025-08-06T18:13:25Z",
          "tree_id": "a00551be36ed8632090f1820679317b5ea491804",
          "url": "https://github.com/lambdaclass/ethrex/commit/45134e83fc8d2cc39473f9cb391490f54262d03f"
        },
        "date": 1754524782302,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001227904323827047,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45134e83fc8d2cc39473f9cb391490f54262d03f",
          "message": "chore(l1): improve load_test readme about samply (#3899)\n\n**Motivation**\n\nAdds a better command snippet for running samply",
          "timestamp": "2025-08-06T18:13:25Z",
          "tree_id": "a00551be36ed8632090f1820679317b5ea491804",
          "url": "https://github.com/lambdaclass/ethrex/commit/45134e83fc8d2cc39473f9cb391490f54262d03f"
        },
        "date": 1754525680079,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0066736600000000005,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6a511ff2e0a1b8bcacf59a042d42a95fc9a1438e",
          "message": "feat(l1): embed bootnodes for public networks inside binary (#3967)\n\n**Motivation**\n\nWe want users to be able to run the binary without needing to have a\nfile of known bootnodes for each public network.\n\n**Description**\n\nThis PR embeds the bootnode files inside the binary.\n\nCloses #3966",
          "timestamp": "2025-08-06T19:13:51Z",
          "tree_id": "35509bef5962a276de04c4ac67d0bfa7056cd8c5",
          "url": "https://github.com/lambdaclass/ethrex/commit/6a511ff2e0a1b8bcacf59a042d42a95fc9a1438e"
        },
        "date": 1754527274421,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001238155844155844,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6a511ff2e0a1b8bcacf59a042d42a95fc9a1438e",
          "message": "feat(l1): embed bootnodes for public networks inside binary (#3967)\n\n**Motivation**\n\nWe want users to be able to run the binary without needing to have a\nfile of known bootnodes for each public network.\n\n**Description**\n\nThis PR embeds the bootnode files inside the binary.\n\nCloses #3966",
          "timestamp": "2025-08-06T19:13:51Z",
          "tree_id": "35509bef5962a276de04c4ac67d0bfa7056cd8c5",
          "url": "https://github.com/lambdaclass/ethrex/commit/6a511ff2e0a1b8bcacf59a042d42a95fc9a1438e"
        },
        "date": 1754529529705,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0062080558139534885,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4e0ed9cc3b4ccb818dbc37afb305726cc01cec55",
          "message": "refactor(l1,l2): merge prover binary into `ethrex` + improve releases (#3826)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nThere were too many binaries in the release and it was confusing.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nMerge `ethrex_prover` CLI into `ethrex` under `l2 prover` subcommand.\nAlso, the same binary can now support both SP1 and RISC0 provers, the\nuser may select desired one with the `--backend` flag. This ends up with\na single binary that can run an L1 EL, an L2 sequencer and an L2 prover.\nL1 and L2 contracts were also merged in a single tar, along with the\nverification keys for the provers\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Juan Bono <juanbono94@gmail.com>",
          "timestamp": "2025-08-06T19:37:42Z",
          "tree_id": "7e56597d52173d14dc9b11e7fe7107939c34ed21",
          "url": "https://github.com/lambdaclass/ethrex/commit/4e0ed9cc3b4ccb818dbc37afb305726cc01cec55"
        },
        "date": 1754530291525,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006607584158415842,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4e0ed9cc3b4ccb818dbc37afb305726cc01cec55",
          "message": "refactor(l1,l2): merge prover binary into `ethrex` + improve releases (#3826)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nThere were too many binaries in the release and it was confusing.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nMerge `ethrex_prover` CLI into `ethrex` under `l2 prover` subcommand.\nAlso, the same binary can now support both SP1 and RISC0 provers, the\nuser may select desired one with the `--backend` flag. This ends up with\na single binary that can run an L1 EL, an L2 sequencer and an L2 prover.\nL1 and L2 contracts were also merged in a single tar, along with the\nverification keys for the provers\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Juan Bono <juanbono94@gmail.com>",
          "timestamp": "2025-08-06T19:37:42Z",
          "tree_id": "7e56597d52173d14dc9b11e7fe7107939c34ed21",
          "url": "https://github.com/lambdaclass/ethrex/commit/4e0ed9cc3b4ccb818dbc37afb305726cc01cec55"
        },
        "date": 1754532897340,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012156029143897996,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "319c050790d47825ed8dcd156644f0503fd2457e",
          "message": "chore(l1): remove unused genesis path constants (#3969)\n\nThis PR removes some unused constants and functions related to genesis\npaths.",
          "timestamp": "2025-08-08T12:54:48Z",
          "tree_id": "ccd86490d65450164c7b0dbf4b82ee2f8a9c7577",
          "url": "https://github.com/lambdaclass/ethrex/commit/319c050790d47825ed8dcd156644f0503fd2457e"
        },
        "date": 1754662333978,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006295905660377359,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "319c050790d47825ed8dcd156644f0503fd2457e",
          "message": "chore(l1): remove unused genesis path constants (#3969)\n\nThis PR removes some unused constants and functions related to genesis\npaths.",
          "timestamp": "2025-08-08T12:54:48Z",
          "tree_id": "ccd86490d65450164c7b0dbf4b82ee2f8a9c7577",
          "url": "https://github.com/lambdaclass/ethrex/commit/319c050790d47825ed8dcd156644f0503fd2457e"
        },
        "date": 1754668385422,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012013789378937894,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "aca533e892a69c5978d4fceed7eef34c794a2828",
          "message": "chore(l1): remove needless clone in ExecutionPayload into_block (#3996)\n\n**Motivation**\nFound this needless clone while checking the code.",
          "timestamp": "2025-08-08T13:45:48Z",
          "tree_id": "7b98a5c497afa03967a43f2b5481d84a28014603",
          "url": "https://github.com/lambdaclass/ethrex/commit/aca533e892a69c5978d4fceed7eef34c794a2828"
        },
        "date": 1754674341112,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012556274694261525,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "aca533e892a69c5978d4fceed7eef34c794a2828",
          "message": "chore(l1): remove needless clone in ExecutionPayload into_block (#3996)\n\n**Motivation**\nFound this needless clone while checking the code.",
          "timestamp": "2025-08-08T13:45:48Z",
          "tree_id": "7b98a5c497afa03967a43f2b5481d84a28014603",
          "url": "https://github.com/lambdaclass/ethrex/commit/aca533e892a69c5978d4fceed7eef34c794a2828"
        },
        "date": 1754683866788,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006640457711442786,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "02b02a5c49458ebd448199c1d7e624c8a8ac1938",
          "message": "refactor(l2): use recover_address from common types (#3795)\n\n**Motivation**\n\nWhen #2999 was introduced, the initial refactor for using\nrecover_address was added, but some refactoring was still missing. See\n[here](https://github.com/lambdaclass/ethrex/pull/2999#discussion_r2219846846)\nfor the relevant conversation.\n\n**Description**\n\n- Remove the `recover_address` function from `rlpx/utils.rs` in favor of\nusing the one in `ethrex_common`\n- Modify all L2 Messages to use `Signature` struct from `ethereum_types`\ninstead of a `[u8; 64]` and one `u8`.\n- Remove the `based.rs` file which became unused after the refactor made\nin #2999",
          "timestamp": "2025-08-08T14:23:55Z",
          "tree_id": "27eef7a8e886890f16e36af68696461ac2c3ff96",
          "url": "https://github.com/lambdaclass/ethrex/commit/02b02a5c49458ebd448199c1d7e624c8a8ac1938"
        },
        "date": 1754686371950,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012313025830258302,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "02b02a5c49458ebd448199c1d7e624c8a8ac1938",
          "message": "refactor(l2): use recover_address from common types (#3795)\n\n**Motivation**\n\nWhen #2999 was introduced, the initial refactor for using\nrecover_address was added, but some refactoring was still missing. See\n[here](https://github.com/lambdaclass/ethrex/pull/2999#discussion_r2219846846)\nfor the relevant conversation.\n\n**Description**\n\n- Remove the `recover_address` function from `rlpx/utils.rs` in favor of\nusing the one in `ethrex_common`\n- Modify all L2 Messages to use `Signature` struct from `ethereum_types`\ninstead of a `[u8; 64]` and one `u8`.\n- Remove the `based.rs` file which became unused after the refactor made\nin #2999",
          "timestamp": "2025-08-08T14:23:55Z",
          "tree_id": "27eef7a8e886890f16e36af68696461ac2c3ff96",
          "url": "https://github.com/lambdaclass/ethrex/commit/02b02a5c49458ebd448199c1d7e624c8a8ac1938"
        },
        "date": 1754687117709,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006575034482758621,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "230d247751b142c6fb57a57c48338b3b3c99aa7a",
          "message": "fix(l1): decode the fork ID as a list (#3492)\n\nThis PR decodes the fork ID of a node record's \"eth\" entry as a list.\nPreviously, we were assuming the list was small enough to have a length\nof a single byte.",
          "timestamp": "2025-08-08T14:33:01Z",
          "tree_id": "6d5bbd826043b03ef1901bd2613ea3bc777d37ee",
          "url": "https://github.com/lambdaclass/ethrex/commit/230d247751b142c6fb57a57c48338b3b3c99aa7a"
        },
        "date": 1754692986607,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001266349146110057,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "230d247751b142c6fb57a57c48338b3b3c99aa7a",
          "message": "fix(l1): decode the fork ID as a list (#3492)\n\nThis PR decodes the fork ID of a node record's \"eth\" entry as a list.\nPreviously, we were assuming the list was small enough to have a length\nof a single byte.",
          "timestamp": "2025-08-08T14:33:01Z",
          "tree_id": "6d5bbd826043b03ef1901bd2613ea3bc777d37ee",
          "url": "https://github.com/lambdaclass/ethrex/commit/230d247751b142c6fb57a57c48338b3b3c99aa7a"
        },
        "date": 1754693794741,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006542803921568628,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0a5e1f3407d95decc0bcd066aa54a0bb635519a2",
          "message": "refactor(l1,levm): improve levm `Database` and `Account` (#3913)\n\n**Motivation**\n\n- Handle tech debt within LEVM Database and Accounts. Improve Database\ninterface when getting account info, decouple getting account info from\ncode, creating our type of Account for LEVM so that it enables future\nchanges.\n\n**Description**\n\n- Inside of LEVM use a brand new type of account called `LevmAccount`,\nthe difference with the previous `Account` type is that this one doesn't\nstore the code and it also has an `AccountStatus` that is useful in the\nEVM for various comparisons. The most important being if an account has\nbeen destroyed and re-created, which is an edge case that can cause\ntrouble. Also we can determine if an account state was modified or not,\nso if it wasn't accessed mutably we'll know we don't have to do any\ncheck when getting state transitions.\n- Change the API of the Database. Before we got the AccountInfo and code\nwithin get_account_info method, which is kinda wrong. Now we just get\nthe actual AccountInfo and the refactor of LevmAccount enables us to get\nthe code in another instant.\n- Now we get the code of an account only if we really need it! So there\nare not unnecessary accesses to the database and also as a side effect\n`ethrex_replay` will work better because before we tried to access some\ncode when the Execution Witness didn't have this and we failed on\nreplaying the block.\n- stop cloning account on withdrawal processing\n- add `get_account_mut` method to db. This is for accessing an account\nmutably from outside the VM, for example, when processing withdrawals.\n\nIt is shown to fix ethrex_replay withdrawal issues in this branch:\n`jere-test-refactor-levm-replay`\nIt has the changes of `fix_execution_witness_serde` and the changes of\nthis PR\n\nCreated Issues, some of them are follow-ups to this #3946 #3948 #3951\n\nCloses #3298\nCloses #3907\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>\nCo-authored-by: fmoletta <99273364+fmoletta@users.noreply.github.com>",
          "timestamp": "2025-08-08T15:18:56Z",
          "tree_id": "95fe7a8cb2a99155935d14ac7c3d7b091594eba4",
          "url": "https://github.com/lambdaclass/ethrex/commit/0a5e1f3407d95decc0bcd066aa54a0bb635519a2"
        },
        "date": 1754709325896,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006915709844559585,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0a5e1f3407d95decc0bcd066aa54a0bb635519a2",
          "message": "refactor(l1,levm): improve levm `Database` and `Account` (#3913)\n\n**Motivation**\n\n- Handle tech debt within LEVM Database and Accounts. Improve Database\ninterface when getting account info, decouple getting account info from\ncode, creating our type of Account for LEVM so that it enables future\nchanges.\n\n**Description**\n\n- Inside of LEVM use a brand new type of account called `LevmAccount`,\nthe difference with the previous `Account` type is that this one doesn't\nstore the code and it also has an `AccountStatus` that is useful in the\nEVM for various comparisons. The most important being if an account has\nbeen destroyed and re-created, which is an edge case that can cause\ntrouble. Also we can determine if an account state was modified or not,\nso if it wasn't accessed mutably we'll know we don't have to do any\ncheck when getting state transitions.\n- Change the API of the Database. Before we got the AccountInfo and code\nwithin get_account_info method, which is kinda wrong. Now we just get\nthe actual AccountInfo and the refactor of LevmAccount enables us to get\nthe code in another instant.\n- Now we get the code of an account only if we really need it! So there\nare not unnecessary accesses to the database and also as a side effect\n`ethrex_replay` will work better because before we tried to access some\ncode when the Execution Witness didn't have this and we failed on\nreplaying the block.\n- stop cloning account on withdrawal processing\n- add `get_account_mut` method to db. This is for accessing an account\nmutably from outside the VM, for example, when processing withdrawals.\n\nIt is shown to fix ethrex_replay withdrawal issues in this branch:\n`jere-test-refactor-levm-replay`\nIt has the changes of `fix_execution_witness_serde` and the changes of\nthis PR\n\nCreated Issues, some of them are follow-ups to this #3946 #3948 #3951\n\nCloses #3298\nCloses #3907\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>\nCo-authored-by: fmoletta <99273364+fmoletta@users.noreply.github.com>",
          "timestamp": "2025-08-08T15:18:56Z",
          "tree_id": "95fe7a8cb2a99155935d14ac7c3d7b091594eba4",
          "url": "https://github.com/lambdaclass/ethrex/commit/0a5e1f3407d95decc0bcd066aa54a0bb635519a2"
        },
        "date": 1754723565632,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013831419689119171,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3316a5b10a992018a5dcc9c4f3d9ec084e343314",
          "message": "refactor(l2): remove eth_sender module (#3997)\n\n**Motivation**\n\nThere is no reason to keep it in a separate module.\n\n**Description**\n\nMoves `EthClient.call()` method with the rest of methods.\n\nCloses #3751",
          "timestamp": "2025-08-08T19:26:42Z",
          "tree_id": "f00cbe8f12639b73d45cabe594e6afd10172c83f",
          "url": "https://github.com/lambdaclass/ethrex/commit/3316a5b10a992018a5dcc9c4f3d9ec084e343314"
        },
        "date": 1754724351318,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006607584158415842,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3316a5b10a992018a5dcc9c4f3d9ec084e343314",
          "message": "refactor(l2): remove eth_sender module (#3997)\n\n**Motivation**\n\nThere is no reason to keep it in a separate module.\n\n**Description**\n\nMoves `EthClient.call()` method with the rest of methods.\n\nCloses #3751",
          "timestamp": "2025-08-08T19:26:42Z",
          "tree_id": "f00cbe8f12639b73d45cabe594e6afd10172c83f",
          "url": "https://github.com/lambdaclass/ethrex/commit/3316a5b10a992018a5dcc9c4f3d9ec084e343314"
        },
        "date": 1754726688004,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001429049250535332,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0b49b19f80363f72edb2b48bbcf3537b84830f14",
          "message": "refactor(l2): remove ProofCoordinator dev_mode (#3999)\n\n**Motivation**\n\nWe can infer the `Exec` proof type from the contract.\n\n**Description**\n\n- Removes the `dev_mode` ProofCoordinator CLI option.\n- If no other proof type is needed, defaults to `Exec`.\n\nCloses #3698",
          "timestamp": "2025-08-08T19:37:11Z",
          "tree_id": "c88de0ebbff81a374a0ff883616da59414194d8b",
          "url": "https://github.com/lambdaclass/ethrex/commit/0b49b19f80363f72edb2b48bbcf3537b84830f14"
        },
        "date": 1754732151516,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001436740581270183,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0b49b19f80363f72edb2b48bbcf3537b84830f14",
          "message": "refactor(l2): remove ProofCoordinator dev_mode (#3999)\n\n**Motivation**\n\nWe can infer the `Exec` proof type from the contract.\n\n**Description**\n\n- Removes the `dev_mode` ProofCoordinator CLI option.\n- If no other proof type is needed, defaults to `Exec`.\n\nCloses #3698",
          "timestamp": "2025-08-08T19:37:11Z",
          "tree_id": "c88de0ebbff81a374a0ff883616da59414194d8b",
          "url": "https://github.com/lambdaclass/ethrex/commit/0b49b19f80363f72edb2b48bbcf3537b84830f14"
        },
        "date": 1754732899439,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006775289340101523,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9f0505edf49e6715d08204fa2fdc6d1e5926ee28",
          "message": "fix(l1): commit forkchoice update in a single db tx (#3927)\n\n**Motivation**\n\nA bug was found in our L2 integration tests caused by a race condition\nduring the forkchoice update. More context\n[here](https://github.com/lambdaclass/ethrex/issues/3887).\n\n**Description**\n- Creates `forkchoice_update` method in the L1 store to perform all\ncanonical updates and block labeling in a single tx in the db.\n- Removes the following `Store` methods:\n    - `mark_chain_as_canonical`\n    - `update_finalized_block_number`\n    - `update_safe_block_number`\n    - `update_latest_block_number`\n    - `set_canonical_block`\n    - `unset_canonical_block`\n- Updates the calls to the removed methods to use the new one.\n\nCloses #3887",
          "timestamp": "2025-08-08T20:06:04Z",
          "tree_id": "15dbdb332c777d8a05fe2b48f43dac629da014fa",
          "url": "https://github.com/lambdaclass/ethrex/commit/9f0505edf49e6715d08204fa2fdc6d1e5926ee28"
        },
        "date": 1754733619346,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0067071959798994975,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9f0505edf49e6715d08204fa2fdc6d1e5926ee28",
          "message": "fix(l1): commit forkchoice update in a single db tx (#3927)\n\n**Motivation**\n\nA bug was found in our L2 integration tests caused by a race condition\nduring the forkchoice update. More context\n[here](https://github.com/lambdaclass/ethrex/issues/3887).\n\n**Description**\n- Creates `forkchoice_update` method in the L1 store to perform all\ncanonical updates and block labeling in a single tx in the db.\n- Removes the following `Store` methods:\n    - `mark_chain_as_canonical`\n    - `update_finalized_block_number`\n    - `update_safe_block_number`\n    - `update_latest_block_number`\n    - `set_canonical_block`\n    - `unset_canonical_block`\n- Updates the calls to the removed methods to use the new one.\n\nCloses #3887",
          "timestamp": "2025-08-08T20:06:04Z",
          "tree_id": "15dbdb332c777d8a05fe2b48f43dac629da014fa",
          "url": "https://github.com/lambdaclass/ethrex/commit/9f0505edf49e6715d08204fa2fdc6d1e5926ee28"
        },
        "date": 1754735987528,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014445151515151515,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44068466+SDartayet@users.noreply.github.com",
            "name": "SDartayet",
            "username": "SDartayet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c5db7a94930be77aa7ec90ac0ed87c2d8784d4fe",
          "message": "feat(l1, l2, levm): profiling metrics (#3240)\n\n**Motivation**\n\nBeing able to profile the different sections of block processing in a\nway that let's us analyze them via graphs.\n\n**Description**\n\nThis PR adds the necessary instrumenting to measure the time spent in\ndifferent sections of code. A section can be measured with span, and the\naccumulated runtime for each section can be exported and reset with an\n`export_metrics` event. All metrics are also moved to a folder in the\nroot of the project to simplify things.\n\nTo test this PR, you can run the client with metrics enabled and the\nrequisite Grafana and Prometheus docker images up. In `tooling/sync`\nthere's a makefile with some targets to do this automatically.\n`start_hoodi_metrics_docker` and `start_holesky_metrics_docker`. You can\nalso test an import with the target `import_with_metrics` by passing it\nthe environment variable `RLP_FILE` with a path to the rlp file with the\nblocks you wanna add. Metrics can be seen on\n`http://localhost:3701/metrics` and the grafana dashboards are available\non `http://localhost:3001`\n\nExample of the graph output:\n\n![image](https://github.com/user-attachments/assets/aad508df-8772-4d83-b53a-2f9fea0ba4f5)\n\n---------\n\nCo-authored-by: Lucas Fiegl <iovoid@users.noreply.github.com>\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Manuel Iñaki Bilbao <manuel.bilbao@lambdaclass.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>\nCo-authored-by: Mario Rugiero <mrugiero@gmail.com>\nCo-authored-by: MrAzteca <azteca1998@users.noreply.github.com>\nCo-authored-by: Edgar <git@edgl.dev>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-08-08T20:10:30Z",
          "tree_id": "eae2bc96040be8d2c1b26589de8ef3141a27cd78",
          "url": "https://github.com/lambdaclass/ethrex/commit/c5db7a94930be77aa7ec90ac0ed87c2d8784d4fe"
        },
        "date": 1754738355662,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001447648590021692,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44068466+SDartayet@users.noreply.github.com",
            "name": "SDartayet",
            "username": "SDartayet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c5db7a94930be77aa7ec90ac0ed87c2d8784d4fe",
          "message": "feat(l1, l2, levm): profiling metrics (#3240)\n\n**Motivation**\n\nBeing able to profile the different sections of block processing in a\nway that let's us analyze them via graphs.\n\n**Description**\n\nThis PR adds the necessary instrumenting to measure the time spent in\ndifferent sections of code. A section can be measured with span, and the\naccumulated runtime for each section can be exported and reset with an\n`export_metrics` event. All metrics are also moved to a folder in the\nroot of the project to simplify things.\n\nTo test this PR, you can run the client with metrics enabled and the\nrequisite Grafana and Prometheus docker images up. In `tooling/sync`\nthere's a makefile with some targets to do this automatically.\n`start_hoodi_metrics_docker` and `start_holesky_metrics_docker`. You can\nalso test an import with the target `import_with_metrics` by passing it\nthe environment variable `RLP_FILE` with a path to the rlp file with the\nblocks you wanna add. Metrics can be seen on\n`http://localhost:3701/metrics` and the grafana dashboards are available\non `http://localhost:3001`\n\nExample of the graph output:\n\n![image](https://github.com/user-attachments/assets/aad508df-8772-4d83-b53a-2f9fea0ba4f5)\n\n---------\n\nCo-authored-by: Lucas Fiegl <iovoid@users.noreply.github.com>\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>\nCo-authored-by: Manuel Iñaki Bilbao <manuel.bilbao@lambdaclass.com>\nCo-authored-by: Avila Gastón <72628438+avilagaston9@users.noreply.github.com>\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>\nCo-authored-by: Mario Rugiero <mrugiero@gmail.com>\nCo-authored-by: MrAzteca <azteca1998@users.noreply.github.com>\nCo-authored-by: Edgar <git@edgl.dev>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-08-08T20:10:30Z",
          "tree_id": "eae2bc96040be8d2c1b26589de8ef3141a27cd78",
          "url": "https://github.com/lambdaclass/ethrex/commit/c5db7a94930be77aa7ec90ac0ed87c2d8784d4fe"
        },
        "date": 1754739149807,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006510887804878049,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "895de3ec8cedefc4383737f411b64e1f9291fab1",
          "message": "fix(l2): compile contracts on releases (#4002)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nWithout compiling contracts, `ethrex l2 --dev` doesn't work.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nAdd `COMPILE_CONTRACTS` env var to compilation. Also default `.env` file\nto cwd instead of cargo manifest path\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-08-08T20:43:16Z",
          "tree_id": "ddfe5b223c46ef02342ff837e2771c3ffb0ff602",
          "url": "https://github.com/lambdaclass/ethrex/commit/895de3ec8cedefc4383737f411b64e1f9291fab1"
        },
        "date": 1754741537952,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014275208556149732,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "895de3ec8cedefc4383737f411b64e1f9291fab1",
          "message": "fix(l2): compile contracts on releases (#4002)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nWithout compiling contracts, `ethrex l2 --dev` doesn't work.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nAdd `COMPILE_CONTRACTS` env var to compilation. Also default `.env` file\nto cwd instead of cargo manifest path\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-08-08T20:43:16Z",
          "tree_id": "ddfe5b223c46ef02342ff837e2771c3ffb0ff602",
          "url": "https://github.com/lambdaclass/ethrex/commit/895de3ec8cedefc4383737f411b64e1f9291fab1"
        },
        "date": 1754742311522,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006575034482758621,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3478a18011f20016479d5b5fe351480dd656d1f9",
          "message": "fix(l1): load Store state when exporting blocks (#3998)\n\n**Motivation**\n\n`ethrex export` is broken due to #3878\n\n**Description**\n\nThis PR fixes the `Export` subcommand by adding an initial state loading\nfrom the DB to initialize the `latest_block_header` cache.\n\n---------\n\nCo-authored-by: fmoletta <99273364+fmoletta@users.noreply.github.com>",
          "timestamp": "2025-08-08T21:01:42Z",
          "tree_id": "d05802812c5ba2873bd988730958756215737c11",
          "url": "https://github.com/lambdaclass/ethrex/commit/3478a18011f20016479d5b5fe351480dd656d1f9"
        },
        "date": 1754743088378,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0066736600000000005,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3478a18011f20016479d5b5fe351480dd656d1f9",
          "message": "fix(l1): load Store state when exporting blocks (#3998)\n\n**Motivation**\n\n`ethrex export` is broken due to #3878\n\n**Description**\n\nThis PR fixes the `Export` subcommand by adding an initial state loading\nfrom the DB to initialize the `latest_block_header` cache.\n\n---------\n\nCo-authored-by: fmoletta <99273364+fmoletta@users.noreply.github.com>",
          "timestamp": "2025-08-08T21:01:42Z",
          "tree_id": "d05802812c5ba2873bd988730958756215737c11",
          "url": "https://github.com/lambdaclass/ethrex/commit/3478a18011f20016479d5b5fe351480dd656d1f9"
        },
        "date": 1754745538556,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001422955223880597,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f43e1731f5c363c92e6408f702da8a628aa49dc6",
          "message": "docs(l1,l2): refactor documentation (#3978)\n\n**Motivation**\n\nThe documentation is too messy and has internal development instructions\nmixed with the instruction for the actual users\n\n**Description**\n\nThe best way to review this pr by looking at the final result using\n`make docs-serve` in the root of the repo. If it's your first time using\nmdbook you might need to run `make docs-deps` first\n\nCloses #issue_number",
          "timestamp": "2025-08-08T22:01:53Z",
          "tree_id": "7dc2f9da7faac060d56a5d4c6c4ceee32d2a72b0",
          "url": "https://github.com/lambdaclass/ethrex/commit/f43e1731f5c363c92e6408f702da8a628aa49dc6"
        },
        "date": 1754747974226,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014619189485213582,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f43e1731f5c363c92e6408f702da8a628aa49dc6",
          "message": "docs(l1,l2): refactor documentation (#3978)\n\n**Motivation**\n\nThe documentation is too messy and has internal development instructions\nmixed with the instruction for the actual users\n\n**Description**\n\nThe best way to review this pr by looking at the final result using\n`make docs-serve` in the root of the repo. If it's your first time using\nmdbook you might need to run `make docs-deps` first\n\nCloses #issue_number",
          "timestamp": "2025-08-08T22:01:53Z",
          "tree_id": "7dc2f9da7faac060d56a5d4c6c4ceee32d2a72b0",
          "url": "https://github.com/lambdaclass/ethrex/commit/f43e1731f5c363c92e6408f702da8a628aa49dc6"
        },
        "date": 1754748746828,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006542803921568628,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9b57e2b9c8fb5adf745a7afa03d6e373689eabfe",
          "message": "fix(l1): re-tag image as latest in hive report (#4001)\n\n**Motivation**\n\n[The daily report workflow is\nfailing.](https://github.com/lambdaclass/ethrex/actions/runs/16821221966/job/47648330723)\n\n**Description**\n\nThis PR re-tags `ethrex:unstable` as `ethrex:latest`, so hive finds the\nimage. You can see this is working\n[here](https://github.com/lambdaclass/ethrex/actions/runs/16839851386).",
          "timestamp": "2025-08-08T22:10:35Z",
          "tree_id": "4d86d6f391f780e3d3a1cec8143d4bdf5651b652",
          "url": "https://github.com/lambdaclass/ethrex/commit/9b57e2b9c8fb5adf745a7afa03d6e373689eabfe"
        },
        "date": 1754751161056,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014398403451995685,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9b57e2b9c8fb5adf745a7afa03d6e373689eabfe",
          "message": "fix(l1): re-tag image as latest in hive report (#4001)\n\n**Motivation**\n\n[The daily report workflow is\nfailing.](https://github.com/lambdaclass/ethrex/actions/runs/16821221966/job/47648330723)\n\n**Description**\n\nThis PR re-tags `ethrex:unstable` as `ethrex:latest`, so hive finds the\nimage. You can see this is working\n[here](https://github.com/lambdaclass/ethrex/actions/runs/16839851386).",
          "timestamp": "2025-08-08T22:10:35Z",
          "tree_id": "4d86d6f391f780e3d3a1cec8143d4bdf5651b652",
          "url": "https://github.com/lambdaclass/ethrex/commit/9b57e2b9c8fb5adf745a7afa03d6e373689eabfe"
        },
        "date": 1754751937413,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006640457711442786,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "967ed78c2197a871a90a5f79420fd9f8a546d79a",
          "message": "ci(l1,l2): use Ubuntu 24 instead of 22 for Linux ARM runners (#4004)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nUbuntu 22 has an old version of clang which is not compatible with `solc\n0.8.29`.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nBumped to Ubuntu 24.04\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-08-11T12:45:34Z",
          "tree_id": "eb1e8ebd9974b1705b3b253c580bc3f773a9faa1",
          "url": "https://github.com/lambdaclass/ethrex/commit/967ed78c2197a871a90a5f79420fd9f8a546d79a"
        },
        "date": 1754929232455,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012846313763233879,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "967ed78c2197a871a90a5f79420fd9f8a546d79a",
          "message": "ci(l1,l2): use Ubuntu 24 instead of 22 for Linux ARM runners (#4004)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nUbuntu 22 has an old version of clang which is not compatible with `solc\n0.8.29`.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nBumped to Ubuntu 24.04\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-08-11T12:45:34Z",
          "tree_id": "eb1e8ebd9974b1705b3b253c580bc3f773a9faa1",
          "url": "https://github.com/lambdaclass/ethrex/commit/967ed78c2197a871a90a5f79420fd9f8a546d79a"
        },
        "date": 1754930427886,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0056317805907173,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7241f57e0594d79979bcf17eb1b9daab2e39dc58",
          "message": "docs(l2): fix ethrex contracts download link (#4009)\n\n**Motivation**\n\nThe contracts are now bundled in a single file\n\n**Description**\n\nChange the link to use the new name `ethrex-contracts.tar.gz`",
          "timestamp": "2025-08-11T13:43:13Z",
          "tree_id": "dfd645841f253b947b36c565fed131107ff000c9",
          "url": "https://github.com/lambdaclass/ethrex/commit/7241f57e0594d79979bcf17eb1b9daab2e39dc58"
        },
        "date": 1754935964741,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006575034482758621,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7241f57e0594d79979bcf17eb1b9daab2e39dc58",
          "message": "docs(l2): fix ethrex contracts download link (#4009)\n\n**Motivation**\n\nThe contracts are now bundled in a single file\n\n**Description**\n\nChange the link to use the new name `ethrex-contracts.tar.gz`",
          "timestamp": "2025-08-11T13:43:13Z",
          "tree_id": "dfd645841f253b947b36c565fed131107ff000c9",
          "url": "https://github.com/lambdaclass/ethrex/commit/7241f57e0594d79979bcf17eb1b9daab2e39dc58"
        },
        "date": 1754940996320,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013932484342379957,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "97bdff0c672e0e01434b9a8363442f8de1f31a08",
          "message": "fix(l1): potential overflows in `calculate_base_fee` (#3954)\n\n**Motivation**\nWhile the values used and the output of `calculate_base_fee` fit into\nu64, some results of internal multiplications can go over 64 bits. This\nPR fixes this potential overflows by using u128 to handle values that\ncan go over 64 bits during calculation (aka values involved in additions\nand multiplications)\nThis bug was first encountered on block 6029872 of sepolia testnet\n(which failed due to invalid base fee)\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Use `u128` to handle internal values which may overflow u64 during\n`calculate_base_fee`\n* Add test for `calculate_base_fee` using values that would overflow u64\nduring calcs\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None, but is needed in order to progress through #1676\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>",
          "timestamp": "2025-08-11T15:01:28Z",
          "tree_id": "d96dc69d9df31690997790cdb63609e637b6f5d7",
          "url": "https://github.com/lambdaclass/ethrex/commit/97bdff0c672e0e01434b9a8363442f8de1f31a08"
        },
        "date": 1754942453397,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014214398296059638,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "97bdff0c672e0e01434b9a8363442f8de1f31a08",
          "message": "fix(l1): potential overflows in `calculate_base_fee` (#3954)\n\n**Motivation**\nWhile the values used and the output of `calculate_base_fee` fit into\nu64, some results of internal multiplications can go over 64 bits. This\nPR fixes this potential overflows by using u128 to handle values that\ncan go over 64 bits during calculation (aka values involved in additions\nand multiplications)\nThis bug was first encountered on block 6029872 of sepolia testnet\n(which failed due to invalid base fee)\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Use `u128` to handle internal values which may overflow u64 during\n`calculate_base_fee`\n* Add test for `calculate_base_fee` using values that would overflow u64\nduring calcs\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None, but is needed in order to progress through #1676\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>",
          "timestamp": "2025-08-11T15:01:28Z",
          "tree_id": "d96dc69d9df31690997790cdb63609e637b6f5d7",
          "url": "https://github.com/lambdaclass/ethrex/commit/97bdff0c672e0e01434b9a8363442f8de1f31a08"
        },
        "date": 1754943475867,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0061226238532110094,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b7b7c1bf19e873c93e1791687a7bf038fad490ae",
          "message": "refactor(l1): tooling/sync make targets to be generic across networks (#3869)\n\n**Motivation**\nThe current Makefile on tooling/sync has a bunch of different yet very\nsimilar targets that vary depending on whether they are used on hoodi or\nholesky networks. This is not much of an issue with just two networks,\nbut would become quite bloated if we wanted to also add targets for\nsepolia and mainnet networks.\nThe aim of this PR is to refactor these duplicated targets into a single\none leveraging the `NETWORK` env var and also allow these targets to\nsupport mainnet and sepolia networks\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Replace inner targets `holesky-lighthouse` & `hoodi-lighthouse` with\ngeneric `start-lighthouse` target that depends on `NETWORK` env var\n* Replace inner targets `start-ethrex-holesky` & `start-ethrex-hoodi`\nwith generic `start-ethrex` target that depends on `NETWORK` env var\n* Replace targets `start-holesky-metrics-docker` &\n`start-hoodi-metrics-docker` with generic `start-metrics-docker` target\nthat depends on `NETWORK` env var + A wildcard target\n`start-%-metrics-docker` that sets the `NETWORK` env var to the wildcard\nso that previous targets are still functional.\n* Replace targets `flamegraph-holesky` & `flamegraph-hoodi` with generic\n`flamegraph-inner` target (as `flamegraph` is already its own target)\nthat depends on `NETWORK` env var + A wildcard target `flamegraph-%r`\nthat sets the `NETWORK` env var to the wildcard so that previous targets\nare still functional.\n* `NETWORK` env var is no longer strictly required, and has default\nvalue set to mainnet (Docs updated)\n* Removed check for `NETWORK` env var being present (as it now uses\ndefault value)\n* Updated handling of BOOTNODES:\n* Removed `HOLESKY_BOOTNODES` and `HOODI_BOOTNODES` as they are already\npresent on the preset bootnodes file\n* Only set the `--bootnodes` flag when running ethrex if the `BOOTNODES`\nenv var was set\n* (Misc) Fix `help` target so that it also includes wildcard targets +\nset it as default target\n* (Misc) Mention installing `flamegraph` crate on README`\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3838 (No longer needed with this change)\n\n---------\n\nCo-authored-by: Mario Rugiero <mrugiero@gmail.com>",
          "timestamp": "2025-08-11T15:17:54Z",
          "tree_id": "3afab62f322b5356269e8499e105b6899e1dd18b",
          "url": "https://github.com/lambdaclass/ethrex/commit/b7b7c1bf19e873c93e1791687a7bf038fad490ae"
        },
        "date": 1754950210908,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001404981052631579,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b7b7c1bf19e873c93e1791687a7bf038fad490ae",
          "message": "refactor(l1): tooling/sync make targets to be generic across networks (#3869)\n\n**Motivation**\nThe current Makefile on tooling/sync has a bunch of different yet very\nsimilar targets that vary depending on whether they are used on hoodi or\nholesky networks. This is not much of an issue with just two networks,\nbut would become quite bloated if we wanted to also add targets for\nsepolia and mainnet networks.\nThe aim of this PR is to refactor these duplicated targets into a single\none leveraging the `NETWORK` env var and also allow these targets to\nsupport mainnet and sepolia networks\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Replace inner targets `holesky-lighthouse` & `hoodi-lighthouse` with\ngeneric `start-lighthouse` target that depends on `NETWORK` env var\n* Replace inner targets `start-ethrex-holesky` & `start-ethrex-hoodi`\nwith generic `start-ethrex` target that depends on `NETWORK` env var\n* Replace targets `start-holesky-metrics-docker` &\n`start-hoodi-metrics-docker` with generic `start-metrics-docker` target\nthat depends on `NETWORK` env var + A wildcard target\n`start-%-metrics-docker` that sets the `NETWORK` env var to the wildcard\nso that previous targets are still functional.\n* Replace targets `flamegraph-holesky` & `flamegraph-hoodi` with generic\n`flamegraph-inner` target (as `flamegraph` is already its own target)\nthat depends on `NETWORK` env var + A wildcard target `flamegraph-%r`\nthat sets the `NETWORK` env var to the wildcard so that previous targets\nare still functional.\n* `NETWORK` env var is no longer strictly required, and has default\nvalue set to mainnet (Docs updated)\n* Removed check for `NETWORK` env var being present (as it now uses\ndefault value)\n* Updated handling of BOOTNODES:\n* Removed `HOLESKY_BOOTNODES` and `HOODI_BOOTNODES` as they are already\npresent on the preset bootnodes file\n* Only set the `--bootnodes` flag when running ethrex if the `BOOTNODES`\nenv var was set\n* (Misc) Fix `help` target so that it also includes wildcard targets +\nset it as default target\n* (Misc) Mention installing `flamegraph` crate on README`\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3838 (No longer needed with this change)\n\n---------\n\nCo-authored-by: Mario Rugiero <mrugiero@gmail.com>",
          "timestamp": "2025-08-11T15:17:54Z",
          "tree_id": "3afab62f322b5356269e8499e105b6899e1dd18b",
          "url": "https://github.com/lambdaclass/ethrex/commit/b7b7c1bf19e873c93e1791687a7bf038fad490ae"
        },
        "date": 1754951230569,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006479281553398058,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9d6d7c61120775c6bfea73f21eef22e6d126869c",
          "message": "feat(l1): bump libmdbx max size to 8TB (#4011)\n\n**Motivation**\nRecently, we ran out of map space while full syncing on sepolia testnet\nat 2.1TB. This PR increases the max size of the DB so we don't run into\nthis problem again in the near future\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Increase `MAX_MAP_SIZE` constant from 2TB to 8TB\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None, but is needed for #1676",
          "timestamp": "2025-08-11T15:34:45Z",
          "tree_id": "ed660011bc415a24b5a1cc07854e203bb934d98c",
          "url": "https://github.com/lambdaclass/ethrex/commit/9d6d7c61120775c6bfea73f21eef22e6d126869c"
        },
        "date": 1754960226994,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006325744075829384,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9d6d7c61120775c6bfea73f21eef22e6d126869c",
          "message": "feat(l1): bump libmdbx max size to 8TB (#4011)\n\n**Motivation**\nRecently, we ran out of map space while full syncing on sepolia testnet\nat 2.1TB. This PR increases the max size of the DB so we don't run into\nthis problem again in the near future\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Increase `MAX_MAP_SIZE` constant from 2TB to 8TB\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None, but is needed for #1676",
          "timestamp": "2025-08-11T15:34:45Z",
          "tree_id": "ed660011bc415a24b5a1cc07854e203bb934d98c",
          "url": "https://github.com/lambdaclass/ethrex/commit/9d6d7c61120775c6bfea73f21eef22e6d126869c"
        },
        "date": 1754973735182,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0012687566539923954,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "48914d88570975b838373416d47e6c2672b8bb44",
          "message": "fix(l2): fix default vk paths of deployer (#4013)\n\n**Motivation**\n\nPaths were invalid because now the L2 is run from the `cmd/ethrex`\nbinary crate.\n\nIntegration tests were passing because the vk paths are overwritten in\nthe L2 config, to point into the vk file that's on the container's\nvolume root dir.",
          "timestamp": "2025-08-11T18:00:25Z",
          "tree_id": "6aabf873212f791d35b8ae1c673d7936359f2534",
          "url": "https://github.com/lambdaclass/ethrex/commit/48914d88570975b838373416d47e6c2672b8bb44"
        },
        "date": 1754975238835,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013675532786885246,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "48914d88570975b838373416d47e6c2672b8bb44",
          "message": "fix(l2): fix default vk paths of deployer (#4013)\n\n**Motivation**\n\nPaths were invalid because now the L2 is run from the `cmd/ethrex`\nbinary crate.\n\nIntegration tests were passing because the vk paths are overwritten in\nthe L2 config, to point into the vk file that's on the container's\nvolume root dir.",
          "timestamp": "2025-08-11T18:00:25Z",
          "tree_id": "6aabf873212f791d35b8ae1c673d7936359f2534",
          "url": "https://github.com/lambdaclass/ethrex/commit/48914d88570975b838373416d47e6c2672b8bb44"
        },
        "date": 1754981371411,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0064169807692307694,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e4d97165c314e096aafc553f727210bde631d7af",
          "message": "refactor(levm): move `get_state_transitions` logic to `GeneralizedDatabase` (#4003)\n\n**Motivation**\nMove `get_state_transitions` implementation logic from `vm` crate to\n`levm` crate in order to improve its api for levm users\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Add `GeneralizedDatabase` method `get_state_transitions`\n* Use above method in `LEVM:: get_state_transitions` (vm/backend)\n* Re-export `AccountUpdate` from levm crate\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3951",
          "timestamp": "2025-08-11T22:00:44Z",
          "tree_id": "65baac1ae124b3fd0010dbb07ce1d7cad56d0bb6",
          "url": "https://github.com/lambdaclass/ethrex/commit/e4d97165c314e096aafc553f727210bde631d7af"
        },
        "date": 1754982301175,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006542803921568628,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e4d97165c314e096aafc553f727210bde631d7af",
          "message": "refactor(levm): move `get_state_transitions` logic to `GeneralizedDatabase` (#4003)\n\n**Motivation**\nMove `get_state_transitions` implementation logic from `vm` crate to\n`levm` crate in order to improve its api for levm users\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Add `GeneralizedDatabase` method `get_state_transitions`\n* Use above method in `LEVM:: get_state_transitions` (vm/backend)\n* Re-export `AccountUpdate` from levm crate\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3951",
          "timestamp": "2025-08-11T22:00:44Z",
          "tree_id": "65baac1ae124b3fd0010dbb07ce1d7cad56d0bb6",
          "url": "https://github.com/lambdaclass/ethrex/commit/e4d97165c314e096aafc553f727210bde631d7af"
        },
        "date": 1754983756809,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014005582371458551,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9a771ea8f3b895153a5f122caab87a1e7e6f7967",
          "message": "feat(l1): add `--input_dir` and `--output_dir` options to archive sync (#3962)\n\n**Motivation**\nAllow writing dump state to files while archive syncing and using them\nfor archive syncing without the need of an active archive node .\nThis PR adds the following flags:\n* `--ipc_path`: replaces the previously required `archive_node_ipc`\nrequired unnamed arg\n* `--output_dir`: outputs the state data received during the sync to the\ngiven directory\n* `--input_dir`: allows fetching state data from a previous archive sync\nexecution instead of an archive node\n* `--no_sync`: skips state rebuild, only usable with `--output_dir` to\nspeed up state data writing when syncing the current node is not needed\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Adds new CLI flags `--ipc_path`, `--input_dir`, `--output_dir`,\n`--no_sync`\n* Abstracts archive sync main behaviour into structs to accommodate new\nfeatures:\n* DumpReader: Allows reading state data from either an ipc connection or\na directory\n* DumpProcessor: Processes state data by either using it to rebuild the\nstate and/or writing it to a file\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-08-11T22:18:28Z",
          "tree_id": "d2f1dc95e5f8e2a9903a6f710cad03a2b2910b22",
          "url": "https://github.com/lambdaclass/ethrex/commit/9a771ea8f3b895153a5f122caab87a1e7e6f7967"
        },
        "date": 1754984688089,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0064169807692307694,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9a771ea8f3b895153a5f122caab87a1e7e6f7967",
          "message": "feat(l1): add `--input_dir` and `--output_dir` options to archive sync (#3962)\n\n**Motivation**\nAllow writing dump state to files while archive syncing and using them\nfor archive syncing without the need of an active archive node .\nThis PR adds the following flags:\n* `--ipc_path`: replaces the previously required `archive_node_ipc`\nrequired unnamed arg\n* `--output_dir`: outputs the state data received during the sync to the\ngiven directory\n* `--input_dir`: allows fetching state data from a previous archive sync\nexecution instead of an archive node\n* `--no_sync`: skips state rebuild, only usable with `--output_dir` to\nspeed up state data writing when syncing the current node is not needed\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Adds new CLI flags `--ipc_path`, `--input_dir`, `--output_dir`,\n`--no_sync`\n* Abstracts archive sync main behaviour into structs to accommodate new\nfeatures:\n* DumpReader: Allows reading state data from either an ipc connection or\na directory\n* DumpProcessor: Processes state data by either using it to rebuild the\nstate and/or writing it to a file\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-08-11T22:18:28Z",
          "tree_id": "d2f1dc95e5f8e2a9903a6f710cad03a2b2910b22",
          "url": "https://github.com/lambdaclass/ethrex/commit/9a771ea8f3b895153a5f122caab87a1e7e6f7967"
        },
        "date": 1754986192003,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001404981052631579,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5acad245d6893db13cc2e28c53ba064f33a7e51c",
          "message": "fix(l2): use SP1 embedded allocator (#3760)\n\n**Motivation**\n\nSP1 by default uses a \"[bump\nallocator](https://docs.succinct.xyz/docs/sp1/generating-proofs/advanced#embedded-allocator)\"\nwhich never deallocs zkvm memory. If we try to prove a batch with ~1500\nempty blocks, SP1 panics with an OOM error.\n\nBy enabling the `embedded-alloc` allocator the proof is generated\ncorrectly for this big batch. This is being tested further.\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-08-12T13:25:18Z",
          "tree_id": "160ed6b7a22878cca1b2dd5c3805e872b2f08f0a",
          "url": "https://github.com/lambdaclass/ethrex/commit/5acad245d6893db13cc2e28c53ba064f33a7e51c"
        },
        "date": 1755007006513,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006355866666666667,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5acad245d6893db13cc2e28c53ba064f33a7e51c",
          "message": "fix(l2): use SP1 embedded allocator (#3760)\n\n**Motivation**\n\nSP1 by default uses a \"[bump\nallocator](https://docs.succinct.xyz/docs/sp1/generating-proofs/advanced#embedded-allocator)\"\nwhich never deallocs zkvm memory. If we try to prove a batch with ~1500\nempty blocks, SP1 panics with an OOM error.\n\nBy enabling the `embedded-alloc` allocator the proof is generated\ncorrectly for this big batch. This is being tested further.\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-08-12T13:25:18Z",
          "tree_id": "160ed6b7a22878cca1b2dd5c3805e872b2f08f0a",
          "url": "https://github.com/lambdaclass/ethrex/commit/5acad245d6893db13cc2e28c53ba064f33a7e51c"
        },
        "date": 1755008444157,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001419927659574468,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "154b2f7f7b706250ad8259736bef8022219f3e5e",
          "message": "fix(l2): make tdx private key an optional argument (#3934)\n\n**Motivation**\n\nThe `proof-coordinator.tdx-private-key` flag was always required even\nwhen not actively used\n\n**Description**\n\n- Make the flag optional and handle the Option type in the required\nplaces\n\nCloses #3750",
          "timestamp": "2025-08-12T18:47:46Z",
          "tree_id": "e17429ab18be4bcb699347681cde03ffb993bbf1",
          "url": "https://github.com/lambdaclass/ethrex/commit/154b2f7f7b706250ad8259736bef8022219f3e5e"
        },
        "date": 1755032673557,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006295905660377359,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "154b2f7f7b706250ad8259736bef8022219f3e5e",
          "message": "fix(l2): make tdx private key an optional argument (#3934)\n\n**Motivation**\n\nThe `proof-coordinator.tdx-private-key` flag was always required even\nwhen not actively used\n\n**Description**\n\n- Make the flag optional and handle the Option type in the required\nplaces\n\nCloses #3750",
          "timestamp": "2025-08-12T18:47:46Z",
          "tree_id": "e17429ab18be4bcb699347681cde03ffb993bbf1",
          "url": "https://github.com/lambdaclass/ethrex/commit/154b2f7f7b706250ad8259736bef8022219f3e5e"
        },
        "date": 1755035129694,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014064615384615385,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4491ebbc11615b48204beec41d4753bd058b06b9",
          "message": "feat(l1): add more block execution breakdown metrics. (#4043)\n\n**Motivation**\nTo know how much time it takes to read accounts/storage.\n\n**Description**\n- Added instrumentation for account and storage reads\n- Also fixed the store DB job not working properly because of it\nhappening in another thread.\n- Added pie chart to the L1 Performance dashboard and removed the other\none.",
          "timestamp": "2025-08-14T13:57:31Z",
          "tree_id": "c026ebe95c44440d3b018a1abf8894df05e0ffc1",
          "url": "https://github.com/lambdaclass/ethrex/commit/4491ebbc11615b48204beec41d4753bd058b06b9"
        },
        "date": 1755190143070,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013717697841726618,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4491ebbc11615b48204beec41d4753bd058b06b9",
          "message": "feat(l1): add more block execution breakdown metrics. (#4043)\n\n**Motivation**\nTo know how much time it takes to read accounts/storage.\n\n**Description**\n- Added instrumentation for account and storage reads\n- Also fixed the store DB job not working properly because of it\nhappening in another thread.\n- Added pie chart to the L1 Performance dashboard and removed the other\none.",
          "timestamp": "2025-08-14T13:57:31Z",
          "tree_id": "c026ebe95c44440d3b018a1abf8894df05e0ffc1",
          "url": "https://github.com/lambdaclass/ethrex/commit/4491ebbc11615b48204beec41d4753bd058b06b9"
        },
        "date": 1755191122259,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006447980676328503,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "58a6347caa2730e4785bd45c8e3f27201debf5d8",
          "message": "chore(l1): improve log message when trying to run incompatible configs (#4022)\n\n**Motivation**\nCurrent error message was confusing.",
          "timestamp": "2025-08-14T16:13:13Z",
          "tree_id": "4295b5beea8b44ac2666649772943f08161a8203",
          "url": "https://github.com/lambdaclass/ethrex/commit/58a6347caa2730e4785bd45c8e3f27201debf5d8"
        },
        "date": 1755195354652,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0066736600000000005,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "58a6347caa2730e4785bd45c8e3f27201debf5d8",
          "message": "chore(l1): improve log message when trying to run incompatible configs (#4022)\n\n**Motivation**\nCurrent error message was confusing.",
          "timestamp": "2025-08-14T16:13:13Z",
          "tree_id": "4295b5beea8b44ac2666649772943f08161a8203",
          "url": "https://github.com/lambdaclass/ethrex/commit/58a6347caa2730e4785bd45c8e3f27201debf5d8"
        },
        "date": 1755199815336,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001446080173347779,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2e4bf6d5c3d5e845a49747447098e4db644aa935",
          "message": "fix(l2): disable gpu in `make lint` target (#4048)\n\n**Motivation**\n\n`make lint` was failing with:\n\n```text\nwarning: risc0-sys@1.4.0: Compiler family detection failed due to error: ToolNotFound: failed to find tool \"nvcc\": No such file or directory (os error 2)\nerror: failed to run custom build command for `risc0-sys v1.4.0`\n\nCaused by:\n  process didn't exit successfully: `/Users/mega/execution/ethrex/target/release/build/risc0-sys-d088ac4aaf714579/build-script-build` (exit status: 1)\n  --- stdout\n...(a lot of lines)\n\n  --- stderr\n\n\n  error occurred in cc-rs: failed to find tool \"nvcc\": No such file or directory (os error 2)\n```\n\n**Description**\n\nThis PR removes the `--all-features` flag and replaces it with `-F` and\na list of all features minus the \"gpu\" one that caused the problem\n(`--all-features` is kept for L2 lint workflow). I got the list of\nfeatures with `cargo add -n ethrex`.",
          "timestamp": "2025-08-14T17:14:50Z",
          "tree_id": "ecb8d45f8fc2a5adc99f7cce6628e8b6df1927d0",
          "url": "https://github.com/lambdaclass/ethrex/commit/2e4bf6d5c3d5e845a49747447098e4db644aa935"
        },
        "date": 1755201232332,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014413952483801297,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2e4bf6d5c3d5e845a49747447098e4db644aa935",
          "message": "fix(l2): disable gpu in `make lint` target (#4048)\n\n**Motivation**\n\n`make lint` was failing with:\n\n```text\nwarning: risc0-sys@1.4.0: Compiler family detection failed due to error: ToolNotFound: failed to find tool \"nvcc\": No such file or directory (os error 2)\nerror: failed to run custom build command for `risc0-sys v1.4.0`\n\nCaused by:\n  process didn't exit successfully: `/Users/mega/execution/ethrex/target/release/build/risc0-sys-d088ac4aaf714579/build-script-build` (exit status: 1)\n  --- stdout\n...(a lot of lines)\n\n  --- stderr\n\n\n  error occurred in cc-rs: failed to find tool \"nvcc\": No such file or directory (os error 2)\n```\n\n**Description**\n\nThis PR removes the `--all-features` flag and replaces it with `-F` and\na list of all features minus the \"gpu\" one that caused the problem\n(`--all-features` is kept for L2 lint workflow). I got the list of\nfeatures with `cargo add -n ethrex`.",
          "timestamp": "2025-08-14T17:14:50Z",
          "tree_id": "ecb8d45f8fc2a5adc99f7cce6628e8b6df1927d0",
          "url": "https://github.com/lambdaclass/ethrex/commit/2e4bf6d5c3d5e845a49747447098e4db644aa935"
        },
        "date": 1755202140201,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006542803921568628,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "37f25170badef29a2a47a86992e2717ee0b3def4",
          "message": "perf(levm): use malachite for modexp (#4045)\n\nUse malachite library to improve the performance of the modexp\nprecompile. There are speedups up to 7-8x observed in the new\nbenchmarks.\n\n---------\n\nCo-authored-by: Tomás Arjovsky <tomas.arjovsky@lambdaclass.com>",
          "timestamp": "2025-08-14T17:40:22Z",
          "tree_id": "b4e6884f84debf2dcab25b0046b9c8c55744eca8",
          "url": "https://github.com/lambdaclass/ethrex/commit/37f25170badef29a2a47a86992e2717ee0b3def4"
        },
        "date": 1755210538762,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014398403451995685,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "37f25170badef29a2a47a86992e2717ee0b3def4",
          "message": "perf(levm): use malachite for modexp (#4045)\n\nUse malachite library to improve the performance of the modexp\nprecompile. There are speedups up to 7-8x observed in the new\nbenchmarks.\n\n---------\n\nCo-authored-by: Tomás Arjovsky <tomas.arjovsky@lambdaclass.com>",
          "timestamp": "2025-08-14T17:40:22Z",
          "tree_id": "b4e6884f84debf2dcab25b0046b9c8c55744eca8",
          "url": "https://github.com/lambdaclass/ethrex/commit/37f25170badef29a2a47a86992e2717ee0b3def4"
        },
        "date": 1755211572302,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006575034482758621,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a71da2164627496e57de09fbd84295ce03864515",
          "message": "feat(l1): add a new manual docker publish for performance tag (#4053)\n\n**Motivation**\n\nHave a manually triggered docker publish of our latest changes in\nperformance.\n\n**Description**\n\nThis PR adds a workflow which copy our current docker publish but\ninstead of be triggered by push to main it can be just triggered\nmanually.",
          "timestamp": "2025-08-14T19:05:39Z",
          "tree_id": "753e2b5d32498e057988d20d7bdf8cd44767d7f5",
          "url": "https://github.com/lambdaclass/ethrex/commit/a71da2164627496e57de09fbd84295ce03864515"
        },
        "date": 1755212486970,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006607584158415842,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a71da2164627496e57de09fbd84295ce03864515",
          "message": "feat(l1): add a new manual docker publish for performance tag (#4053)\n\n**Motivation**\n\nHave a manually triggered docker publish of our latest changes in\nperformance.\n\n**Description**\n\nThis PR adds a workflow which copy our current docker publish but\ninstead of be triggered by push to main it can be just triggered\nmanually.",
          "timestamp": "2025-08-14T19:05:39Z",
          "tree_id": "753e2b5d32498e057988d20d7bdf8cd44767d7f5",
          "url": "https://github.com/lambdaclass/ethrex/commit/a71da2164627496e57de09fbd84295ce03864515"
        },
        "date": 1755213939567,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001419927659574468,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e220fbe44abe2bb9743d9239b31f29d6bb39ce0d",
          "message": "fix(l1): restore datadir path  (#4050)\n\n**Motivation**\nPR #4024 changed how we initialize the datadir. Instead of looking for\nthe database in a path relative to the home directory (ie:\n.local/share/datadir on linux) it now looks for it on the path relative\nto the current directory (ie: ethrex/datadir). This caused problems when\nupdating the ethrex commit on currently running ethrex nodes due to the\nDB mismatch.\nThis PR restores the previous behaviour, and has been confirmed to work\nas usual on the aforementioned ethrex nodes.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Restore where we look for the datadir (relative to home vs current\ndir)\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None, but is needed to continue #1676",
          "timestamp": "2025-08-14T21:19:20Z",
          "tree_id": "c4f260b1ff71c3c7f1beed9459ec48fcf49ba43b",
          "url": "https://github.com/lambdaclass/ethrex/commit/e220fbe44abe2bb9743d9239b31f29d6bb39ce0d"
        },
        "date": 1755221201686,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013176031589338599,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e220fbe44abe2bb9743d9239b31f29d6bb39ce0d",
          "message": "fix(l1): restore datadir path  (#4050)\n\n**Motivation**\nPR #4024 changed how we initialize the datadir. Instead of looking for\nthe database in a path relative to the home directory (ie:\n.local/share/datadir on linux) it now looks for it on the path relative\nto the current directory (ie: ethrex/datadir). This caused problems when\nupdating the ethrex commit on currently running ethrex nodes due to the\nDB mismatch.\nThis PR restores the previous behaviour, and has been confirmed to work\nas usual on the aforementioned ethrex nodes.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Restore where we look for the datadir (relative to home vs current\ndir)\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None, but is needed to continue #1676",
          "timestamp": "2025-08-14T21:19:20Z",
          "tree_id": "c4f260b1ff71c3c7f1beed9459ec48fcf49ba43b",
          "url": "https://github.com/lambdaclass/ethrex/commit/e220fbe44abe2bb9743d9239b31f29d6bb39ce0d"
        },
        "date": 1755222240744,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.006575034482758621,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e1da8bff3abbafd6dc202385bc56f72d3f9ddf78",
          "message": "chore(levm): remove unused bigint dep from levm (#4060)\n\n**Motivation**\n\nWith the change from bigint to malachite for modexp, bigint is now an\nunused dependency.\n\nfixes #4057",
          "timestamp": "2025-08-18T14:18:06Z",
          "tree_id": "00953dde9885a6844f348a43fec8aea364c993c6",
          "url": "https://github.com/lambdaclass/ethrex/commit/e1da8bff3abbafd6dc202385bc56f72d3f9ddf78"
        },
        "date": 1755530286502,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013774324045407638,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e1da8bff3abbafd6dc202385bc56f72d3f9ddf78",
          "message": "chore(levm): remove unused bigint dep from levm (#4060)\n\n**Motivation**\n\nWith the change from bigint to malachite for modexp, bigint is now an\nunused dependency.\n\nfixes #4057",
          "timestamp": "2025-08-18T14:18:06Z",
          "tree_id": "00953dde9885a6844f348a43fec8aea364c993c6",
          "url": "https://github.com/lambdaclass/ethrex/commit/e1da8bff3abbafd6dc202385bc56f72d3f9ddf78"
        },
        "date": 1755531429890,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0061793148148148146,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "104713523f3bbc32a9d56b54e925370e02c3cc61",
          "message": "perf(l2): use rkyv instead of bincode for sp1 (#3831)\n\n**Motivation**\n\nafter #3765 running a samply shows bincode deserialization taking up\nmore than 45% of execution time in a large l2 batch\n\n**Description**\n\n- implement rkyv Archive trait for all of `ProgramInput` fields and its\ncontaining structs\n- for sp1 serialize `ProgramInput` as bytes, then use write_slice to\nwrite to sp1 stdin, then deserialize the bytes in sp1 main with\nfrom_bytes\n\n**Metrics**\n\ncommand:\n```\nSP1_PROVER=cuda cargo run --release --features \"sp1,l2,gpu\" -- prove batch --rpc-url <RPC-URL> --network 65536300 48\n```\n\nspecs:\n```\nCPU: 13th Gen Intel(R) Core(TM) i5-13500\nRAM: 64GB DDR4 3200MT/s\nGPU: NVIDIA RTX 4000 SFF Ada Generation\n```\n\n\n716 blocks 0tx/b\n\n- this pr: `Successfully executed SP1 program  in 83.47s`\n- main: `Successfully executed SP1 program  in 262.82s`\n\n\n716 blocks 1tx/b\n\n- this pr: `Successfully executed SP1 program  in 528.02s`\n- main: `Successfully executed SP1 program  in 784.57s`\n\n\n717 blocks 2tx/b\n\n- this pr: `Successfully executed SP1 program  in 1234.45s`\n- main: `Successfully executed SP1 program  in 1676.83s`",
          "timestamp": "2025-08-18T16:47:41Z",
          "tree_id": "5a836fd0e1a8af51a085f69bd6d5843cb5af3b5e",
          "url": "https://github.com/lambdaclass/ethrex/commit/104713523f3bbc32a9d56b54e925370e02c3cc61"
        },
        "date": 1755542325723,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00844767088607595,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "104713523f3bbc32a9d56b54e925370e02c3cc61",
          "message": "perf(l2): use rkyv instead of bincode for sp1 (#3831)\n\n**Motivation**\n\nafter #3765 running a samply shows bincode deserialization taking up\nmore than 45% of execution time in a large l2 batch\n\n**Description**\n\n- implement rkyv Archive trait for all of `ProgramInput` fields and its\ncontaining structs\n- for sp1 serialize `ProgramInput` as bytes, then use write_slice to\nwrite to sp1 stdin, then deserialize the bytes in sp1 main with\nfrom_bytes\n\n**Metrics**\n\ncommand:\n```\nSP1_PROVER=cuda cargo run --release --features \"sp1,l2,gpu\" -- prove batch --rpc-url <RPC-URL> --network 65536300 48\n```\n\nspecs:\n```\nCPU: 13th Gen Intel(R) Core(TM) i5-13500\nRAM: 64GB DDR4 3200MT/s\nGPU: NVIDIA RTX 4000 SFF Ada Generation\n```\n\n\n716 blocks 0tx/b\n\n- this pr: `Successfully executed SP1 program  in 83.47s`\n- main: `Successfully executed SP1 program  in 262.82s`\n\n\n716 blocks 1tx/b\n\n- this pr: `Successfully executed SP1 program  in 528.02s`\n- main: `Successfully executed SP1 program  in 784.57s`\n\n\n717 blocks 2tx/b\n\n- this pr: `Successfully executed SP1 program  in 1234.45s`\n- main: `Successfully executed SP1 program  in 1676.83s`",
          "timestamp": "2025-08-18T16:47:41Z",
          "tree_id": "5a836fd0e1a8af51a085f69bd6d5843cb5af3b5e",
          "url": "https://github.com/lambdaclass/ethrex/commit/104713523f3bbc32a9d56b54e925370e02c3cc61"
        },
        "date": 1755543823135,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014305809217577707,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f17fb7dbe2edb3e32ea30b7415c809846a9d56a",
          "message": "fix(l2): get gas price error (#4061)\n\n**Motivation**\n\nOur CI is sometimes failing with:\n```\nthread 'l2_integration_test' panicked at crates/l2/tests/tests.rs:1847:10:\ncalled `Result::unwrap()` on an `Err` value: GetGasPriceError(RPCError(\"Internal Error: Error calculating gas price: missing data\"))\n```\n\n**Description**\n\n- Modifies `get_block_body()` to check whether the requested body is the\nlatest, and makes the query by hash if so.\n\nCloses #4006",
          "timestamp": "2025-08-18T18:20:08Z",
          "tree_id": "24b0289c086a3d5b08e39ca5fc5e73b5463bdb8e",
          "url": "https://github.com/lambdaclass/ethrex/commit/9f17fb7dbe2edb3e32ea30b7415c809846a9d56a"
        },
        "date": 1755553363084,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014305809217577707,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f17fb7dbe2edb3e32ea30b7415c809846a9d56a",
          "message": "fix(l2): get gas price error (#4061)\n\n**Motivation**\n\nOur CI is sometimes failing with:\n```\nthread 'l2_integration_test' panicked at crates/l2/tests/tests.rs:1847:10:\ncalled `Result::unwrap()` on an `Err` value: GetGasPriceError(RPCError(\"Internal Error: Error calculating gas price: missing data\"))\n```\n\n**Description**\n\n- Modifies `get_block_body()` to check whether the requested body is the\nlatest, and makes the query by hash if so.\n\nCloses #4006",
          "timestamp": "2025-08-18T18:20:08Z",
          "tree_id": "24b0289c086a3d5b08e39ca5fc5e73b5463bdb8e",
          "url": "https://github.com/lambdaclass/ethrex/commit/9f17fb7dbe2edb3e32ea30b7415c809846a9d56a"
        },
        "date": 1755554159390,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00844767088607595,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "443f9d0c31b4da413f7f798e58aeae0e5a51abac",
          "message": "refactor(l2): remove redb and libmdbx from rollup store (#4063)\n\n**Motivation**\n\nWe are not using `libmdbx` and `redb` for the rollup store and\nmaintaining them is a waste of time.\n\n**Description**\n\nRemoves `libmdbx` and `redb` from the rollup store.\n\nCloses #3743",
          "timestamp": "2025-08-18T19:28:25Z",
          "tree_id": "5fd590c4a80d87db9a38e1ecbff420596a912339",
          "url": "https://github.com/lambdaclass/ethrex/commit/443f9d0c31b4da413f7f798e58aeae0e5a51abac"
        },
        "date": 1755555613792,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014351956989247312,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "443f9d0c31b4da413f7f798e58aeae0e5a51abac",
          "message": "refactor(l2): remove redb and libmdbx from rollup store (#4063)\n\n**Motivation**\n\nWe are not using `libmdbx` and `redb` for the rollup store and\nmaintaining them is a waste of time.\n\n**Description**\n\nRemoves `libmdbx` and `redb` from the rollup store.\n\nCloses #3743",
          "timestamp": "2025-08-18T19:28:25Z",
          "tree_id": "5fd590c4a80d87db9a38e1ecbff420596a912339",
          "url": "https://github.com/lambdaclass/ethrex/commit/443f9d0c31b4da413f7f798e58aeae0e5a51abac"
        },
        "date": 1755556427246,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00850147770700637,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estebandh@gmail.com",
            "name": "ElFantasma",
            "username": "ElFantasma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "66d3e7dcec4d7628a6fe34762251fc5106e3a589",
          "message": "chore(l1,l2): upgraded spawned to 0.3.0 (#4062)\n\nSpawned 0.3.0 has a major performance upgrade on certain GenServers.\n\nUpgrades spawned to the version 0.3.0 and updates the code accordingly",
          "timestamp": "2025-08-18T20:20:17Z",
          "tree_id": "2b97d7572f7a52b050247324c3f2c6d7cb1aee53",
          "url": "https://github.com/lambdaclass/ethrex/commit/66d3e7dcec4d7628a6fe34762251fc5106e3a589"
        },
        "date": 1755557943999,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014429535135135135,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d85e6d4d6641b0c4c82583ea5c0a231bd4b17d92",
          "message": "chore(l1): cache tx hash (#4049)\n\n**Motivation**\n\nWe saw that the hashing of txs takes a significant amount of time and\npart of it is repeated.\n\n**Description**\n\nThis PR create a new public hash function that allows to cache the\ncomputation of the hash for subsequent calls.\n\nAfter merging main there are some more changes needed. I'm taking a look\nat them.\n\nCloses #issue_number",
          "timestamp": "2025-08-18T21:43:40Z",
          "tree_id": "a5a65c360ff46435aa2d7d0ca14508f47123321f",
          "url": "https://github.com/lambdaclass/ethrex/commit/d85e6d4d6641b0c4c82583ea5c0a231bd4b17d92"
        },
        "date": 1755566793051,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013550578680203045,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d85e6d4d6641b0c4c82583ea5c0a231bd4b17d92",
          "message": "chore(l1): cache tx hash (#4049)\n\n**Motivation**\n\nWe saw that the hashing of txs takes a significant amount of time and\npart of it is repeated.\n\n**Description**\n\nThis PR create a new public hash function that allows to cache the\ncomputation of the hash for subsequent calls.\n\nAfter merging main there are some more changes needed. I'm taking a look\nat them.\n\nCloses #issue_number",
          "timestamp": "2025-08-18T21:43:40Z",
          "tree_id": "a5a65c360ff46435aa2d7d0ca14508f47123321f",
          "url": "https://github.com/lambdaclass/ethrex/commit/d85e6d4d6641b0c4c82583ea5c0a231bd4b17d92"
        },
        "date": 1755570709957,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00855597435897436,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estebandh@gmail.com",
            "name": "ElFantasma",
            "username": "ElFantasma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "66d3e7dcec4d7628a6fe34762251fc5106e3a589",
          "message": "chore(l1,l2): upgraded spawned to 0.3.0 (#4062)\n\nSpawned 0.3.0 has a major performance upgrade on certain GenServers.\n\nUpgrades spawned to the version 0.3.0 and updates the code accordingly",
          "timestamp": "2025-08-18T20:20:17Z",
          "tree_id": "2b97d7572f7a52b050247324c3f2c6d7cb1aee53",
          "url": "https://github.com/lambdaclass/ethrex/commit/66d3e7dcec4d7628a6fe34762251fc5106e3a589"
        },
        "date": 1755612488495,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.008723738562091504,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "314ba222e42eef6012489904322e7c34786e597f",
          "message": "fix(l2): ignore \"based\" capability if not in L2 (#4041)\n\n**Motivation**\n\nThe capability exchange would fail if our peer supported the \"based\"\ncapability and we were running in L1 mode.\n\n**Description**\n\nThis PR ignores the \"based\" capability if we aren't in L2 mode.",
          "timestamp": "2025-08-18T21:42:46Z",
          "tree_id": "7b80e14bec2e3b2a40fc139a996dc0893d0ee95f",
          "url": "https://github.com/lambdaclass/ethrex/commit/314ba222e42eef6012489904322e7c34786e597f"
        },
        "date": 1755613985572,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013932484342379957,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "314ba222e42eef6012489904322e7c34786e597f",
          "message": "fix(l2): ignore \"based\" capability if not in L2 (#4041)\n\n**Motivation**\n\nThe capability exchange would fail if our peer supported the \"based\"\ncapability and we were running in L1 mode.\n\n**Description**\n\nThis PR ignores the \"based\" capability if we aren't in L2 mode.",
          "timestamp": "2025-08-18T21:42:46Z",
          "tree_id": "7b80e14bec2e3b2a40fc139a996dc0893d0ee95f",
          "url": "https://github.com/lambdaclass/ethrex/commit/314ba222e42eef6012489904322e7c34786e597f"
        },
        "date": 1755614708928,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.008611174193548387,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d744176e86df0f0aa6239607decdf96f1312937c",
          "message": "chore(l2): avoid CI_ETHREX_WORKDIR docker warnings (#4064)\n\n**Motivation**\n\nRunning `make down` or `make init` prints the following warnings:\n\n```\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\n```\n\nThe same was happening for the `L1_RPC_URL` variable.\n\n**Description**\n\n- Sets the variables when running docker compose targets.\n- Renames `CI_ETHREX_WORKDIR` to `DOCKER_ETHREX_WORKDIR`.\n\nCloses #3810",
          "timestamp": "2025-08-19T15:59:20Z",
          "tree_id": "08994c1f264588261d858b53a144692de442d348",
          "url": "https://github.com/lambdaclass/ethrex/commit/d744176e86df0f0aa6239607decdf96f1312937c"
        },
        "date": 1755621293737,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.008898213333333333,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d744176e86df0f0aa6239607decdf96f1312937c",
          "message": "chore(l2): avoid CI_ETHREX_WORKDIR docker warnings (#4064)\n\n**Motivation**\n\nRunning `make down` or `make init` prints the following warnings:\n\n```\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\nWARN[0000] The \"CI_ETHREX_WORKDIR\" variable is not set. Defaulting to a blank string.\n```\n\nThe same was happening for the `L1_RPC_URL` variable.\n\n**Description**\n\n- Sets the variables when running docker compose targets.\n- Renames `CI_ETHREX_WORKDIR` to `DOCKER_ETHREX_WORKDIR`.\n\nCloses #3810",
          "timestamp": "2025-08-19T15:59:20Z",
          "tree_id": "08994c1f264588261d858b53a144692de442d348",
          "url": "https://github.com/lambdaclass/ethrex/commit/d744176e86df0f0aa6239607decdf96f1312937c"
        },
        "date": 1755625894265,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014398403451995685,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6aac0d0ac0d05e0ca11df68cf1584400d6937fa3",
          "message": "chore(levm): improve organization of new levm test runner (#3958)\n\n**Motivation**\n\n- this runner was inside the same folder as the other runner and also\nthe internal structure wasn't the most organized\n\n**Description**\n\n- move files\n- improve makefile\n- improve files structure\n\n<img width=\"290\" height=\"416\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/7d4f6583-2af1-4b3f-b77b-dcf355dee897\"\n/>",
          "timestamp": "2025-08-19T18:09:41Z",
          "tree_id": "15581f9fa6e5e69afbc8ffdb842dc5599f505b16",
          "url": "https://github.com/lambdaclass/ethrex/commit/6aac0d0ac0d05e0ca11df68cf1584400d6937fa3"
        },
        "date": 1755632750822,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014169129511677283,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6aac0d0ac0d05e0ca11df68cf1584400d6937fa3",
          "message": "chore(levm): improve organization of new levm test runner (#3958)\n\n**Motivation**\n\n- this runner was inside the same folder as the other runner and also\nthe internal structure wasn't the most organized\n\n**Description**\n\n- move files\n- improve makefile\n- improve files structure\n\n<img width=\"290\" height=\"416\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/7d4f6583-2af1-4b3f-b77b-dcf355dee897\"\n/>",
          "timestamp": "2025-08-19T18:09:41Z",
          "tree_id": "15581f9fa6e5e69afbc8ffdb842dc5599f505b16",
          "url": "https://github.com/lambdaclass/ethrex/commit/6aac0d0ac0d05e0ca11df68cf1584400d6937fa3"
        },
        "date": 1755633533684,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.008394540880503145,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "da96b3878ff45cb8a1789f0a52124ec624fa4e38",
          "message": "refactor(l2): remove WrappedTransaction (#3984)\n\n**Motivation**\n\n`WrappedTransaction` is an abstraction that is not really necessary. We\ncan use `GenericTransaction` instead, which serves a similar purpose but\nis easier to manipulate, as we don't have to match Enum variants to\naccess its attributes.\n\n**Description**\n\n- Removes `WrappedTransaction`.\n- Updates all `WrappedTransaction` related functions (send,bump) to use\n`GenericTransactions` instead.\n- Implements mapper functions to convert a `GenericTransaction` to a\nspecific transaction type.\n- Replaces `build_eipxxx`/`send_eipxxx` functions with generic ones:\n`build_generic_tx(type)`/`send_generic_tx()`.\n\nCloses #3787\n\n---------\n\nCo-authored-by: Manuel Iñaki Bilbao <manuel.bilbao@lambdaclass.com>",
          "timestamp": "2025-08-19T23:26:47Z",
          "tree_id": "ccbe706b9e892b782a083e1f3d6a4e1fc9c5ef6d",
          "url": "https://github.com/lambdaclass/ethrex/commit/da96b3878ff45cb8a1789f0a52124ec624fa4e38"
        },
        "date": 1755647764423,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.008290260869565217,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cc1346ecb067f1ab698c4ac80af8a5fec528e0bd",
          "message": "perf(levm): improve signextend opcode performance (#4071)\n\n**Motivation**\n\nRemoved some unnecesary double checks.\n\n(left is pr, right is main)\n<img width=\"1416\" height=\"925\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/ee0272b3-014d-4317-bad5-c7b738b7edd2\"\n/>",
          "timestamp": "2025-08-20T09:06:44Z",
          "tree_id": "bc51ca03ebf268c67ab509865a7bc1591293c444",
          "url": "https://github.com/lambdaclass/ethrex/commit/cc1346ecb067f1ab698c4ac80af8a5fec528e0bd"
        },
        "date": 1755686463330,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014321158798283262,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cc1346ecb067f1ab698c4ac80af8a5fec528e0bd",
          "message": "perf(levm): improve signextend opcode performance (#4071)\n\n**Motivation**\n\nRemoved some unnecesary double checks.\n\n(left is pr, right is main)\n<img width=\"1416\" height=\"925\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/ee0272b3-014d-4317-bad5-c7b738b7edd2\"\n/>",
          "timestamp": "2025-08-20T09:06:44Z",
          "tree_id": "bc51ca03ebf268c67ab509865a7bc1591293c444",
          "url": "https://github.com/lambdaclass/ethrex/commit/cc1346ecb067f1ab698c4ac80af8a5fec528e0bd"
        },
        "date": 1755687207044,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.008723738562091504,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2a9c4185ed8361d4827877bd4617b3f173574db1",
          "message": "perf(levm): improve perf of calldataload, calldatacopy,  extcodecopy, codecopy, returndatacopy (#4070)\n\n**Motivation**\n\nimprove perf of calldataload, calldatacopy, extcodecopy, codecopy,\nreturndatacopy\n\n\n(left is this pr, right is main)\n\n<img width=\"1383\" height=\"1273\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/d82a9e4f-51da-4db4-82ec-7d38e3c31477\"\n/>",
          "timestamp": "2025-08-20T08:25:26Z",
          "tree_id": "b89e7487e4bf097aa473c4f7c3a006c3ce6d53bc",
          "url": "https://github.com/lambdaclass/ethrex/commit/2a9c4185ed8361d4827877bd4617b3f173574db1"
        },
        "date": 1755694824491,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00850147770700637,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2a9c4185ed8361d4827877bd4617b3f173574db1",
          "message": "perf(levm): improve perf of calldataload, calldatacopy,  extcodecopy, codecopy, returndatacopy (#4070)\n\n**Motivation**\n\nimprove perf of calldataload, calldatacopy, extcodecopy, codecopy,\nreturndatacopy\n\n\n(left is this pr, right is main)\n\n<img width=\"1383\" height=\"1273\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/d82a9e4f-51da-4db4-82ec-7d38e3c31477\"\n/>",
          "timestamp": "2025-08-20T08:25:26Z",
          "tree_id": "b89e7487e4bf097aa473c4f7c3a006c3ce6d53bc",
          "url": "https://github.com/lambdaclass/ethrex/commit/2a9c4185ed8361d4827877bd4617b3f173574db1"
        },
        "date": 1755696284209,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014539564270152506,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "da96b3878ff45cb8a1789f0a52124ec624fa4e38",
          "message": "refactor(l2): remove WrappedTransaction (#3984)\n\n**Motivation**\n\n`WrappedTransaction` is an abstraction that is not really necessary. We\ncan use `GenericTransaction` instead, which serves a similar purpose but\nis easier to manipulate, as we don't have to match Enum variants to\naccess its attributes.\n\n**Description**\n\n- Removes `WrappedTransaction`.\n- Updates all `WrappedTransaction` related functions (send,bump) to use\n`GenericTransactions` instead.\n- Implements mapper functions to convert a `GenericTransaction` to a\nspecific transaction type.\n- Replaces `build_eipxxx`/`send_eipxxx` functions with generic ones:\n`build_generic_tx(type)`/`send_generic_tx()`.\n\nCloses #3787\n\n---------\n\nCo-authored-by: Manuel Iñaki Bilbao <manuel.bilbao@lambdaclass.com>",
          "timestamp": "2025-08-19T23:26:47Z",
          "tree_id": "ccbe706b9e892b782a083e1f3d6a4e1fc9c5ef6d",
          "url": "https://github.com/lambdaclass/ethrex/commit/da96b3878ff45cb8a1789f0a52124ec624fa4e38"
        },
        "date": 1755697755831,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014413952483801297,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "72007d4f3ce2302d71af2863b25ca15cb02ded34",
          "message": "feat(l1): engine_getBlobsV1 request endpoint (#3636)\n\n**Motivation**\n\nWe need to implement the RPC endpoint as it will be needed for Fusaka.\n\n**Description**\n\nThis pr incorporates a new module to handle RPC endpoint for the\n**engine_getBlobsV1** request according to the following spec's\ndescription from\n[here](https://ethereum.github.io/execution-apis/api-documentation/) and\n[here](https://github.com/ethereum/execution-apis/blob/main/src/engine/cancun.md#engine_getblobsv1).\n\nTo check the messages are sent correctly you can set the\n`fixtures/network/network_params.yaml` like this:\n```bash\nparticipants:\n  # NOTE: Both erigon and geth work on this example, but they provide wrong nodes information on discovery protocol\n  # - el_type: erigon\n  #   el_image: ethpandaops/erigon:main-764a2c50\n  #   cl_type: lighthouse\n  #   cl_image: sigp/lighthouse:v7.0.0-beta.0\n  #   validator_count: 32\n  # - el_type: reth\n  #   el_image: ghcr.io/paradigmxyz/reth:v1.2.2\n  #   cl_type: lighthouse\n  #   cl_image: sigp/lighthouse:v7.0.0-beta.0\n  #   validator_count: 32\n  - el_type: besu\n    el_image: ethpandaops/besu:main-142a5e6\n    cl_type: lighthouse\n    cl_image: sigp/lighthouse:v7.0.0-beta.0\n    validator_count: 32\n  - el_type: geth\n    el_image: ethereum/client-go:v1.15.2\n    cl_type: lighthouse\n    cl_image: sigp/lighthouse:v7.0.0-beta.0\n    validator_count: 32\n    count: 1\n  - el_type: ethrex\n    cl_type: lighthouse\n    cl_image: sigp/lighthouse:v7.0.0-beta.0\n    validator_count: 32\n    snooper_enabled: true\n\nnetwork_params:\n  electra_fork_epoch: 1\n\n  # The address of the staking contract address on the Eth1 chain\n  deposit_contract_address: \"0x4242424242424242424242424242424242424242\"\n\nethereum_metrics_exporter_enabled: true\n\nadditional_services:\n  - dora\n  - forkmon\n  - spamoor\n\nblockscout_params:\n  image: \"blockscout/blockscout:latest\"\n  verif_image: \"ghcr.io/blockscout/smart-contract-verifier:latest\"\n  frontend_image: \"ghcr.io/blockscout/frontend:latest\"\n\nprometheus_params:\n  # TODO: switch to latest when it points to v3.x\n  image: \"prom/prometheus:v3.2.1\"\n```\n\nThen run in a console:\n```bash\nmake localnet\n```\n\nAnd run in another console:\n```bash\ndocker logs -f $(docker ps -q --filter name=snooper-engine-3-lighthouse-ethrex)\n```\n\nThis last console will show all the rpc requests and the responses. It's\noverwhelming. Here I left some pictures of my logs:\n\n<img width=\"785\" height=\"411\" alt=\"Screenshot 2025-07-22 at 16 07 22\"\nsrc=\"https://github.com/user-attachments/assets/474ee749-0721-4ae6-8934-fc8c00fae70d\"\n/>\n<img width=\"855\" height=\"195\" alt=\"Screenshot 2025-07-22 at 16 07 42\"\nsrc=\"https://github.com/user-attachments/assets/be879e7c-244c-4130-9ae9-c4e2976f513d\"\n/>\n<img width=\"898\" height=\"155\" alt=\"Screenshot 2025-07-22 at 16 07 59\"\nsrc=\"https://github.com/user-attachments/assets/7f8922a0-077f-4361-9eed-2b42dd89dd99\"\n/>\n<img width=\"843\" height=\"144\" alt=\"Screenshot 2025-07-22 at 16 08 18\"\nsrc=\"https://github.com/user-attachments/assets/eb7e1246-1aba-417f-8217-34cbfec6b95c\"\n/>\n<img width=\"861\" height=\"129\" alt=\"Screenshot 2025-07-22 at 16 08 34\"\nsrc=\"https://github.com/user-attachments/assets/eee3c6c5-17fd-44f8-8e14-6bff8aba4a63\"\n/>\n<img width=\"831\" height=\"117\" alt=\"Screenshot 2025-07-22 at 16 08 52\"\nsrc=\"https://github.com/user-attachments/assets/3f450e2a-cd8d-4374-b87c-9f83107c09c3\"\n/>\n<img width=\"830\" height=\"105\" alt=\"Screenshot 2025-07-22 at 16 09 18\"\nsrc=\"https://github.com/user-attachments/assets/b7a8c40a-02c2-44f3-8f96-129a682a5046\"\n/>\n\nI haven't found a better way of testing it. I think you can check it\nwith the dora service but I'm not sure how.\n\nCloses #3428",
          "timestamp": "2025-08-20T13:11:53Z",
          "tree_id": "92e25588a855d9a907fa478597704351c3ab0abe",
          "url": "https://github.com/lambdaclass/ethrex/commit/72007d4f3ce2302d71af2863b25ca15cb02ded34"
        },
        "date": 1755704108839,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00855597435897436,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "72007d4f3ce2302d71af2863b25ca15cb02ded34",
          "message": "feat(l1): engine_getBlobsV1 request endpoint (#3636)\n\n**Motivation**\n\nWe need to implement the RPC endpoint as it will be needed for Fusaka.\n\n**Description**\n\nThis pr incorporates a new module to handle RPC endpoint for the\n**engine_getBlobsV1** request according to the following spec's\ndescription from\n[here](https://ethereum.github.io/execution-apis/api-documentation/) and\n[here](https://github.com/ethereum/execution-apis/blob/main/src/engine/cancun.md#engine_getblobsv1).\n\nTo check the messages are sent correctly you can set the\n`fixtures/network/network_params.yaml` like this:\n```bash\nparticipants:\n  # NOTE: Both erigon and geth work on this example, but they provide wrong nodes information on discovery protocol\n  # - el_type: erigon\n  #   el_image: ethpandaops/erigon:main-764a2c50\n  #   cl_type: lighthouse\n  #   cl_image: sigp/lighthouse:v7.0.0-beta.0\n  #   validator_count: 32\n  # - el_type: reth\n  #   el_image: ghcr.io/paradigmxyz/reth:v1.2.2\n  #   cl_type: lighthouse\n  #   cl_image: sigp/lighthouse:v7.0.0-beta.0\n  #   validator_count: 32\n  - el_type: besu\n    el_image: ethpandaops/besu:main-142a5e6\n    cl_type: lighthouse\n    cl_image: sigp/lighthouse:v7.0.0-beta.0\n    validator_count: 32\n  - el_type: geth\n    el_image: ethereum/client-go:v1.15.2\n    cl_type: lighthouse\n    cl_image: sigp/lighthouse:v7.0.0-beta.0\n    validator_count: 32\n    count: 1\n  - el_type: ethrex\n    cl_type: lighthouse\n    cl_image: sigp/lighthouse:v7.0.0-beta.0\n    validator_count: 32\n    snooper_enabled: true\n\nnetwork_params:\n  electra_fork_epoch: 1\n\n  # The address of the staking contract address on the Eth1 chain\n  deposit_contract_address: \"0x4242424242424242424242424242424242424242\"\n\nethereum_metrics_exporter_enabled: true\n\nadditional_services:\n  - dora\n  - forkmon\n  - spamoor\n\nblockscout_params:\n  image: \"blockscout/blockscout:latest\"\n  verif_image: \"ghcr.io/blockscout/smart-contract-verifier:latest\"\n  frontend_image: \"ghcr.io/blockscout/frontend:latest\"\n\nprometheus_params:\n  # TODO: switch to latest when it points to v3.x\n  image: \"prom/prometheus:v3.2.1\"\n```\n\nThen run in a console:\n```bash\nmake localnet\n```\n\nAnd run in another console:\n```bash\ndocker logs -f $(docker ps -q --filter name=snooper-engine-3-lighthouse-ethrex)\n```\n\nThis last console will show all the rpc requests and the responses. It's\noverwhelming. Here I left some pictures of my logs:\n\n<img width=\"785\" height=\"411\" alt=\"Screenshot 2025-07-22 at 16 07 22\"\nsrc=\"https://github.com/user-attachments/assets/474ee749-0721-4ae6-8934-fc8c00fae70d\"\n/>\n<img width=\"855\" height=\"195\" alt=\"Screenshot 2025-07-22 at 16 07 42\"\nsrc=\"https://github.com/user-attachments/assets/be879e7c-244c-4130-9ae9-c4e2976f513d\"\n/>\n<img width=\"898\" height=\"155\" alt=\"Screenshot 2025-07-22 at 16 07 59\"\nsrc=\"https://github.com/user-attachments/assets/7f8922a0-077f-4361-9eed-2b42dd89dd99\"\n/>\n<img width=\"843\" height=\"144\" alt=\"Screenshot 2025-07-22 at 16 08 18\"\nsrc=\"https://github.com/user-attachments/assets/eb7e1246-1aba-417f-8217-34cbfec6b95c\"\n/>\n<img width=\"861\" height=\"129\" alt=\"Screenshot 2025-07-22 at 16 08 34\"\nsrc=\"https://github.com/user-attachments/assets/eee3c6c5-17fd-44f8-8e14-6bff8aba4a63\"\n/>\n<img width=\"831\" height=\"117\" alt=\"Screenshot 2025-07-22 at 16 08 52\"\nsrc=\"https://github.com/user-attachments/assets/3f450e2a-cd8d-4374-b87c-9f83107c09c3\"\n/>\n<img width=\"830\" height=\"105\" alt=\"Screenshot 2025-07-22 at 16 09 18\"\nsrc=\"https://github.com/user-attachments/assets/b7a8c40a-02c2-44f3-8f96-129a682a5046\"\n/>\n\nI haven't found a better way of testing it. I think you can check it\nwith the dora service but I'm not sure how.\n\nCloses #3428",
          "timestamp": "2025-08-20T13:11:53Z",
          "tree_id": "92e25588a855d9a907fa478597704351c3ab0abe",
          "url": "https://github.com/lambdaclass/ethrex/commit/72007d4f3ce2302d71af2863b25ca15cb02ded34"
        },
        "date": 1755705651415,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014382887931034484,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5677a0d7ca9945eea7e7f08268928fc82021381c",
          "message": "fix(l1): subtract DB read times from block execution. (#4051)\n\n**Motivation**\nBe able to get the _net_ block execution, substracting the DB reads in\nGrafana.\n\n**Description**\nThis is how it looks:\n<img width=\"577\" height=\"297\" alt=\"Screenshot 2025-08-14 at 13 24 56\"\nsrc=\"https://github.com/user-attachments/assets/feb5d9fd-3dce-426e-8705-4049e5c2b98e\"\n/>",
          "timestamp": "2025-08-20T14:21:44Z",
          "tree_id": "2f07cdfd14cac1e33afdda2196da6f590af74562",
          "url": "https://github.com/lambdaclass/ethrex/commit/5677a0d7ca9945eea7e7f08268928fc82021381c"
        },
        "date": 1755740519073,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0013564349593495936,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "38d96c3466a2054591152b9376d0996f00f9551b",
          "message": "refactor(levm): change ecrecover implementation to use k256 instead of secp256k1 (#4085)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- Change precompile ecrecover to use `k256` instead of `secp256k1`\n\n\n\nI tested this out by going to the fix_execution_witness_serde branch,\nmerging this branch into that and executing a block that used to fail\nwith a Gas Mismatch like the 8968278 with SP1. Execution passed in\nmultiple blocks that had this problem.\n\nCloses #4087",
          "timestamp": "2025-08-20T15:22:01Z",
          "tree_id": "f46e0727b506747f23d0a8c97cedd31c90e20230",
          "url": "https://github.com/lambdaclass/ethrex/commit/38d96c3466a2054591152b9376d0996f00f9551b"
        },
        "date": 1755745568705,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014413952483801297,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "38d96c3466a2054591152b9376d0996f00f9551b",
          "message": "refactor(levm): change ecrecover implementation to use k256 instead of secp256k1 (#4085)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- Change precompile ecrecover to use `k256` instead of `secp256k1`\n\n\n\nI tested this out by going to the fix_execution_witness_serde branch,\nmerging this branch into that and executing a block that used to fail\nwith a Gas Mismatch like the 8968278 with SP1. Execution passed in\nmultiple blocks that had this problem.\n\nCloses #4087",
          "timestamp": "2025-08-20T15:22:01Z",
          "tree_id": "f46e0727b506747f23d0a8c97cedd31c90e20230",
          "url": "https://github.com/lambdaclass/ethrex/commit/38d96c3466a2054591152b9376d0996f00f9551b"
        },
        "date": 1755746518737,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00844767088607595,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "1eb58c84be6231fdac1484829bc37371f6f4a17c",
          "message": "chore(l1): remove redb support (#4103)\n\n**Motivation**\n\n#4095\n\nCloses #4095",
          "timestamp": "2025-08-20T18:38:24Z",
          "tree_id": "6489ebb1356d2f1bc308f1b1d99bdc0ff2b85eb9",
          "url": "https://github.com/lambdaclass/ethrex/commit/1eb58c84be6231fdac1484829bc37371f6f4a17c"
        },
        "date": 1755747404604,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00844767088607595,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "1eb58c84be6231fdac1484829bc37371f6f4a17c",
          "message": "chore(l1): remove redb support (#4103)\n\n**Motivation**\n\n#4095\n\nCloses #4095",
          "timestamp": "2025-08-20T18:38:24Z",
          "tree_id": "6489ebb1356d2f1bc308f1b1d99bdc0ff2b85eb9",
          "url": "https://github.com/lambdaclass/ethrex/commit/1eb58c84be6231fdac1484829bc37371f6f4a17c"
        },
        "date": 1755748970932,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014445151515151515,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5677a0d7ca9945eea7e7f08268928fc82021381c",
          "message": "fix(l1): subtract DB read times from block execution. (#4051)\n\n**Motivation**\nBe able to get the _net_ block execution, substracting the DB reads in\nGrafana.\n\n**Description**\nThis is how it looks:\n<img width=\"577\" height=\"297\" alt=\"Screenshot 2025-08-14 at 13 24 56\"\nsrc=\"https://github.com/user-attachments/assets/feb5d9fd-3dce-426e-8705-4049e5c2b98e\"\n/>",
          "timestamp": "2025-08-20T14:21:44Z",
          "tree_id": "2f07cdfd14cac1e33afdda2196da6f590af74562",
          "url": "https://github.com/lambdaclass/ethrex/commit/5677a0d7ca9945eea7e7f08268928fc82021381c"
        },
        "date": 1755810156090,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00855597435897436,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "1d85a418ccef90f0ca718fd53e3d751ed1e54698",
          "message": "ci(l1,l2): fix main_prover_l1 block cache",
          "timestamp": "2025-08-22T14:42:43Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4129/commits/1d85a418ccef90f0ca718fd53e3d751ed1e54698"
        },
        "date": 1755883129084,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "1d85a418ccef90f0ca718fd53e3d751ed1e54698",
          "message": "ci(l1,l2): fix main_prover_l1 block cache",
          "timestamp": "2025-08-22T14:42:43Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4129/commits/1d85a418ccef90f0ca718fd53e3d751ed1e54698"
        },
        "date": 1755883941346,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "1d85a418ccef90f0ca718fd53e3d751ed1e54698",
          "message": "ci(l1,l2): fix main_prover_l1 block cache",
          "timestamp": "2025-08-22T14:42:43Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4129/commits/1d85a418ccef90f0ca718fd53e3d751ed1e54698"
        },
        "date": 1755884765711,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "2c6b11e4af41072f97fef379eac945f89a7d4980",
          "message": "ci(l1,l2): fix main_prover_l1 block cache",
          "timestamp": "2025-08-22T17:42:38Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4129/commits/2c6b11e4af41072f97fef379eac945f89a7d4980"
        },
        "date": 1755892301057,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00179771072319202,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "2c6b11e4af41072f97fef379eac945f89a7d4980",
          "message": "ci(l1,l2): fix main_prover_l1 block cache",
          "timestamp": "2025-08-22T17:42:38Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4129/commits/2c6b11e4af41072f97fef379eac945f89a7d4980"
        },
        "date": 1755895933977,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.00024436677966101694,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "64f9d2108006d4d9618dd9bb681237fc7e7ab26f",
          "message": "ci(l1,l2): fix main_prover_l1 block cache (#4129)\n\n**Motivation**\n\nThe block was not updated with the changes in #3992\n\n**Description**\n\n- update with a new cache file for block\nhttps://hoodi.etherscan.io/block/974567\n\nCloses #4124",
          "timestamp": "2025-08-22T21:01:38Z",
          "tree_id": "454a8dbd04618e7df27e231e4d092fe5a2b9ae4f",
          "url": "https://github.com/lambdaclass/ethrex/commit/64f9d2108006d4d9618dd9bb681237fc7e7ab26f"
        },
        "date": 1755918103336,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0002505672575599583,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "64f9d2108006d4d9618dd9bb681237fc7e7ab26f",
          "message": "ci(l1,l2): fix main_prover_l1 block cache (#4129)\n\n**Motivation**\n\nThe block was not updated with the changes in #3992\n\n**Description**\n\n- update with a new cache file for block\nhttps://hoodi.etherscan.io/block/974567\n\nCloses #4124",
          "timestamp": "2025-08-22T21:01:38Z",
          "tree_id": "454a8dbd04618e7df27e231e4d092fe5a2b9ae4f",
          "url": "https://github.com/lambdaclass/ethrex/commit/64f9d2108006d4d9618dd9bb681237fc7e7ab26f"
        },
        "date": 1755919120609,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.001943078167115903,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "70196c1e8ef9a8cdbde714d7fd9f9abf3befb7a4",
          "message": "perf(levm): improve mulmod and addmod opcodes (#4072)\n\n**Motivation**\n\nImprove addmod and mulmod opcode performance by avoiding unnecesary\nchecks",
          "timestamp": "2025-08-22T21:48:49Z",
          "tree_id": "b9d8a541a40adb5e34304131dc96b506e5fdd455",
          "url": "https://github.com/lambdaclass/ethrex/commit/70196c1e8ef9a8cdbde714d7fd9f9abf3befb7a4"
        },
        "date": 1755922548485,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0002550891719745223,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "70196c1e8ef9a8cdbde714d7fd9f9abf3befb7a4",
          "message": "perf(levm): improve mulmod and addmod opcodes (#4072)\n\n**Motivation**\n\nImprove addmod and mulmod opcode performance by avoiding unnecesary\nchecks",
          "timestamp": "2025-08-22T21:48:49Z",
          "tree_id": "b9d8a541a40adb5e34304131dc96b506e5fdd455",
          "url": "https://github.com/lambdaclass/ethrex/commit/70196c1e8ef9a8cdbde714d7fd9f9abf3befb7a4"
        },
        "date": 1755923622091,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0019172393617021277,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c59033d979b931895e2cab7c4310d9894495a4b6",
          "message": "perf(levm): make precompiles use a constant table (#4097)\n\n**Motivation**\n\nImproves performance of precompile calls\n\n---------\n\nCo-authored-by: Mario Rugiero <mrugiero@gmail.com>",
          "timestamp": "2025-08-25T08:30:22Z",
          "tree_id": "0675e95b1ce969501c67b6424a077e0a44777f03",
          "url": "https://github.com/lambdaclass/ethrex/commit/c59033d979b931895e2cab7c4310d9894495a4b6"
        },
        "date": 1756119576935,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0002608111432706223,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c59033d979b931895e2cab7c4310d9894495a4b6",
          "message": "perf(levm): make precompiles use a constant table (#4097)\n\n**Motivation**\n\nImproves performance of precompile calls\n\n---------\n\nCo-authored-by: Mario Rugiero <mrugiero@gmail.com>",
          "timestamp": "2025-08-25T08:30:22Z",
          "tree_id": "0675e95b1ce969501c67b6424a077e0a44777f03",
          "url": "https://github.com/lambdaclass/ethrex/commit/c59033d979b931895e2cab7c4310d9894495a4b6"
        },
        "date": 1756120762388,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.001922352,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8c312705f4295279dad3297c1f0630fbd66685de",
          "message": "perf(levm): improve load_range by returning a Bytes directly, avoding a vec (#4098)\n\n**Motivation**\n\nAll load range usage leads to creating a Bytes, but to do so we allocate\na intermediate vec, this pr avoids this.\n\nimprove load_range by returning a Bytes directly, avoding a vec\n\n---------\n\nCo-authored-by: Mario Rugiero <mrugiero@gmail.com>",
          "timestamp": "2025-08-25T09:02:40Z",
          "tree_id": "b43426d32c02a260b64897801aef39417d83da9c",
          "url": "https://github.com/lambdaclass/ethrex/commit/8c312705f4295279dad3297c1f0630fbd66685de"
        },
        "date": 1756125079044,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0002598709444844989,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8c312705f4295279dad3297c1f0630fbd66685de",
          "message": "perf(levm): improve load_range by returning a Bytes directly, avoding a vec (#4098)\n\n**Motivation**\n\nAll load range usage leads to creating a Bytes, but to do so we allocate\na intermediate vec, this pr avoids this.\n\nimprove load_range by returning a Bytes directly, avoding a vec\n\n---------\n\nCo-authored-by: Mario Rugiero <mrugiero@gmail.com>",
          "timestamp": "2025-08-25T09:02:40Z",
          "tree_id": "b43426d32c02a260b64897801aef39417d83da9c",
          "url": "https://github.com/lambdaclass/ethrex/commit/8c312705f4295279dad3297c1f0630fbd66685de"
        },
        "date": 1756129352832,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0019969030470914128,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bb10d0bb3e405c36002b9cb8f951f3c528c31353",
          "message": "chore(l1): use `local` tag for ethrex images for local hive and kurtosis (#4132)\n\n**Motivation**\nMake it explicit that we're using a locally build version of ethrex.\nDecouple CI from local use of docker images\n\n**Description**\nSince `latest` is the default tag if none is specified, we had bugs in\nthe past where we were accidentally using an old version of ethrex\ninstead of the locally build one. Lets make it explicit that we're using\na local version by using the `local` tag instead of `latest`.",
          "timestamp": "2025-08-25T14:20:33Z",
          "tree_id": "f0226e5383e1cb5df54a45453474dc149704ef76",
          "url": "https://github.com/lambdaclass/ethrex/commit/bb10d0bb3e405c36002b9cb8f951f3c528c31353"
        },
        "date": 1756133666875,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.001943078167115903,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bb10d0bb3e405c36002b9cb8f951f3c528c31353",
          "message": "chore(l1): use `local` tag for ethrex images for local hive and kurtosis (#4132)\n\n**Motivation**\nMake it explicit that we're using a locally build version of ethrex.\nDecouple CI from local use of docker images\n\n**Description**\nSince `latest` is the default tag if none is specified, we had bugs in\nthe past where we were accidentally using an old version of ethrex\ninstead of the locally build one. Lets make it explicit that we're using\na local version by using the `local` tag instead of `latest`.",
          "timestamp": "2025-08-25T14:20:33Z",
          "tree_id": "f0226e5383e1cb5df54a45453474dc149704ef76",
          "url": "https://github.com/lambdaclass/ethrex/commit/bb10d0bb3e405c36002b9cb8f951f3c528c31353"
        },
        "date": 1756138046911,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.00025709058487874463,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "797e81810f81c3503e97e05c214b0443275ca868",
          "message": "refactor(l1): remove usize usage from constants in network crate (#4116)\n\n**Motivation**\n\nAvoid unnecessary usage of `usize` in the codebase.\n\n**Description**\n\nThe approach taken was the following: if the constant is used only for\nindexing or to be compared against `usize` values, keep it as `usize`.\nOtherwise, change it to `u32` or `u64`, depending on the case.\n\nRelated to #4081",
          "timestamp": "2025-08-25T14:38:45Z",
          "tree_id": "4dc7a46de1a33636e8e76e5c485ed18de3f23533",
          "url": "https://github.com/lambdaclass/ethrex/commit/797e81810f81c3503e97e05c214b0443275ca868"
        },
        "date": 1756139206771,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0019274919786096258,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "797e81810f81c3503e97e05c214b0443275ca868",
          "message": "refactor(l1): remove usize usage from constants in network crate (#4116)\n\n**Motivation**\n\nAvoid unnecessary usage of `usize` in the codebase.\n\n**Description**\n\nThe approach taken was the following: if the constant is used only for\nindexing or to be compared against `usize` values, keep it as `usize`.\nOtherwise, change it to `u32` or `u64`, depending on the case.\n\nRelated to #4081",
          "timestamp": "2025-08-25T14:38:45Z",
          "tree_id": "4dc7a46de1a33636e8e76e5c485ed18de3f23533",
          "url": "https://github.com/lambdaclass/ethrex/commit/797e81810f81c3503e97e05c214b0443275ca868"
        },
        "date": 1756149820799,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.00025782618025751075,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5bbb11fee439cdd5787bb4c509fa0d0c4faa791a",
          "message": "fix(l2): use `spawned::start_blocking` for block_producer (#4151)\n\n**Motivation**\n\nTo prevent blocking other async tasks.\n\n**Description**\n\n- Uses\n[spawned::start_blocking](https://github.com/lambdaclass/spawned/blob/aa47f8277b058737e351cf75a0926bd580d0f4e4/concurrency/src/tasks/gen_server.rs#L146)\nfor the L2 `BlockProducer` `GenServer`.\n\nCloses None",
          "timestamp": "2025-08-25T15:11:35Z",
          "tree_id": "915f7a01bec31b1ab78bab1d198c3206eba81079",
          "url": "https://github.com/lambdaclass/ethrex/commit/5bbb11fee439cdd5787bb4c509fa0d0c4faa791a"
        },
        "date": 1756150971739,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0019483297297297297,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5bbb11fee439cdd5787bb4c509fa0d0c4faa791a",
          "message": "fix(l2): use `spawned::start_blocking` for block_producer (#4151)\n\n**Motivation**\n\nTo prevent blocking other async tasks.\n\n**Description**\n\n- Uses\n[spawned::start_blocking](https://github.com/lambdaclass/spawned/blob/aa47f8277b058737e351cf75a0926bd580d0f4e4/concurrency/src/tasks/gen_server.rs#L146)\nfor the L2 `BlockProducer` `GenServer`.\n\nCloses None",
          "timestamp": "2025-08-25T15:11:35Z",
          "tree_id": "915f7a01bec31b1ab78bab1d198c3206eba81079",
          "url": "https://github.com/lambdaclass/ethrex/commit/5bbb11fee439cdd5787bb4c509fa0d0c4faa791a"
        },
        "date": 1756155404258,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.00025791842576028623,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pdeymon@fi.uba.ar",
            "name": "Pablo Deymonnaz",
            "username": "pablodeymo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "524685cc3c3c5ca7a38dad711116278cb6644519",
          "message": "chore(l1,l2): uniformity of tokio dependency in subcrates (#3409)\n\n**Motivation**\n\nThe inclusion of tokio in the Cargo.toml files of the subcrates was\nreferencing different versions.\nThis PR changes Cargo.toml files to use the version in workspace.\n\n**Description**\n\nThis PR changes Cargo.toml files to use the version in workspace.\n\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>",
          "timestamp": "2025-08-25T16:27:11Z",
          "tree_id": "8f7a9b550f1289bdd15e099f184e5e451619efe6",
          "url": "https://github.com/lambdaclass/ethrex/commit/524685cc3c3c5ca7a38dad711116278cb6644519"
        },
        "date": 1756162889597,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.00025581334279630943,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pdeymon@fi.uba.ar",
            "name": "Pablo Deymonnaz",
            "username": "pablodeymo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "524685cc3c3c5ca7a38dad711116278cb6644519",
          "message": "chore(l1,l2): uniformity of tokio dependency in subcrates (#3409)\n\n**Motivation**\n\nThe inclusion of tokio in the Cargo.toml files of the subcrates was\nreferencing different versions.\nThis PR changes Cargo.toml files to use the version in workspace.\n\n**Description**\n\nThis PR changes Cargo.toml files to use the version in workspace.\n\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>",
          "timestamp": "2025-08-25T16:27:11Z",
          "tree_id": "8f7a9b550f1289bdd15e099f184e5e451619efe6",
          "url": "https://github.com/lambdaclass/ethrex/commit/524685cc3c3c5ca7a38dad711116278cb6644519"
        },
        "date": 1756164111156,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.001943078167115903,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4e9336d6c090f9048be12f4613725d136bdfb514",
          "message": "chore(l2): rename `ETHREX_MONITOR` to `ETHREX_NO_MONITOR` (#4141)\n\nthe boolean is a negation",
          "timestamp": "2025-08-25T17:53:28Z",
          "tree_id": "789521e730bb0c7f727cb27ceab27ddf49fc9127",
          "url": "https://github.com/lambdaclass/ethrex/commit/4e9336d6c090f9048be12f4613725d136bdfb514"
        },
        "date": 1756170682859,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0002548186638388123,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estefano.bargas@fing.edu.uy",
            "name": "Estéfano Bargas",
            "username": "xqft"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4e9336d6c090f9048be12f4613725d136bdfb514",
          "message": "chore(l2): rename `ETHREX_MONITOR` to `ETHREX_NO_MONITOR` (#4141)\n\nthe boolean is a negation",
          "timestamp": "2025-08-25T17:53:28Z",
          "tree_id": "789521e730bb0c7f727cb27ceab27ddf49fc9127",
          "url": "https://github.com/lambdaclass/ethrex/commit/4e9336d6c090f9048be12f4613725d136bdfb514"
        },
        "date": 1756174983437,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0019378548387096776,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7d444698ff94e416eb67d784bf9ad631e09dccf3",
          "message": "feat(l1): don't log an error if we have no node config file when reading known peers (#4127)\n\n**Motivation**\nWe shouldn't emit a warning if we have no node config files where to\nread known peers from. We should log an error if we get an actual error\nwhile reading from an existing node config file\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Don't emit a warning if we have no node config file when reading known\npeers\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3908",
          "timestamp": "2025-08-25T18:53:48Z",
          "tree_id": "2fdf927a0b6dc56f28ca4e77d1ecd36848d1fa73",
          "url": "https://github.com/lambdaclass/ethrex/commit/7d444698ff94e416eb67d784bf9ad631e09dccf3"
        },
        "date": 1756179295518,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0019589184782608697,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7d444698ff94e416eb67d784bf9ad631e09dccf3",
          "message": "feat(l1): don't log an error if we have no node config file when reading known peers (#4127)\n\n**Motivation**\nWe shouldn't emit a warning if we have no node config files where to\nread known peers from. We should log an error if we get an actual error\nwhile reading from an existing node config file\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Don't emit a warning if we have no node config file when reading known\npeers\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #3908",
          "timestamp": "2025-08-25T18:53:48Z",
          "tree_id": "2fdf927a0b6dc56f28ca4e77d1ecd36848d1fa73",
          "url": "https://github.com/lambdaclass/ethrex/commit/7d444698ff94e416eb67d784bf9ad631e09dccf3"
        },
        "date": 1756182778961,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.00025736594073545163,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "731ee9453fa35ec885c30768c2f582f1bce62a5c",
          "message": "chore(l1): move `ef_tests` to `tooling` (#4143)\n\nCloses #3208",
          "timestamp": "2025-08-26T11:35:49Z",
          "tree_id": "b88103f5cbaa1c786d1fa37c439893b4cc530f35",
          "url": "https://github.com/lambdaclass/ethrex/commit/731ee9453fa35ec885c30768c2f582f1bce62a5c"
        },
        "date": 1756212724187,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.000255631914893617,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "731ee9453fa35ec885c30768c2f582f1bce62a5c",
          "message": "chore(l1): move `ef_tests` to `tooling` (#4143)\n\nCloses #3208",
          "timestamp": "2025-08-26T11:35:49Z",
          "tree_id": "b88103f5cbaa1c786d1fa37c439893b4cc530f35",
          "url": "https://github.com/lambdaclass/ethrex/commit/731ee9453fa35ec885c30768c2f582f1bce62a5c"
        },
        "date": 1756213979064,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0018920787401574804,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "1b6d10d635c28db2b22d6326e021f71b72cf8626",
          "message": "fix: recompile to rkyv",
          "timestamp": "2025-08-28T10:37:59Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4195/commits/1b6d10d635c28db2b22d6326e021f71b72cf8626"
        },
        "date": 1756390527399,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0002548186638388123,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "1b6d10d635c28db2b22d6326e021f71b72cf8626",
          "message": "fix: recompile to rkyv",
          "timestamp": "2025-08-28T10:37:59Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4195/commits/1b6d10d635c28db2b22d6326e021f71b72cf8626"
        },
        "date": 1756391755425,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.001922352,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c40ac146c116c26d7a61b252cafeef37e5faee2d",
          "message": "ci(l1,l2): recompile replay caches to rkyv (#4195)\n\n**Motivation**\n\nCI was failing due to old cache serialization.\n\n**Description**\n\nRecompile cache that runs on the CI to use `rkyv`\nSucceeded\n[here](https://github.com/lambdaclass/ethrex/actions/runs/17297071969/job/49097875868?pr=4195)",
          "timestamp": "2025-08-28T14:38:39Z",
          "tree_id": "bf3e244f107158f2c31ac3c577cd6949400420f6",
          "url": "https://github.com/lambdaclass/ethrex/commit/c40ac146c116c26d7a61b252cafeef37e5faee2d"
        },
        "date": 1756401814213,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0019589184782608697,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c40ac146c116c26d7a61b252cafeef37e5faee2d",
          "message": "ci(l1,l2): recompile replay caches to rkyv (#4195)\n\n**Motivation**\n\nCI was failing due to old cache serialization.\n\n**Description**\n\nRecompile cache that runs on the CI to use `rkyv`\nSucceeded\n[here](https://github.com/lambdaclass/ethrex/actions/runs/17297071969/job/49097875868?pr=4195)",
          "timestamp": "2025-08-28T14:38:39Z",
          "tree_id": "bf3e244f107158f2c31ac3c577cd6949400420f6",
          "url": "https://github.com/lambdaclass/ethrex/commit/c40ac146c116c26d7a61b252cafeef37e5faee2d"
        },
        "date": 1756409386413,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0002598709444844989,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "b4d6cb2e7c4b07ed3f8b96a725bc43f2f43ba35d",
          "message": "ci(l1): add new block, missing execution workflow",
          "timestamp": "2025-08-29T18:54:25Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4209/commits/b4d6cb2e7c4b07ed3f8b96a725bc43f2f43ba35d"
        },
        "date": 1756513075060,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0021126481481481482,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "b4d6cb2e7c4b07ed3f8b96a725bc43f2f43ba35d",
          "message": "ci(l1): add new block, missing execution workflow",
          "timestamp": "2025-08-29T18:54:25Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4209/commits/b4d6cb2e7c4b07ed3f8b96a725bc43f2f43ba35d"
        },
        "date": 1756517735827,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0005003640350877193,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e7df1cce1bc62fadbbc5c954394123cb29bf89f0",
          "message": "ci(l1): replace old cache and add workflow to verify that we keep consistency (#4209)\n\n**Motivation**\n\nCI was broken again due to replay cache format changes.\n\n**Description**\n\n- Update cache to the new format\n- Add workflow to verify that we are consistent with the cache stored\n- Execute in 7 minutes\n[here](https://github.com/lambdaclass/ethrex/actions/runs/17333409316/job/49214515851?pr=4209)",
          "timestamp": "2025-09-02T15:00:15Z",
          "tree_id": "625d0aa5f1384773740888afb5610b2b9578c63e",
          "url": "https://github.com/lambdaclass/ethrex/commit/e7df1cce1bc62fadbbc5c954394123cb29bf89f0"
        },
        "date": 1756884030484,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0013628446601941747,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44068466+SDartayet@users.noreply.github.com",
            "name": "SDartayet",
            "username": "SDartayet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "fc077fdcfff125223deea014e228a0ec1e738cd0",
          "message": "feat(l1,levm): implement CLZ opcode (#4188)\n\n**Motivation**\n\nImplementing the Fusaka fork, specifically [EIP\n7939](https://eips.ethereum.org/EIPS/eip-7939)\n\n**Description**\n\n- Added the CLZ opcode\n- Made it so the test runner runs the tests for it\n\nDepends on #4163 for tests\n\nCloses #4159",
          "timestamp": "2025-09-02T16:59:54Z",
          "tree_id": "8414b36a246160f2972771fa33a31a1d7f5d98f6",
          "url": "https://github.com/lambdaclass/ethrex/commit/fc077fdcfff125223deea014e228a0ec1e738cd0"
        },
        "date": 1756896490740,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.001376205882352941,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7a169cf414791b892430abf1e716442e318f8d84",
          "message": "fix(levm): check coordinates are within field bounds in ecpairing precompile (#4082)\n\n**Motivation**\nA gas mismatch was found on a [sepolia\ntransaction](https://sepolia.etherscan.io/tx/0x4355d49be46e61a53c71f45a128ebefb52cb38df08ed55833c2c162d26396819).\nThis was due to the transaction failing at an ecpairing precompile on\nthe network but not on levm. The difference was that geth checks that\nthe coordinates received are within the bounds of the field, while we\nperform modulus on the input coordinates (see\n`BN254FieldElement::from_bytes_be`). This PR fixes this by checking that\nthe input coordinates are within the field bounds before constructing\nthe FieldElements.\nIt also adds some tests taken from geth to ensure that the\nimplementation remains correct + a test for the out of bounds case\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Check that input coordinates are within field bounds in `ecpairing`\nprecompile\n* Add tests for `ecpairing` precompile\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-02T18:11:12Z",
          "tree_id": "06b03d360335a6293ead17faa2bda86677781f28",
          "url": "https://github.com/lambdaclass/ethrex/commit/7a169cf414791b892430abf1e716442e318f8d84"
        },
        "date": 1756898633619,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0013242735849056603,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@edgl.dev",
            "name": "Edgar",
            "username": "edg-l"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c4c8f2a3a45bc97ea97348450f0f99695de0153b",
          "message": "perf(levm): use x86-64-v2 cpu target on linux by default (#4252)\n\n**Motivation**\n\nReleases are made with this target already\n\n\nhttps://github.com/lambdaclass/ethrex/blob/0cae720162fd889eb18417010e5f091c6d097d35/.github/workflows/tag_release.yaml#L33\n\nSetting it by default for linux targets at the repo level ensures more\nconsistency, specially when making benchmarks.\n\nThe reports i make in other prs about performance showing bench\ncomparisions use the v2, but because i manually edit the dockerfile\neverytime, which is an unnecesary manual process.\n\nx86_64-v2 basically is around the first Intel Core processors and should\nsupport most processors whereas x86_64-v1 goes back to the very first\nx86\n\nBy default rust uses v1.",
          "timestamp": "2025-09-03T09:31:52Z",
          "tree_id": "5dea5c6a1db363867d9b9cbc1e655e476962a981",
          "url": "https://github.com/lambdaclass/ethrex/commit/c4c8f2a3a45bc97ea97348450f0f99695de0153b"
        },
        "date": 1756940596327,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.003803872549019608,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "602d8f0d007808430d2bc0850ed93b8b86707323",
          "message": "chore(l1): correct block time and gas used % y axis labels on grafana panel (#4263)\n\n**Motivation**\n\nFix previously wrong labels on a grafana panel\n\n**Description**\n\nThis PR simply change the labels to be correct on the Blocktime/Gas Used\n% panel.",
          "timestamp": "2025-09-03T13:51:53Z",
          "tree_id": "27ee4bca4e010f78a32e9fecdf4d9028ec2cfe88",
          "url": "https://github.com/lambdaclass/ethrex/commit/602d8f0d007808430d2bc0850ed93b8b86707323"
        },
        "date": 1756947055002,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0038415346534653463,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "17af944f30194d322364c127733f525042f37716",
          "message": "feat(l1, l2): use SP1's bump allocator",
          "timestamp": "2025-09-03T15:33:03Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4275/commits/17af944f30194d322364c127733f525042f37716"
        },
        "date": 1756949566719,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0027188309352517985,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9d1fb230cb83de478c85b45244ef26013ee6701f",
          "message": "chore(l1): only validate trie in debug mode (#4266)\n\n**Motivation**\n\nCurrently, we reconstruct the whole state and storage tries as a\nvalidation. This is very expensive, taking several hours on mainnet.\n\n**Description**\n\nThis moves the validations to a debug_assert, so they are only executed\nin debug mode.",
          "timestamp": "2025-09-03T13:55:12Z",
          "tree_id": "85a2e2106133e382632f129c2102384a429aca35",
          "url": "https://github.com/lambdaclass/ethrex/commit/9d1fb230cb83de478c85b45244ef26013ee6701f"
        },
        "date": 1756950525266,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.003592546296296296,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5dc636ae2a243a087a73379ec4f15a1c6d4a9da9",
          "message": "chore(l1): remove old comments and code (#4269)\n\n**Motivation**\n\nDuring snapsync development we left old code and comments.\n\n**Description**\n\nRemoves old comments and a useless \"validation\" on big accounts, which\nis pointless because errors are expected (hence why healing is needed).",
          "timestamp": "2025-09-03T13:56:02Z",
          "tree_id": "68f5921ccced03fd177e3513c4a9de697ec72a75",
          "url": "https://github.com/lambdaclass/ethrex/commit/5dc636ae2a243a087a73379ec4f15a1c6d4a9da9"
        },
        "date": 1756953946553,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.003592546296296296,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3bcc9cf6221dfbb98317ba67ecb6edb6a28238ce",
          "message": "ci(l1): fix daily hive report. (#4274)\n\n**Motivation**\nDaily Hive report is broken\n\n**Description**\n- Fixes edge case where there are zero tests of a suite\n- Revert back to stable Pectra release since the Osaka devnets only have\nosaka tests.",
          "timestamp": "2025-09-03T14:11:52Z",
          "tree_id": "9d970199c20293d9bbde222d67a5ae8307306293",
          "url": "https://github.com/lambdaclass/ethrex/commit/3bcc9cf6221dfbb98317ba67ecb6edb6a28238ce"
        },
        "date": 1756962148090,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0038415346534653463,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ffed957d95fad4048ee7986aeafc54500898a216",
          "message": "fix(l2): grafana for macos (#4283)\n\n**Motivation**\n\nOur Grafana dashboards are not showing data when running the node on\nmacos because the Linux bridge address is hardcoded in the Prometheus\ncontainer.\n \n**Description**\n\n- Use the `host-gateway` feature instead.\n\nCloses None",
          "timestamp": "2025-09-03T19:38:02Z",
          "tree_id": "79fb4f84b222f8c252112d3410efffaa50280f97",
          "url": "https://github.com/lambdaclass/ethrex/commit/ffed957d95fad4048ee7986aeafc54500898a216"
        },
        "date": 1756985039416,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.002789059040590406,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f7f402c2e23305e64a1cb53b4c1070ba8a63480f",
          "message": "chore(l1): change bytecode fetching log to debug (#4293)\n\n**Motivation**\n\nThe \"Failed to get bytecode\" log is expected to happen sometimes (the\npeer might not have the bytecode), we shouldn't log it as an error.\n\n**Description**\n\nChanges the log to debug.",
          "timestamp": "2025-09-03T19:54:20Z",
          "tree_id": "5421051a068d44355794c5f2c0282a30a81ea4de",
          "url": "https://github.com/lambdaclass/ethrex/commit/f7f402c2e23305e64a1cb53b4c1070ba8a63480f"
        },
        "date": 1756987428059,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0027286462093862817,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "80769968+emirongrr@users.noreply.github.com",
            "name": "emirongrr",
            "username": "emirongrr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f1c25d45e206d4e22ea66f2faf297757a32b7536",
          "message": "feat(l1): print loaded chain config on startup (#4027) (#4034)\n\n**Motivation**\n\nWhen starting the execution client, operators need clear and immediate\ninformation about the loaded chain configuration to verify correct setup\nand aid debugging. Currently, this information is not displayed at\nstartup.\n\n\n**Description**\n\nThis PR adds logging output on startup that prints the chain ID, and\nlists of pre-merge and post-merge hard forks with relevant block numbers\nor timestamps.\n\nIf there are any requested changes or feedback regarding the\nimplementation, I would be happy to address them. Please feel free to\nlet me know, and I’ll gladly make the necessary adjustments.\n\n<img width=\"1300\" height=\"419\" alt=\"terminal\"\nsrc=\"https://github.com/user-attachments/assets/9026e084-47b3-4bb3-9617-0bee0f4c05d1\"\n/>\n\n\nCloses #4027\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>",
          "timestamp": "2025-09-03T22:10:33Z",
          "tree_id": "eaeb1717dd03e6cc10de2e8d4dd935a2e8dd588e",
          "url": "https://github.com/lambdaclass/ethrex/commit/f1c25d45e206d4e22ea66f2faf297757a32b7536"
        },
        "date": 1757001394879,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0027788051470588235,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5c0681db9dc344138192c793b88fadf7db1fcb46",
          "message": "refactor(l2): prover crate (#3800)\n\n**Description**\n\nRefactors the prover crate\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-03T22:13:33Z",
          "tree_id": "380745ee7fafc41c3fff02fd68ce87929d31bed8",
          "url": "https://github.com/lambdaclass/ethrex/commit/5c0681db9dc344138192c793b88fadf7db1fcb46"
        },
        "date": 1757006665207,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0028097955390334575,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "ab48d07361ea28f952cf0a68fb2c727a786956d3",
          "message": "feat(l2): aligned mode support for multiprover",
          "timestamp": "2025-09-04T19:37:17Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3429/commits/ab48d07361ea28f952cf0a68fb2c727a786956d3"
        },
        "date": 1757017387834,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00105,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "iovoid@users.noreply.github.com",
            "name": "Lucas Fiegl",
            "username": "iovoid"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "34144fb33998122c8a8d5c5222fcf488a515d431",
          "message": "feat(l1): chunk the download of headers (#4310)\n\n**Motivation**\n\nFor large networks such as mainnet, downloading all the headers at once\ncauses high RAM usage since the headers are kept in memory until they're\nall downloaded.\n\n**Description**\n\nWe download them in batches (of 500k, should use ~300MB). Since the sync\nhead number is not known in the main sync loop, the cut is made in the\nheader fetching function.",
          "timestamp": "2025-09-04T15:06:23Z",
          "tree_id": "1bd18e69810ec824d9ee7006c6d384e676664d1a",
          "url": "https://github.com/lambdaclass/ethrex/commit/34144fb33998122c8a8d5c5222fcf488a515d431"
        },
        "date": 1757019737677,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0027585218978102193,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "7fda0f1f01da6a5df0370694b6caa3a14788f875",
          "message": "refactor(l1, l2): use `BTreeMap` for execution witness",
          "timestamp": "2025-09-04T16:56:49Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4313/commits/7fda0f1f01da6a5df0370694b6caa3a14788f875"
        },
        "date": 1757020611279,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0010606060606060605,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "962f9b1e0595e3f30283ea1773a92ba63cec2fdc",
          "message": "fix(l1,levm): fix execution result when using levm (#3911)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n- ExecutionResult was inaccurate with LEVM, specially the gas used that\nsubtracted the gas refunded but that's already done in LEVM.\n\nWe don't have the ideal endpoints to try this out because the only ones\nthat use this are `eth_estimateGas` and `eth_call`. The only way to see\nif it works fine is to try out the former RPC method with a transaction\nthat triggers refunds... It would be good to have `eth_simulateV1` I\nguess\nHere's evidence that the gas_used in the VM is the `total gas used -\nrefunded gas`\n\nhttps://github.com/lambdaclass/ethrex/blob/1918c5cedaf3f76df1bc01aba3b20d1d95162c84/crates/vm/levm/src/hooks/default_hook.rs#L199-L201\nBear with me, `exec_gas_consumed` is the same as `actual_gas_used`\n\nhttps://github.com/lambdaclass/ethrex/blob/1918c5cedaf3f76df1bc01aba3b20d1d95162c84/crates/vm/levm/src/hooks/default_hook.rs#L164\n\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-08T12:40:51Z",
          "tree_id": "b75f179ad9bfbcdaba641c9e597a7ebf23ee72c5",
          "url": "https://github.com/lambdaclass/ethrex/commit/962f9b1e0595e3f30283ea1773a92ba63cec2fdc"
        },
        "date": 1757358947142,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0011052631578947368,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5f460384b2c424a1100ee584c2df2e6eedb08554",
          "message": "feat(l1,l2): enable log levels update in runtime (#4324)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nSometimes we want to change the log level, primarly for debugging, and\nrestarting the node would break the case of study.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nAdd a custom `admin_setLogLevel` endpoint that enables the node operator\nto specify a new log filter, just like with `RUST_LOG`.\n\nHow to test:\n1. Run a node (e.g. `ethrex --dev`)\n2. Change the log levels:\n    ```\ncurl localhost:8545 -H 'content-type: application/json' -d '{\"jsonrpc\":\n\"2.0\", \"id\": \"1\", \"method\": \"admin_setLogLevel\", \"params\":\n[\"ethrex_dev::block_producer=info\"]}'\n     ```\n3. You should now only see `ethrex_dev::block_producer` logs\n\n> [!WARNING]\n> The `admin` namespace is currently unauthenticated and cannot be\nturned off. Be aware of this in public nodes\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #4299",
          "timestamp": "2025-09-08T13:54:07Z",
          "tree_id": "a1293abd074c3d087d7eeab0fbe3e83d090d405f",
          "url": "https://github.com/lambdaclass/ethrex/commit/5f460384b2c424a1100ee584c2df2e6eedb08554"
        },
        "date": 1757368768352,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00105,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "tomas.arjovsky@lambdaclass.com",
            "name": "Tomás Arjovsky",
            "username": "Arkenan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5dc0b2bd5a3ae52804cf3416da2c56fab13ad394",
          "message": "fix(levm): neon blake2f fix (#4336)\n\n**Description**\n\n- Re-adds the blake2f NEON implementation by reverting the revert.\n- Applies the patch by @azteca1998 (fix in the number of bits rotated,\nand diagonalization corrections)\n\nAfter this, the local state EF tests pass all tests again.\n\nCloses #4308",
          "timestamp": "2025-09-08T14:41:33Z",
          "tree_id": "6003cbd1305480002eb81c587e9f3f5eacdf050f",
          "url": "https://github.com/lambdaclass/ethrex/commit/5dc0b2bd5a3ae52804cf3416da2c56fab13ad394"
        },
        "date": 1757401477527,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0010937499999999999,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5e527c38f73159ff1015167d5e587a67f01f26a9",
          "message": "fix(l2): avoid updating last_block_fetched when getLogs fails (#4355)\n\n**Motivation**\n\nWe are encountering the following error in our L2 integration tests:\n\n```\n2025-08-29T19:17:04.573865Z  WARN ethrex_l2::sequencer::l1_watcher: Error when getting logs from L1: eth_getLogs request error: Internal Error: Could not get receipt\n```\n\nAlthough this error is being addressed in #4346, our `l1_watcher`\nshouldn't simply log the error and update `last_block_fetched` as if it\nwere already reviewed. We should retry since we might be missing some\n`privilegedTransactions`.\n\n**Description**\n\n- If `getLogs()` fails, return without updating `last_block_fetched`.\n\n\nCloses None",
          "timestamp": "2025-09-08T17:16:14Z",
          "tree_id": "a9a7859119b9180b85893c9502c835907d4cb62c",
          "url": "https://github.com/lambdaclass/ethrex/commit/5e527c38f73159ff1015167d5e587a67f01f26a9"
        },
        "date": 1757415245757,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0011052631578947368,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2e3c6248444160b9602b66d0f272048168894afa",
          "message": "feat(l2): add `ethrex_batchNumber` to RPC (#4349)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nWe lack a way to get the latest batch sealed, something similar to\n`eth_blockNumber`.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nAdd a new RPC method `ethrex_batchNumber` that returns the last sealed\nbatch.\n\nHow to test:\n1. Start an L2 node:\n    ```\n    COMPILE_CONTRACTS=true cargo run --release -- l2 --dev\n    ```\n3. Wait about 1 minute until a batch is sealed.\n4. Request the last batch number:\n    ```\ncurl localhost:1729 -H 'content-type: application/json' -d '{\"jsonrpc\":\n\"2.0\", \"id\": \"1\", \"method\": \"ethrex_batchNumber\"}'\n    ```\nShould return something like `{\"id\":\"1\",\"jsonrpc\":\"2.0\",\"result\":\"0x2\"}`\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-08T17:22:00Z",
          "tree_id": "630b490baa65ba03fbd39762c9c9adc7e56c3901",
          "url": "https://github.com/lambdaclass/ethrex/commit/2e3c6248444160b9602b66d0f272048168894afa"
        },
        "date": 1757417179117,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0011052631578947368,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d9cd6cd9e2082636a46dbe3333fc90291b0f1206",
          "message": "refactor(l1): add revm feature flag (#4317)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\nWe want to be able to compile ethrex without compiling revm, this PR\nenables it.\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-08T20:18:15Z",
          "tree_id": "371ea0a016183445a166d86d20665dfa89c4c012",
          "url": "https://github.com/lambdaclass/ethrex/commit/d9cd6cd9e2082636a46dbe3333fc90291b0f1206"
        },
        "date": 1757422175334,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0010937499999999999,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9445a758ae1892cf118d15ec106dd6a9184a0a71",
          "message": "ci(l1,l2): improve PR auto labelling. (#4354)\n\n**Motivation**\nIf a pr had multiple scopes, only l2 label was added\n\n**Description**\n- Fix labeling per scope. If a pr has multiple scopes, potentially add\nmultiple labels.\n- Move the script to a separate file",
          "timestamp": "2025-09-08T20:27:51Z",
          "tree_id": "7030dc4cc2354ed9557605fa3e80993bf673aae4",
          "url": "https://github.com/lambdaclass/ethrex/commit/9445a758ae1892cf118d15ec106dd6a9184a0a71"
        },
        "date": 1757430068572,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0011170212765957447,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c048c71213a517ffce7a7e8718e1c2d11b367f0b",
          "message": "fix(l2): update privileged_range once all checks have passed (#4224)\n\n**Motivation**\n\nNoticed a weird behavior while testing #4211. Once the configured\n`max_gas_limit` was reached, no further deposits were included in\nsubsequent blocks until a new batch is started. This happens because we\nfirst update the `privileged_range`, and if the transaction is later\nrejected (for example, due to the gas limit), we don’t remove the nonce\nfrom the range. As a result, when the next block starts, we try to add\nthe tx again, but since the nonce was already included to the range, the\ntransaction is marked as out-of-order.\n\n#### Why haven’t we seen the error before?\n\nThere is an `if` check that prevents the error from appearing in our\ndaily usage:\n\n```Rust\n// Check if we have enough space for the StateDiff to run more transactions\nif acc_size_without_accounts + size_accounts_diffs + SIMPLE_TX_STATE_DIFF_SIZE\n> safe_bytes_per_blob {\n\twarn!(\"No more StateDiff space to run transactions\");\n\tbreak;\n};\n```\n\nThis is an early return that checks if we have enough space for a simple\ntransfer in our `stateDiff`, and stops adding transactions to the block\nif we don’t. But, it can happen that we have enough space for a simple\ntransfer, but the transaction we are trying to add occupies more space\nthan that, making us restore the previous state in another check a[ few\nlines\nlater](https://github.com/lambdaclass/ethrex/blob/0cae720162fd889eb18417010e5f091c6d097d35/crates/l2/sequencer/block_producer/payload_builder.rs#L215).\n\n<!-- \n#### How to trigger the error\n\nThe easiest way to trigger the error is to comment out the early return,\nallowing the `payload_builder` to attempt restoring the previous state.\nThen start the `L2` and `prover` with:\n\n```\nmake init\nmake init-prover\n```\n\nand run a load test with:\n```\ncargo run --release --manifest-path ./tooling/load_test/Cargo.toml -- -k ./fixtures/keys/private_keys_l1.txt -t eth-transfers -n \"http://localhost:1729\"\n```\n\nObserve the following behavior in the monitor:\n\nAfter a block reaches its max `stateDiff` size allowed, the subsequent\nblocks contain 0 transactions until a new batch is started.\n-->\n\n**Description**\n\nMoves the update of `privileged_range` after all other checks have\npassed.\n\n\nIssues #4248 and #4243 were created.\nCloses None",
          "timestamp": "2025-09-09T13:31:21Z",
          "tree_id": "df56e5007050016e7d074b6056550ac4f98c64b7",
          "url": "https://github.com/lambdaclass/ethrex/commit/c048c71213a517ffce7a7e8718e1c2d11b367f0b"
        },
        "date": 1757460276635,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0011052631578947368,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pdeymon@fi.uba.ar",
            "name": "Pablo Deymonnaz",
            "username": "pablodeymo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4627745f9fd704c9abcdcbfc53a36987ba26922f",
          "message": "refactor(l1): unify peer score (#4294)\n\n**Motivation**\n\nPerformance improvement on snap sync.\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\nThis PR refactors the P2P networking layer by centralizing peer scoring\nfunctionality into a unified system. The changes move from multiple\nscattered peer scoring implementations to a single `PeerScore` module\nthat manages peer reputation and selection consistently across all sync\noperations.\n\nKey changes include:\n\n- Creation of a centralized `PeerScores` system to replace scattered\nscoring logic\n- Removal of local peer scoring implementations from state and storage\nhealing modules\n- Updated peer selection to use the unified scoring system across all\nsync operations\n\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #2073 \n\n**Known issues**\n\n#4352: the usage of this method is required for scoring to be useful,\nbut it shouldn't be used always for performance reasons. This is error\nprone, so eventually the scoring data should be embedded in the kademlia\ntable's `PeerData`.\n\n---------\n\nCo-authored-by: Javier Chatruc <jrchatruc@gmail.com>\nCo-authored-by: Juan Munoz <juanmunoz890@gmail.com>\nCo-authored-by: Mateo Rico <89949621+ricomateo@users.noreply.github.com>\nCo-authored-by: Esteban Dimitroff Hodi <esteban.dimitroff@lambdaclass.com>\nCo-authored-by: Lucas Fiegl <iovoid@users.noreply.github.com>\nCo-authored-by: Gianbelinche <39842759+gianbelinche@users.noreply.github.com>\nCo-authored-by: Francisco Xavier Gauna <francisco.gauna@lambdaclass.com>\nCo-authored-by: ricomateo <mrico@fi.uba.ar>\nCo-authored-by: juan518munoz <62400508+juan518munoz@users.noreply.github.com>\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-09T14:08:41Z",
          "tree_id": "f75c02950a9553120b346d611a3fe0c1f8cfdb0c",
          "url": "https://github.com/lambdaclass/ethrex/commit/4627745f9fd704c9abcdcbfc53a36987ba26922f"
        },
        "date": 1757491129741,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0010824742268041236,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d8c0614ac60bb1ba696632966913e6d1bc26d841",
          "message": "ci(l1, l2): improve sending of slack messages to appropriate channels (#4345)\n\n**Motivation**\nSend failure notifications to appropriate channels based on which\nworkflow failed.\n\n**Description**\n- Sends to L1 or L2 channel depending on workflow\n- Removes printing repo or actor",
          "timestamp": "2025-09-09T14:43:16Z",
          "tree_id": "c76d9a9dd73eb858c3fc795ad1a8737f3ab9ccab",
          "url": "https://github.com/lambdaclass/ethrex/commit/d8c0614ac60bb1ba696632966913e6d1bc26d841"
        },
        "date": 1757493277651,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0010714285714285715,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8b2f2f3dc10fb956959eb1acaef5e3621681d98b",
          "message": "feat(l1): add `--checkpoint` flag to `archive_sync` tool (#4231)\n\n**Motivation**\nCurrenlty, we have no way of resuming an archive sync if it crashes/ we\nneed to stop it. Our only option is to begin from the start, which can\nmake us lose precious time in the case of unexpected crashes during long\narchive syncs.\nThis PR proposes adding a `--checkpoint` flag which will periodically\nwrite the current archive sync's checkpoint data (current root, last\nhash, current file, etc) to a file. And which can later be used to\nresume archive sync from that same checkpoint\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: cdiielsi <49721261+cdiielsi@users.noreply.github.com>",
          "timestamp": "2025-09-09T15:30:59Z",
          "tree_id": "6b2ad54cb64d76476c98bcc001a262b52b2b78ba",
          "url": "https://github.com/lambdaclass/ethrex/commit/8b2f2f3dc10fb956959eb1acaef5e3621681d98b"
        },
        "date": 1757502540103,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0011170212765957447,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "leanrafa@gmail.com",
            "name": "Leandro Ferrigno",
            "username": "lferrigno"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "085f6831d9c74da1219f7cf72ff8ba192dc533c8",
          "message": "docs(l1,l2,levm): add contributing docs (#4387)\n\n**Motivation**\n\nImprove contributor onboarding and project maintainability by providing\nclear, up-to-date guidelines for contributing\n\n**Description**\n\nAdded a new file CONTRIBUTING.md with different sections\n\nUpdated main README to easly find contribution outlines",
          "timestamp": "2025-09-09T17:36:07Z",
          "tree_id": "4c7881aea5bf94ccecaa48ab4b2372c0836aff45",
          "url": "https://github.com/lambdaclass/ethrex/commit/085f6831d9c74da1219f7cf72ff8ba192dc533c8"
        },
        "date": 1757505900231,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0010714285714285715,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "a2e5835e2308051a8eccea44cabeb2f2ee1d8c08",
          "message": "feat(l2): bump risc0 to `3.0.3`",
          "timestamp": "2025-09-11T13:21:38Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4425/commits/a2e5835e2308051a8eccea44cabeb2f2ee1d8c08"
        },
        "date": 1757602073463,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.00033514634146341465,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "a2e5835e2308051a8eccea44cabeb2f2ee1d8c08",
          "message": "feat(l2): bump risc0 to `3.0.3`",
          "timestamp": "2025-09-11T13:21:38Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4425/commits/a2e5835e2308051a8eccea44cabeb2f2ee1d8c08"
        },
        "date": 1757603001052,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0002987173913043478,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "d6bafcc31c477952b193363ffbf708da9ef34886",
          "message": "feat(l2): bump risc0 to `3.0.3` and re enable main ci jobs",
          "timestamp": "2025-09-11T16:57:53Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4425/commits/d6bafcc31c477952b193363ffbf708da9ef34886"
        },
        "date": 1757621635742,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0014470805048609925,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "441268e318093df8cfc670b2841302ac8c6bd439",
          "message": "feat(l2): bump risc0 to `3.0.3` and re enable main ci jobs",
          "timestamp": "2025-09-11T19:50:18Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4425/commits/441268e318093df8cfc670b2841302ac8c6bd439"
        },
        "date": 1757627082423,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004880965676567657,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "6b5af6cc50837e9e811483e6195918c3c41caebf",
          "message": "feat: add job on every pr for zkvm executing",
          "timestamp": "2025-09-11T19:50:18Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4441/commits/6b5af6cc50837e9e811483e6195918c3c41caebf"
        },
        "date": 1757637132743,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015351179157151755,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "441268e318093df8cfc670b2841302ac8c6bd439",
          "message": "feat(l2): bump risc0 to `3.0.3` and re enable main ci jobs",
          "timestamp": "2025-09-11T19:50:18Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4425/commits/441268e318093df8cfc670b2841302ac8c6bd439"
        },
        "date": 1757684768806,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015431266694490818,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "631f4a97b099e23c0e537b967a812220c6f5be71",
          "message": "feat(replay): add job on every pr for zkvm executing",
          "timestamp": "2025-09-12T14:15:47Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4441/commits/631f4a97b099e23c0e537b967a812220c6f5be71"
        },
        "date": 1757711599626,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004868112574061883,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "631f4a97b099e23c0e537b967a812220c6f5be71",
          "message": "feat(replay): add job on every pr for zkvm executing",
          "timestamp": "2025-09-12T14:15:47Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4441/commits/631f4a97b099e23c0e537b967a812220c6f5be71"
        },
        "date": 1757716779675,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015319376424280092,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5860ab86506413cccd2232ba6e276aee91babd5b",
          "message": "feat(l2): bump risc0 to `3.0.3` and re enable main ci jobs (#4425)\n\n**Motivation**\n\nWe want to use the newer version of the RISC0 zkVM.\nAlso re enable the CI jobs that tests replay proving an executing.\n\n**Description**\n\n* Updated `risc0-zkvm` from version `2.3.1` to `3.0.3`.\n* Updated `risc0-zkp` from version `2.0.2` to `3.0.2`..\n  * This is the latest version for this crate, not `3.0.3` available\n* Updated `risc0-zkvm-platform` from version `2.0.3` to `2.2.1`.\n* Re-enabled the \"Test\" job in `pr-main_replay.yaml`.\n* Restored push and pull request triggers in `main_prover_l1.yaml`.\n* Updated block number and cache file.\n\nCloses #4411\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-09-12T13:57:48Z",
          "tree_id": "8a4f9a290a5e237307dc4016ad27a5c5fb5671cb",
          "url": "https://github.com/lambdaclass/ethrex/commit/5860ab86506413cccd2232ba6e276aee91babd5b"
        },
        "date": 1757729343922,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015386315022888058,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5860ab86506413cccd2232ba6e276aee91babd5b",
          "message": "feat(l2): bump risc0 to `3.0.3` and re enable main ci jobs (#4425)\n\n**Motivation**\n\nWe want to use the newer version of the RISC0 zkVM.\nAlso re enable the CI jobs that tests replay proving an executing.\n\n**Description**\n\n* Updated `risc0-zkvm` from version `2.3.1` to `3.0.3`.\n* Updated `risc0-zkp` from version `2.0.2` to `3.0.2`..\n  * This is the latest version for this crate, not `3.0.3` available\n* Updated `risc0-zkvm-platform` from version `2.0.3` to `2.2.1`.\n* Re-enabled the \"Test\" job in `pr-main_replay.yaml`.\n* Restored push and pull request triggers in `main_prover_l1.yaml`.\n* Updated block number and cache file.\n\nCloses #4411\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-09-12T13:57:48Z",
          "tree_id": "8a4f9a290a5e237307dc4016ad27a5c5fb5671cb",
          "url": "https://github.com/lambdaclass/ethrex/commit/5860ab86506413cccd2232ba6e276aee91babd5b"
        },
        "date": 1757733053284,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004829956237753103,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9b259772ef15bd189fd7a539751e241e75cb9417",
          "message": "fix(l1): fixed global state slot metric  (#4449)\n\n**Motivation**\n\nThe global state account healed metrics was displaying a number way\nlarger than expected.\n\n**Description**\n\n- Fixed bug where the global metrics counter was being added to itself\nmultiple times.",
          "timestamp": "2025-09-12T17:55:30Z",
          "tree_id": "95b7aa124fe28be9570c0043f170dc8ed01f13bc",
          "url": "https://github.com/lambdaclass/ethrex/commit/9b259772ef15bd189fd7a539751e241e75cb9417"
        },
        "date": 1757741437819,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0048906501322751325,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9b259772ef15bd189fd7a539751e241e75cb9417",
          "message": "fix(l1): fixed global state slot metric  (#4449)\n\n**Motivation**\n\nThe global state account healed metrics was displaying a number way\nlarger than expected.\n\n**Description**\n\n- Fixed bug where the global metrics counter was being added to itself\nmultiple times.",
          "timestamp": "2025-09-12T17:55:30Z",
          "tree_id": "95b7aa124fe28be9570c0043f170dc8ed01f13bc",
          "url": "https://github.com/lambdaclass/ethrex/commit/9b259772ef15bd189fd7a539751e241e75cb9417"
        },
        "date": 1757747885357,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015357555555555557,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44068466+SDartayet@users.noreply.github.com",
            "name": "SDartayet",
            "username": "SDartayet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "504dd26fcd5768efec955dce58125f3c1aaae4f6",
          "message": "feat(l1): block size limit (#4217)\n\n**Description**\n\nThis PR implements [EIP-7934](https://eips.ethereum.org/EIPS/eip-7934),\nwhich will be incorporated in Fusaka. Said EIP introduces a limit on the\nsize of the RLP encode of blocks. This PR adds the required check in\nblock validation.\n\nPartially resolves #4158, the block building side of the EIP will be a\nseparate PR.",
          "timestamp": "2025-09-12T18:58:39Z",
          "tree_id": "2454a1657bc1b9b6fdacb38beb2778368e20c823",
          "url": "https://github.com/lambdaclass/ethrex/commit/504dd26fcd5768efec955dce58125f3c1aaae4f6"
        },
        "date": 1757750100741,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004871319499341239,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44068466+SDartayet@users.noreply.github.com",
            "name": "SDartayet",
            "username": "SDartayet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "504dd26fcd5768efec955dce58125f3c1aaae4f6",
          "message": "feat(l1): block size limit (#4217)\n\n**Description**\n\nThis PR implements [EIP-7934](https://eips.ethereum.org/EIPS/eip-7934),\nwhich will be incorporated in Fusaka. Said EIP introduces a limit on the\nsize of the RLP encode of blocks. This PR adds the required check in\nblock validation.\n\nPartially resolves #4158, the block building side of the EIP will be a\nseparate PR.",
          "timestamp": "2025-09-12T18:58:39Z",
          "tree_id": "2454a1657bc1b9b6fdacb38beb2778368e20c823",
          "url": "https://github.com/lambdaclass/ethrex/commit/504dd26fcd5768efec955dce58125f3c1aaae4f6"
        },
        "date": 1757756530639,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001534480805146296,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7937b620d9102cf8554efaff682ea17efed17e39",
          "message": "ci(l2): optimize tdx job (#4451)\n\n**Motivation**\n\nThe docker image for the l2 ci was being built both for tdx and for the\nmain jobs also it makes more sense to have this job in `pr-main_l2.yaml`\nas it runs the integration test the same way the other jobs do. This\nremoves ~20 minutes from the tdx job\n\n- This pr\n[~40min](https://github.com/lambdaclass/ethrex/actions/runs/17683522286/job/50264069464)\n- Main\n[~60min](https://github.com/lambdaclass/ethrex/actions/runs/17681349803/job/50256046400)\n\n**Description**\n\n- Remove pr-main_l2_tdx.yaml file and move all the logic to\n`pr-main_l2.yaml`\n- remove the build l2 step and the build docker image step saving\n~20minutes of execution time",
          "timestamp": "2025-09-12T20:34:20Z",
          "tree_id": "2b55781d01890f519f4f659d315e8dcbb8190765",
          "url": "https://github.com/lambdaclass/ethrex/commit/7937b620d9102cf8554efaff682ea17efed17e39"
        },
        "date": 1757763009572,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001534480805146296,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7937b620d9102cf8554efaff682ea17efed17e39",
          "message": "ci(l2): optimize tdx job (#4451)\n\n**Motivation**\n\nThe docker image for the l2 ci was being built both for tdx and for the\nmain jobs also it makes more sense to have this job in `pr-main_l2.yaml`\nas it runs the integration test the same way the other jobs do. This\nremoves ~20 minutes from the tdx job\n\n- This pr\n[~40min](https://github.com/lambdaclass/ethrex/actions/runs/17683522286/job/50264069464)\n- Main\n[~60min](https://github.com/lambdaclass/ethrex/actions/runs/17681349803/job/50256046400)\n\n**Description**\n\n- Remove pr-main_l2_tdx.yaml file and move all the logic to\n`pr-main_l2.yaml`\n- remove the build l2 step and the build docker image step saving\n~20minutes of execution time",
          "timestamp": "2025-09-12T20:34:20Z",
          "tree_id": "2b55781d01890f519f4f659d315e8dcbb8190765",
          "url": "https://github.com/lambdaclass/ethrex/commit/7937b620d9102cf8554efaff682ea17efed17e39"
        },
        "date": 1757765238475,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004845781782437746,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e37894d174835c6f8b9001df45f0b394e921a5a3",
          "message": "refactor(replay): use `eth_getBlockByNumber` instead of `debug_getRawBlock` (#4454)\n\n**Motivation**\n\nThis pull request updates the block fetching logic in `fetcher.rs`.\nInstead of relying on the debug endpoint, we now use\n`eth_getBlockByNumber`, which is implemented across all nodes. This\nmakes the process more reliable and avoids depending on an endpoint that\nis not universally available.\n\n**Description**\n\n- Added a `hydrated` boolean parameter to\n`EthClient::get_block_by_number`, allowing callers to specify whether to\nretrieve full block data or just hashes. All call sites are updated to\nuse this new parameter.\n- Refactored `get_blockdata` in `cmd/ethrex_replay/src/fetcher.rs` to\nuse `get_blockByNumber` with `hydrated=true` instead of `get_rawBlock`,\nand updated logic to construct the full `Block` from the response.",
          "timestamp": "2025-09-12T21:08:27Z",
          "tree_id": "c6af94e44124e35588becf0f818574a672a4d81b",
          "url": "https://github.com/lambdaclass/ethrex/commit/e37894d174835c6f8b9001df45f0b394e921a5a3"
        },
        "date": 1757777631178,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015370324256911245,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e37894d174835c6f8b9001df45f0b394e921a5a3",
          "message": "refactor(replay): use `eth_getBlockByNumber` instead of `debug_getRawBlock` (#4454)\n\n**Motivation**\n\nThis pull request updates the block fetching logic in `fetcher.rs`.\nInstead of relying on the debug endpoint, we now use\n`eth_getBlockByNumber`, which is implemented across all nodes. This\nmakes the process more reliable and avoids depending on an endpoint that\nis not universally available.\n\n**Description**\n\n- Added a `hydrated` boolean parameter to\n`EthClient::get_block_by_number`, allowing callers to specify whether to\nretrieve full block data or just hashes. All call sites are updated to\nuse this new parameter.\n- Refactored `get_blockdata` in `cmd/ethrex_replay/src/fetcher.rs` to\nuse `get_blockByNumber` with `hydrated=true` instead of `get_rawBlock`,\nand updated logic to construct the full `Block` from the response.",
          "timestamp": "2025-09-12T21:08:27Z",
          "tree_id": "c6af94e44124e35588becf0f818574a672a4d81b",
          "url": "https://github.com/lambdaclass/ethrex/commit/e37894d174835c6f8b9001df45f0b394e921a5a3"
        },
        "date": 1757782838870,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004845781782437746,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "67b265e7d1a5140e3c0a2f36ba81743efba2072a",
          "message": "feat(l1): add docker compose with CL and EL (#4432)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nAdd a `docker-compose.yaml` file that deploys a Consensus client\n(lighthouse) and ethrex with just one command:\n```sh\ndocker compose up\n```\n`ETHREX_NETWORK` can be used to set the network, default is `mainnet`.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-12T21:49:11Z",
          "tree_id": "d55baf82ae869c76d342a0a60d13bf4758cdab31",
          "url": "https://github.com/lambdaclass/ethrex/commit/67b265e7d1a5140e3c0a2f36ba81743efba2072a"
        },
        "date": 1757789353409,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015328903399668325,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.bilbao@lambdaclass.com",
            "name": "Manuel Iñaki Bilbao",
            "username": "ManuelBilbao"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "67b265e7d1a5140e3c0a2f36ba81743efba2072a",
          "message": "feat(l1): add docker compose with CL and EL (#4432)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nAdd a `docker-compose.yaml` file that deploys a Consensus client\n(lighthouse) and ethrex with just one command:\n```sh\ndocker compose up\n```\n`ETHREX_NETWORK` can be used to set the network, default is `mainnet`.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-12T21:49:11Z",
          "tree_id": "d55baf82ae869c76d342a0a60d13bf4758cdab31",
          "url": "https://github.com/lambdaclass/ethrex/commit/67b265e7d1a5140e3c0a2f36ba81743efba2072a"
        },
        "date": 1757791632581,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004852141076115486,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8e7a734eb7b91feca9ded109ccf19f5f47f4ce99",
          "message": "docs(levm): fix minor comments in levm code (#4405)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\nFix comments that were merged in #4381 before they could be fixed there.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>",
          "timestamp": "2025-09-15T14:20:30Z",
          "tree_id": "2ff61d6b838a281829057aedeee22138a942ba80",
          "url": "https://github.com/lambdaclass/ethrex/commit/8e7a734eb7b91feca9ded109ccf19f5f47f4ce99"
        },
        "date": 1757962118836,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004801729220779221,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e8b776a84c2c0ef6414b48f6de19d5980cd1e53d",
          "message": "feat(l2): serialize RISC0's guest program input using `rkyv` (#4459)\n\n**Motivation**\n\nJSON deserializations are slow and take too many zkVM cycles.\n\n**Description**\n\nSerialize RISC0's guest program input with `rkyv`.\n\n**Results**\n\nzkVM cycles to read RISC0's guest program takes half the cycles now. \n\n*Before*\n\n> [!NOTE]\n> See the logs below, it takes 1.122.344.791 cycles to read the input\n\n```\n2025-09-13T00:52:28.376524Z  INFO ethrex_replay::fetcher: Retrieving execution data for block 23350480 (205 block behind latest)\n2025-09-13T00:52:28.381127Z  INFO ethrex_replay::fetcher: Getting block 23350480 data from cache\n2025-09-13T00:52:28.381827Z  INFO ethrex_replay::bench: Starting prover program\nstart reading input\nend reading input, cycles: 1122344791\nstart execution\nend execution, cycles: 1929020069\nstart committing public inputs\nend committing public inputs, cycles: 2648\ntotal cycles: 3051367508\n2025-09-13T00:52:58.019699Z  INFO ethrex_prover_lib::backend::risc0: Successfully generated session info in 29.62s\n2025-09-13T00:52:58.019749Z  INFO ethrex_replay::block_run_report: [mainnet] Block #23350480, Gas Used: 10932281, Tx Count: 114, execute_risc0 Result: Success, Time Taken: 29s 637ms | https://etherscan.io/block/23350480\n```\n\n*After*\n\n> [!NOTE]\n> See the logs below, it takes 623.283.163 cycles to read the input\n(almost half of the cycles)\n\n```\nadmin@ethrex-office-2:~/ethrex$ ./ethrex-replay-risc0 block --block 23350480 --execute --rpc-url http://157.180.1.98:8545\n2025-09-13T00:49:59.531233Z  INFO ethrex_replay::fetcher: Retrieving execution data for block 23350480 (192 block behind latest)\n2025-09-13T00:49:59.535781Z  INFO ethrex_replay::fetcher: Getting block 23350480 data from cache\n2025-09-13T00:49:59.536302Z  INFO ethrex_replay::bench: Starting prover program\nstart reading input\nend reading input, cycles: 623283163\nstart execution\nend execution, cycles: 1929032701\nstart committing public inputs\nend committing public inputs, cycles: 2645\ntotal cycles: 2552318509\n2025-09-13T00:50:28.021984Z  INFO ethrex_prover_lib::backend::risc0: Successfully generated session info in 28.48s\n2025-09-13T00:50:28.022693Z  INFO ethrex_replay::block_run_report: [mainnet] Block #23350480, Gas Used: 10932281, Tx Count: 114, execute_risc0 Result: Success, Time Taken: 28s 486ms | https://etherscan.io/block/23350480\n```",
          "timestamp": "2025-09-15T14:26:30Z",
          "tree_id": "e58a36c857c488b0a8dddb005458b0ba3930019a",
          "url": "https://github.com/lambdaclass/ethrex/commit/e8b776a84c2c0ef6414b48f6de19d5980cd1e53d"
        },
        "date": 1757978510917,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0016377991140642304,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "67517699+ilitteri@users.noreply.github.com",
            "name": "Ivan Litteri",
            "username": "ilitteri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e8b776a84c2c0ef6414b48f6de19d5980cd1e53d",
          "message": "feat(l2): serialize RISC0's guest program input using `rkyv` (#4459)\n\n**Motivation**\n\nJSON deserializations are slow and take too many zkVM cycles.\n\n**Description**\n\nSerialize RISC0's guest program input with `rkyv`.\n\n**Results**\n\nzkVM cycles to read RISC0's guest program takes half the cycles now. \n\n*Before*\n\n> [!NOTE]\n> See the logs below, it takes 1.122.344.791 cycles to read the input\n\n```\n2025-09-13T00:52:28.376524Z  INFO ethrex_replay::fetcher: Retrieving execution data for block 23350480 (205 block behind latest)\n2025-09-13T00:52:28.381127Z  INFO ethrex_replay::fetcher: Getting block 23350480 data from cache\n2025-09-13T00:52:28.381827Z  INFO ethrex_replay::bench: Starting prover program\nstart reading input\nend reading input, cycles: 1122344791\nstart execution\nend execution, cycles: 1929020069\nstart committing public inputs\nend committing public inputs, cycles: 2648\ntotal cycles: 3051367508\n2025-09-13T00:52:58.019699Z  INFO ethrex_prover_lib::backend::risc0: Successfully generated session info in 29.62s\n2025-09-13T00:52:58.019749Z  INFO ethrex_replay::block_run_report: [mainnet] Block #23350480, Gas Used: 10932281, Tx Count: 114, execute_risc0 Result: Success, Time Taken: 29s 637ms | https://etherscan.io/block/23350480\n```\n\n*After*\n\n> [!NOTE]\n> See the logs below, it takes 623.283.163 cycles to read the input\n(almost half of the cycles)\n\n```\nadmin@ethrex-office-2:~/ethrex$ ./ethrex-replay-risc0 block --block 23350480 --execute --rpc-url http://157.180.1.98:8545\n2025-09-13T00:49:59.531233Z  INFO ethrex_replay::fetcher: Retrieving execution data for block 23350480 (192 block behind latest)\n2025-09-13T00:49:59.535781Z  INFO ethrex_replay::fetcher: Getting block 23350480 data from cache\n2025-09-13T00:49:59.536302Z  INFO ethrex_replay::bench: Starting prover program\nstart reading input\nend reading input, cycles: 623283163\nstart execution\nend execution, cycles: 1929032701\nstart committing public inputs\nend committing public inputs, cycles: 2645\ntotal cycles: 2552318509\n2025-09-13T00:50:28.021984Z  INFO ethrex_prover_lib::backend::risc0: Successfully generated session info in 28.48s\n2025-09-13T00:50:28.022693Z  INFO ethrex_replay::block_run_report: [mainnet] Block #23350480, Gas Used: 10932281, Tx Count: 114, execute_risc0 Result: Success, Time Taken: 28s 486ms | https://etherscan.io/block/23350480\n```",
          "timestamp": "2025-09-15T14:26:30Z",
          "tree_id": "e58a36c857c488b0a8dddb005458b0ba3930019a",
          "url": "https://github.com/lambdaclass/ethrex/commit/e8b776a84c2c0ef6414b48f6de19d5980cd1e53d"
        },
        "date": 1757980777760,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004826803524804178,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "0daff881589e819cc2c7ec673dafad8e5ae3d3f1",
          "message": "feat(l2): aligned mode support for multiprover",
          "timestamp": "2025-09-15T21:20:40Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3429/commits/0daff881589e819cc2c7ec673dafad8e5ae3d3f1"
        },
        "date": 1757986119948,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015123319563293007,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "a76c1d72a7ad68398bc2617a39f33061fe7fc852",
          "message": "refactor(replay): standardize replay cache",
          "timestamp": "2025-09-15T19:20:33Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4485/commits/a76c1d72a7ad68398bc2617a39f33061fe7fc852"
        },
        "date": 1757991277192,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015358984117470782,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "a76c1d72a7ad68398bc2617a39f33061fe7fc852",
          "message": "refactor(replay): standardize replay cache",
          "timestamp": "2025-09-15T19:20:33Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4485/commits/a76c1d72a7ad68398bc2617a39f33061fe7fc852"
        },
        "date": 1757999686907,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00443364446366782,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitriymozir@gmail.com",
            "name": "MozirDmitriy",
            "username": "MozirDmitriy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "26329f474c3444ceea35f014aef9da9a1c7d294d",
          "message": "fix(l1): add RLP_INVALID_VALUE exception support (#4369)\n\nAdd missing TransactionException.RLP_INVALID_VALUE case to\ndeserialize_transaction_expected_exception function.\n\nThe RlpInvalidValue enum variant was already defined but not handled in\nthe deserializer, causing these exceptions to fall through to the _other\ncase.\n\nreopen #3941\n\n---------\n\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-09-15T14:50:32Z",
          "tree_id": "c4ec764a8a4b4e4acae3185f5f2d7fbf5dbe03d0",
          "url": "https://github.com/lambdaclass/ethrex/commit/26329f474c3444ceea35f014aef9da9a1c7d294d"
        },
        "date": 1758001914646,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004858517082785808,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "0daff881589e819cc2c7ec673dafad8e5ae3d3f1",
          "message": "feat(l2): aligned mode support for multiprover",
          "timestamp": "2025-09-15T21:20:40Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3429/commits/0daff881589e819cc2c7ec673dafad8e5ae3d3f1"
        },
        "date": 1758003792378,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004460655352480418,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitriymozir@gmail.com",
            "name": "MozirDmitriy",
            "username": "MozirDmitriy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "26329f474c3444ceea35f014aef9da9a1c7d294d",
          "message": "fix(l1): add RLP_INVALID_VALUE exception support (#4369)\n\nAdd missing TransactionException.RLP_INVALID_VALUE case to\ndeserialize_transaction_expected_exception function.\n\nThe RlpInvalidValue enum variant was already defined but not handled in\nthe deserializer, causing these exceptions to fall through to the _other\ncase.\n\nreopen #3941\n\n---------\n\nCo-authored-by: Martin Paulucci <martin.c.paulucci@gmail.com>",
          "timestamp": "2025-09-15T14:50:32Z",
          "tree_id": "c4ec764a8a4b4e4acae3185f5f2d7fbf5dbe03d0",
          "url": "https://github.com/lambdaclass/ethrex/commit/26329f474c3444ceea35f014aef9da9a1c7d294d"
        },
        "date": 1758009895829,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0016483867588051716,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0b546aa8d85a55f43c2640d0d67113895ca2e01e",
          "message": "fix(l2): race condition tracking privileged tx count (#4394)\n\n**Motivation**\n\nWe have a race condition between the `block_producer` and the\n`l1_committer` when updating the `precommit_privileged` table. The race\ncondition manifests as the following error:\n```\n2025-09-08T18:17:00.931203Z ERROR ethrex_l2::sequencer::l1_committer: L1 Committer Error: Committer failed to send transaction: Failed to send commitment for batch 3. first_block: 14 last_block: 38: Committer failed because of an EthClient error: eth_estimateGas request error: execution reverted: unknown error\n```\n\nThis is what happens:\n\nThe `block_producer` tracks the number of privileged transactions in the\n`rollup_store` to ensure it does not exceed the maximum cap of 300,\nwhich is imposed by gas limitations. Once the cap is reached, it stops\nadding privileged transactions until the `l1_committer` resets the\ncounter after creating a new batch.\n\nBut given the `block_producer` and `l1_committer`run concurrently, the\nfollowing scenario may occur:\n1. The `l1_committer` starts producing a new batch containing the last\navailable block.\n2. The `block_producer` creates a new block with 150 privileged\ntransactions and sets the counter to 150.\n3. The `l1_committer` finishes the batch and resets the counter to 0.\n4. The `block_producer` continues adding privileged transactions until\nthe cap is reached again.\n5. As a result, the `l1_committer` builds a batch containing 450\nprivileged transactions instead of 300.\n\n**Description**\n- Removes the shared table in the `rollup_store`.\n- The `block_producer` only enforces a `PRIVILEGED_TX_BUDGET` per block.\nIt no longer has a notion of batches.\n- The `l1_committer` ensures that the `PRIVILEGED_TX_BUDGET` is not\nexceeded per batch when adding blocks.\n- The `block_producer` tracks the `last_privileged_nonce` to ensure all\nprivileged transactions are added sequentially across blocks. IMO, this\nis a better solution since it allows us to enforce ordering across\ndifferent batches. However, it is not the ultimate solution, because we\nstill mark the very first processed privileged transaction as the first\none, even though it may not actually be in order (this issue already\nexists and should be addressed in a separate PR). #4398 was created to\nsolve this.\n\n\nCloses #4359",
          "timestamp": "2025-09-15T15:53:27Z",
          "tree_id": "e4eab10c95e5a83fff9ce8846b508566078cbe47",
          "url": "https://github.com/lambdaclass/ethrex/commit/0b546aa8d85a55f43c2640d0d67113895ca2e01e"
        },
        "date": 1758015349363,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004871319499341239,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0b546aa8d85a55f43c2640d0d67113895ca2e01e",
          "message": "fix(l2): race condition tracking privileged tx count (#4394)\n\n**Motivation**\n\nWe have a race condition between the `block_producer` and the\n`l1_committer` when updating the `precommit_privileged` table. The race\ncondition manifests as the following error:\n```\n2025-09-08T18:17:00.931203Z ERROR ethrex_l2::sequencer::l1_committer: L1 Committer Error: Committer failed to send transaction: Failed to send commitment for batch 3. first_block: 14 last_block: 38: Committer failed because of an EthClient error: eth_estimateGas request error: execution reverted: unknown error\n```\n\nThis is what happens:\n\nThe `block_producer` tracks the number of privileged transactions in the\n`rollup_store` to ensure it does not exceed the maximum cap of 300,\nwhich is imposed by gas limitations. Once the cap is reached, it stops\nadding privileged transactions until the `l1_committer` resets the\ncounter after creating a new batch.\n\nBut given the `block_producer` and `l1_committer`run concurrently, the\nfollowing scenario may occur:\n1. The `l1_committer` starts producing a new batch containing the last\navailable block.\n2. The `block_producer` creates a new block with 150 privileged\ntransactions and sets the counter to 150.\n3. The `l1_committer` finishes the batch and resets the counter to 0.\n4. The `block_producer` continues adding privileged transactions until\nthe cap is reached again.\n5. As a result, the `l1_committer` builds a batch containing 450\nprivileged transactions instead of 300.\n\n**Description**\n- Removes the shared table in the `rollup_store`.\n- The `block_producer` only enforces a `PRIVILEGED_TX_BUDGET` per block.\nIt no longer has a notion of batches.\n- The `l1_committer` ensures that the `PRIVILEGED_TX_BUDGET` is not\nexceeded per batch when adding blocks.\n- The `block_producer` tracks the `last_privileged_nonce` to ensure all\nprivileged transactions are added sequentially across blocks. IMO, this\nis a better solution since it allows us to enforce ordering across\ndifferent batches. However, it is not the ultimate solution, because we\nstill mark the very first processed privileged transaction as the first\none, even though it may not actually be in order (this issue already\nexists and should be addressed in a separate PR). #4398 was created to\nsolve this.\n\n\nCloses #4359",
          "timestamp": "2025-09-15T15:53:27Z",
          "tree_id": "e4eab10c95e5a83fff9ce8846b508566078cbe47",
          "url": "https://github.com/lambdaclass/ethrex/commit/0b546aa8d85a55f43c2640d0d67113895ca2e01e"
        },
        "date": 1758024691520,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0016436236941542565,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce96b49c69ca1c306ad169a9e479ae093588ddf8",
          "message": "perf(levm): fix block hash caching (#4479)\n\n**Motivation**\n\nThe original code made it so that the cache mechanism never worked\nproperly.\n\n**Description**\n\nFix the block hash caching mechanism so that the result is actually\ncached.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>",
          "timestamp": "2025-09-15T16:49:20Z",
          "tree_id": "e3c24ae00e58cdb5fb515b3f6520b07ddb260cfb",
          "url": "https://github.com/lambdaclass/ethrex/commit/ce96b49c69ca1c306ad169a9e479ae093588ddf8"
        },
        "date": 1758027053624,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004758470398970399,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce96b49c69ca1c306ad169a9e479ae093588ddf8",
          "message": "perf(levm): fix block hash caching (#4479)\n\n**Motivation**\n\nThe original code made it so that the cache mechanism never worked\nproperly.\n\n**Description**\n\nFix the block hash caching mechanism so that the result is actually\ncached.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Tomás Grüner <47506558+MegaRedHand@users.noreply.github.com>",
          "timestamp": "2025-09-15T16:49:20Z",
          "tree_id": "e3c24ae00e58cdb5fb515b3f6520b07ddb260cfb",
          "url": "https://github.com/lambdaclass/ethrex/commit/ce96b49c69ca1c306ad169a9e479ae093588ddf8"
        },
        "date": 1758033157021,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0016469182628062362,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "41700f501891124a15a9a613f42f0ced34f7ba7f",
          "message": "feat(l2): aligned mode support for multiprover",
          "timestamp": "2025-09-16T13:30:55Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3429/commits/41700f501891124a15a9a613f42f0ced34f7ba7f"
        },
        "date": 1758035070357,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004445180398959237,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "36f50db47400d4adc78aa65252c0d44fe9a450ae",
          "message": "fix(l1): enable SOCKS5(h) proxy support in Reqwest so RPC calls work behind SOCKS proxies (#4481)\n\n**Description**\n\nSome environments (e.g. SSH dynamic port forwarding via ssh -D) expose\nan outbound SOCKS5 proxy. Our binaries were built with `reqwest = {\nfeatures = [\"json\"] }`, which does not include SOCKS support. As a\nresult, when users set ALL_PROXY=socks5h://…, Reqwest read the env var\nbut could not speak SOCKS, leading to connection failures and misleading\nerrors (e.g. “incompatible SOCKS version”, local DNS failures).",
          "timestamp": "2025-09-15T17:58:57Z",
          "tree_id": "a9aa6bc7fc14db194072bd182828e2c816d5e58e",
          "url": "https://github.com/lambdaclass/ethrex/commit/36f50db47400d4adc78aa65252c0d44fe9a450ae"
        },
        "date": 1758044368021,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0016436236941542565,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "36f50db47400d4adc78aa65252c0d44fe9a450ae",
          "message": "fix(l1): enable SOCKS5(h) proxy support in Reqwest so RPC calls work behind SOCKS proxies (#4481)\n\n**Description**\n\nSome environments (e.g. SSH dynamic port forwarding via ssh -D) expose\nan outbound SOCKS5 proxy. Our binaries were built with `reqwest = {\nfeatures = [\"json\"] }`, which does not include SOCKS support. As a\nresult, when users set ALL_PROXY=socks5h://…, Reqwest read the env var\nbut could not speak SOCKS, leading to connection failures and misleading\nerrors (e.g. “incompatible SOCKS version”, local DNS failures).",
          "timestamp": "2025-09-15T17:58:57Z",
          "tree_id": "a9aa6bc7fc14db194072bd182828e2c816d5e58e",
          "url": "https://github.com/lambdaclass/ethrex/commit/36f50db47400d4adc78aa65252c0d44fe9a450ae"
        },
        "date": 1758046712852,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004833113071895425,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "54ad169a23152592a0c9b3797f1732e208317f3a",
          "message": "fix(l1): handle syncing in case of reorgs and handle the case of reorg with invalid side chain (#4028)\n\n**Motivation**\n\nRestoring `request_block_headers` previous to this\n[pr](https://github.com/lambdaclass/ethrex/pull/4213) since it brought\nissues in case of re org.\nFixing the Invalid Missing Ancestor Syncing ReOrG hive tests which are\nfailing.\n\n**Description**\n\nUp to now, when executing blocks during syncing, if there's an error\nwhile running a batch we set only the failing block with having an\ninvalid ancestor. This pr sets all the downloaded descendants of a\nfailing block with having an invalid ancestor during syncing.\n\nAlso, when syncing, it drops the sync head header from the requested\nheaders when downloading block bodies if the sync head is stored as a\npending block, since we already have it and there's no need to ask for\nit.\n\nOn another note, it was necessary to restore for full syncing the\n`request_block_headers` that we had previous to merging this\n[pr](https://github.com/lambdaclass/ethrex/pull/4213), since there was\nan issue with the way the block headers were requested. The core problem\nwith the update was that we requested the all headers left from the sync\nhead on by number, and since the tests come with a re-org scenario and\nthe sync head number was the same as the current head number, no headers\nwere requested, so the fork choice update never stopped syncing.\n\nCloses #3105",
          "timestamp": "2025-09-15T19:03:28Z",
          "tree_id": "fe5b1ea84784e2df1d607a7505fe0df15929c2c8",
          "url": "https://github.com/lambdaclass/ethrex/commit/54ad169a23152592a0c9b3797f1732e208317f3a"
        },
        "date": 1758048826336,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004852141076115486,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49622509+jrchatruc@users.noreply.github.com",
            "name": "Javier Rodríguez Chatruc",
            "username": "jrchatruc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "fa328e240666b96d82119a4e83d8a9427937d9e1",
          "message": "fix(l1): use `try_lock` instead of `lock` in state healing (#4488)\n\n**Motivation**\n\nThis is most likely the source of a deadlock we've been seeing during\nstate healing. Regardless, it's what we should be doing anyways (and\nwhat's currently done during storage healing). All this locking should\ngo away once we've properly migrated this part of the codebase to use\n`spawned`\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-15T20:06:49Z",
          "tree_id": "1bf7d9f65ff0bb5bd7aee369e08b64d06bfc0239",
          "url": "https://github.com/lambdaclass/ethrex/commit/fa328e240666b96d82119a4e83d8a9427937d9e1"
        },
        "date": 1758053835012,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004823654924983692,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "671cc6e5eb2c9b73a328a78bf0efa5ac56160fa5",
          "message": "ci(l2): install latest rex version (#4498)\n\n**Motivation**\n\nThe CI is still broken because we have an old Rex version pinned.\n\n**Description**\n\nInstall the latest Rex version.\n\nCloses None",
          "timestamp": "2025-09-16T13:13:29Z",
          "tree_id": "5c4c214c6e7b12bcf1d34ae15b84cb192eb05b05",
          "url": "https://github.com/lambdaclass/ethrex/commit/671cc6e5eb2c9b73a328a78bf0efa5ac56160fa5"
        },
        "date": 1758066199921,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015272029201430274,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "671cc6e5eb2c9b73a328a78bf0efa5ac56160fa5",
          "message": "ci(l2): install latest rex version (#4498)\n\n**Motivation**\n\nThe CI is still broken because we have an old Rex version pinned.\n\n**Description**\n\nInstall the latest Rex version.\n\nCloses None",
          "timestamp": "2025-09-16T13:13:29Z",
          "tree_id": "5c4c214c6e7b12bcf1d34ae15b84cb192eb05b05",
          "url": "https://github.com/lambdaclass/ethrex/commit/671cc6e5eb2c9b73a328a78bf0efa5ac56160fa5"
        },
        "date": 1758067995885,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004406958727429063,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e1b03c8359c7cc7e8ef9831cb01073989ea6ccca",
          "message": "feat(l2): configure block max gas limit (#4211)\n\n> [!CAUTION]\n> Merge after #4224\n\n**Motivation**\n\nWe need a way to limit the gas used per block to avoid overloading our\nprover.\n\n**Description**\n\n- Adds a new CLI parameter: `max_gas_limit`.\n- Updates the `payload_builder` to check this parameter as well.\n\n**How to test**\n\nSet a low `max_gas_limit`, start the L2, and watch in the monitor how\nthe initial deposits are distributed across different blocks, ensuring\nthat the gas used per block is lower than the configured amount.\n\n\nCloses #4207 \nCloses #2526",
          "timestamp": "2025-09-16T14:55:31Z",
          "tree_id": "32b9b3a5c7c33ed48d748cb34926836101a7b3dc",
          "url": "https://github.com/lambdaclass/ethrex/commit/e1b03c8359c7cc7e8ef9831cb01073989ea6ccca"
        },
        "date": 1758076397106,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004464540940766551,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e1b03c8359c7cc7e8ef9831cb01073989ea6ccca",
          "message": "feat(l2): configure block max gas limit (#4211)\n\n> [!CAUTION]\n> Merge after #4224\n\n**Motivation**\n\nWe need a way to limit the gas used per block to avoid overloading our\nprover.\n\n**Description**\n\n- Adds a new CLI parameter: `max_gas_limit`.\n- Updates the `payload_builder` to check this parameter as well.\n\n**How to test**\n\nSet a low `max_gas_limit`, start the L2, and watch in the monitor how\nthe initial deposits are distributed across different blocks, ensuring\nthat the gas used per block is lower than the configured amount.\n\n\nCloses #4207 \nCloses #2526",
          "timestamp": "2025-09-16T14:55:31Z",
          "tree_id": "32b9b3a5c7c33ed48d748cb34926836101a7b3dc",
          "url": "https://github.com/lambdaclass/ethrex/commit/e1b03c8359c7cc7e8ef9831cb01073989ea6ccca"
        },
        "date": 1758080342640,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001534978436657682,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9e23e515e11487ffdefc3a4d2dc56ae508d4ac04",
          "message": "fix(l2): use empty SP1 elf when linting (#4486)\n\n**Motivation**\n\n`make lint` fails with the following error:\n\n```\n    Checking ethrex-prover v0.1.0 (/Users/mega/execution/ethrex/crates/l2/prover)\nerror: couldn't read `crates/l2/prover/src/backend/../guest_program/src/sp1/out/riscv32im-succinct-zkvm-elf`: No such file or directory (os error 2)\n  --> crates/l2/prover/src/backend/sp1.rs:17:5\n   |\n17 |     include_bytes!(\"../guest_program/src/sp1/out/riscv32im-succinct-zkvm-elf\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `ethrex-prover` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nmake: *** [lint] Error 101\n```\n\n**Description**\n\nThis PR overrides the included bytes with an empty slice when it's being\ncompiled by clippy.\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>",
          "timestamp": "2025-09-16T15:00:51Z",
          "tree_id": "736291aabe74cfedfcd24ba3b47ede231b8892c4",
          "url": "https://github.com/lambdaclass/ethrex/commit/9e23e515e11487ffdefc3a4d2dc56ae508d4ac04"
        },
        "date": 1758089542321,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004464540940766551,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9e23e515e11487ffdefc3a4d2dc56ae508d4ac04",
          "message": "fix(l2): use empty SP1 elf when linting (#4486)\n\n**Motivation**\n\n`make lint` fails with the following error:\n\n```\n    Checking ethrex-prover v0.1.0 (/Users/mega/execution/ethrex/crates/l2/prover)\nerror: couldn't read `crates/l2/prover/src/backend/../guest_program/src/sp1/out/riscv32im-succinct-zkvm-elf`: No such file or directory (os error 2)\n  --> crates/l2/prover/src/backend/sp1.rs:17:5\n   |\n17 |     include_bytes!(\"../guest_program/src/sp1/out/riscv32im-succinct-zkvm-elf\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `ethrex-prover` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nmake: *** [lint] Error 101\n```\n\n**Description**\n\nThis PR overrides the included bytes with an empty slice when it's being\ncompiled by clippy.\n\n---------\n\nCo-authored-by: Tomás Paradelo <112426153+tomip01@users.noreply.github.com>",
          "timestamp": "2025-09-16T15:00:51Z",
          "tree_id": "736291aabe74cfedfcd24ba3b47ede231b8892c4",
          "url": "https://github.com/lambdaclass/ethrex/commit/9e23e515e11487ffdefc3a4d2dc56ae508d4ac04"
        },
        "date": 1758097231534,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015340595630050882,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estebandh@gmail.com",
            "name": "ElFantasma",
            "username": "ElFantasma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4c8ac740b5d78a57ba9addc49861596c72df7719",
          "message": "refactor(l1): moved peer scores into kademlia's PeerData (#4444)\n\n**Motivation**\nPeer Scores were stored separately from the rest of peer data and that\nled to probable inconsistencies and errors\n\n**Description**\nThis PR combines PeerScores inside PeerData, and removes the requirement\nto update the peer_score table periodically, as now it is the same as\nthe peer_table\n\nCloses #4352\n\n---------\n\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>",
          "timestamp": "2025-09-16T15:45:09Z",
          "tree_id": "81027ec1b3853170981aaae0148dbc972b92aa93",
          "url": "https://github.com/lambdaclass/ethrex/commit/4c8ac740b5d78a57ba9addc49861596c72df7719"
        },
        "date": 1758102652818,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004429812445980986,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "estebandh@gmail.com",
            "name": "ElFantasma",
            "username": "ElFantasma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4c8ac740b5d78a57ba9addc49861596c72df7719",
          "message": "refactor(l1): moved peer scores into kademlia's PeerData (#4444)\n\n**Motivation**\nPeer Scores were stored separately from the rest of peer data and that\nled to probable inconsistencies and errors\n\n**Description**\nThis PR combines PeerScores inside PeerData, and removes the requirement\nto update the peer_score table periodically, as now it is the same as\nthe peer_table\n\nCloses #4352\n\n---------\n\nCo-authored-by: Javier Rodríguez Chatruc <49622509+jrchatruc@users.noreply.github.com>",
          "timestamp": "2025-09-16T15:45:09Z",
          "tree_id": "81027ec1b3853170981aaae0148dbc972b92aa93",
          "url": "https://github.com/lambdaclass/ethrex/commit/4c8ac740b5d78a57ba9addc49861596c72df7719"
        },
        "date": 1758110434184,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015308521505376345,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "435dd7fe41a6b2b39422b1da363309383948766c",
          "message": "fix(replay):  `ethrex_replay` add fallback when executionWitness is not implemented (#4039)\n\n**Motivation**\n\nWe want to re incorporate the `ProverDB` struct that uses the endpoint\n`eth_getProof` for common usability.\n\n**Description**\n\n- Bring the deleted `ProverDB` and `RpcDB` structs.\n- Create new enum `PreExecutionState` for handling both\n`ExecutionWitnessResult` and `ProverDB`\n- Added an `--l2` flag to both the `execute` and `prove` subcommands in\nthe CLI, enabling users to specify L2 block processing.\n- Modify the block data fetcher to use a fallback mechanism: if the\n`debug_executionWitness` RPC endpoint is missing, it falls back to using\n`eth_getProof` and builds a database from RPC data, supporting both L1\nand L2 VM types.\n\n**Follow up**\n\n- Investigate if the changes made\n[here](https://github.com/lambdaclass/ethrex/pull/2952) are still\nrequired\n\n- We want to configure the RPC_LIMIT constant #4504\n\n**Known Issues**\n\nSome of the executions when using a Nethermind endpoint end up in\nerrors. Issue [here](http://github.com/lambdaclass/ethrex/issues/4109)\n\n**How to test**\n\nRunning with `RPC_URL` being and enpoint that does not implement\n`debug_executionWitness`:\n\n```\ncargo run --release --features sp1 -- execute block <N> --rpc-url <RPC_URL> --network <NETWORK>\n```\n\nCloses #3989\n\n---------\n\nCo-authored-by: ilitteri <ilitteri@fi.uba.ar>\nCo-authored-by: Jeremías Salomón <48994069+JereSalo@users.noreply.github.com>\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>\nCo-authored-by: JereSalo <jeresalo17@gmail.com>\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>\nCo-authored-by: LeanSerra <46695152+LeanSerra@users.noreply.github.com>",
          "timestamp": "2025-09-16T15:56:18Z",
          "tree_id": "11a88f93959ca1e28d121048df6349c20d3df7bb",
          "url": "https://github.com/lambdaclass/ethrex/commit/435dd7fe41a6b2b39422b1da363309383948766c"
        },
        "date": 1758121102662,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015308521505376345,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7a7525b1566bca5ab2108e9670cd29e2ef7ec069",
          "message": "chore(l1): add specific logs to ipv6 bug (#4511)\n\n**Motivation**\nThere's currently an error `MessageSendFailure(Os { code: 97, kind:\nUncategorized, message: \"Address family not supported by protocol\" })`\nthat happens once in a while.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nAdds logs to help debug if the error occurs\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->",
          "timestamp": "2025-09-16T20:13:15Z",
          "tree_id": "64413edd0ad6a11d991f0e4ff225b9513aef03e2",
          "url": "https://github.com/lambdaclass/ethrex/commit/7a7525b1566bca5ab2108e9670cd29e2ef7ec069"
        },
        "date": 1758142271498,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004460655352480418,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e0c018e8b5c7c400ed14950f3ad3b9e487a15701",
          "message": "feat(l1)!: change `--datadir` to be relative to current working directory (#4521)\n\nMay supersede https://github.com/lambdaclass/ethrex/pull/4514\n\n**Motivation**\n\nCurrently, the datadir is specified relative to the application\ndirectory (i.e. `/Users/<user>/Library/Application Support/` in macOS).\nThis behavior is confusing, since usually path args are relative to the\ncurrent working directory. Also, it seems to be prone to weird edge\ncases like #4514.\n\n**Description**\n\nThis PR changes this behavior by removing the path-prefixing behavior.\nIt also fixes the issue found in #4514, where any spaces in the path are\nreplaced by slashes (even if the path is the default path).",
          "timestamp": "2025-09-17T13:26:41Z",
          "tree_id": "798ff3d42cd3ef475c35c914e2debb96431de82e",
          "url": "https://github.com/lambdaclass/ethrex/commit/e0c018e8b5c7c400ed14950f3ad3b9e487a15701"
        },
        "date": 1758154767165,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001528113595706619,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e0c018e8b5c7c400ed14950f3ad3b9e487a15701",
          "message": "feat(l1)!: change `--datadir` to be relative to current working directory (#4521)\n\nMay supersede https://github.com/lambdaclass/ethrex/pull/4514\n\n**Motivation**\n\nCurrently, the datadir is specified relative to the application\ndirectory (i.e. `/Users/<user>/Library/Application Support/` in macOS).\nThis behavior is confusing, since usually path args are relative to the\ncurrent working directory. Also, it seems to be prone to weird edge\ncases like #4514.\n\n**Description**\n\nThis PR changes this behavior by removing the path-prefixing behavior.\nIt also fixes the issue found in #4514, where any spaces in the path are\nreplaced by slashes (even if the path is the default path).",
          "timestamp": "2025-09-17T13:26:41Z",
          "tree_id": "798ff3d42cd3ef475c35c914e2debb96431de82e",
          "url": "https://github.com/lambdaclass/ethrex/commit/e0c018e8b5c7c400ed14950f3ad3b9e487a15701"
        },
        "date": 1758156545147,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004418356034482759,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ffd0cae8f20b267c08b718fb7c9731a36058bd30",
          "message": "chore(l1): add branch and commit to script runner (#4517)\n\n**Motivation**\nWe want to add the branch and the commit to the script\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nAdds the branch and commit\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-09-17T15:45:50Z",
          "tree_id": "fc2599c571653fe080577f7c0093ac8cf5bae862",
          "url": "https://github.com/lambdaclass/ethrex/commit/ffd0cae8f20b267c08b718fb7c9731a36058bd30"
        },
        "date": 1758161150773,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015493630592503024,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ffd0cae8f20b267c08b718fb7c9731a36058bd30",
          "message": "chore(l1): add branch and commit to script runner (#4517)\n\n**Motivation**\nWe want to add the branch and the commit to the script\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nAdds the branch and commit\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Ivan Litteri <67517699+ilitteri@users.noreply.github.com>",
          "timestamp": "2025-09-17T15:45:50Z",
          "tree_id": "fc2599c571653fe080577f7c0093ac8cf5bae862",
          "url": "https://github.com/lambdaclass/ethrex/commit/ffd0cae8f20b267c08b718fb7c9731a36058bd30"
        },
        "date": 1758163014938,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0043582423469387755,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9925c371e90b0f7436c73ee208d9875aab66f4cc",
          "message": "ci(l2): pin rex version in TDX workflow (#4541)\n\n**Motivation**\n\nThe latest Rex commit broke the CI. We should pin a commit to prevent\nfurther breaking changes.\n\n**Description**\n\n- Pins a Rex commit in the TDX workflow.\n- Improves some logs in the integration tests.\n\nCloses None",
          "timestamp": "2025-09-17T21:50:51Z",
          "tree_id": "c12c38ffbf0d7e98cd3ed51e886da52b2790638e",
          "url": "https://github.com/lambdaclass/ethrex/commit/9925c371e90b0f7436c73ee208d9875aab66f4cc"
        },
        "date": 1758178719976,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015540609460278957,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9925c371e90b0f7436c73ee208d9875aab66f4cc",
          "message": "ci(l2): pin rex version in TDX workflow (#4541)\n\n**Motivation**\n\nThe latest Rex commit broke the CI. We should pin a commit to prevent\nfurther breaking changes.\n\n**Description**\n\n- Pins a Rex commit in the TDX workflow.\n- Improves some logs in the integration tests.\n\nCloses None",
          "timestamp": "2025-09-17T21:50:51Z",
          "tree_id": "c12c38ffbf0d7e98cd3ed51e886da52b2790638e",
          "url": "https://github.com/lambdaclass/ethrex/commit/9925c371e90b0f7436c73ee208d9875aab66f4cc"
        },
        "date": 1758180485552,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004418356034482759,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "efa0fe651ed40668ed607026e69c8e0ab868ba89",
          "message": "ci(l2): improve sp1 workflow logs",
          "timestamp": "2025-09-18T19:37:12Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4547/commits/efa0fe651ed40668ed607026e69c8e0ab868ba89"
        },
        "date": 1758230093750,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015276581222056632,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "efa0fe651ed40668ed607026e69c8e0ab868ba89",
          "message": "ci(l2): improve sp1 workflow logs",
          "timestamp": "2025-09-18T19:37:12Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4547/commits/efa0fe651ed40668ed607026e69c8e0ab868ba89"
        },
        "date": 1758231932402,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004410751290877797,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b2f5ffef89e08ac81fd91bc1f689438d24dfd7f2",
          "message": "fix(l2): properly update message hashes in committer (#4547)\n\n**Motivation**\n\nWe are prematurely updating the\n[acc_messages](https://github.com/lambdaclass/ethrex/blob/101a11dce6e86332de330699a54dc549df03f651/crates/l2/sequencer/l1_committer.rs#L316)\nvariable in our committer, even though the block may later be discarded\ndue to `stateDiff` or privileged transaction limits.\nThe SP1 workflow is getting stuck in batches 1 or 2 for this reason. We\nhad not seen the error before because we weren’t spamming enough\ntransactions to hit the limit.\nI also noticed that, since we are spamming 3000 privileged transactions\nin our integration tests, 1000 retries to obtain a privileged receipt\nfalls short.\n\nSuccessful run\n[here](https://github.com/lambdaclass/ethrex/actions/runs/17838300648/job/50721020331).\n\n**Description**\n\n- Displays the sequencer logs in the SP1 workflow.  \n- Increases the number of retries in `wait_for_transaction_receipt` to\n10000.\n- Correctly calculates the message hashes of the batch.  \n- Re-enables the prover workflows on pushes to `main`.\n\nCloses #4550",
          "timestamp": "2025-09-18T23:09:12Z",
          "tree_id": "6c7141c1162aa5ab4a66734581288d86d3979b43",
          "url": "https://github.com/lambdaclass/ethrex/commit/b2f5ffef89e08ac81fd91bc1f689438d24dfd7f2"
        },
        "date": 1758248608497,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015322251121076234,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "72628438+avilagaston9@users.noreply.github.com",
            "name": "Avila Gastón",
            "username": "avilagaston9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b2f5ffef89e08ac81fd91bc1f689438d24dfd7f2",
          "message": "fix(l2): properly update message hashes in committer (#4547)\n\n**Motivation**\n\nWe are prematurely updating the\n[acc_messages](https://github.com/lambdaclass/ethrex/blob/101a11dce6e86332de330699a54dc549df03f651/crates/l2/sequencer/l1_committer.rs#L316)\nvariable in our committer, even though the block may later be discarded\ndue to `stateDiff` or privileged transaction limits.\nThe SP1 workflow is getting stuck in batches 1 or 2 for this reason. We\nhad not seen the error before because we weren’t spamming enough\ntransactions to hit the limit.\nI also noticed that, since we are spamming 3000 privileged transactions\nin our integration tests, 1000 retries to obtain a privileged receipt\nfalls short.\n\nSuccessful run\n[here](https://github.com/lambdaclass/ethrex/actions/runs/17838300648/job/50721020331).\n\n**Description**\n\n- Displays the sequencer logs in the SP1 workflow.  \n- Increases the number of retries in `wait_for_transaction_receipt` to\n10000.\n- Correctly calculates the message hashes of the batch.  \n- Re-enables the prover workflows on pushes to `main`.\n\nCloses #4550",
          "timestamp": "2025-09-18T23:09:12Z",
          "tree_id": "6c7141c1162aa5ab4a66734581288d86d3979b43",
          "url": "https://github.com/lambdaclass/ethrex/commit/b2f5ffef89e08ac81fd91bc1f689438d24dfd7f2"
        },
        "date": 1758250820209,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004376851409052093,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "damian.ramirez@lambdaclass.com",
            "name": "Damian Ramirez",
            "username": "damiramirez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "468ec140e2182e98b8215c1c6ac36d2d0043471c",
          "message": "perf(l1): save code hash during account insertion and state healing (#4487)\n\n**Motivation**\n\nImprove bytecode download time saving code hash in files\n\n**Description**\n\nWhen we are doing snapsync, we see that we waste too much time\ndownloading bytecode since we are traversing the trie looking for the\ncode hash. Before this step, we are inserting the account state to the\ntrie so we could take advantage of this and start saving the code hash\nin a buffer. When the buffer exceeds the chunk size, flush it to a file.\n\nWe have some constant values ​​that we can adjust and see the numbers.\n- `BYTECODE_CHUNK_SIZE`\n- `CODE_HASH_WRITE_BUFFER_SIZE`\n\nHoodi\n- `main` - `bytecodes progress: downloaded: 719368, elapsed: 00h 03m 28s\n00ms`\n- `pr` - `bytecodes progress: downloaded: 710598, elapsed: 00h 00m 32s\n00ms`\n\nSepolia\n- `main` - `bytecodes progress: downloaded: 11090586, elapsed: 01h 43m\n58s 06ms`\n- `pr` - `bytecodes progress: downloaded: 7979995, elapsed: 00h 07m 59s\n00ms`\n\nMainnet\n- `main` - `bytecodes progress: downloaded: 4930763, elapsed: 03h 15m\n14s 11ms`\n- `pr` - `bytecodes progress: downloaded: 1813931, elapsed: 00h 02m 50s\n00ms`\n---\n\nCloses #4474\n\n---------\n\nCo-authored-by: fedacking <francisco.gauna@lambdaclass.com>\nCo-authored-by: Javier Chatruc <jrchatruc@gmail.com>",
          "timestamp": "2025-09-18T23:23:51Z",
          "tree_id": "c67c757cffcb5468b9801224bd25d0d9e1eae15c",
          "url": "https://github.com/lambdaclass/ethrex/commit/468ec140e2182e98b8215c1c6ac36d2d0043471c"
        },
        "date": 1758259865317,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015326833133971292,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "damian.ramirez@lambdaclass.com",
            "name": "Damian Ramirez",
            "username": "damiramirez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "468ec140e2182e98b8215c1c6ac36d2d0043471c",
          "message": "perf(l1): save code hash during account insertion and state healing (#4487)\n\n**Motivation**\n\nImprove bytecode download time saving code hash in files\n\n**Description**\n\nWhen we are doing snapsync, we see that we waste too much time\ndownloading bytecode since we are traversing the trie looking for the\ncode hash. Before this step, we are inserting the account state to the\ntrie so we could take advantage of this and start saving the code hash\nin a buffer. When the buffer exceeds the chunk size, flush it to a file.\n\nWe have some constant values ​​that we can adjust and see the numbers.\n- `BYTECODE_CHUNK_SIZE`\n- `CODE_HASH_WRITE_BUFFER_SIZE`\n\nHoodi\n- `main` - `bytecodes progress: downloaded: 719368, elapsed: 00h 03m 28s\n00ms`\n- `pr` - `bytecodes progress: downloaded: 710598, elapsed: 00h 00m 32s\n00ms`\n\nSepolia\n- `main` - `bytecodes progress: downloaded: 11090586, elapsed: 01h 43m\n58s 06ms`\n- `pr` - `bytecodes progress: downloaded: 7979995, elapsed: 00h 07m 59s\n00ms`\n\nMainnet\n- `main` - `bytecodes progress: downloaded: 4930763, elapsed: 03h 15m\n14s 11ms`\n- `pr` - `bytecodes progress: downloaded: 1813931, elapsed: 00h 02m 50s\n00ms`\n---\n\nCloses #4474\n\n---------\n\nCo-authored-by: fedacking <francisco.gauna@lambdaclass.com>\nCo-authored-by: Javier Chatruc <jrchatruc@gmail.com>",
          "timestamp": "2025-09-18T23:23:51Z",
          "tree_id": "c67c757cffcb5468b9801224bd25d0d9e1eae15c",
          "url": "https://github.com/lambdaclass/ethrex/commit/468ec140e2182e98b8215c1c6ac36d2d0043471c"
        },
        "date": 1758261750603,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004460655352480418,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "52646071+Peponks9@users.noreply.github.com",
            "name": "josé v",
            "username": "Peponks9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5a83b191fe7b05b22d23aa172c5f3d757ec8a2fd",
          "message": "chore(l1): remove `#[allow(dead_code)]` attributes throughout codebase (#4530)\n\n- Removed `#[allow(dead_code)]` from various functions and structs where\nno longer needed.\n- Added explanatory comment for the remaining `#[allow(dead_code)]` on\nFeesDetails struct in tests.rs.\n\n\nResolves #3968",
          "timestamp": "2025-09-19T12:56:00Z",
          "tree_id": "0297954ac4f3d2b415cd21e273f1ea215afaeddf",
          "url": "https://github.com/lambdaclass/ethrex/commit/5a83b191fe7b05b22d23aa172c5f3d757ec8a2fd"
        },
        "date": 1758306842186,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001529938208955224,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "52646071+Peponks9@users.noreply.github.com",
            "name": "josé v",
            "username": "Peponks9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5a83b191fe7b05b22d23aa172c5f3d757ec8a2fd",
          "message": "chore(l1): remove `#[allow(dead_code)]` attributes throughout codebase (#4530)\n\n- Removed `#[allow(dead_code)]` from various functions and structs where\nno longer needed.\n- Added explanatory comment for the remaining `#[allow(dead_code)]` on\nFeesDetails struct in tests.rs.\n\n\nResolves #3968",
          "timestamp": "2025-09-19T12:56:00Z",
          "tree_id": "0297954ac4f3d2b415cd21e273f1ea215afaeddf",
          "url": "https://github.com/lambdaclass/ethrex/commit/5a83b191fe7b05b22d23aa172c5f3d757ec8a2fd"
        },
        "date": 1758313320076,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004437483116883117,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "44e5b59b3f16b2561e754c41137071612eb64795",
          "message": "feat(l1): make `jemalloc` the default global allocator (#4575)\n\n**Motivation**\n\n`jemalloc` reduce RAM usage in ~80% during snapsync\n\n**Description**\n\nThis PR adds the `jemalloc` feature flag to the default cmd features.",
          "timestamp": "2025-09-19T13:12:36Z",
          "tree_id": "b2326a4a5e0fc384e3453acabfe39434791379e3",
          "url": "https://github.com/lambdaclass/ethrex/commit/44e5b59b3f16b2561e754c41137071612eb64795"
        },
        "date": 1758321651796,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015340595630050882,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "44e5b59b3f16b2561e754c41137071612eb64795",
          "message": "feat(l1): make `jemalloc` the default global allocator (#4575)\n\n**Motivation**\n\n`jemalloc` reduce RAM usage in ~80% during snapsync\n\n**Description**\n\nThis PR adds the `jemalloc` feature flag to the default cmd features.",
          "timestamp": "2025-09-19T13:12:36Z",
          "tree_id": "b2326a4a5e0fc384e3453acabfe39434791379e3",
          "url": "https://github.com/lambdaclass/ethrex/commit/44e5b59b3f16b2561e754c41137071612eb64795"
        },
        "date": 1758323541167,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004468433304272014,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "884247e87cd4127ad1a6b444b99de67494481da0",
          "message": "fix(l1): fetch transactions from mempool on `GetTransactionByHash` & `GetRawTransaction` rpc endpoints (#4533)\n\n**Motivation**\n`GetTransactionByHash` & `GetRawTransaction` should fetch pooled\ntransactions from the mempool if they are not yet finalized.\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* When handling `GetTransactionByHash` & `GetRawTransaction` we should\nfetch transactions from the mempool if they are not in the store\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None, needed for #3844",
          "timestamp": "2025-09-19T14:11:17Z",
          "tree_id": "e37c06fa5537a93d83cb8ffaf6a62a05d2103d52",
          "url": "https://github.com/lambdaclass/ethrex/commit/884247e87cd4127ad1a6b444b99de67494481da0"
        },
        "date": 1758325417634,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00445677652173913,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "884247e87cd4127ad1a6b444b99de67494481da0",
          "message": "fix(l1): fetch transactions from mempool on `GetTransactionByHash` & `GetRawTransaction` rpc endpoints (#4533)\n\n**Motivation**\n`GetTransactionByHash` & `GetRawTransaction` should fetch pooled\ntransactions from the mempool if they are not yet finalized.\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* When handling `GetTransactionByHash` & `GetRawTransaction` we should\nfetch transactions from the mempool if they are not in the store\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None, needed for #3844",
          "timestamp": "2025-09-19T14:11:17Z",
          "tree_id": "e37c06fa5537a93d83cb8ffaf6a62a05d2103d52",
          "url": "https://github.com/lambdaclass/ethrex/commit/884247e87cd4127ad1a6b444b99de67494481da0"
        },
        "date": 1758333781988,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015276581222056632,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44068466+SDartayet@users.noreply.github.com",
            "name": "SDartayet",
            "username": "SDartayet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "1d9fdf41e0e549db862112eb8e618eff85220f2a",
          "message": "feat(l1): update EEST to version 5.0 (#4484)\n\n**Motivation**\n\nKeeping up to date with the latest EF tests for Osaka.\n\n**Description**\n\nThis PR updates the fixture URL for the blockchain and state test\nrunners. It also adds some necessary code for some of the tests to pass,\nand skips those which are poorly contructed.",
          "timestamp": "2025-09-19T14:29:52Z",
          "tree_id": "aab6f5dfb139ef6fafc0db203c3571b2efbf863f",
          "url": "https://github.com/lambdaclass/ethrex/commit/1d9fdf41e0e549db862112eb8e618eff85220f2a"
        },
        "date": 1758342329951,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015290253579952268,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44068466+SDartayet@users.noreply.github.com",
            "name": "SDartayet",
            "username": "SDartayet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "1d9fdf41e0e549db862112eb8e618eff85220f2a",
          "message": "feat(l1): update EEST to version 5.0 (#4484)\n\n**Motivation**\n\nKeeping up to date with the latest EF tests for Osaka.\n\n**Description**\n\nThis PR updates the fixture URL for the blockchain and state test\nrunners. It also adds some necessary code for some of the tests to pass,\nand skips those which are poorly contructed.",
          "timestamp": "2025-09-19T14:29:52Z",
          "tree_id": "aab6f5dfb139ef6fafc0db203c3571b2efbf863f",
          "url": "https://github.com/lambdaclass/ethrex/commit/1d9fdf41e0e549db862112eb8e618eff85220f2a"
        },
        "date": 1758344295487,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00445677652173913,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "09c4597cf3a5d3f9bf12577d1fe74d22204c647b",
          "message": "ci(l1): update daily Hive job to use execution-spec-tests@v5.0.0 (#4380)\n\n**Motivation**\nAdds Fusaka tests\n\n**Description**\n- Updates to\nhttps://github.com/ethereum/execution-spec-tests/releases/tag/v5.0.0\n- Include Osaka tests\n- Unrelated: remove risc0 and SP1 dependency",
          "timestamp": "2025-09-19T16:03:26Z",
          "tree_id": "05dce60f626a2a9f9798a2f1ef47ca3d6460f578",
          "url": "https://github.com/lambdaclass/ethrex/commit/09c4597cf3a5d3f9bf12577d1fe74d22204c647b"
        },
        "date": 1758348226738,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015276581222056632,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "martin.c.paulucci@gmail.com",
            "name": "Martin Paulucci",
            "username": "mpaulucci"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "09c4597cf3a5d3f9bf12577d1fe74d22204c647b",
          "message": "ci(l1): update daily Hive job to use execution-spec-tests@v5.0.0 (#4380)\n\n**Motivation**\nAdds Fusaka tests\n\n**Description**\n- Updates to\nhttps://github.com/ethereum/execution-spec-tests/releases/tag/v5.0.0\n- Include Osaka tests\n- Unrelated: remove risc0 and SP1 dependency",
          "timestamp": "2025-09-19T16:03:26Z",
          "tree_id": "05dce60f626a2a9f9798a2f1ef47ca3d6460f578",
          "url": "https://github.com/lambdaclass/ethrex/commit/09c4597cf3a5d3f9bf12577d1fe74d22204c647b"
        },
        "date": 1758350134511,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004418356034482759,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "56888fb00a7392b0afe6a52274c8b85c451eeb96",
          "message": "feat(l2): implement rip-7740 in l2 genesis (#4567)\n\n**Motivation**\n\nImplement RIP-7740 improving compatibility with existing projects that\nrely on these factories\n\n**Description**\n\n- Hardcode the bytecode for the \"Deterministic Deployment Proxy\"\n- For create2deployer we clone the repo and compile the contract\n- Finally we add to the genesis accounts:\n- 0x4e59b44847b379578588920cA78FbF26c0B4956C ->\nDETERMINISTIC_DEPLOYMENT_CODE\n- 0x914d7Fec6aaC8cd542e72Bca78B30650d45643d7 ->\nDETERMINISTIC_DEPLOYMENT_CODE\n   - 0x13b0D85CcB8bf860b6b79AF3029fCA081AE9beF2 -> CREATE2DEPLOYER_CODE\n- Because of possible licensing issues with `createx` it was not added\nin this PR, I created issue #4571 to track it\n\ncloses #4552",
          "timestamp": "2025-09-19T17:49:01Z",
          "tree_id": "386e7a493404d07350656f08417e17b2b1793137",
          "url": "https://github.com/lambdaclass/ethrex/commit/56888fb00a7392b0afe6a52274c8b85c451eeb96"
        },
        "date": 1758354058921,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015340595630050882,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "46695152+LeanSerra@users.noreply.github.com",
            "name": "LeanSerra",
            "username": "LeanSerra"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "56888fb00a7392b0afe6a52274c8b85c451eeb96",
          "message": "feat(l2): implement rip-7740 in l2 genesis (#4567)\n\n**Motivation**\n\nImplement RIP-7740 improving compatibility with existing projects that\nrely on these factories\n\n**Description**\n\n- Hardcode the bytecode for the \"Deterministic Deployment Proxy\"\n- For create2deployer we clone the repo and compile the contract\n- Finally we add to the genesis accounts:\n- 0x4e59b44847b379578588920cA78FbF26c0B4956C ->\nDETERMINISTIC_DEPLOYMENT_CODE\n- 0x914d7Fec6aaC8cd542e72Bca78B30650d45643d7 ->\nDETERMINISTIC_DEPLOYMENT_CODE\n   - 0x13b0D85CcB8bf860b6b79AF3029fCA081AE9beF2 -> CREATE2DEPLOYER_CODE\n- Because of possible licensing issues with `createx` it was not added\nin this PR, I created issue #4571 to track it\n\ncloses #4552",
          "timestamp": "2025-09-19T17:49:01Z",
          "tree_id": "386e7a493404d07350656f08417e17b2b1793137",
          "url": "https://github.com/lambdaclass/ethrex/commit/56888fb00a7392b0afe6a52274c8b85c451eeb96"
        },
        "date": 1758355958006,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004418356034482759,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "38e0ffc4487548a7b89de02b8b2b13c791a84682",
          "message": "refactor(l1): use `Path` instead of `String` for `--datadir` (#4543)\n\n**Motivation**\n\nWe are currently using `String` when dealing with file paths. This\npushes error-handling later into the node's lifecycle, which could delay\nsome errors.\n\n**Description**\n\nThis PR changes the CLI flag `--datadir` to receive a `PathBuf`, and\nalso changes all uses of the flag to receive a `&Path` or similar type.",
          "timestamp": "2025-09-19T19:01:16Z",
          "tree_id": "6272d7a8c23a1c2e94bfc90322a5e634d70b1577",
          "url": "https://github.com/lambdaclass/ethrex/commit/38e0ffc4487548a7b89de02b8b2b13c791a84682"
        },
        "date": 1758359893710,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001533141788812444,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "38e0ffc4487548a7b89de02b8b2b13c791a84682",
          "message": "refactor(l1): use `Path` instead of `String` for `--datadir` (#4543)\n\n**Motivation**\n\nWe are currently using `String` when dealing with file paths. This\npushes error-handling later into the node's lifecycle, which could delay\nsome errors.\n\n**Description**\n\nThis PR changes the CLI flag `--datadir` to receive a `PathBuf`, and\nalso changes all uses of the flag to receive a `&Path` or similar type.",
          "timestamp": "2025-09-19T19:01:16Z",
          "tree_id": "6272d7a8c23a1c2e94bfc90322a5e634d70b1577",
          "url": "https://github.com/lambdaclass/ethrex/commit/38e0ffc4487548a7b89de02b8b2b13c791a84682"
        },
        "date": 1758361793934,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004406958727429063,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "72810ebf749e799514963dbf393a1d2927bb30d9",
          "message": "feat(replay): support public L2 networks blocks/batches replay",
          "timestamp": "2025-09-19T19:25:59Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4548/commits/72810ebf749e799514963dbf393a1d2927bb30d9"
        },
        "date": 1758547770969,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00449280306122449,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "72810ebf749e799514963dbf393a1d2927bb30d9",
          "message": "feat(replay): support public L2 networks blocks/batches replay",
          "timestamp": "2025-09-19T19:25:59Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4548/commits/72810ebf749e799514963dbf393a1d2927bb30d9"
        },
        "date": 1758558015881,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001579815931108719,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "676689750a877811611f5cf826e0efc7dfb4a3a3",
          "message": "chore(l1): improve engine API logs (#4578)\n\n**Motivation**\n\n`engine_newPayload` logs don't include the block number, which is an\nimportant part of a block's context.\n\n**Description**\n\nThis PR changes `engine_newPayload`-related logs to include both the\nhash and number, as log attributes instead of being embedded, which is\nmore idiomatic.",
          "timestamp": "2025-09-22T14:51:29Z",
          "tree_id": "5989edc6408188938b2f7527fc39bf66cbf24516",
          "url": "https://github.com/lambdaclass/ethrex/commit/676689750a877811611f5cf826e0efc7dfb4a3a3"
        },
        "date": 1758563007940,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015308521505376345,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "676689750a877811611f5cf826e0efc7dfb4a3a3",
          "message": "chore(l1): improve engine API logs (#4578)\n\n**Motivation**\n\n`engine_newPayload` logs don't include the block number, which is an\nimportant part of a block's context.\n\n**Description**\n\nThis PR changes `engine_newPayload`-related logs to include both the\nhash and number, as log attributes instead of being embedded, which is\nmore idiomatic.",
          "timestamp": "2025-09-22T14:51:29Z",
          "tree_id": "5989edc6408188938b2f7527fc39bf66cbf24516",
          "url": "https://github.com/lambdaclass/ethrex/commit/676689750a877811611f5cf826e0efc7dfb4a3a3"
        },
        "date": 1758575914570,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004484070866141733,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "12492fed29e9dd257c17c9b8810849055af3ae84",
          "message": "feat(l2): aligned mode support for multiprover",
          "timestamp": "2025-09-22T16:54:52Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3429/commits/12492fed29e9dd257c17c9b8810849055af3ae84"
        },
        "date": 1758594171872,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015503003629764066,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "12492fed29e9dd257c17c9b8810849055af3ae84",
          "message": "feat(l2): aligned mode support for multiprover",
          "timestamp": "2025-09-22T16:54:52Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3429/commits/12492fed29e9dd257c17c9b8810849055af3ae84"
        },
        "date": 1758596334942,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004120010450160772,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ab855bc63c3043254474c6cb5d97fb4c6edbe435",
          "message": "fix(l1): wrong home path in sync tool makefile (#4593)\n\nThe Makefile was creating a '~' directory by trying to use the shell\nidiom for HOME. Replace it by the proper environent variable.",
          "timestamp": "2025-09-22T14:54:29Z",
          "tree_id": "e1a04b61d9f2734805f575935fe076a0dfb2bc62",
          "url": "https://github.com/lambdaclass/ethrex/commit/ab855bc63c3043254474c6cb5d97fb4c6edbe435"
        },
        "date": 1758600222798,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001531767184698147,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mrugiero@gmail.com",
            "name": "Mario Rugiero",
            "username": "Oppen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ab855bc63c3043254474c6cb5d97fb4c6edbe435",
          "message": "fix(l1): wrong home path in sync tool makefile (#4593)\n\nThe Makefile was creating a '~' directory by trying to use the shell\nidiom for HOME. Replace it by the proper environent variable.",
          "timestamp": "2025-09-22T14:54:29Z",
          "tree_id": "e1a04b61d9f2734805f575935fe076a0dfb2bc62",
          "url": "https://github.com/lambdaclass/ethrex/commit/ab855bc63c3043254474c6cb5d97fb4c6edbe435"
        },
        "date": 1758602119945,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004437483116883117,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7b992b826b88272de4c72c3def5531e35e5ad7b6",
          "message": "ci(l1): remove stale comment (#4597)\n\nThis comment is stale. We are still using our fork because we need some\nfixes that it introduces related to pre-merge data included in some\ntests.",
          "timestamp": "2025-09-22T14:59:13Z",
          "tree_id": "39ff296d76118079e77c69660038cee64f92d637",
          "url": "https://github.com/lambdaclass/ethrex/commit/7b992b826b88272de4c72c3def5531e35e5ad7b6"
        },
        "date": 1758606020132,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001533600538599641,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7b992b826b88272de4c72c3def5531e35e5ad7b6",
          "message": "ci(l1): remove stale comment (#4597)\n\nThis comment is stale. We are still using our fork because we need some\nfixes that it introduces related to pre-merge data included in some\ntests.",
          "timestamp": "2025-09-22T14:59:13Z",
          "tree_id": "39ff296d76118079e77c69660038cee64f92d637",
          "url": "https://github.com/lambdaclass/ethrex/commit/7b992b826b88272de4c72c3def5531e35e5ad7b6"
        },
        "date": 1758607914304,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0044259870466321245,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "51405295da402be18ddf73c1292646cd47aac1bc",
          "message": "chore(l1): increased MISSING_SLOTS_PERCENTAGE to avoid reorgs (#4601)\n\n**Motivation**\n\nCurrently, when testing snapsync, we aren't prepared to handle a reorg.\nTo try to avoid snasyncing to blocks that can be reorged, we lowered the\namount of blocks we advanced in `update_pivot`.\n\n**Description**\n\n- Lowered `MISSING_SLOTS_PERCENTAGE` to 0.8 from 0.9\n- Added comment explaining `MISSING_SLOTS_PERCENTAGE`",
          "timestamp": "2025-09-22T16:23:41Z",
          "tree_id": "af4336c5efcde1ba44ea23ff4991427d797c123f",
          "url": "https://github.com/lambdaclass/ethrex/commit/51405295da402be18ddf73c1292646cd47aac1bc"
        },
        "date": 1758620279179,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004476238427947598,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "51405295da402be18ddf73c1292646cd47aac1bc",
          "message": "chore(l1): increased MISSING_SLOTS_PERCENTAGE to avoid reorgs (#4601)\n\n**Motivation**\n\nCurrently, when testing snapsync, we aren't prepared to handle a reorg.\nTo try to avoid snasyncing to blocks that can be reorged, we lowered the\namount of blocks we advanced in `update_pivot`.\n\n**Description**\n\n- Lowered `MISSING_SLOTS_PERCENTAGE` to 0.8 from 0.9\n- Added comment explaining `MISSING_SLOTS_PERCENTAGE`",
          "timestamp": "2025-09-22T16:23:41Z",
          "tree_id": "af4336c5efcde1ba44ea23ff4991427d797c123f",
          "url": "https://github.com/lambdaclass/ethrex/commit/51405295da402be18ddf73c1292646cd47aac1bc"
        },
        "date": 1758624252825,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015249309729247248,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "241f79d9e993a221c5a9a9ab48c28d9c17c90835",
          "message": "perf(levm): refactor `bls12_g1add` to use lambdaworks (#4500)\n\n**Motivation**\n\nBLS12 computation is slow.\n\n**Description**\n\nReplace the BLS12 library with `lambdaworks`.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-22T16:29:52Z",
          "tree_id": "afd67720fc9ba20dbe8902806fa2a36a8aa725b4",
          "url": "https://github.com/lambdaclass/ethrex/commit/241f79d9e993a221c5a9a9ab48c28d9c17c90835"
        },
        "date": 1758628168171,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015172566607460035,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "241f79d9e993a221c5a9a9ab48c28d9c17c90835",
          "message": "perf(levm): refactor `bls12_g1add` to use lambdaworks (#4500)\n\n**Motivation**\n\nBLS12 computation is slow.\n\n**Description**\n\nReplace the BLS12 library with `lambdaworks`.\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-22T16:29:52Z",
          "tree_id": "afd67720fc9ba20dbe8902806fa2a36a8aa725b4",
          "url": "https://github.com/lambdaclass/ethrex/commit/241f79d9e993a221c5a9a9ab48c28d9c17c90835"
        },
        "date": 1758630056863,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004422168248490078,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "5f35198eb560f5e0ecc3456b78bd2a0d398c9eb8",
          "message": "feat(replay): support public L2 networks blocks/batches replay",
          "timestamp": "2025-09-23T14:43:36Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4548/commits/5f35198eb560f5e0ecc3456b78bd2a0d398c9eb8"
        },
        "date": 1758644617723,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015918101952277657,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3c9bb4cf648872fd131f85f1b79cfba44e1b029d",
          "message": "chore(l1): prune mempool (#4588)\n\n**Motivation**\nMempool grows indefinitely\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nNow the mempool has a maximum size, and after it is reached, the oldest\ntransaction is removed.\nFor this a vector with the hashes is added, which acts as a queue when\nremoving the oldest, but also allows removing any tx, since there are\nother mechanisms for removing txs from the mempool.\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses https://github.com/lambdaclass/ethrex/issues/4238\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-22T21:11:32Z",
          "tree_id": "a3b380ade1307fd137d47fb3d27e14ee0bd3437d",
          "url": "https://github.com/lambdaclass/ethrex/commit/3c9bb4cf648872fd131f85f1b79cfba44e1b029d"
        },
        "date": 1758650240201,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0044259870466321245,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "39842759+gianbelinche@users.noreply.github.com",
            "name": "Gianbelinche",
            "username": "gianbelinche"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3c9bb4cf648872fd131f85f1b79cfba44e1b029d",
          "message": "chore(l1): prune mempool (#4588)\n\n**Motivation**\nMempool grows indefinitely\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\nNow the mempool has a maximum size, and after it is reached, the oldest\ntransaction is removed.\nFor this a vector with the hashes is added, which acts as a queue when\nremoving the oldest, but also allows removing any tx, since there are\nother mechanisms for removing txs from the mempool.\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses https://github.com/lambdaclass/ethrex/issues/4238\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-22T21:11:32Z",
          "tree_id": "a3b380ade1307fd137d47fb3d27e14ee0bd3437d",
          "url": "https://github.com/lambdaclass/ethrex/commit/3c9bb4cf648872fd131f85f1b79cfba44e1b029d"
        },
        "date": 1758655448998,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001539127027027027,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "569783bea128302611d20b80980e768fbe25c44f",
          "message": "fix(l1): `RpcTransaction` representation for pending transactions (#4583)\n\n**Motivation**\nPR #4533 Enabled mempool transactions to be fetched by rpc endpoints\n`GetTransactionByHash` and `GetRawTransaction`, but it used default\nvalues instead of null values in the representation for the block hash,\nblock number, and transaction index fields. This doesn't match the spec\n(geth) and caused problems when running hive tests.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Make `block_hash` field of `RpcTransaction` optional\n* Use null values for block hash, number and tx index when building\n`RpcTransaction`s from pending transactions\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None, but is needed for #3844\n\nSpecial thanks to @cdiielsi for pointing this out!",
          "timestamp": "2025-09-23T08:11:06Z",
          "tree_id": "9f8a2c3a448ce2c5a19bb46cd86cde330695ee93",
          "url": "https://github.com/lambdaclass/ethrex/commit/569783bea128302611d20b80980e768fbe25c44f"
        },
        "date": 1758659400116,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001531309530923215,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "99273364+fmoletta@users.noreply.github.com",
            "name": "fmoletta",
            "username": "fmoletta"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "569783bea128302611d20b80980e768fbe25c44f",
          "message": "fix(l1): `RpcTransaction` representation for pending transactions (#4583)\n\n**Motivation**\nPR #4533 Enabled mempool transactions to be fetched by rpc endpoints\n`GetTransactionByHash` and `GetRawTransaction`, but it used default\nvalues instead of null values in the representation for the block hash,\nblock number, and transaction index fields. This doesn't match the spec\n(geth) and caused problems when running hive tests.\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n* Make `block_hash` field of `RpcTransaction` optional\n* Use null values for block hash, number and tx index when building\n`RpcTransaction`s from pending transactions\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses None, but is needed for #3844\n\nSpecial thanks to @cdiielsi for pointing this out!",
          "timestamp": "2025-09-23T08:11:06Z",
          "tree_id": "9f8a2c3a448ce2c5a19bb46cd86cde330695ee93",
          "url": "https://github.com/lambdaclass/ethrex/commit/569783bea128302611d20b80980e768fbe25c44f"
        },
        "date": 1758682958785,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0044259870466321245,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "5cd190c25737edd779c2d2f2928d3187cb7c0226",
          "message": "feat(l2): aligned mode support for multiprover",
          "timestamp": "2025-09-23T20:33:13Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3429/commits/5cd190c25737edd779c2d2f2928d3187cb7c0226"
        },
        "date": 1758686945749,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015405148782687106,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "5f35198eb560f5e0ecc3456b78bd2a0d398c9eb8",
          "message": "feat(replay): support public L2 networks blocks/batches replay",
          "timestamp": "2025-09-23T14:43:36Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4548/commits/5f35198eb560f5e0ecc3456b78bd2a0d398c9eb8"
        },
        "date": 1758698735547,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004581630593132154,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "5cd190c25737edd779c2d2f2928d3187cb7c0226",
          "message": "feat(l2): aligned mode support for multiprover",
          "timestamp": "2025-09-23T20:33:13Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3429/commits/5cd190c25737edd779c2d2f2928d3187cb7c0226"
        },
        "date": 1758700632298,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004464540940766551,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5dbdb33e57ad44f9ea012145fefb1330658824c3",
          "message": "feat(replay): replay use add block instead of stateless execution (#4396)\n\n**Motivation**\n\n- Use ethrex replay with `add_block` so we can measure the exact same\nthing that we measure in normal runs.\n\n**Description**\n\nIf we want a samply of `add_block` we can do this:\n`cargo build --profile release-with-debug -p ethrex-replay`\n`samply record target/release-with-debug/ethrex-replay block --rpc-url\n'http://65.109.97.102:8545' --execute --no-zkvm`\n\nIf searching for `add_block` in samply we will see something like this:\n<img width=\"1869\" height=\"936\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/dd128dc2-422c-4c04-bf9c-8eded8838621\"\n/>\n\n\nWe had to add feature flag replay so that this functionality works with\nreth nodes. Otherwise it only works with ethrex nodes that behave the\nsame as us and therefore require the exact same trie nodes and codes.",
          "timestamp": "2025-09-23T13:21:47Z",
          "tree_id": "988e5abc48da66cad1fd6d1068471feacfc212c0",
          "url": "https://github.com/lambdaclass/ethrex/commit/5dbdb33e57ad44f9ea012145fefb1330658824c3"
        },
        "date": 1758702519127,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004472332460732985,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5dbdb33e57ad44f9ea012145fefb1330658824c3",
          "message": "feat(replay): replay use add block instead of stateless execution (#4396)\n\n**Motivation**\n\n- Use ethrex replay with `add_block` so we can measure the exact same\nthing that we measure in normal runs.\n\n**Description**\n\nIf we want a samply of `add_block` we can do this:\n`cargo build --profile release-with-debug -p ethrex-replay`\n`samply record target/release-with-debug/ethrex-replay block --rpc-url\n'http://65.109.97.102:8545' --execute --no-zkvm`\n\nIf searching for `add_block` in samply we will see something like this:\n<img width=\"1869\" height=\"936\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/dd128dc2-422c-4c04-bf9c-8eded8838621\"\n/>\n\n\nWe had to add feature flag replay so that this functionality works with\nreth nodes. Otherwise it only works with ethrex nodes that behave the\nsame as us and therefore require the exact same trie nodes and codes.",
          "timestamp": "2025-09-23T13:21:47Z",
          "tree_id": "988e5abc48da66cad1fd6d1068471feacfc212c0",
          "url": "https://github.com/lambdaclass/ethrex/commit/5dbdb33e57ad44f9ea012145fefb1330658824c3"
        },
        "date": 1758706515441,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001529938208955224,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a8a1a5e569514eccd8b381398358c9c8c18a447c",
          "message": "perf(levm): refactor `bls12_g2add` to use lambdaworks (#4538)\n\n**Motivation**\n\nBLS12 computation is slow.\n\n**Description**\n\nReplace the BLS12 library with lambdaworks.",
          "timestamp": "2025-09-23T14:18:00Z",
          "tree_id": "59375dc4f21c9820dbe105052fc2eeb282260120",
          "url": "https://github.com/lambdaclass/ethrex/commit/a8a1a5e569514eccd8b381398358c9c8c18a447c"
        },
        "date": 1758713106117,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004472332460732985,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "azteca1998@users.noreply.github.com",
            "name": "MrAzteca",
            "username": "azteca1998"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a8a1a5e569514eccd8b381398358c9c8c18a447c",
          "message": "perf(levm): refactor `bls12_g2add` to use lambdaworks (#4538)\n\n**Motivation**\n\nBLS12 computation is slow.\n\n**Description**\n\nReplace the BLS12 library with lambdaworks.",
          "timestamp": "2025-09-23T14:18:00Z",
          "tree_id": "59375dc4f21c9820dbe105052fc2eeb282260120",
          "url": "https://github.com/lambdaclass/ethrex/commit/a8a1a5e569514eccd8b381398358c9c8c18a447c"
        },
        "date": 1758717009003,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.001543762951807229,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "52646071+Peponks9@users.noreply.github.com",
            "name": "josé v",
            "username": "Peponks9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "83dbbb1d36a005513de0eeadbbce1341c05e8c8f",
          "message": "chore(l1): replace `Result<T, String>` with `Result<T, NodeError>` (#4591)\n\n**Motivation**\n\nThis PR addresses issue #4167 by replacing non-standard `Result<T,\nString>` with `Result<T, Error>` in the networking types module. The\ngoal is to improve error handling with a structured error type for\nbetter debugging, type safety, and adherence to Rust best practices.\n\n**Description**\n\n- Introduced a new `NodeError` enum in `crates/networking/p2p/types.rs`\nwith variants for specific error cases (e.g., `InvalidFormat`,\n`ParseError`, `RLPDecodeError`).\n- Updated `Result<T, String>` to `Result<T, NodeError>` in `FromStr` for\n`Node`, and methods like `from_enode_url`, `from_enr_url`, `enr_url`,\n`from_node`, `update_seq`, `set_fork_id`, and `sign_record`.\n\n**Tests**\n- All tests in `ethrex-p2p` pass 52/52.\n\nCloses #4167",
          "timestamp": "2025-09-23T14:45:52Z",
          "tree_id": "f04faaf59b509cf6da61ae3dd3b83cf787a19550",
          "url": "https://github.com/lambdaclass/ethrex/commit/83dbbb1d36a005513de0eeadbbce1341c05e8c8f"
        },
        "date": 1758720877313,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015592616367508367,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "52646071+Peponks9@users.noreply.github.com",
            "name": "josé v",
            "username": "Peponks9"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "83dbbb1d36a005513de0eeadbbce1341c05e8c8f",
          "message": "chore(l1): replace `Result<T, String>` with `Result<T, NodeError>` (#4591)\n\n**Motivation**\n\nThis PR addresses issue #4167 by replacing non-standard `Result<T,\nString>` with `Result<T, Error>` in the networking types module. The\ngoal is to improve error handling with a structured error type for\nbetter debugging, type safety, and adherence to Rust best practices.\n\n**Description**\n\n- Introduced a new `NodeError` enum in `crates/networking/p2p/types.rs`\nwith variants for specific error cases (e.g., `InvalidFormat`,\n`ParseError`, `RLPDecodeError`).\n- Updated `Result<T, String>` to `Result<T, NodeError>` in `FromStr` for\n`Node`, and methods like `from_enode_url`, `from_enr_url`, `enr_url`,\n`from_node`, `update_seq`, `set_fork_id`, and `sign_record`.\n\n**Tests**\n- All tests in `ethrex-p2p` pass 52/52.\n\nCloses #4167",
          "timestamp": "2025-09-23T14:45:52Z",
          "tree_id": "f04faaf59b509cf6da61ae3dd3b83cf787a19550",
          "url": "https://github.com/lambdaclass/ethrex/commit/83dbbb1d36a005513de0eeadbbce1341c05e8c8f"
        },
        "date": 1758722825734,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0044490390625,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "francisco.gauna@lambdaclass.com",
            "name": "fedacking",
            "username": "fedacking"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "87ec6cdb8952e510e656b31aac6e8c7dec102992",
          "message": "fix(l1): fixed edge case for missing accounts in state trie in storage healing (#4606)\n\n**Motivation**\n\nThe storage healing algorithm was assuming that missing accounts in the\nstate trie were a bug. Due to an edge case some accounts can be deleted\nfrom state trie. As such, the code now filters healed accounts that\ndon't exist in the trie.\n\n**Description**\n\n- Changed storage healing `get_initial_downloads` to filter healed\naccounts that aren't present in the trie.\n- Changed p2p logging to include header hash",
          "timestamp": "2025-09-23T18:24:17Z",
          "tree_id": "5eea0a647d13ffc4a77908323b4b09ef10c9e6b7",
          "url": "https://github.com/lambdaclass/ethrex/commit/87ec6cdb8952e510e656b31aac6e8c7dec102992"
        },
        "date": 1758740288188,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015358984117470782,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "448cab70ba986af5377347c61f434447b9de7b0c",
          "message": "chore(l1): reduce range of account request to reduce memory overhead (#4584)\n\n**Motivation**\n\nReduce memory usage by reducing the chunks\n\n**Description**\n\nIt just reduce the calculation for file size to 128MB instead of 512MB",
          "timestamp": "2025-09-23T20:08:09Z",
          "tree_id": "6c9cbf7c3400bb2b597ad8a9e35b638f97146b7d",
          "url": "https://github.com/lambdaclass/ethrex/commit/448cab70ba986af5377347c61f434447b9de7b0c"
        },
        "date": 1758742221735,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00444132842287695,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "011748f154343d390ffd3696edd13c7560cf4aff",
          "message": "feat(replay): support public L2 networks blocks/batches replay (#4548)\n\n**Motivation**\n\nWe want to run `ethrex_replay` on ethrex L2 chains. This contains the\nminimal changes to support them.\n\n**Description**\n\n- Add conditional use of crates and functions under the `l2` feature\nflag to solve lint problems.\n- Add the required L2 fields when running under the `l2` feature flag.\n- Add new network enum type `L2Chain`.\n  - This is for replay only for now.\n- Contains the `chain_id` and the genesis is an empty one but with the\n`chain_id` setted.\n\n**How to test**\n\nYo will need an L2 `RPC_URL` running ethrex\n\nExecute a block:\n```\ncargo r -r -p ethrex-replay --features l2 -- l2 block --block <N> --execute --rpc-url <RPC_URL>\n```\n\nExecute a batch:\n```\ncargo r -r -p ethrex-replay --features l2 -- l2 batch --batch <N> --execute --rpc-url <RPC_URL>\n```\n\nProve a block:\n```\ncargo r -r -p ethrex-replay --features l2 -- l2 block --block <N> --prove --rpc-url <RPC_URL>\n```\n\nProve a batch:\n```\ncargo r -r -p ethrex-replay --features l2 -- l2 batch --batch <N> --prove --rpc-url <RPC_URL>\n```\n\nCloses #4403",
          "timestamp": "2025-09-24T12:46:02Z",
          "tree_id": "b203a079e1c1d987e3f2464f8eb29e30ea62feab",
          "url": "https://github.com/lambdaclass/ethrex/commit/011748f154343d390ffd3696edd13c7560cf4aff"
        },
        "date": 1758747903975,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015849341252699785,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "f2429248856f1b94449ac6275ffdea876609a877",
          "message": "fix(l2): add script to read address from deployer in docker compose",
          "timestamp": "2025-09-24T18:54:54Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/4624/commits/f2429248856f1b94449ac6275ffdea876609a877"
        },
        "date": 1758749850060,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00444132842287695,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "011748f154343d390ffd3696edd13c7560cf4aff",
          "message": "feat(replay): support public L2 networks blocks/batches replay (#4548)\n\n**Motivation**\n\nWe want to run `ethrex_replay` on ethrex L2 chains. This contains the\nminimal changes to support them.\n\n**Description**\n\n- Add conditional use of crates and functions under the `l2` feature\nflag to solve lint problems.\n- Add the required L2 fields when running under the `l2` feature flag.\n- Add new network enum type `L2Chain`.\n  - This is for replay only for now.\n- Contains the `chain_id` and the genesis is an empty one but with the\n`chain_id` setted.\n\n**How to test**\n\nYo will need an L2 `RPC_URL` running ethrex\n\nExecute a block:\n```\ncargo r -r -p ethrex-replay --features l2 -- l2 block --block <N> --execute --rpc-url <RPC_URL>\n```\n\nExecute a batch:\n```\ncargo r -r -p ethrex-replay --features l2 -- l2 batch --batch <N> --execute --rpc-url <RPC_URL>\n```\n\nProve a block:\n```\ncargo r -r -p ethrex-replay --features l2 -- l2 block --block <N> --prove --rpc-url <RPC_URL>\n```\n\nProve a batch:\n```\ncargo r -r -p ethrex-replay --features l2 -- l2 batch --batch <N> --prove --rpc-url <RPC_URL>\n```\n\nCloses #4403",
          "timestamp": "2025-09-24T12:46:02Z",
          "tree_id": "b203a079e1c1d987e3f2464f8eb29e30ea62feab",
          "url": "https://github.com/lambdaclass/ethrex/commit/011748f154343d390ffd3696edd13c7560cf4aff"
        },
        "date": 1758756122726,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00451121618852459,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "committer": {
            "name": "lambdaclass",
            "username": "lambdaclass"
          },
          "id": "12afc04257d3e1e0cb738c42a616f6e0cc114068",
          "message": "feat(l2): aligned mode support for multiprover",
          "timestamp": "2025-09-24T19:58:41Z",
          "url": "https://github.com/lambdaclass/ethrex/pull/3429/commits/12afc04257d3e1e0cb738c42a616f6e0cc114068"
        },
        "date": 1758760859621,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004557916149068323,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pdeymon@fi.uba.ar",
            "name": "Pablo Deymonnaz",
            "username": "pablodeymo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "815b58439a556aa3da42311fbdd11771f3da86db",
          "message": "deps(l2): remove unused crates in patch.crates-io section (#4540)\n\n**Motivation**\n\nThere where unused crates that where patched in `patch.crates-io`\nsection in `crates/l2/prover/src/guest_program/src/sp1/Cargo.toml`.\n\n**Description**\n\nThis PR removes that unused crates in the patch section.\n\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-24T14:25:20Z",
          "tree_id": "fc3ca6e767462973578b947a8b1eeeb6c187c255",
          "url": "https://github.com/lambdaclass/ethrex/commit/815b58439a556aa3da42311fbdd11771f3da86db"
        },
        "date": 1758763472696,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004488223241590214,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pdeymon@fi.uba.ar",
            "name": "Pablo Deymonnaz",
            "username": "pablodeymo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "815b58439a556aa3da42311fbdd11771f3da86db",
          "message": "deps(l2): remove unused crates in patch.crates-io section (#4540)\n\n**Motivation**\n\nThere where unused crates that where patched in `patch.crates-io`\nsection in `crates/l2/prover/src/guest_program/src/sp1/Cargo.toml`.\n\n**Description**\n\nThis PR removes that unused crates in the patch section.\n\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-24T14:25:20Z",
          "tree_id": "fc3ca6e767462973578b947a8b1eeeb6c187c255",
          "url": "https://github.com/lambdaclass/ethrex/commit/815b58439a556aa3da42311fbdd11771f3da86db"
        },
        "date": 1758766913277,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015843637999280317,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49622509+jrchatruc@users.noreply.github.com",
            "name": "Javier Rodríguez Chatruc",
            "username": "jrchatruc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "beb31d8f564c723a226e6d29fd5e09eddd9b8fe8",
          "message": "chore(l1, l2): use version, authors, documentation and edition fields from the root cargo toml for all crates (#4633)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Pablo Deymonnaz <pdeymon@fi.uba.ar>",
          "timestamp": "2025-09-24T16:08:20Z",
          "tree_id": "024c48bb3df679f2e58e9fb73e2a6ffa5fd56d39",
          "url": "https://github.com/lambdaclass/ethrex/commit/beb31d8f564c723a226e6d29fd5e09eddd9b8fe8"
        },
        "date": 1758768666937,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004534445932028837,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "cfb805c6c70df1f6172f1982c9ed8952b7399d28",
          "message": "chore(l1): fix memory spike when transitioning from snap to fullsync (#4630)\n\n**Motivation**\n\nWe were seeing spikes of more than 20GB of ram transitioning from\nsnapsync to full sync\n\n**Description**\n\nThis PR remove the call to `into_fullsync` during the end of snap sync.\nThat call was unnecessary, `into_fullsync` is used if we try to start a\nsnap sync and we detect we are close to the head (<64 blocks) we move\nthe headers to the fullsync state in that case, but in this one we\nalready finished snapsync so we just need to start fullsync from the\nlast known head.",
          "timestamp": "2025-09-24T18:00:34Z",
          "tree_id": "7232c44213e027cdfd16c3b7e7a266540bf32f3e",
          "url": "https://github.com/lambdaclass/ethrex/commit/cfb805c6c70df1f6172f1982c9ed8952b7399d28"
        },
        "date": 1758796480386,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015786830405163143,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rodrigooliveri10@gmail.com",
            "name": "Rodrigo Oliveri",
            "username": "rodrigo-o"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "cfb805c6c70df1f6172f1982c9ed8952b7399d28",
          "message": "chore(l1): fix memory spike when transitioning from snap to fullsync (#4630)\n\n**Motivation**\n\nWe were seeing spikes of more than 20GB of ram transitioning from\nsnapsync to full sync\n\n**Description**\n\nThis PR remove the call to `into_fullsync` during the end of snap sync.\nThat call was unnecessary, `into_fullsync` is used if we try to start a\nsnap sync and we detect we are close to the head (<64 blocks) we move\nthe headers to the fullsync state in that case, but in this one we\nalready finished snapsync so we just need to start fullsync from the\nlast known head.",
          "timestamp": "2025-09-24T18:00:34Z",
          "tree_id": "7232c44213e027cdfd16c3b7e7a266540bf32f3e",
          "url": "https://github.com/lambdaclass/ethrex/commit/cfb805c6c70df1f6172f1982c9ed8952b7399d28"
        },
        "date": 1758798057369,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.00451121618852459,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "df39b4bbc817b18ba7bb7f6c717c03d4e74f4f46",
          "message": "fix(l2): common bridge dependencies (#4637)\n\n**Motivation**\n\nReentrancyGuard was removed from the\n`openzeppelin/contracts-upgradable`. See\n[this](https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/commit/4a073ac393f1c1495391b810b2c7b6b96de28137#diff-06572a96a58dc510037d5efa622f9bec8519bc1beab13c9f251e97e657a9d4ed)\n\nFor now we pin the commit to the one we were using until we decide what\nto do.\n\n**Description**\n\nAdd to the `git_clone` an optional commit to checkout\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: avilagaston9 <gaston.avila@lambdaclass.com>",
          "timestamp": "2025-09-24T19:31:13Z",
          "tree_id": "9af7ca03c95468fd4bfa1fc3cf89695e6823b478",
          "url": "https://github.com/lambdaclass/ethrex/commit/df39b4bbc817b18ba7bb7f6c717c03d4e74f4f46"
        },
        "date": 1758801440709,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015860760086455331,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "df39b4bbc817b18ba7bb7f6c717c03d4e74f4f46",
          "message": "fix(l2): common bridge dependencies (#4637)\n\n**Motivation**\n\nReentrancyGuard was removed from the\n`openzeppelin/contracts-upgradable`. See\n[this](https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/commit/4a073ac393f1c1495391b810b2c7b6b96de28137#diff-06572a96a58dc510037d5efa622f9bec8519bc1beab13c9f251e97e657a9d4ed)\n\nFor now we pin the commit to the one we were using until we decide what\nto do.\n\n**Description**\n\nAdd to the `git_clone` an optional commit to checkout\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: avilagaston9 <gaston.avila@lambdaclass.com>",
          "timestamp": "2025-09-24T19:31:13Z",
          "tree_id": "9af7ca03c95468fd4bfa1fc3cf89695e6823b478",
          "url": "https://github.com/lambdaclass/ethrex/commit/df39b4bbc817b18ba7bb7f6c717c03d4e74f4f46"
        },
        "date": 1758803012386,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004515843076923077,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f68c0015ff7357eda09ba582c516f5d5e14e9b89",
          "message": "fix(l1): remove \"background_threads\" feature in jemallocator (#4636)\n\n**Motivation**\n\nAny `ethrex` binary run in macOS starts by printing the message:\n\n```text\n<jemalloc>: option background_thread currently supports pthread only\n```\n\nThis is confusing, especially since the node appears to work as normal.\n\n**Description**\n\nThis PR removes the \"background_threads\" feature, which isn't supported\non macOS, it seems. It still enables it for linux, however.",
          "timestamp": "2025-09-24T20:58:35Z",
          "tree_id": "770950e05c865b671516f5d6eb2fc123791739af",
          "url": "https://github.com/lambdaclass/ethrex/commit/f68c0015ff7357eda09ba582c516f5d5e14e9b89"
        },
        "date": 1758804609240,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004497392236976507,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f68c0015ff7357eda09ba582c516f5d5e14e9b89",
          "message": "fix(l1): remove \"background_threads\" feature in jemallocator (#4636)\n\n**Motivation**\n\nAny `ethrex` binary run in macOS starts by printing the message:\n\n```text\n<jemalloc>: option background_thread currently supports pthread only\n```\n\nThis is confusing, especially since the node appears to work as normal.\n\n**Description**\n\nThis PR removes the \"background_threads\" feature, which isn't supported\non macOS, it seems. It still enables it for linux, however.",
          "timestamp": "2025-09-24T20:58:35Z",
          "tree_id": "770950e05c865b671516f5d6eb2fc123791739af",
          "url": "https://github.com/lambdaclass/ethrex/commit/f68c0015ff7357eda09ba582c516f5d5e14e9b89"
        },
        "date": 1758808119344,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015832243797195254,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a454c4762f733b495b65025764f7c518dd850f32",
          "message": "ci(l1): set --docker.output for running hive tests in ci (#4626)\n\n**Motivation**\n\nHive test _Invalid Missing Ancestor Syncing ReOrg, Transaction Nonce,\nEmptyTxs=False, CanonicalReOrg=True, Invalid P9 (Cancun)_ has been\ndetected as flaky in different prs\n([here](https://github.com/lambdaclass/ethrex/actions/runs/17778855183/job/50533720000?pr=4402)\nand\n[here](https://github.com/lambdaclass/ethrex/actions/runs/17919605582/job/50953659676?pr=4576))\nbut logs aren't specific on why the test failed. In this\n[pr](https://github.com/lambdaclass/ethrex/pull/4528) I had the test in\nquestion run several times but it never failed, so there was no way to\nfigure out why it is flaky. Having the ci show more specific logs should\nbe useful to have more information on flaky tests for any pr and any\ntest.\n\n**Description**\n\nSet `--docker.output` for running the hive tests on the ci.\n\nCloses no issue but it's related to #3105",
          "timestamp": "2025-09-24T21:48:06Z",
          "tree_id": "a10cd7c5740e0e77e59cdf8b0b0a4c34a7c5b18c",
          "url": "https://github.com/lambdaclass/ethrex/commit/a454c4762f733b495b65025764f7c518dd850f32"
        },
        "date": 1758809699649,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004525125385405961,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49721261+cdiielsi@users.noreply.github.com",
            "name": "cdiielsi",
            "username": "cdiielsi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a454c4762f733b495b65025764f7c518dd850f32",
          "message": "ci(l1): set --docker.output for running hive tests in ci (#4626)\n\n**Motivation**\n\nHive test _Invalid Missing Ancestor Syncing ReOrg, Transaction Nonce,\nEmptyTxs=False, CanonicalReOrg=True, Invalid P9 (Cancun)_ has been\ndetected as flaky in different prs\n([here](https://github.com/lambdaclass/ethrex/actions/runs/17778855183/job/50533720000?pr=4402)\nand\n[here](https://github.com/lambdaclass/ethrex/actions/runs/17919605582/job/50953659676?pr=4576))\nbut logs aren't specific on why the test failed. In this\n[pr](https://github.com/lambdaclass/ethrex/pull/4528) I had the test in\nquestion run several times but it never failed, so there was no way to\nfigure out why it is flaky. Having the ci show more specific logs should\nbe useful to have more information on flaky tests for any pr and any\ntest.\n\n**Description**\n\nSet `--docker.output` for running the hive tests on the ci.\n\nCloses no issue but it's related to #3105",
          "timestamp": "2025-09-24T21:48:06Z",
          "tree_id": "a10cd7c5740e0e77e59cdf8b0b0a4c34a7c5b18c",
          "url": "https://github.com/lambdaclass/ethrex/commit/a454c4762f733b495b65025764f7c518dd850f32"
        },
        "date": 1758813072848,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015918101952277657,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "65c96855242a0ec0d9c89b30b5a04034fd5b23d4",
          "message": "fix(replay): use get block by number instead of get raw block (#4634)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nIf the node that we are using as an RPC doesn't expose debug endpoints\nethrex replayer won't work because it asks for the raw block. The\nprogram got stuck and we didn't know why, we now know.\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-24T22:05:33Z",
          "tree_id": "e118cd07ef7ad1d169ba13c8e957c0ddd3fbc62e",
          "url": "https://github.com/lambdaclass/ethrex/commit/65c96855242a0ec0d9c89b30b5a04034fd5b23d4"
        },
        "date": 1758814639996,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004525125385405961,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "65c96855242a0ec0d9c89b30b5a04034fd5b23d4",
          "message": "fix(replay): use get block by number instead of get raw block (#4634)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nIf the node that we are using as an RPC doesn't expose debug endpoints\nethrex replayer won't work because it asks for the raw block. The\nprogram got stuck and we didn't know why, we now know.\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-24T22:05:33Z",
          "tree_id": "e118cd07ef7ad1d169ba13c8e957c0ddd3fbc62e",
          "url": "https://github.com/lambdaclass/ethrex/commit/65c96855242a0ec0d9c89b30b5a04034fd5b23d4"
        },
        "date": 1758818029412,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015872195385724585,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "112426153+tomip01@users.noreply.github.com",
            "name": "Tomás Paradelo",
            "username": "tomip01"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "68beb0c114f2d43299e2264ec8c77f7ca6ac8710",
          "message": "ci(l1,l2): free unused packages on github runners (#4647)\n\n**Motivation**\n\nThe CI is broken due to not having space left to run the jobs\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number",
          "timestamp": "2025-09-25T14:40:33Z",
          "tree_id": "119c291dd045aef130339565b28a1cab6dce7bb4",
          "url": "https://github.com/lambdaclass/ethrex/commit/68beb0c114f2d43299e2264ec8c77f7ca6ac8710"
        },
        "date": 1758821462781,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015775517735578646,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "316b9f3c5b16554299e7538b3bc9a50de4276b4c",
          "message": "fix(replay): fix execution with eth_getProof (#4616)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nExecution with eth_getProof had some caveats regarding the trie. For\nmaking it work we need to do 2 things:\n1. Pre-inject possible nodes to the trie\n2. Make a modification to the MPT in case we don't find a missing node.\n\nThe `1` was already done in the code but wasn't working properly, the\nproblem was just that the root node wasn't being inserted into the nodes\nthat were used for building the trie that's used for getting potential\nchild nodes.\n\nThe 2 is a modification that we don't want in our MPT so we didn't carry\nalong [with that](https://github.com/lambdaclass/ethrex/pull/2952).\nHowever, in execution without zkVM we have the possibility of inserting\narbitrary nodes with the hashes that we want and RLP content that\ndoesn't necessarily match to that hash, so we can \"deceive\" the trie\ninto thinking it has some nodes when in fact they are just dummy nodes.\nHow can we use it to our advantage? We insert dummy branch nodes in\nevery single place where a storage node is being referenced but it's\nmissing. This way, if we want to do a trie restructuring we will find\nthe node that otherwise we wouldn't have found, and the good thing is\nthat we don't care about the contents of this node because they won't\nchange, in this particular case the node will be referenced by a one\nnibble extension node. For more info read\nhttps://github.com/kkrt-labs/zk-pig/blob/main/docs/modified-mpt.md#modified-mpt-implementation\n\n\n\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-25T15:53:32Z",
          "tree_id": "4f24652e33e88f4d7e6f60cd39ec87d6f2a3c1ca",
          "url": "https://github.com/lambdaclass/ethrex/commit/316b9f3c5b16554299e7538b3bc9a50de4276b4c"
        },
        "date": 1758872125699,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015803829863603733,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "316b9f3c5b16554299e7538b3bc9a50de4276b4c",
          "message": "fix(replay): fix execution with eth_getProof (#4616)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nExecution with eth_getProof had some caveats regarding the trie. For\nmaking it work we need to do 2 things:\n1. Pre-inject possible nodes to the trie\n2. Make a modification to the MPT in case we don't find a missing node.\n\nThe `1` was already done in the code but wasn't working properly, the\nproblem was just that the root node wasn't being inserted into the nodes\nthat were used for building the trie that's used for getting potential\nchild nodes.\n\nThe 2 is a modification that we don't want in our MPT so we didn't carry\nalong [with that](https://github.com/lambdaclass/ethrex/pull/2952).\nHowever, in execution without zkVM we have the possibility of inserting\narbitrary nodes with the hashes that we want and RLP content that\ndoesn't necessarily match to that hash, so we can \"deceive\" the trie\ninto thinking it has some nodes when in fact they are just dummy nodes.\nHow can we use it to our advantage? We insert dummy branch nodes in\nevery single place where a storage node is being referenced but it's\nmissing. This way, if we want to do a trie restructuring we will find\nthe node that otherwise we wouldn't have found, and the good thing is\nthat we don't care about the contents of this node because they won't\nchange, in this particular case the node will be referenced by a one\nnibble extension node. For more info read\nhttps://github.com/kkrt-labs/zk-pig/blob/main/docs/modified-mpt.md#modified-mpt-implementation\n\n\n\n\n<!-- Link to issues: Resolves #111, Resolves #222 -->\n\nCloses #issue_number\n\n---------\n\nCo-authored-by: Copilot <175728472+Copilot@users.noreply.github.com>",
          "timestamp": "2025-09-25T15:53:32Z",
          "tree_id": "4f24652e33e88f4d7e6f60cd39ec87d6f2a3c1ca",
          "url": "https://github.com/lambdaclass/ethrex/commit/316b9f3c5b16554299e7538b3bc9a50de4276b4c"
        },
        "date": 1758873714915,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0045484989669421485,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "158164b90f9831be742e44cb5392c0008b7d2828",
          "message": "fix(l1): parse storage slots as numbers in `eth_getStorageAt` (#4644)\n\n**Motivation**\n\nStorage slot keys are numbers, and the JSON-RPC API treats them as such.\n\n**Description**\n\nThis PR changes the way the storage slot is deserialized in\n`eth_getStorageAt`, so numbers with less than 32 bytes, like \"1\" and\n\"0x1\", are accepted.",
          "timestamp": "2025-09-25T17:06:48Z",
          "tree_id": "90783729c98a7e679e9dc144c764dce91eec25cc",
          "url": "https://github.com/lambdaclass/ethrex/commit/158164b90f9831be742e44cb5392c0008b7d2828"
        },
        "date": 1758881390693,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015837938848920865,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "47506558+MegaRedHand@users.noreply.github.com",
            "name": "Tomás Grüner",
            "username": "MegaRedHand"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "158164b90f9831be742e44cb5392c0008b7d2828",
          "message": "fix(l1): parse storage slots as numbers in `eth_getStorageAt` (#4644)\n\n**Motivation**\n\nStorage slot keys are numbers, and the JSON-RPC API treats them as such.\n\n**Description**\n\nThis PR changes the way the storage slot is deserialized in\n`eth_getStorageAt`, so numbers with less than 32 bytes, like \"1\" and\n\"0x1\", are accepted.",
          "timestamp": "2025-09-25T17:06:48Z",
          "tree_id": "90783729c98a7e679e9dc144c764dce91eec25cc",
          "url": "https://github.com/lambdaclass/ethrex/commit/158164b90f9831be742e44cb5392c0008b7d2828"
        },
        "date": 1758887074887,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.004567372406639005,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0daee437c4730a9dc313e90153f472aaea8af039",
          "message": "fix(replay): improve rate limit when using eth_getProofs (#4632)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nWith the previous rate limit we were so slow that we couldn't even\nexecute replay with eth_getProof with a geth full node because it took\nso long that the state was pruned (after 25min).\nThis new rate limit logic is a sweet spot, I had to make some changes to\noriginal logic because it had some flaws.\n\nResults: Execution can go from more than an hour to a few minutes\nbecause of this",
          "timestamp": "2025-09-25T17:41:50Z",
          "tree_id": "bf9133bfbfb2a0d560b9c0167b6fc74ed4d26ce0",
          "url": "https://github.com/lambdaclass/ethrex/commit/0daee437c4730a9dc313e90153f472aaea8af039"
        },
        "date": 1758890457457,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "Risc0, RTX A6000",
            "value": 0.0015815183189655173,
            "unit": "Mgas/s"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48994069+JereSalo@users.noreply.github.com",
            "name": "Jeremías Salomón 🐃🐄🥚",
            "username": "JereSalo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0daee437c4730a9dc313e90153f472aaea8af039",
          "message": "fix(replay): improve rate limit when using eth_getProofs (#4632)\n\n**Motivation**\n\n<!-- Why does this pull request exist? What are its goals? -->\n\n**Description**\n\n<!-- A clear and concise general description of the changes this PR\nintroduces -->\nWith the previous rate limit we were so slow that we couldn't even\nexecute replay with eth_getProof with a geth full node because it took\nso long that the state was pruned (after 25min).\nThis new rate limit logic is a sweet spot, I had to make some changes to\noriginal logic because it had some flaws.\n\nResults: Execution can go from more than an hour to a few minutes\nbecause of this",
          "timestamp": "2025-09-25T17:41:50Z",
          "tree_id": "bf9133bfbfb2a0d560b9c0167b6fc74ed4d26ce0",
          "url": "https://github.com/lambdaclass/ethrex/commit/0daee437c4730a9dc313e90153f472aaea8af039"
        },
        "date": 1758896213357,
        "tool": "customBiggerIsBetter",
        "benches": [
          {
            "name": "SP1, RTX A6000",
            "value": 0.0045204794661190964,
            "unit": "Mgas/s"
          }
        ]
      }
    ]
  }
}