name: Label and Assign PR

on:
  pull_request:
    types: [opened]

permissions:
  contents: read
  issues: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  label-and-assign:
    runs-on: ubuntu-latest
    steps:
      - name: Assign PR author
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              assignees: [context.payload.pull_request.user.login]
            });

      - name: Determine labels from PR title
        id: set_labels
        env:
          TITLE: ${{ github.event.pull_request.title }}
        run: |
          labels=()

          if [[ "$TITLE" =~ \(.*l1.*\) ]]; then
            labels+=("L1")
          fi

          if [[ "$TITLE" =~ \(.*levm.*\) ]]; then
            labels+=("levm")
          fi

          if [[ "$TITLE" =~ \(.*l2.*\) ]]; then
            labels+=("L2")
          fi

          if [[ "$TITLE" =~ \(.*core.*\) ]]; then
            labels+=("L1" "L2")
          fi

          if [[ "$TITLE" =~ ^perf ]]; then
            labels+=("performance")
          fi

          # Remove duplicates
          mapfile -t unique_labels < <(printf "%s\n" "${labels[@]}" | sort -u)
          labels_csv=$(IFS=, ; echo "${unique_labels[*]}")
          echo "labels=$labels_csv" >> $GITHUB_OUTPUT

      - name: Apply labels to PR
        if: steps.set_labels.outputs.labels != ''
        uses: actions/github-script@v7
        with:
          script: |
            const labels = "${{ steps.set_labels.outputs.labels }}".split(',');
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels
            });
