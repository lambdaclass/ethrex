name: L1
on:
  push:
    branches: ["main"]
  merge_group:
  pull_request:
    branches: ["**"]
    paths-ignore:
      - "crates/l2/**" # Behind a feature flag not used in this workflow

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    # "Lint" is a required check, don't change the name
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Add Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run cargo check
        run: cargo check --workspace --exclude ethrex-prover-bench

      - name: Run cargo clippy
        run: |
          cargo clippy --workspace --exclude ethrex-prover-bench -- -D warnings
          make lint

      - name: Run cargo fmt
        run: |
          cargo fmt --all -- --check

  test:
    # "Test" is a required check, don't change the name
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@stable

      - name: Caching
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: |
          make test

  docker_build:
    name: Build Docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: ethrex
          outputs: type=docker,dest=/tmp/ethrex_image.tar

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ethrex_image
          path: /tmp/ethrex_image.tar

  setup-hive:
    name: "Setup Hive"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Hive
        run: make setup-hive
      - name: Upload hive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hive
          path: hive

  run-assertoor:
    name: Assertoor - ${{ matrix.name }}
    runs-on: ubuntu-latest
    needs: [docker_build]
    if: ${{ github.event_name != 'merge_group' }}
    strategy:
      matrix:
        include:
          - name: Transaction Check
            enclave_name: "ethrex-assertoor-tx"
            ethereum_package_args: "./.github/config/assertoor/network_params_tx.yaml"
          - name: Blob & Stability Check
            enclave_name: "ethrex-assertoor-blob"
            ethereum_package_args: "./.github/config/assertoor/network_params_blob.yaml"

    steps:
      - uses: actions/checkout@v4

      - name: Download etherex image artifact
        uses: actions/download-artifact@v4
        with:
          name: ethrex_image
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/ethrex_image.tar

      - name: Run assertoor
        uses: ethpandaops/kurtosis-assertoor-github-action@v1
        with:
          enclave_name: ${{ matrix.enclave_name }}
          kurtosis_version: "1.6.0"
          ethereum_package_url: "github.com/lambdaclass/ethereum-package"
          ethereum_package_branch: "ethrex-integration-pectra"
          ethereum_package_args: ${{ matrix.ethereum_package_args }}

  run-hive:
    name: Hive - ${{ matrix.name }}
    runs-on: ubuntu-latest
    needs: [docker_build, setup-hive]
    if: ${{ github.event_name != 'merge_group' }}
    strategy:
      matrix:
        include:
          - name: "Rpc Compat tests"
            simulation: ethereum/rpc-compat
            test_pattern: ""
            ethrex_flags: ""
          - name: "Devp2p tests"
            simulation: devp2p
            test_pattern: discv4|eth|snap/Ping|Findnode/WithoutEndpointProof|Findnode/BasicFindnode|Findnode/PastExpiration|Amplification|Status|AccountRange|StorageRanges|ByteCodes|TrieNodes|GetBlockHeaders|SimultaneousRequests|SameRequestID|ZeroRequestID|GetBlockBodies|MaliciousHandshake|MaliciousStatus|Transaction|NewPooledTxs|GetBlockReceipts|LargeTxRequest # InvalidTxs|BlobViolations
            # Findnode/UnsolicitedNeighbors flaky in CI very occasionally. When fixed replace all "Findnode/<test>" with "Findnode"
            ethrex_flags: ""
          - name: "Engine Auth and EC tests"
            simulation: ethereum/engine
            test_pattern: engine-(auth|exchange-capabilities)/
            ethrex_flags: ""
          - name: "Cancun Engine tests"
            simulation: ethereum/engine
            test_pattern: "engine-cancun/Blob Transactions On Block 1|Blob Transaction Ordering|Replace Blob Transactions|Parallel Blob Transactions|ForkchoiceUpdatedV3|ForkchoiceUpdatedV2|ForkchoiceUpdated Version|GetPayload|NewPayloadV3 After Cancun|NewPayloadV3 Before Cancun|NewPayloadV3 Versioned Hashes|Incorrect BlobGasUsed|ParentHash equals BlockHash|RPC:|in ForkchoiceState|Unknown SafeBlockHash|Unknown FinalizedBlockHash|Unique|Re-Execute Payload|Multiple New Payloads|NewPayload with|Build Payload with|Re-org to Previously|Safe Re-Org to Side Chain|Transaction Re-Org|Re-Org Back into Canonical Chain|Suggested Fee Recipient Test|PrevRandao Opcode|Fork ID: *|Request Blob Pooled Transactions|Invalid NewPayload, Incomplete Transactions|Re-Org Back to Canonical Chain*|Invalid PayloadAttributes*|Invalid NewPayload, VersionedHashes|Invalid NewPayload, Incomplete VersionedHashes|Invalid NewPayload, Extra VersionedHashes|Bad Hash on NewPayload|Unknown HeadBlockHash|In-Order Consecutive Payload Execution|Valid NewPayload->ForkchoiceUpdated|Invalid NewPayload, ParentHash|Syncing=False|Payload Build after New Invalid Payload|Invalid NewPayload|Invalid Missing Ancestor ReOrg" # Invalid Missing Ancestor Syncing ReOrg|Invalid P9|Invalid P10 -> flaky only in ci
            ethrex_flags: ""
          - name: "Paris Engine tests"
            simulation: ethereum/engine
            test_pattern: "engine-api/RPC|Re-org to Previously Validated Sidechain Payload|Re-Org Back into Canonical Chain, Depth=5|Safe Re-Org|Transaction Re-Org|Inconsistent|Suggested Fee|PrevRandao Opcode Transactions|Fork ID|Unknown SafeBlockHash|Unknown FinalizedBlockHash|Unique Payload ID|Re-Execute Payload|Multiple New Payloads|NewPayload with|Payload Build|Build Payload|Invalid PayloadAttributes|Unknown HeadBlockHash|Valid NewPayload->ForkchoiceUpdated|Invalid NewPayload, ParentHash|Bad Hash on NewPayload|In-Order Consecutive Payload Execution|Re-Org Back to Canonical Chain" # |Invalid P9 -> flaky
            ethrex_flags: ""
          - name: "Engine withdrawal tests"
            simulation: ethereum/engine
            test_pattern: "engine-withdrawals/engine-withdrawals test loader|GetPayloadV2 Block Value|Sync after 2 blocks - Withdrawals on Genesis|Max Initcode Size|Pre-Merge Fork Number > 0|Empty Withdrawals|Corrupted Block Hash Payload|Withdrawals Fork on Block 2|Withdrawals Fork on Block 3|GetPayloadBodies|Withdrawals Fork on Block 1 - 1 Block Re-Org|Withdrawals Fork on Block 1 - 8 Block Re-Org NewPayload|Withdrawals Fork on Block 8 - 10 Block Re-Org NewPayload|Withdrawals Fork on Canonical Block 8 / Side Block 7 - 10 Block Re-Org [^S]|Withdrawals Fork on Canonical Block 8 / Side Block 9 - 10 Block Re-Org [^S]"
            ethrex_flags: ""
          - name: "Sync full"
            simulation: ethereum/sync
            test_pattern: ""
            ethrex_flags: "--syncmode full"
          # Flaky, reenable when fixed
          # - name: "Sync snap"
          #   simulation: ethereum/sync
          #   test_pattern: ""
          #   ethrex_flags: "--syncmode snap"
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Download ethrex image artifact
        uses: actions/download-artifact@v4
        with:
          name: ethrex_image
          path: /tmp

      - name: Download hive artifacts
        uses: actions/download-artifact@v4
        with:
          name: hive

      - name: Load image
        run: |
          docker load --input /tmp/ethrex_image.tar

      - name: Run Hive Simulation
        run: chmod +x hive && ./hive --client ethrex --ethrex.flags "${{ matrix.ethrex_flags }}" --sim ${{ matrix.simulation }} --sim.limit "${{ matrix.test_pattern }}" --sim.parallelism 16

  # The purpose of this job is to add it as a required check in GitHub so that we don't have to add every individual job as a required check
  all-tests:
    #Â "Integration Test" is a required check, don't change the name
    name: Integration Test
    runs-on: ubuntu-latest
    needs: [run-assertoor, run-hive]
    # Make sure this job runs even if the previous jobs failed or were skipped
    if: ${{ always() && needs.run-assertoor.result != 'skipped' && needs.run-hive.result != 'skipped' }}
    steps:
      - name: Check if any job failed
        run: |
          if [ "${{ needs.run-assertoor.result }}" != "success" ]; then
            echo "Job Assertoor Tx Check failed"
            exit 1
          fi

          if [ "${{ needs.run-hive.result }}" != "success" ]; then
            echo "Job Hive failed"
            exit 1
          fi
