name: CI
on:
  merge_group:
  push:
    branches: [main]
  pull_request:
    branches: ["*"]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  RUST_VERSION: 1.80.1

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: rustfmt, clippy

      - name: Run cargo check
        run: cargo check

      - name: Run cargo build
        run: |
          cargo build

      - name: Run cargo clippy
        run: |
          cargo clippy --all-targets --all-features --workspace -- -D warnings

      - name: Run cargo fmt
        run: |
          cargo fmt --all -- --check

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Download test vectors
        run: |
          make download-test-vectors

      - name: Run tests
        run: |
          make test

  docker-build:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          load: true # Important for building without pushing
          tags: lambda_ethereum_rust:latest
          outputs: type=docker,dest=/tmp/lambda_ethereum_rust.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: lambda_ethereum_rust
          path: /tmp/lambda_ethereum_rust.tar

  assertoor:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: lambda_ethereum_rust
          path: /tmp
      - name: Load Docker image
        run: |
          docker load --input /tmp/lambda_ethereum_rust.tar
          docker image ls -a
      - name: Setup kurtosis testnet and run assertoor tests
        uses: ethpandaops/kurtosis-assertoor-github-action@v1
        with:
          ethereum_package_url: 'github.com/lambdaclass/ethereum-package'
          ethereum_package_branch: 'ethereum-rust-integration'
          ethereum_package_args: './test_data/network_params.yaml'

  prover:
    name: Build RISC-V zkVM program
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Rust toolchain install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: RISC-V zkVM toolchain install
        run: |
          curl -L https://sp1.succinct.xyz | bash
          ~/.sp1/bin/sp1up

      - name: Build program
        run: |
          cd crates/l2/prover/sp1/program
          ~/.sp1/bin/cargo-prove prove build
