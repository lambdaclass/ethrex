name: Ethrex Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-*"

permissions:
  contents: write
  packages: write

jobs:
  build-ethrex:
    strategy:
      matrix:
        platform:
          - ubuntu-22.04
          - ubuntu-22.04-arm
          - macos-latest
        include:
          - platform: ubuntu-22.04
            os: linux
            arch: x86_64
          - platform: ubuntu-22.04-arm
            os: linux
            arch: aarch64
          - platform: macos-latest
            os: macos
            arch: aarch64
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ vars.RUST_VERSION }}

      - name: Build ethrex
        run: |
          cargo build --release --all-features --bin ethrex
          mv target/release/ethrex ethrex-${{ matrix.os }}_${{ matrix.arch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ethrex-${{ matrix.os }}_${{ matrix.arch }}
          path: ethrex-${{ matrix.os }}_${{ matrix.arch }}

  build-prover-exec:
    strategy:
      matrix:
        platform:
          - ubuntu-22.04
          - ubuntu-22.04-arm
          - macos-latest
        include:
          - platform: ubuntu-22.04
            os: linux
            arch: x86_64
            rustflags: -C target-cpu=native
          - platform: ubuntu-22.04-arm
            os: linux
            arch: aarch64
            rustflags: -C target-cpu=native
          - platform: macos-latest
            os: macos
            arch: aarch64
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ vars.RUST_VERSION }}

      - name: Build prover binary
        run: |
          export RUSTFLAGS="${{ matrix.rustflags }}"
          cd crates/l2
          cargo build --release --features "l2" \
            --manifest-path ./prover/Cargo.toml \
            --bin ethrex_prover
          cd ../../
          mv target/release/ethrex_prover ethrex_prover_exec-${{ matrix.os }}_${{ matrix.arch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ethrex_prover_exec-${{ matrix.os }}_${{ matrix.arch }}
          path: ethrex_prover_exec-${{ matrix.os }}_${{ matrix.arch }}

  build-prover-sp1:
    strategy:
      matrix:
        platform:
          - ubuntu-22.04
          - ubuntu-22.04-arm
        include:
          - platform: ubuntu-22.04
            arch: x86_64
          - platform: ubuntu-22.04-arm
            arch: aarch64
          - os: linux # This property will be added to all matrix combinations
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ vars.RUST_VERSION }}

      - name: Install SP1
        env:
          SHELL: /bin/bash
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -L https://sp1up.succinct.xyz | bash
          ~/.sp1/bin/sp1up --version 5.0.8

      - name: Set up QEMU
        if: ${{ matrix.platform == 'ubuntu-22.04-arm' }}
        uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64

      - name: Build prover binary
        run: |
          export RUSTFLAGS='-C target-cpu=native'
          cd crates/l2
          cargo build --release --features "sp1,gpu,l2" \
            --manifest-path ./prover/Cargo.toml \
            --bin ethrex_prover
          cd ../../
          mv target/release/ethrex_prover ethrex_prover_sp1-${{ matrix.os }}_${{ matrix.arch }}
          mv crates/l2/prover/zkvm/interface/sp1/out/riscv32im-succinct-zkvm-vk ethrex-riscv32im-succinct-zkvm-vk

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ethrex_prover_sp1-${{ matrix.os }}_${{ matrix.arch }}
          path: ethrex_prover_sp1-${{ matrix.os }}_${{ matrix.arch }}

      - name: Upload sp1 vk
        if: ${{ matrix.arch == 'x86_64' }}
        uses: actions/upload-artifact@v4
        with:
          name: ethrex-riscv32im-succinct-zkvm-vk
          path: ethrex-riscv32im-succinct-zkvm-vk

  build-prover-risc0:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ vars.RUST_VERSION }}

      - name: Install RISC0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -L https://risczero.com/install | bash
          ~/.risc0/bin/rzup install cargo-risczero 2.1.0
          ~/.risc0/bin/rzup install rust

      - uses: Jimver/cuda-toolkit@v0.2.24
        id: cuda-toolkit
        with:
          cuda: "12.9.0"
          method: "network"
          sub-packages: '["nvcc"]'

      - name: Build prover binary
        run: |
          export RUSTFLAGS='-C target-cpu=native'
          export NVCC_PREPEND_FLAGS='-arch=sm_70'
          cd crates/l2
          cargo build --release --features "risc0,gpu,l2" \
            --manifest-path ./prover/Cargo.toml \
            --bin ethrex_prover
          cd ../../
          mv target/release/ethrex_prover ethrex_prover_risc0-linux_x86_64
          mv crates/l2/prover/zkvm/interface/risc0/out/riscv32im-risc0-vk ethrex-riscv32im-risc0-vk

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ethrex_prover_risc0-linux_x86_64
          path: ethrex_prover_risc0-linux_x86_64

      - name: Upload risc0 vk
        uses: actions/upload-artifact@v4
        with:
          name: ethrex-riscv32im-risc0-vk
          path: ethrex-riscv32im-risc0-vk

  package-contracts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Archive contracts
        run: |
          cd crates/l2/contracts/src/
          tar -czvf l1-contracts.tar.gz ./l1
          tar -czvf l2-contracts.tar.gz ./l2
          cd ../../../../
          mv crates/l2/contracts/src/l1-contracts.tar.gz ethrex-l1-contracts.tar.gz
          mv crates/l2/contracts/src/l2-contracts.tar.gz ethrex-l2-contracts.tar.gz

      - name: Upload L1 artifact
        uses: actions/upload-artifact@v4
        with:
          name: ethrex-l1-contracts.tar.gz
          path: ethrex-l1-contracts.tar.gz

      - name: Upload L2 artifact
        uses: actions/upload-artifact@v4
        with:
          name: ethrex-l2-contracts.tar.gz
          path: ethrex-l2-contracts.tar.gz

  # Creates a draft release on GitHub with the binaries
  finalize-release:
    needs:
      - build-ethrex
      - build-prover-exec
      - build-prover-sp1
      - build-prover-risc0
      - package-contracts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./bin
          pattern: "ethrex*"

      - name: Format name
        run: echo "RELEASE_NAME=$(echo ${{ github.ref_name }} | cut -d_ -f2)" >> $GITHUB_ENV

      - name: Get previous tag
        run: |
          name=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | tail -2 | head -1)
          echo "PREVIOUS_TAG: $name"
          echo "PREVIOUS_TAG=$name" >> $GITHUB_ENV

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fromTag: ${{ github.ref_name }}
          toTag: ${{ env.PREVIOUS_TAG }}
          writeToFile: false

      - name: Finalize Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ./bin/**/*
          draft: false
          prerelease: false
          tag_name: ${{ github.ref_name }}
          name: "ethrex: ${{ env.RELEASE_NAME }}"
          body: ${{ steps.changelog.outputs.changes }}
