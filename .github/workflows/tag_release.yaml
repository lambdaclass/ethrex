name: Ethrex Release

on:
  pull_request:
    branches: ["**"]
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-*"

permissions:
  contents: write
  packages: write

jobs:
  build-ethrex:
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - ubuntu-24.04-arm
          - macos-latest
        include:
          - platform: ubuntu-latest
            os: linux
            arch: x86-64
          - platform: ubuntu-24.04-arm
            os: linux
            arch: arm64
          - platform: macos-latest
            os: macos
            arch: arm64
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ vars.RUST_VERSION }}

      - name: Add Rust Cache
        uses: Swatinem/rust-cache@v2

      # TODO when https://github.com/lambdaclass/ethrex/pull/3381 is merged
      # Rename to Build ethrex
      - name: Build ethrex L2
        # replace --features l2 with --all-features
        run: |
          cargo build --release --features "l2,metrics,rollup_storage_sql" --bin ethrex
          mv target/release/ethrex ethrex-${{ matrix.os }}_${{ matrix.arch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ethrex-${{ matrix.os }}_${{ matrix.arch }}
          path: ethrex-${{ matrix.os }}_${{ matrix.arch }}

  build-prover-exec:
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - ubuntu-24.04-arm
          - macos-latest
        include:
          - platform: ubuntu-latest
            rustflags: -C target-cpu=native
            os: linux
            arch: x86-64
          - platform: ubuntu-24.04-arm
            rustflags: -C target-cpu=native
            os: linux
            arch: arm64
          - platform: macos-latest
            os: macos
            arch: arm64
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ vars.RUST_VERSION }}

      - name: Add Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Build prover
        run: |
          cd crates/l2
          export RUSTFLAGS="${{ matrix.rustflags }}"
          cargo build --release --features "l2" \
            --manifest-path ./prover/Cargo.toml \
            --bin ethrex_prover
          cd ../../
          mv target/release/ethrex_prover ethrex_prover_exec-${{ matrix.os }}_${{ matrix.arch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ethrex_prover_exec-${{ matrix.os }}_${{ matrix.arch }}
          path: ethrex_prover_exec-${{ matrix.os }}_${{ matrix.arch }}

  build-prover-sp1:
    strategy:
      matrix:
        include:
          - platform: ubuntu-latest
            os: linux
            arch: x86-64
          - platform: ubuntu-24.04-arm
            os: linux
            arch: arm64
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ vars.RUST_VERSION }}

      - name: Install SP1
        env:
          SHELL: /bin/bash
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -L https://sp1up.succinct.xyz | bash
          ~/.sp1/bin/sp1up --version 5.0.0

      - name: Add Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Set up QEMU
        if: ${{ matrix.platform == 'ubuntu-24.04-arm' }}
        uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64

      - name: Build prover
        run: |
          cd crates/l2
          RUSTFLAGS='-C target-cpu=native' \
          cargo build --release --features "sp1,gpu,l2" \
            --manifest-path ./prover/Cargo.toml \
            --bin ethrex_prover
          cd ../../
          mv target/release/ethrex_prover ethrex_prover_sp1-${{ matrix.os }}_${{ matrix.arch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ethrex_prover_sp1-${{ matrix.os }}_${{ matrix.arch }}
          path: ethrex_prover_sp1-${{ matrix.os }}_${{ matrix.arch }}

  build-prover-risc0:
    strategy:
      matrix:
        include:
          - platform: ubuntu-latest
            os: linux
            arch: x86-64
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ vars.RUST_VERSION }}

      - name: Install RISC0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -L https://risczero.com/install | bash
          ~/.risc0/bin/rzup install cargo-risczero 2.1.0
          ~/.risc0/bin/rzup install rust

      - name: Add Rust Cache
        uses: Swatinem/rust-cache@v2

      - uses: Jimver/cuda-toolkit@v0.2.24
        id: cuda-toolkit
        with:
          cuda: '12.5.0'
          method: 'network'
          sub-packages: 'toolkit'

      - name: Build prover
        run: |
          cd crates/l2
          RUSTFLAGS='-C target-cpu=native' \
          cargo build --release --features "risc0,gpu,l2" \
            --manifest-path ./prover/Cargo.toml \
            --bin ethrex_prover
          cd ../../
          mv target/release/ethrex_prover ethrex_prover_risc0-${{ matrix.os }}_${{ matrix.arch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ethrex_prover_risc0-${{ matrix.os }}_${{ matrix.arch }}
          path: ethrex_prover_risc0-${{ matrix.os }}_${{ matrix.arch }}

  package-contracts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Archive contracts
        run: |
          cd crates/l2/contracts/src/
          tar -czvf l1-contracts.tar.gz ./l1
          tar -czvf l2-contracts.tar.gz ./l2
          cd ../../../../
          mv crates/l2/contracts/src/l1-contracts.tar.gz ethrex-l1-contracts.tar.gz
          mv crates/l2/contracts/src/l2-contracts.tar.gz ethrex-l2-contracts.tar.gz

      - name: Upload L1 artifact
        uses: actions/upload-artifact@v4
        with:
          name: ethrex-l1-contracts.tar.gz
          path: ethrex-l1-contracts.tar.gz

      - name: Upload L2 artifact
        uses: actions/upload-artifact@v4
        with:
          name: ethrex-l2-contracts.tar.gz
          path: ethrex-l2-contracts.tar.gz

  # # Creates a draft release on GitHub with the binaries
  # finalize-release:
  #   needs:
  #     - build-ethrex
  #     - build-prover-exec
  #     - build-prover-sp1
  #   # - build-prover-risc0 # Uncomment when fixed RISC0
  #     - package-contracts
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Download artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         path: ./bin
  #         pattern: "ethrex*"

  #     - name: Format name
  #       run: echo "RELEASE_NAME=$(echo ${{ github.ref_name }} | cut -d_ -f2)" >> $GITHUB_ENV

  #     - name: Get previous tag
  #       run: |
  #         name=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | tail -2 | head -1)
  #         echo "PREVIOUS_TAG: $name"
  #         echo "PREVIOUS_TAG=$name" >> $GITHUB_ENV

  #     - name: Update CHANGELOG
  #       id: changelog
  #       uses: requarks/changelog-action@v1
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         fromTag: ${{ github.ref_name }}
  #         toTag: ${{ env.PREVIOUS_TAG }}
  #         writeToFile: false

  #     - name: Finalize Release
  #       uses: softprops/action-gh-release@v2
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         files: ./bin/**/*
  #         draft: false
  #         prerelease: false
  #         tag_name: ${{ github.ref_name }}
  #         name: "ethrex: ${{ env.RELEASE_NAME }}"
  #         body: ${{ steps.changelog.outputs.changes }}
