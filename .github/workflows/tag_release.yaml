name: Ethrex Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-*"

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-ethrex:
    strategy:
      matrix:
        platform:
          - ubuntu-22.04
          - ubuntu-22.04-arm
          - macos-latest
        include:
          - platform: ubuntu-22.04
            os: linux
            arch: x86_64
            prover_features: sp1,risc0,gpu
          - platform: ubuntu-22.04-arm
            os: linux
            arch: aarch64
            prover_features: sp1,gpu
          - platform: macos-latest
            os: macos
            arch: aarch64
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Free Disk Space (Ubuntu)
        if: ${{ matrix.os == 'linux' }}
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: false
          large-packages: false

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ vars.RUST_VERSION }}

      - name: Install SP1
        if: ${{ matrix.os == 'linux' }}
        env:
          SHELL: /bin/bash
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -L https://sp1up.succinct.xyz | bash
          ~/.sp1/bin/sp1up --version 5.0.8

      - name: Set up QEMU
        if: ${{ matrix.platform == 'ubuntu-22.04-arm' }}
        uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64

      - name: Install RISC0
        if: ${{ matrix.platform == 'ubuntu-22.04' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -L https://risczero.com/install | bash
          ~/.risc0/bin/rzup install cargo-risczero 2.3.1
          ~/.risc0/bin/rzup install rust

      - uses: Jimver/cuda-toolkit@v0.2.24
        if: ${{ matrix.platform == 'ubuntu-22.04' }}
        id: cuda-toolkit
        with:
          cuda: "12.9.0"
          method: "network"
          sub-packages: '["nvcc"]'

      - name: Set compiler envs
        if: ${{ matrix.os == 'linux' }}
        run: |
          echo COMPILE_FLAGS="RUSTFLAGS='-C target-cpu=native' NVCC_PREPEND_FLAGS='-arch=sm_70'" >> $GITHUB_ENV

      - name: Build ethrex
        run: |
          ${{ env.COMPILE_FLAGS }} cargo build --release --features "${{ matrix.prover_features }}" --bin ethrex
          mv target/release/ethrex ethrex-${{ matrix.os }}_${{ matrix.arch }}

      - name: Copy verification keys
        if: ${{ matrix.platform == 'ubuntu-22.04' }} # Run only once
        run: |
          mkdir -p ./verification_keys
          mv crates/l2/prover/zkvm/interface/risc0/out/riscv32im-risc0-vk verification_keys/ethrex-riscv32im-risc0-vk
          mv crates/l2/prover/zkvm/interface/sp1/out/riscv32im-succinct-zkvm-vk verification_keys/ethrex-riscv32im-succinct-zkvm-vk

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ethrex-${{ matrix.os }}_${{ matrix.arch }}
          path: ethrex-${{ matrix.os }}_${{ matrix.arch }}

      - name: Upload verification keys
        if: ${{ matrix.platform == 'ubuntu-22.04' }} # Run only once
        uses: actions/upload-artifact@v4
        with:
          name: verification_keys
          path: verification_keys/

  package-contracts:
    needs:
      - build-ethrex
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download verification keys artifacts
        uses: actions/download-artifact@v4
        with:
          name: verification_keys
          path: crates/l2/contracts/src/

      - name: Archive contracts
        run: |
          cd crates/l2/contracts/src/
          tar -czvf ../../../../ethrex-contracts.tar.gz .

      - name: Upload contracts artifact
        uses: actions/upload-artifact@v4
        with:
          name: ethrex-contracts.tar.gz
          path: ethrex-contracts.tar.gz

  build-docker:
    name: "Build and publish ethrex docker image"
    runs-on: ubuntu-latest

    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Format name
        run: echo "TAG_VERSION=$(echo ${{ github.ref_name }} | tr -d v)" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Pushes to ghcr.io/lambdaclass/ethrex
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_VERSION }}

  # Creates a draft release on GitHub with the binaries
  finalize-release:
    needs:
      - build-ethrex
      - build-docker
      - package-contracts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./bin
          pattern: "ethrex*"

      - name: Get previous tag
        run: |
          name=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | tail -2 | head -1)
          echo "PREVIOUS_TAG: $name"
          echo "PREVIOUS_TAG=$name" >> $GITHUB_ENV

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fromTag: ${{ github.ref_name }}
          toTag: ${{ env.PREVIOUS_TAG }}
          writeToFile: false

      - name: Finalize Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ./bin/**/*
          draft: false
          prerelease: false
          tag_name: ${{ github.ref_name }}
          name: "ethrex: ${{ github.ref_name }}"
          body: ${{ steps.changelog.outputs.changes }}
