name: Integration Test
on:
  push:
    branches: ["main"]
  merge_group:
  pull_request:
    branches: ["**"]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  RUST_VERSION: 1.81.0

jobs:
  docker_build:
    name: Docker Build image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: ethrex
          outputs: type=docker,dest=/tmp/ethrex_image.tar

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ethrex_image
          path: /tmp/ethrex_image.tar

  run-assertoor:
    name: Assertoor - Stability Check
    runs-on: ubuntu-latest
    needs: [docker_build]
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ethrex_image
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/ethrex_image.tar

      - name: Setup kurtosis testnet and run assertoor tests
        uses: ethpandaops/kurtosis-assertoor-github-action@v1
        with:
          kurtosis_version: "1.4.2"
          ethereum_package_url: "github.com/lambdaclass/ethereum-package"
          ethereum_package_branch: "ethrex-integration"
          ethereum_package_args: "./test_data/network_params.yaml"

  run-hive:
    name: Hive - ${{ matrix.name }}
    runs-on: ubuntu-latest
    needs: [docker_build]
    strategy:
      matrix:
        include:
          - simulation: rpc-compat
            name: "Rpc Compat tests"
            run_command: make run-hive-on-latest SIMULATION=ethereum/rpc-compat TEST_PATTERN="/eth_chainId|eth_getTransactionByBlockHashAndIndex|eth_getTransactionByBlockNumberAndIndex|eth_getCode|eth_getStorageAt|eth_call|eth_getTransactionByHash|eth_getBlockByHash|eth_getBlockByNumber|eth_createAccessList|eth_getBlockTransactionCountByNumber|eth_getBlockTransactionCountByHash|eth_getBlockReceipts|eth_getTransactionReceipt|eth_blobGasPrice|eth_blockNumber|ethGetTransactionCount|debug_getRawHeader|debug_getRawBlock|debug_getRawTransaction|debug_getRawReceipts|eth_estimateGas|eth_getBalance|eth_sendRawTransaction|eth_getProof|eth_getLogs"
          - simulation: rpc-auth
            name: "Engine Auth tests"
            run_command: make run-hive-on-latest SIMULATION=ethereum/engine TEST_PATTERN="auth/engine-auth"
          - simulation: discv4
            name: "Devp2p discv4 tests"
            run_command: make run-hive-on-latest SIMULATION=devp2p TEST_PATTERN="discv4"
          - simulation: snap
            name: "Devp2p snap tests"
            run_command: make run-hive-on-latest SIMULATION=devp2p TEST_PATTERN="/AccountRange|StorageRanges|ByteCodes|TrieNodes"
          - simulation: eth
            name: "Devp2p eth tests"
            run_command: make run-hive-on-latest SIMULATION=devp2p TEST_PATTERN="eth/Status|GetBlockHeaders|SimultaneousRequests|SameRequestID|ZeroRequestID|GetBlockBodies|MaliciousHandshake|MaliciousStatus|Transaction|InvalidTxs"
          - simulation: engine
            name: "Engine Auth and EC tests"
            run_command: make run-hive-on-latest SIMULATION=ethereum/engine TEST_PATTERN="engine-(auth|exchange-capabilities)/"
          - simulation: engine-cancun
            name: "Cancun Engine tests"
            run_command: make run-hive-on-latest SIMULATION=ethereum/engine HIVE_EXTRA_ARGS="--sim.parallelism 4" TEST_PATTERN="engine-cancun/Blob Transactions On Block 1|Blob Transaction Ordering, Single|Blob Transaction Ordering, Multiple Accounts|Replace Blob Transactions|Parallel Blob Transactions|ForkchoiceUpdatedV3 Modifies Payload ID on Different Beacon Root|NewPayloadV3 After Cancun|NewPayloadV3 Versioned Hashes|Incorrect BlobGasUsed|Bad Hash|ParentHash equals BlockHash|RPC:|in ForkchoiceState|Unknown|Invalid PayloadAttributes|Unique|ForkchoiceUpdated Version on Payload Request|Re-Execute Payload|In-Order Consecutive Payload|Multiple New Payloads|Valid NewPayload->|NewPayload with|Payload Build after|Build Payload with|Invalid Missing Ancestor ReOrg, StateRoot|Re-Org Back to|Re-org to Previously|Safe Re-Org to Side Chain|Transaction Re-Org, Re-Org Back In|Re-Org Back into Canonical Chain, Depth=5|Suggested Fee Recipient Test|PrevRandao Opcode|Invalid NewPayload, [^R][^e]|Fork ID Genesis=0, Cancun=0|Fork ID Genesis=0, Cancun=1|Fork ID Genesis=1, Cancun=0|Fork ID Genesis=1, Cancun=2, Shanghai=2"
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ethrex_image
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/ethrex_image.tar

      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Rustup toolchain install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Setup Go
        uses: actions/setup-go@v3

      - name: Run Hive Simulation
        run: ${{ matrix.run_command }}
