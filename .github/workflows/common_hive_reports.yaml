name: Run Hive Tests

on:
  workflow_call:
    inputs:
      # Must be 'main'/'trigger' or 'daily'
      job_type:
        required: true
        type: string
    outputs:
      report_artifact_name:
        description: "The name of the hive report artifact"
        value: ${{ jobs.hive-report.outputs.artifact_name }}

jobs:
  run-hive:
    name: Hive - ${{ matrix.test.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test:
          - {
              name: "Rpc Compat tests",
              file_name: rpc-compat,
              simulation: ethereum/rpc-compat,
            }
          - { 
              name: "Devp2p eth tests",
              file_name: devp2p,
              simulation: devp2p
            }
          - {
              name: "Cancun Engine tests",
              file_name: engine,
              simulation: ethereum/engine,
            }
          - {
              name: "Sync tests",
              file_name: sync,
              simulation: ethereum/sync
            }
          - {
              name: "Consume Engine tests",
              file_name: consume-engine,
              simulation: ethereum/eest/consume-engine,
            }
          - {
              name: "Consume RLP tests",
              file_name: consume-rlp,
              simulation: ethereum/eest/consume-rlp,
            }

    steps:
      - name: Checkout sources
        if: ${{ inputs.job_type != 'main' }}
        uses: actions/checkout@v4

      - name: Checkout sources
        if: ${{ inputs.job_type == 'main' }}
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Build image
        if: ${{ inputs.job_type != 'main' }}
        run: make build-image

      - name: Pull image
        if: ${{ inputs.job_type == 'main' }}
        run: |
          docker pull ghcr.io/lambdaclass/ethrex:latest
          docker tag ghcr.io/lambdaclass/ethrex:latest ethrex:latest

      - name: Setup Go
        uses: actions/setup-go@v5

      - name: Setup Hive
        run: make setup-hive

      - name: Set custom hive flags
        run: |
          if [[ "${{ matrix.test.simulation }}" == "ethereum/eest/consume-engine" || "${{ matrix.test.simulation }}" == "ethereum/eest/consume-rlp" ]]; then
            EEST_FIXTURES=$(cat cmd/ef_tests/blockchain/.fixtures_url)
            echo 'HIVE_FLAGS=--sim.buildarg fixtures='"$EEST_FIXTURES"' --sim.limit ".*fork_Paris.*|.*fork_Shanghai.*|.*fork_Cancun.*|.*fork_Prague.*"' >> $GITHUB_ENV
          fi

      - name: Run Hive Simulation
        run: cd hive && ./hive --client-file ../fixtures/network/hive_clients/ethrex.yml --client ethrex --sim ${{ matrix.test.simulation }} --sim.parallelism 16 ${{ env.HIVE_FLAGS }}
        continue-on-error: true

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.test.file_name }}_${{ inputs.job_type }}_logs
          path: hive/workspace/logs/*-*.json
          if-no-files-found: error

  hive-report:
    name: Generate and Save report
    needs: run-hive
    runs-on: ubuntu-latest
    outputs:
      artifact_name: results_${{ inputs.job_type }}.md
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup Rust Environment
        uses: ./.github/actions/setup-rust

      - name: Download all results
        uses: actions/download-artifact@v4
        with:
          path: hive/workspace/logs
          pattern: "*_${{ inputs.job_type }}_logs"
          merge-multiple: true

      - name: Generate the hive report
        run: cargo run -p hive_report > results.md

      - name: Upload ${{ inputs.job_type }} result
        uses: actions/upload-artifact@v4
        with:
          name: results_${{ inputs.job_type }}.md
          path: results.md
          if-no-files-found: error

      - name: Post results in summary
        run: |
          echo "# Hive coverage report" >> $GITHUB_STEP_SUMMARY
          cat results.md >> $GITHUB_STEP_SUMMARY
