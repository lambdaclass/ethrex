name: Build Docker
description: Builds the Ethrex docker image

inputs:
  username:
    description: "Username for docker registry login"
    required: false
  password:
    description: "Password or token for docker registry login"
    required: false
  registry:
    description: "Docker registry to push the image to (if pushing)"
    required: false
  tags:
    description: "Comma-separated list of tags to apply to the built image"
    required: false
    default: "ethrex:ci"
  push:
    description: "Whether to push the built image to the registry"
    required: false
    default: "false"

outputs:
  artifact_path:
    description: "The path of the image tar inside the action runner"
    value: ${{ steps.vars.outputs.artifact_path }}

runs:
  using: "composite"
  steps:
    - id: vars
      shell: bash
      run: |
        echo "artifact_path=/tmp/ethrex_image.tar" >> $GITHUB_OUTPUT

    - name: Login to Docker registry
      if: inputs.username != '' && inputs.password != ''
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: ${{ inputs.push }}
        tags: ${{ inputs.tags }}
        outputs: ${{ inputs.push == 'false' && format('type=docker,dest={0}', steps.vars.outputs.artifact_path) || '' }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Since we're exporting the image as a tar, we need to load it manually as well
    - name: Load image locally
      shell: bash
      if: inputs.push == 'false'
      run: |
        docker load -i ${{ steps.vars.outputs.artifact_path }}
